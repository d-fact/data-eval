FACT TUPLE :
reference "org.apache.commons.math.stat.Frequency.1" "org.apache.commons.math.stat.Frequency"
reference "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.Complex"
call "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(0)" "org.apache.commons.math.complex.ComplexFormat.getDefaultNumberFormat(0)"
call "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(0)" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(2)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(0)"
call "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(1)" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(2)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(1)"
call "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(2)" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(3)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(2)"
call "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(1)" "org.apache.commons.math.complex.ComplexFormat.getDefaultNumberFormat(0)"
call "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(1)" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(2)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(1)"
call "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(2)" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(3)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(2)"
call "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(3)" "org.apache.commons.math.complex.ComplexFormat.setImaginaryCharacter(1)"
call "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(3)" "org.apache.commons.math.complex.ComplexFormat.setImaginaryFormat(1)"
call "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(3)" "org.apache.commons.math.complex.ComplexFormat.setRealFormat(1)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(3)"
call "org.apache.commons.math.complex.ComplexFormat.formatComplex(1)" "org.apache.commons.math.complex.ComplexFormat.getInstance(0)"
call "org.apache.commons.math.complex.ComplexFormat.formatComplex(1)" "org.apache.commons.math.complex.ComplexFormat.format(1)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.formatComplex(1)"
call "org.apache.commons.math.complex.ComplexFormat.format(3)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexFormat.format(3)" "org.apache.commons.math.complex.ComplexFormat.getRealFormat(0)"
call "org.apache.commons.math.complex.ComplexFormat.format(3)" "org.apache.commons.math.complex.ComplexFormat.formatDouble(4)"
call "org.apache.commons.math.complex.ComplexFormat.format(3)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
call "org.apache.commons.math.complex.ComplexFormat.format(3)" "org.apache.commons.math.complex.ComplexFormat.getImaginaryFormat(0)"
call "org.apache.commons.math.complex.ComplexFormat.format(3)" "org.apache.commons.math.complex.ComplexFormat.getImaginaryCharacter(0)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.format(3)"
call "org.apache.commons.math.complex.ComplexFormat.format(3)" "org.apache.commons.math.complex.ComplexFormat.format(3)"
call "org.apache.commons.math.complex.ComplexFormat.format(3)" "org.apache.commons.math.complex.Complex.Complex(2)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.format(3)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.formatDouble(4)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.getAvailableLocales(0)"
call "org.apache.commons.math.complex.ComplexFormat.getDefaultNumberFormat(0)" "org.apache.commons.math.complex.ComplexFormat.getDefaultNumberFormat(1)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.getDefaultNumberFormat(0)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.getDefaultNumberFormat(1)"
reference "org.apache.commons.math.complex.ComplexFormat.getImaginaryCharacter(0)" "org.apache.commons.math.complex.ComplexFormat.imaginaryCharacter"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.getImaginaryCharacter(0)"
reference "org.apache.commons.math.complex.ComplexFormat.getImaginaryFormat(0)" "org.apache.commons.math.complex.ComplexFormat.imaginaryFormat"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.getImaginaryFormat(0)"
call "org.apache.commons.math.complex.ComplexFormat.getInstance(0)" "org.apache.commons.math.complex.ComplexFormat.getInstance(1)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.getInstance(0)"
call "org.apache.commons.math.complex.ComplexFormat.getInstance(1)" "org.apache.commons.math.complex.ComplexFormat.getDefaultNumberFormat(1)"
call "org.apache.commons.math.complex.ComplexFormat.getInstance(1)" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(1)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.getInstance(1)"
reference "org.apache.commons.math.complex.ComplexFormat.getRealFormat(0)" "org.apache.commons.math.complex.ComplexFormat.realFormat"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.getRealFormat(0)"
call "org.apache.commons.math.complex.ComplexFormat.parse(1)" "org.apache.commons.math.complex.ComplexFormat.parse(2)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.parse(1)"
call "org.apache.commons.math.complex.ComplexFormat.parse(2)" "org.apache.commons.math.complex.ComplexFormat.parseAndIgnoreWhitespace(2)"
call "org.apache.commons.math.complex.ComplexFormat.parse(2)" "org.apache.commons.math.complex.ComplexFormat.getRealFormat(0)"
call "org.apache.commons.math.complex.ComplexFormat.parse(2)" "org.apache.commons.math.complex.ComplexFormat.parseNumber(3)"
call "org.apache.commons.math.complex.ComplexFormat.parse(2)" "org.apache.commons.math.complex.ComplexFormat.parseNextCharacter(2)"
call "org.apache.commons.math.complex.ComplexFormat.parse(2)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexFormat.parse(2)" "org.apache.commons.math.complex.ComplexFormat.getImaginaryCharacter(0)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.parse(2)"
call "org.apache.commons.math.complex.ComplexFormat.parseAndIgnoreWhitespace(2)" "org.apache.commons.math.complex.ComplexFormat.parseNextCharacter(2)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.parseAndIgnoreWhitespace(2)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.parseNextCharacter(2)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.parseNumber(3)"
call "org.apache.commons.math.complex.ComplexFormat.parseNumber(3)" "org.apache.commons.math.complex.ComplexFormat.parseNumber(3)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.parseNumber(3)"
call "org.apache.commons.math.complex.ComplexFormat.parseObject(2)" "org.apache.commons.math.complex.ComplexFormat.parse(2)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.parseObject(2)"
reference "org.apache.commons.math.complex.ComplexFormat.setImaginaryCharacter(1)" "org.apache.commons.math.complex.ComplexFormat.imaginaryCharacter"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.setImaginaryCharacter(1)"
reference "org.apache.commons.math.complex.ComplexFormat.setImaginaryFormat(1)" "org.apache.commons.math.complex.ComplexFormat.imaginaryFormat"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.setImaginaryFormat(1)"
reference "org.apache.commons.math.complex.ComplexFormat.setRealFormat(1)" "org.apache.commons.math.complex.ComplexFormat.realFormat"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.setRealFormat(1)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.serialVersionUID"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.DEFAULT_IMAGINARY_CHARACTER"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.imaginaryCharacter"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.imaginaryFormat"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.realFormat"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.StreamDataAdapter(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter.DataAdapter(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.StreamDataAdapter(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.this$0"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.StreamDataAdapter(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.inputStream"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.StreamDataAdapter(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.computeBinStats(2)" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.inputStream"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.computeBinStats(2)" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.this$0"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.computeBinStats(2)" "org.apache.commons.math.random.EmpiricalDistributionImpl.access$200(1)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.computeBinStats(2)" "org.apache.commons.math.random.EmpiricalDistributionImpl.access$100(4)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.computeBinStats(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.computeBinStats(2)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.computeStats(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.this$0"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.computeStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance(0)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.computeStats(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.access$302(2)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.computeStats(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.inputStream"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.computeStats(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.access$300(1)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.computeStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.computeStats(0)"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.inputStream"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.this$0" "org.apache.commons.math.random.EmpiricalDistributionImpl"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.this$0"
reference "org.apache.commons.math.ode.SwitchingFunctionsHandler" "org.apache.commons.math.ode.SwitchState"
reference "org.apache.commons.math.ode.SwitchingFunctionsHandler" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.SwitchingFunctionsHandler" "org.apache.commons.math.ode.StepInterpolator"
reference "org.apache.commons.math.ode.SwitchingFunctionsHandler.SwitchingFunctionsHandler(0)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.functions"
reference "org.apache.commons.math.ode.SwitchingFunctionsHandler.SwitchingFunctionsHandler(0)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.first"
reference "org.apache.commons.math.ode.SwitchingFunctionsHandler.SwitchingFunctionsHandler(0)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.initialized"
contain "org.apache.commons.math.ode.SwitchingFunctionsHandler" "org.apache.commons.math.ode.SwitchingFunctionsHandler.SwitchingFunctionsHandler(0)"
reference "org.apache.commons.math.ode.SwitchingFunctionsHandler.add(3)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.functions"
call "org.apache.commons.math.ode.SwitchingFunctionsHandler.add(3)" "org.apache.commons.math.ode.SwitchState.SwitchState(3)"
contain "org.apache.commons.math.ode.SwitchingFunctionsHandler" "org.apache.commons.math.ode.SwitchingFunctionsHandler.add(3)"
reference "org.apache.commons.math.ode.SwitchingFunctionsHandler.isEmpty(0)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.functions"
contain "org.apache.commons.math.ode.SwitchingFunctionsHandler" "org.apache.commons.math.ode.SwitchingFunctionsHandler.isEmpty(0)"
reference "org.apache.commons.math.ode.SwitchingFunctionsHandler.evaluateStep(1)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.first"
reference "org.apache.commons.math.ode.SwitchingFunctionsHandler.evaluateStep(1)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.functions"
reference "org.apache.commons.math.ode.SwitchingFunctionsHandler.evaluateStep(1)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.initialized"
call "org.apache.commons.math.ode.SwitchingFunctionsHandler.evaluateStep(1)" "org.apache.commons.math.ode.StepInterpolator.getPreviousTime(0)"
call "org.apache.commons.math.ode.SwitchingFunctionsHandler.evaluateStep(1)" "org.apache.commons.math.ode.StepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.SwitchingFunctionsHandler.evaluateStep(1)" "org.apache.commons.math.ode.StepInterpolator.getInterpolatedState(0)"
call "org.apache.commons.math.ode.SwitchingFunctionsHandler.evaluateStep(1)" "org.apache.commons.math.ode.SwitchState.reinitializeBegin(2)"
call "org.apache.commons.math.ode.SwitchingFunctionsHandler.evaluateStep(1)" "org.apache.commons.math.ode.SwitchState.evaluateStep(1)"
call "org.apache.commons.math.ode.SwitchingFunctionsHandler.evaluateStep(1)" "org.apache.commons.math.ode.StepInterpolator.isForward(0)"
call "org.apache.commons.math.ode.SwitchingFunctionsHandler.evaluateStep(1)" "org.apache.commons.math.ode.SwitchState.getEventTime(0)"
call "org.apache.commons.math.ode.SwitchingFunctionsHandler.evaluateStep(1)" "org.apache.commons.math.ode.DerivativeException.getMessage(0)"
contain "org.apache.commons.math.ode.SwitchingFunctionsHandler" "org.apache.commons.math.ode.SwitchingFunctionsHandler.evaluateStep(1)"
reference "org.apache.commons.math.ode.SwitchingFunctionsHandler.getEventTime(0)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.first"
call "org.apache.commons.math.ode.SwitchingFunctionsHandler.getEventTime(0)" "org.apache.commons.math.ode.SwitchState.getEventTime(0)"
contain "org.apache.commons.math.ode.SwitchingFunctionsHandler" "org.apache.commons.math.ode.SwitchingFunctionsHandler.getEventTime(0)"
reference "org.apache.commons.math.ode.SwitchingFunctionsHandler.stepAccepted(2)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.functions"
call "org.apache.commons.math.ode.SwitchingFunctionsHandler.stepAccepted(2)" "org.apache.commons.math.ode.SwitchState.stepAccepted(2)"
contain "org.apache.commons.math.ode.SwitchingFunctionsHandler" "org.apache.commons.math.ode.SwitchingFunctionsHandler.stepAccepted(2)"
reference "org.apache.commons.math.ode.SwitchingFunctionsHandler.stop(0)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.functions"
call "org.apache.commons.math.ode.SwitchingFunctionsHandler.stop(0)" "org.apache.commons.math.ode.SwitchState.stop(0)"
contain "org.apache.commons.math.ode.SwitchingFunctionsHandler" "org.apache.commons.math.ode.SwitchingFunctionsHandler.stop(0)"
reference "org.apache.commons.math.ode.SwitchingFunctionsHandler.reset(2)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.functions"
call "org.apache.commons.math.ode.SwitchingFunctionsHandler.reset(2)" "org.apache.commons.math.ode.SwitchState.reset(2)"
contain "org.apache.commons.math.ode.SwitchingFunctionsHandler" "org.apache.commons.math.ode.SwitchingFunctionsHandler.reset(2)"
contain "org.apache.commons.math.ode.SwitchingFunctionsHandler" "org.apache.commons.math.ode.SwitchingFunctionsHandler.functions"
reference "org.apache.commons.math.ode.SwitchingFunctionsHandler.first" "org.apache.commons.math.ode.SwitchState"
contain "org.apache.commons.math.ode.SwitchingFunctionsHandler" "org.apache.commons.math.ode.SwitchingFunctionsHandler.first"
contain "org.apache.commons.math.ode.SwitchingFunctionsHandler" "org.apache.commons.math.ode.SwitchingFunctionsHandler.initialized"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter.DataAdapter(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter.this$0"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter.DataAdapter(0)"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter.computeBinStats(2)"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter.computeStats(0)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter.DataAdapter(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter.DataAdapter(0)"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter.DataAdapter(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter.this$0" "org.apache.commons.math.random.EmpiricalDistributionImpl"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter.this$0"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMoment" "org.apache.commons.math.stat.descriptive.moment.SecondMoment"
call "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.ThirdMoment(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.SecondMoment(0)"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.ThirdMoment(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.m3"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.ThirdMoment(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.nDevSq"
contain "org.apache.commons.math.stat.descriptive.moment.ThirdMoment" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.ThirdMoment(0)"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.n"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.m1"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.m2"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.m3"
call "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.increment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.nDev"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.nDevSq"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.dev"
contain "org.apache.commons.math.stat.descriptive.moment.ThirdMoment" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.increment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.m3"
contain "org.apache.commons.math.stat.descriptive.moment.ThirdMoment" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.getResult(0)"
call "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.clear(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.clear(0)"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.clear(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.m3"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.clear(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.nDevSq"
contain "org.apache.commons.math.stat.descriptive.moment.ThirdMoment" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.clear(0)"
contain "org.apache.commons.math.stat.descriptive.moment.ThirdMoment" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.moment.ThirdMoment" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.m3"
contain "org.apache.commons.math.stat.descriptive.moment.ThirdMoment" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.nDevSq"
reference "org.apache.commons.math.MathException.translate(2)" "org.apache.commons.math.MathException.cachedResources"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.translate(2)"
call "org.apache.commons.math.MathException.buildMessage(3)" "org.apache.commons.math.MathException.translate(2)"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.buildMessage(3)"
reference "org.apache.commons.math.MathException.MathException(0)" "org.apache.commons.math.MathException.pattern"
reference "org.apache.commons.math.MathException.MathException(0)" "org.apache.commons.math.MathException.arguments"
reference "org.apache.commons.math.MathException.MathException(0)" "org.apache.commons.math.MathException.rootCause"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.MathException(0)"
reference "org.apache.commons.math.MathException.MathException(1)" "org.apache.commons.math.MathException.pattern"
reference "org.apache.commons.math.MathException.MathException(1)" "org.apache.commons.math.MathException.arguments"
reference "org.apache.commons.math.MathException.MathException(1)" "org.apache.commons.math.MathException.rootCause"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.MathException(1)"
call "org.apache.commons.math.MathException.MathException(2)" "org.apache.commons.math.MathException.buildMessage(3)"
reference "org.apache.commons.math.MathException.MathException(2)" "org.apache.commons.math.MathException.pattern"
reference "org.apache.commons.math.MathException.MathException(2)" "org.apache.commons.math.MathException.arguments"
reference "org.apache.commons.math.MathException.MathException(2)" "org.apache.commons.math.MathException.rootCause"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.MathException(2)"
call "org.apache.commons.math.MathException.MathException(1)" "org.apache.commons.math.MathException.getMessage(0)"
reference "org.apache.commons.math.MathException.MathException(1)" "org.apache.commons.math.MathException.pattern"
reference "org.apache.commons.math.MathException.MathException(1)" "org.apache.commons.math.MathException.arguments"
reference "org.apache.commons.math.MathException.MathException(1)" "org.apache.commons.math.MathException.rootCause"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.MathException(1)"
reference "org.apache.commons.math.MathException.MathException(2)" "org.apache.commons.math.MathException.pattern"
reference "org.apache.commons.math.MathException.MathException(2)" "org.apache.commons.math.MathException.arguments"
reference "org.apache.commons.math.MathException.MathException(2)" "org.apache.commons.math.MathException.rootCause"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.MathException(2)"
call "org.apache.commons.math.MathException.MathException(3)" "org.apache.commons.math.MathException.buildMessage(3)"
reference "org.apache.commons.math.MathException.MathException(3)" "org.apache.commons.math.MathException.pattern"
reference "org.apache.commons.math.MathException.MathException(3)" "org.apache.commons.math.MathException.arguments"
reference "org.apache.commons.math.MathException.MathException(3)" "org.apache.commons.math.MathException.rootCause"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.MathException(3)"
reference "org.apache.commons.math.MathException.getPattern(0)" "org.apache.commons.math.MathException.pattern"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.getPattern(0)"
reference "org.apache.commons.math.MathException.getArguments(0)" "org.apache.commons.math.MathException.arguments"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.getArguments(0)"
reference "org.apache.commons.math.MathException.getMessage(1)" "org.apache.commons.math.MathException.pattern"
reference "org.apache.commons.math.MathException.getMessage(1)" "org.apache.commons.math.MathException.arguments"
call "org.apache.commons.math.MathException.getMessage(1)" "org.apache.commons.math.MathException.buildMessage(3)"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.getMessage(1)"
reference "org.apache.commons.math.MathException.getCause(0)" "org.apache.commons.math.MathException.rootCause"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.getCause(0)"
call "org.apache.commons.math.MathException.printStackTrace(0)" "org.apache.commons.math.MathException.printStackTrace(1)"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.printStackTrace(0)"
call "org.apache.commons.math.MathException.printStackTrace(1)" "org.apache.commons.math.MathException.printStackTrace(1)"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.printStackTrace(1)"
reference "org.apache.commons.math.MathException.printStackTrace(1)" "org.apache.commons.math.MathException.rootCause"
reference "org.apache.commons.math.MathException.printStackTrace(1)" "org.apache.commons.math.MathException.JDK_SUPPORTS_NESTED"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.printStackTrace(1)"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.class$(1)"
reference "org.apache.commons.math.MathException.static {...}" "org.apache.commons.math.MathException.class$java$lang$Throwable"
call "org.apache.commons.math.MathException.static {...}" "org.apache.commons.math.MathException.class$(1)"
reference "org.apache.commons.math.MathException.static {...}" "org.apache.commons.math.MathException.JDK_SUPPORTS_NESTED"
reference "org.apache.commons.math.MathException.static {...}" "org.apache.commons.math.MathException.cachedResources"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.static {...}"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.serialVersionUID"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.JDK_SUPPORTS_NESTED"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.cachedResources"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.pattern"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.arguments"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.rootCause"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.class$java$lang$Throwable"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMean" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMean" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMean.GeometricMean(0)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMean.GeometricMean(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.SumOfLogs(0)"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMean.GeometricMean(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.sumOfLogs"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMean" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.GeometricMean(0)"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMean.increment(1)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.sumOfLogs"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMean.increment(1)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.increment(1)"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMean" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.increment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMean.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.sumOfLogs"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMean.getResult(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.getN(0)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMean.getResult(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMean" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMean.clear(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.sumOfLogs"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMean.clear(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.clear(0)"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMean" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.clear(0)"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMean.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.sumOfLogs"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMean.evaluate(3)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMean" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.evaluate(3)"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMean.getN(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.sumOfLogs"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMean.getN(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.getN(0)"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMean" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.getN(0)"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMean" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMean.sumOfLogs" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMean" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.sumOfLogs"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.discovery.tools.DiscoverClass"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.StatisticalSummary"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.util.MathUtils"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance(0)" "org.apache.commons.discovery.tools.DiscoverClass.DiscoverClass(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.class$org$apache$commons$math$stat$descriptive$SummaryStatistics"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.class$(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance(0)" "org.apache.commons.discovery.tools.DiscoverClass.newInstance(2)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.SummaryStatisticsImpl(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSummary(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSummary(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getVariance(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSummary(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getN(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSummary(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMax(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSummary(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMin(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSummary(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSum(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSummary(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.StatisticalSummaryValues(6)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSummary(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getGeometricMean(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getVariance(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getStandardDeviation(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMax(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMin(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getN(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSum(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumsq(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.clear(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.equals(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getGeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.equals(1)" "org.apache.commons.math.util.MathUtils.equals(2)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.equals(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMax(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.equals(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.equals(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMin(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.equals(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getN(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.equals(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSum(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.equals(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumsq(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.equals(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getVariance(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.equals(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.hashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getGeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.hashCode(0)" "org.apache.commons.math.util.MathUtils.hash(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.hashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMax(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.hashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.hashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMin(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.hashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getN(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.hashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSum(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.hashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumsq(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.hashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getVariance(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.hashCode(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.class$(1)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.class$org$apache$commons$math$stat$descriptive$SummaryStatistics"
reference "org.apache.commons.math.distribution.WeibullDistribution" "org.apache.commons.math.distribution.ContinuousDistribution"
contain "org.apache.commons.math.distribution.WeibullDistribution" "org.apache.commons.math.distribution.WeibullDistribution.getShape(0)"
contain "org.apache.commons.math.distribution.WeibullDistribution" "org.apache.commons.math.distribution.WeibullDistribution.getScale(0)"
contain "org.apache.commons.math.distribution.WeibullDistribution" "org.apache.commons.math.distribution.WeibullDistribution.setShape(1)"
contain "org.apache.commons.math.distribution.WeibullDistribution" "org.apache.commons.math.distribution.WeibullDistribution.setScale(1)"
reference "org.apache.commons.math.ode.GillStepInterpolator" "org.apache.commons.math.ode.RungeKuttaStepInterpolator"
reference "org.apache.commons.math.ode.GillStepInterpolator" "org.apache.commons.math.ode.DerivativeException"
call "org.apache.commons.math.ode.GillStepInterpolator.GillStepInterpolator(0)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(0)"
contain "org.apache.commons.math.ode.GillStepInterpolator" "org.apache.commons.math.ode.GillStepInterpolator.GillStepInterpolator(0)"
call "org.apache.commons.math.ode.GillStepInterpolator.GillStepInterpolator(1)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(1)"
contain "org.apache.commons.math.ode.GillStepInterpolator" "org.apache.commons.math.ode.GillStepInterpolator.GillStepInterpolator(1)"
call "org.apache.commons.math.ode.GillStepInterpolator.clone(0)" "org.apache.commons.math.ode.GillStepInterpolator.GillStepInterpolator(1)"
contain "org.apache.commons.math.ode.GillStepInterpolator" "org.apache.commons.math.ode.GillStepInterpolator.clone(0)"
reference "org.apache.commons.math.ode.GillStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.GillStepInterpolator.tMq"
reference "org.apache.commons.math.ode.GillStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.GillStepInterpolator.tPq"
reference "org.apache.commons.math.ode.GillStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.GillStepInterpolator.interpolatedState"
reference "org.apache.commons.math.ode.GillStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.GillStepInterpolator.currentState"
reference "org.apache.commons.math.ode.GillStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.GillStepInterpolator.yDotK"
contain "org.apache.commons.math.ode.GillStepInterpolator" "org.apache.commons.math.ode.GillStepInterpolator.computeInterpolatedState(2)"
reference "org.apache.commons.math.ode.GillStepInterpolator.static {...}" "org.apache.commons.math.ode.GillStepInterpolator.tMq"
reference "org.apache.commons.math.ode.GillStepInterpolator.static {...}" "org.apache.commons.math.ode.GillStepInterpolator.tPq"
contain "org.apache.commons.math.ode.GillStepInterpolator" "org.apache.commons.math.ode.GillStepInterpolator.static {...}"
contain "org.apache.commons.math.ode.GillStepInterpolator" "org.apache.commons.math.ode.GillStepInterpolator.tMq"
contain "org.apache.commons.math.ode.GillStepInterpolator" "org.apache.commons.math.ode.GillStepInterpolator.tPq"
contain "org.apache.commons.math.ode.GillStepInterpolator" "org.apache.commons.math.ode.GillStepInterpolator.serialVersionUID"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.MathUtils(0)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.addAndCheck(2)"
call "org.apache.commons.math.util.MathUtils.binomialCoefficient(2)" "org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(2)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.binomialCoefficient(2)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.log(2)"
call "org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(2)" "org.apache.commons.math.util.MathUtils.binomialCoefficientLog(2)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(2)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.binomialCoefficientLog(2)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.cosh(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.equals(2)"
call "org.apache.commons.math.util.MathUtils.factorial(1)" "org.apache.commons.math.util.MathUtils.factorialDouble(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.factorial(1)"
call "org.apache.commons.math.util.MathUtils.factorialDouble(1)" "org.apache.commons.math.util.MathUtils.factorialLog(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.factorialDouble(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.factorialLog(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.gcd(2)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.hash(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.indicator(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.indicator(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.indicator(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.indicator(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.indicator(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.indicator(1)"
call "org.apache.commons.math.util.MathUtils.lcm(2)" "org.apache.commons.math.util.MathUtils.gcd(2)"
call "org.apache.commons.math.util.MathUtils.lcm(2)" "org.apache.commons.math.util.MathUtils.mulAndCheck(2)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.lcm(2)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.mulAndCheck(2)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.nextAfter(2)"
call "org.apache.commons.math.util.MathUtils.round(2)" "org.apache.commons.math.util.MathUtils.round(3)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.round(2)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.round(3)"
call "org.apache.commons.math.util.MathUtils.round(2)" "org.apache.commons.math.util.MathUtils.round(3)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.round(2)"
call "org.apache.commons.math.util.MathUtils.round(3)" "org.apache.commons.math.util.MathUtils.indicator(1)"
call "org.apache.commons.math.util.MathUtils.round(3)" "org.apache.commons.math.util.MathUtils.roundUnscaled(3)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.round(3)"
call "org.apache.commons.math.util.MathUtils.roundUnscaled(3)" "org.apache.commons.math.util.MathUtils.nextAfter(2)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.roundUnscaled(3)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.sign(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.sign(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.sign(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.sign(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.sign(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.sign(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.sinh(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.subAndCheck(2)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.NB"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.NS"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.PB"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.PS"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.ZB"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.ZS"
reference "org.apache.commons.math.fraction.ProperFractionFormat" "org.apache.commons.math.fraction.Fraction"
reference "org.apache.commons.math.fraction.ProperFractionFormat" "org.apache.commons.math.fraction.FractionFormat"
reference "org.apache.commons.math.fraction.ProperFractionFormat" "org.apache.commons.math.util.MathUtils"
call "org.apache.commons.math.fraction.ProperFractionFormat.ProperFractionFormat(0)" "org.apache.commons.math.fraction.ProperFractionFormat.getDefaultNumberFormat(0)"
call "org.apache.commons.math.fraction.ProperFractionFormat.ProperFractionFormat(0)" "org.apache.commons.math.fraction.ProperFractionFormat.ProperFractionFormat(1)"
contain "org.apache.commons.math.fraction.ProperFractionFormat" "org.apache.commons.math.fraction.ProperFractionFormat.ProperFractionFormat(0)"
call "org.apache.commons.math.fraction.ProperFractionFormat.ProperFractionFormat(1)" "org.apache.commons.math.fraction.ProperFractionFormat.ProperFractionFormat(3)"
contain "org.apache.commons.math.fraction.ProperFractionFormat" "org.apache.commons.math.fraction.ProperFractionFormat.ProperFractionFormat(1)"
call "org.apache.commons.math.fraction.ProperFractionFormat.ProperFractionFormat(3)" "org.apache.commons.math.fraction.FractionFormat.FractionFormat(2)"
call "org.apache.commons.math.fraction.ProperFractionFormat.ProperFractionFormat(3)" "org.apache.commons.math.fraction.ProperFractionFormat.setWholeFormat(1)"
contain "org.apache.commons.math.fraction.ProperFractionFormat" "org.apache.commons.math.fraction.ProperFractionFormat.ProperFractionFormat(3)"
call "org.apache.commons.math.fraction.ProperFractionFormat.format(3)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.ProperFractionFormat.format(3)" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
call "org.apache.commons.math.fraction.ProperFractionFormat.format(3)" "org.apache.commons.math.fraction.ProperFractionFormat.getWholeFormat(0)"
call "org.apache.commons.math.fraction.ProperFractionFormat.format(3)" "org.apache.commons.math.fraction.ProperFractionFormat.getNumeratorFormat(0)"
call "org.apache.commons.math.fraction.ProperFractionFormat.format(3)" "org.apache.commons.math.fraction.ProperFractionFormat.getDenominatorFormat(0)"
contain "org.apache.commons.math.fraction.ProperFractionFormat" "org.apache.commons.math.fraction.ProperFractionFormat.format(3)"
reference "org.apache.commons.math.fraction.ProperFractionFormat.getWholeFormat(0)" "org.apache.commons.math.fraction.ProperFractionFormat.wholeFormat"
contain "org.apache.commons.math.fraction.ProperFractionFormat" "org.apache.commons.math.fraction.ProperFractionFormat.getWholeFormat(0)"
call "org.apache.commons.math.fraction.ProperFractionFormat.parse(2)" "org.apache.commons.math.fraction.FractionFormat.parse(2)"
call "org.apache.commons.math.fraction.ProperFractionFormat.parse(2)" "org.apache.commons.math.fraction.ProperFractionFormat.parseAndIgnoreWhitespace(2)"
call "org.apache.commons.math.fraction.ProperFractionFormat.parse(2)" "org.apache.commons.math.fraction.ProperFractionFormat.getWholeFormat(0)"
call "org.apache.commons.math.fraction.ProperFractionFormat.parse(2)" "org.apache.commons.math.fraction.ProperFractionFormat.getNumeratorFormat(0)"
call "org.apache.commons.math.fraction.ProperFractionFormat.parse(2)" "org.apache.commons.math.fraction.ProperFractionFormat.parseNextCharacter(2)"
call "org.apache.commons.math.fraction.ProperFractionFormat.parse(2)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.ProperFractionFormat.parse(2)" "org.apache.commons.math.fraction.ProperFractionFormat.getDenominatorFormat(0)"
call "org.apache.commons.math.fraction.ProperFractionFormat.parse(2)" "org.apache.commons.math.util.MathUtils.sign(1)"
contain "org.apache.commons.math.fraction.ProperFractionFormat" "org.apache.commons.math.fraction.ProperFractionFormat.parse(2)"
reference "org.apache.commons.math.fraction.ProperFractionFormat.setWholeFormat(1)" "org.apache.commons.math.fraction.ProperFractionFormat.wholeFormat"
contain "org.apache.commons.math.fraction.ProperFractionFormat" "org.apache.commons.math.fraction.ProperFractionFormat.setWholeFormat(1)"
contain "org.apache.commons.math.fraction.ProperFractionFormat" "org.apache.commons.math.fraction.ProperFractionFormat.serialVersionUID"
contain "org.apache.commons.math.fraction.ProperFractionFormat" "org.apache.commons.math.fraction.ProperFractionFormat.wholeFormat"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.random.JDKRandomGenerator"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.random.UniformRandomGenerator"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.stat.descriptive.moment.VectorialMean"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.DimensionMismatchException"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.PointCostPair"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.PointCostPair[]"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.CostException"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.random.NotPositiveDefiniteMatrixException"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.random.RandomGenerator"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.random.RandomVectorGenerator"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.ConvergenceChecker"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.CostFunction"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.DirectSearchOptimizer(0)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(5)" "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(2)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(5)" "org.apache.commons.math.optimization.DirectSearchOptimizer.setSingleStart(0)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(5)" "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(3)"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(5)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(7)" "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(2)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(7)" "org.apache.commons.math.random.JDKRandomGenerator.JDKRandomGenerator(0)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(7)" "org.apache.commons.math.random.RandomGenerator.setSeed(1)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(7)" "org.apache.commons.math.random.UniformRandomGenerator.UniformRandomGenerator(1)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(7)" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.UncorrelatedRandomVectorGenerator(3)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(7)" "org.apache.commons.math.optimization.DirectSearchOptimizer.setMultiStart(2)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(7)" "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(3)"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(7)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(4)" "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(1)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(4)" "org.apache.commons.math.optimization.DirectSearchOptimizer.setSingleStart(0)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(4)" "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(3)"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(4)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(6)" "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(1)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(6)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.VectorialMean(1)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(6)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.VectorialCovariance(1)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(6)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.increment(1)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(6)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.increment(1)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(6)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.getResult(0)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(6)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.getResult(0)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(6)" "org.apache.commons.math.random.JDKRandomGenerator.JDKRandomGenerator(0)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(6)" "org.apache.commons.math.random.RandomGenerator.setSeed(1)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(6)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(6)" "org.apache.commons.math.random.UniformRandomGenerator.UniformRandomGenerator(1)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(6)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(4)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(6)" "org.apache.commons.math.optimization.DirectSearchOptimizer.setMultiStart(2)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(6)" "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(3)"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(6)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(4)" "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(1)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(4)" "org.apache.commons.math.optimization.DirectSearchOptimizer.setSingleStart(0)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(4)" "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(3)"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(4)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(5)" "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(1)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(5)" "org.apache.commons.math.optimization.DirectSearchOptimizer.setMultiStart(2)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(5)" "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(3)"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(5)"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(2)" "org.apache.commons.math.optimization.DirectSearchOptimizer.simplex"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(2)" "org.apache.commons.math.optimization.PointCostPair.PointCostPair(2)"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(2)"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(1)" "org.apache.commons.math.optimization.DirectSearchOptimizer.simplex"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(1)" "org.apache.commons.math.optimization.PointCostPair.PointCostPair(2)"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(1)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(1)" "org.apache.commons.math.random.RandomVectorGenerator.nextVector(0)"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(1)" "org.apache.commons.math.optimization.DirectSearchOptimizer.simplex"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(1)" "org.apache.commons.math.optimization.PointCostPair.PointCostPair(2)"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(1)"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.setSingleStart(0)" "org.apache.commons.math.optimization.DirectSearchOptimizer.starts"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.setSingleStart(0)" "org.apache.commons.math.optimization.DirectSearchOptimizer.generator"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.setSingleStart(0)" "org.apache.commons.math.optimization.DirectSearchOptimizer.minima"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.setSingleStart(0)"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.setMultiStart(2)" "org.apache.commons.math.optimization.DirectSearchOptimizer.starts"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.setMultiStart(2)" "org.apache.commons.math.optimization.DirectSearchOptimizer.generator"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.setMultiStart(2)" "org.apache.commons.math.optimization.DirectSearchOptimizer.minima"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.setMultiStart(2)"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.getMinima(0)" "org.apache.commons.math.optimization.DirectSearchOptimizer.minima"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.getMinima(0)"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(3)" "org.apache.commons.math.optimization.DirectSearchOptimizer.f"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(3)" "org.apache.commons.math.optimization.DirectSearchOptimizer.starts"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(3)" "org.apache.commons.math.optimization.DirectSearchOptimizer.minima"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(3)" "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluations"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(3)" "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluateSimplex(0)"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(3)" "org.apache.commons.math.optimization.DirectSearchOptimizer.simplex"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(3)" "org.apache.commons.math.optimization.ConvergenceChecker.converged(1)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(3)" "org.apache.commons.math.optimization.DirectSearchOptimizer.iterateSimplex(0)"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(3)" "org.apache.commons.math.optimization.DirectSearchOptimizer.generator"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(3)" "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(1)"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(3)" "org.apache.commons.math.optimization.DirectSearchOptimizer.pointCostPairComparator"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(3)" "org.apache.commons.math.ConvergenceException.ConvergenceException(2)"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.minimizes(3)"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.iterateSimplex(0)"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluateCost(1)" "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluations"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluateCost(1)" "org.apache.commons.math.optimization.DirectSearchOptimizer.f"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluateCost(1)" "org.apache.commons.math.optimization.CostFunction.cost(1)"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluateCost(1)"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluateSimplex(0)" "org.apache.commons.math.optimization.DirectSearchOptimizer.simplex"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluateSimplex(0)" "org.apache.commons.math.optimization.PointCostPair.cost"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluateSimplex(0)" "org.apache.commons.math.optimization.PointCostPair.point"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluateSimplex(0)" "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluateCost(1)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluateSimplex(0)" "org.apache.commons.math.optimization.PointCostPair.PointCostPair(2)"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluateSimplex(0)" "org.apache.commons.math.optimization.DirectSearchOptimizer.pointCostPairComparator"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluateSimplex(0)"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.replaceWorstPoint(1)" "org.apache.commons.math.optimization.DirectSearchOptimizer.simplex"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.replaceWorstPoint(1)" "org.apache.commons.math.optimization.PointCostPair.cost"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.replaceWorstPoint(1)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.static {...}" "org.apache.commons.math.optimization.DirectSearchOptimizer.1.{...}"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.static {...}" "org.apache.commons.math.optimization.DirectSearchOptimizer.pointCostPairComparator"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.static {...}"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.pointCostPairComparator"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.simplex" "org.apache.commons.math.optimization.PointCostPair[]"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.simplex"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.f" "org.apache.commons.math.optimization.CostFunction"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.f"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluations"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.starts"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.generator" "org.apache.commons.math.random.RandomVectorGenerator"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.generator"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.minima" "org.apache.commons.math.optimization.PointCostPair[]"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.minima"
reference "org.apache.commons.math.linear.QRDecompositionImpl" "org.apache.commons.math.linear.RealMatrixImpl"
reference "org.apache.commons.math.linear.QRDecompositionImpl" "org.apache.commons.math.linear.QRDecomposition"
reference "org.apache.commons.math.linear.QRDecompositionImpl" "org.apache.commons.math.linear.RealMatrix"
call "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
reference "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)" "org.apache.commons.math.linear.QRDecompositionImpl.m"
call "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
reference "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)" "org.apache.commons.math.linear.QRDecompositionImpl.n"
call "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)" "org.apache.commons.math.linear.RealMatrix.getData(0)"
reference "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)" "org.apache.commons.math.linear.QRDecompositionImpl.qr"
reference "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)" "org.apache.commons.math.linear.QRDecompositionImpl.rDiag"
contain "org.apache.commons.math.linear.QRDecompositionImpl" "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)"
reference "org.apache.commons.math.linear.QRDecompositionImpl.getR(0)" "org.apache.commons.math.linear.QRDecompositionImpl.m"
reference "org.apache.commons.math.linear.QRDecompositionImpl.getR(0)" "org.apache.commons.math.linear.QRDecompositionImpl.n"
call "org.apache.commons.math.linear.QRDecompositionImpl.getR(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)"
call "org.apache.commons.math.linear.QRDecompositionImpl.getR(0)" "org.apache.commons.math.linear.RealMatrixImpl.getDataRef(0)"
reference "org.apache.commons.math.linear.QRDecompositionImpl.getR(0)" "org.apache.commons.math.linear.QRDecompositionImpl.rDiag"
reference "org.apache.commons.math.linear.QRDecompositionImpl.getR(0)" "org.apache.commons.math.linear.QRDecompositionImpl.qr"
contain "org.apache.commons.math.linear.QRDecompositionImpl" "org.apache.commons.math.linear.QRDecompositionImpl.getR(0)"
reference "org.apache.commons.math.linear.QRDecompositionImpl.getQ(0)" "org.apache.commons.math.linear.QRDecompositionImpl.m"
call "org.apache.commons.math.linear.QRDecompositionImpl.getQ(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)"
call "org.apache.commons.math.linear.QRDecompositionImpl.getQ(0)" "org.apache.commons.math.linear.RealMatrixImpl.getDataRef(0)"
reference "org.apache.commons.math.linear.QRDecompositionImpl.getQ(0)" "org.apache.commons.math.linear.QRDecompositionImpl.n"
reference "org.apache.commons.math.linear.QRDecompositionImpl.getQ(0)" "org.apache.commons.math.linear.QRDecompositionImpl.qr"
reference "org.apache.commons.math.linear.QRDecompositionImpl.getQ(0)" "org.apache.commons.math.linear.QRDecompositionImpl.rDiag"
contain "org.apache.commons.math.linear.QRDecompositionImpl" "org.apache.commons.math.linear.QRDecompositionImpl.getQ(0)"
reference "org.apache.commons.math.linear.QRDecompositionImpl.qr" "double[][]"
contain "org.apache.commons.math.linear.QRDecompositionImpl" "org.apache.commons.math.linear.QRDecompositionImpl.qr"
reference "org.apache.commons.math.linear.QRDecompositionImpl.rDiag" "double[]"
contain "org.apache.commons.math.linear.QRDecompositionImpl" "org.apache.commons.math.linear.QRDecompositionImpl.rDiag"
contain "org.apache.commons.math.linear.QRDecompositionImpl" "org.apache.commons.math.linear.QRDecompositionImpl.m"
contain "org.apache.commons.math.linear.QRDecompositionImpl" "org.apache.commons.math.linear.QRDecompositionImpl.n"
reference "org.apache.commons.math.analysis.UnivariateRealFunction" "org.apache.commons.math.FunctionEvaluationException"
contain "org.apache.commons.math.analysis.UnivariateRealFunction" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
reference "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl" "org.apache.commons.math.ode.EulerIntegrator"
reference "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl" "org.apache.commons.math.ode.MidpointIntegrator"
reference "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator"
reference "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl" "org.apache.commons.math.ode.GillIntegrator"
reference "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl" "org.apache.commons.math.ode.ThreeEighthesIntegrator"
reference "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl" "org.apache.commons.math.ode.HighamHall54Integrator"
reference "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl" "org.apache.commons.math.ode.DormandPrince54Integrator"
reference "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl" "org.apache.commons.math.ode.DormandPrince853Integrator"
reference "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator"
reference "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl" "org.apache.commons.math.ode.FirstOrderIntegratorFactory"
call "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.FirstOrderIntegratorFactoryImpl(0)" "org.apache.commons.math.ode.FirstOrderIntegratorFactory.FirstOrderIntegratorFactory(0)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl" "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.FirstOrderIntegratorFactoryImpl(0)"
call "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newDefaultFixedStepsizeIntegrator(1)" "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newClassicalRungeKuttaIntegrator(1)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl" "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newDefaultFixedStepsizeIntegrator(1)"
call "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newDefaultAdaptiveStepsizeIntegrator(4)" "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newDormandPrince853Integrator(4)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl" "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newDefaultAdaptiveStepsizeIntegrator(4)"
call "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newDefaultAdaptiveStepsizeIntegrator(4)" "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newDormandPrince853Integrator(4)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl" "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newDefaultAdaptiveStepsizeIntegrator(4)"
call "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newEulerIntegrator(1)" "org.apache.commons.math.ode.EulerIntegrator.EulerIntegrator(1)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl" "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newEulerIntegrator(1)"
call "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newMidpointIntegrator(1)" "org.apache.commons.math.ode.MidpointIntegrator.MidpointIntegrator(1)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl" "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newMidpointIntegrator(1)"
call "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newClassicalRungeKuttaIntegrator(1)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(1)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl" "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newClassicalRungeKuttaIntegrator(1)"
call "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newGillIntegrator(1)" "org.apache.commons.math.ode.GillIntegrator.GillIntegrator(1)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl" "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newGillIntegrator(1)"
call "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newThreeEighthesIntegrator(1)" "org.apache.commons.math.ode.ThreeEighthesIntegrator.ThreeEighthesIntegrator(1)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl" "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newThreeEighthesIntegrator(1)"
call "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newHighamHall54Integrator(4)" "org.apache.commons.math.ode.HighamHall54Integrator.HighamHall54Integrator(4)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl" "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newHighamHall54Integrator(4)"
call "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newHighamHall54Integrator(4)" "org.apache.commons.math.ode.HighamHall54Integrator.HighamHall54Integrator(4)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl" "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newHighamHall54Integrator(4)"
call "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newDormandPrince54Integrator(4)" "org.apache.commons.math.ode.DormandPrince54Integrator.DormandPrince54Integrator(4)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl" "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newDormandPrince54Integrator(4)"
call "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newDormandPrince54Integrator(4)" "org.apache.commons.math.ode.DormandPrince54Integrator.DormandPrince54Integrator(4)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl" "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newDormandPrince54Integrator(4)"
call "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newDormandPrince853Integrator(4)" "org.apache.commons.math.ode.DormandPrince853Integrator.DormandPrince853Integrator(4)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl" "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newDormandPrince853Integrator(4)"
call "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newDormandPrince853Integrator(4)" "org.apache.commons.math.ode.DormandPrince853Integrator.DormandPrince853Integrator(4)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl" "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newDormandPrince853Integrator(4)"
call "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newGraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl" "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newGraggBulirschStoerIntegrator(4)"
call "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newGraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl" "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.newGraggBulirschStoerIntegrator(4)"
contain "org.apache.commons.math.estimation.EstimationProblem" "org.apache.commons.math.estimation.EstimationProblem.getMeasurements(0)"
contain "org.apache.commons.math.estimation.EstimationProblem" "org.apache.commons.math.estimation.EstimationProblem.getUnboundParameters(0)"
contain "org.apache.commons.math.estimation.EstimationProblem" "org.apache.commons.math.estimation.EstimationProblem.getAllParameters(0)"
reference "org.apache.commons.math.stat.descriptive.summary.Product" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic"
call "org.apache.commons.math.stat.descriptive.summary.Product.Product(0)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.summary.Product.Product(0)" "org.apache.commons.math.stat.descriptive.summary.Product.n"
reference "org.apache.commons.math.stat.descriptive.summary.Product.Product(0)" "org.apache.commons.math.stat.descriptive.summary.Product.value"
contain "org.apache.commons.math.stat.descriptive.summary.Product" "org.apache.commons.math.stat.descriptive.summary.Product.Product(0)"
reference "org.apache.commons.math.stat.descriptive.summary.Product.increment(1)" "org.apache.commons.math.stat.descriptive.summary.Product.n"
reference "org.apache.commons.math.stat.descriptive.summary.Product.increment(1)" "org.apache.commons.math.stat.descriptive.summary.Product.value"
contain "org.apache.commons.math.stat.descriptive.summary.Product" "org.apache.commons.math.stat.descriptive.summary.Product.increment(1)"
reference "org.apache.commons.math.stat.descriptive.summary.Product.getResult(0)" "org.apache.commons.math.stat.descriptive.summary.Product.value"
contain "org.apache.commons.math.stat.descriptive.summary.Product" "org.apache.commons.math.stat.descriptive.summary.Product.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.summary.Product.getN(0)" "org.apache.commons.math.stat.descriptive.summary.Product.n"
contain "org.apache.commons.math.stat.descriptive.summary.Product" "org.apache.commons.math.stat.descriptive.summary.Product.getN(0)"
reference "org.apache.commons.math.stat.descriptive.summary.Product.clear(0)" "org.apache.commons.math.stat.descriptive.summary.Product.value"
reference "org.apache.commons.math.stat.descriptive.summary.Product.clear(0)" "org.apache.commons.math.stat.descriptive.summary.Product.n"
contain "org.apache.commons.math.stat.descriptive.summary.Product" "org.apache.commons.math.stat.descriptive.summary.Product.clear(0)"
call "org.apache.commons.math.stat.descriptive.summary.Product.evaluate(3)" "org.apache.commons.math.stat.descriptive.summary.Product.test(3)"
contain "org.apache.commons.math.stat.descriptive.summary.Product" "org.apache.commons.math.stat.descriptive.summary.Product.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.summary.Product" "org.apache.commons.math.stat.descriptive.summary.Product.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.summary.Product" "org.apache.commons.math.stat.descriptive.summary.Product.n"
contain "org.apache.commons.math.stat.descriptive.summary.Product" "org.apache.commons.math.stat.descriptive.summary.Product.value"
reference "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.SecondMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Mean"
reference "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic"
call "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(0)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.moment"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.incMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.isBiasCorrected"
call "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.SecondMoment(0)"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(0)"
call "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.moment"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.incMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.isBiasCorrected"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)"
call "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.moment"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.incMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.isBiasCorrected"
call "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.SecondMoment(0)"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)"
call "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(2)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(2)" "org.apache.commons.math.stat.descriptive.moment.Variance.moment"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(2)" "org.apache.commons.math.stat.descriptive.moment.Variance.incMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(2)" "org.apache.commons.math.stat.descriptive.moment.Variance.isBiasCorrected"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(2)"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.increment(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.incMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.increment(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.moment"
call "org.apache.commons.math.stat.descriptive.moment.Variance.increment(1)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.increment(1)"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.increment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.moment"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.n"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.isBiasCorrected"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.m2"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.getN(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.moment"
call "org.apache.commons.math.stat.descriptive.moment.Variance.getN(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.getN(0)"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.getN(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.clear(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.incMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.clear(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.moment"
call "org.apache.commons.math.stat.descriptive.moment.Variance.clear(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.clear(0)"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.clear(0)"
call "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.Variance.test(3)"
call "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.Variance.clear(0)"
call "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)"
call "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.Mean.evaluate(3)"
call "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(4)"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(3)"
call "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(4)" "org.apache.commons.math.stat.descriptive.moment.Variance.test(3)"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(4)" "org.apache.commons.math.stat.descriptive.moment.Variance.isBiasCorrected"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(4)"
call "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(2)" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(4)"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(2)"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.isBiasCorrected(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.isBiasCorrected"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.isBiasCorrected(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.setBiasCorrected(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.isBiasCorrected"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.setBiasCorrected(1)"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.moment" "org.apache.commons.math.stat.descriptive.moment.SecondMoment"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.moment"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.incMoment"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.isBiasCorrected"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic"
call "org.apache.commons.math.stat.descriptive.moment.FirstMoment.FirstMoment(0)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.FirstMoment(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.n"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.FirstMoment(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.m1"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.FirstMoment(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.dev"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.FirstMoment(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.nDev"
contain "org.apache.commons.math.stat.descriptive.moment.FirstMoment" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.FirstMoment(0)"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.n"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.m1"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.dev"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.nDev"
contain "org.apache.commons.math.stat.descriptive.moment.FirstMoment" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.increment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.clear(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.m1"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.clear(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.n"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.clear(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.dev"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.clear(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.nDev"
contain "org.apache.commons.math.stat.descriptive.moment.FirstMoment" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.clear(0)"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.m1"
contain "org.apache.commons.math.stat.descriptive.moment.FirstMoment" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.getN(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.n"
contain "org.apache.commons.math.stat.descriptive.moment.FirstMoment" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.getN(0)"
contain "org.apache.commons.math.stat.descriptive.moment.FirstMoment" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.moment.FirstMoment" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.n"
contain "org.apache.commons.math.stat.descriptive.moment.FirstMoment" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.m1"
contain "org.apache.commons.math.stat.descriptive.moment.FirstMoment" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.dev"
contain "org.apache.commons.math.stat.descriptive.moment.FirstMoment" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.nDev"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator" "double[]"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.RungeKuttaStepInterpolator"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.DerivativeException"
call "org.apache.commons.math.ode.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(0)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(0)"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(0)" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.v1"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(0)" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.v2"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(0)" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.v3"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(0)" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.v4"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(0)" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.vectorsInitialized"
contain "org.apache.commons.math.ode.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(0)"
call "org.apache.commons.math.ode.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(1)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(1)"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(1)" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.v1"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(1)" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.v2"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(1)" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.v3"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(1)" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.v4"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(1)" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.vectorsInitialized"
contain "org.apache.commons.math.ode.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(1)"
call "org.apache.commons.math.ode.DormandPrince54StepInterpolator.clone(0)" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(1)"
contain "org.apache.commons.math.ode.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.clone(0)"
call "org.apache.commons.math.ode.DormandPrince54StepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.reinitialize(4)"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.v1"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.v2"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.v3"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.v4"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.vectorsInitialized"
contain "org.apache.commons.math.ode.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.reinitialize(4)"
call "org.apache.commons.math.ode.DormandPrince54StepInterpolator.storeTime(1)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.storeTime(1)"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator.storeTime(1)" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.vectorsInitialized"
contain "org.apache.commons.math.ode.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.storeTime(1)"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.vectorsInitialized"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.v1"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.interpolatedState"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.v2"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.v3"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.v4"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.h"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.yDotK"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.currentState"
contain "org.apache.commons.math.ode.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.computeInterpolatedState(2)"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator.v1" "double[]"
contain "org.apache.commons.math.ode.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.v1"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator.v2" "double[]"
contain "org.apache.commons.math.ode.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.v2"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator.v3" "double[]"
contain "org.apache.commons.math.ode.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.v3"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolator.v4" "double[]"
contain "org.apache.commons.math.ode.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.v4"
contain "org.apache.commons.math.ode.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.vectorsInitialized"
contain "org.apache.commons.math.ode.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.a70"
contain "org.apache.commons.math.ode.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.a72"
contain "org.apache.commons.math.ode.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.a73"
contain "org.apache.commons.math.ode.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.a74"
contain "org.apache.commons.math.ode.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.a75"
contain "org.apache.commons.math.ode.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.d0"
contain "org.apache.commons.math.ode.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.d2"
contain "org.apache.commons.math.ode.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.d3"
contain "org.apache.commons.math.ode.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.d4"
contain "org.apache.commons.math.ode.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.d5"
contain "org.apache.commons.math.ode.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.d6"
contain "org.apache.commons.math.ode.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.serialVersionUID"
reference "org.apache.commons.math.stat.Frequency.NaturalComparator" "org.apache.commons.math.stat.Frequency"
contain "org.apache.commons.math.stat.Frequency.NaturalComparator" "org.apache.commons.math.stat.Frequency.NaturalComparator.NaturalComparator(0)"
contain "org.apache.commons.math.stat.Frequency.NaturalComparator" "org.apache.commons.math.stat.Frequency.NaturalComparator.compare(2)"
call "org.apache.commons.math.stat.Frequency.NaturalComparator.NaturalComparator(1)" "org.apache.commons.math.stat.Frequency.NaturalComparator.NaturalComparator(0)"
contain "org.apache.commons.math.stat.Frequency.NaturalComparator" "org.apache.commons.math.stat.Frequency.NaturalComparator.NaturalComparator(1)"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
contain "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic.AbstractUnivariateStatistic(0)"
call "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic.evaluate(1)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic.test(3)"
call "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic.evaluate(1)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic.evaluate(1)"
contain "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic.test(3)"
contain "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic.serialVersionUID"
reference "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.distribution.AbstractContinuousDistribution"
reference "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.distribution.FDistribution"
reference "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.special.Beta"
call "org.apache.commons.math.distribution.FDistributionImpl.FDistributionImpl(2)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.AbstractContinuousDistribution(0)"
call "org.apache.commons.math.distribution.FDistributionImpl.FDistributionImpl(2)" "org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(1)"
call "org.apache.commons.math.distribution.FDistributionImpl.FDistributionImpl(2)" "org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(1)"
contain "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.distribution.FDistributionImpl.FDistributionImpl(2)"
call "org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.FDistributionImpl.getNumeratorDegreesOfFreedom(0)"
call "org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.FDistributionImpl.getDenominatorDegreesOfFreedom(0)"
call "org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.special.Beta.regularizedBeta(3)"
contain "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.distribution.FDistributionImpl.getDomainLowerBound(1)"
contain "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.distribution.FDistributionImpl.getDomainUpperBound(1)"
call "org.apache.commons.math.distribution.FDistributionImpl.getInitialDomain(1)" "org.apache.commons.math.distribution.FDistributionImpl.getDenominatorDegreesOfFreedom(0)"
contain "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.distribution.FDistributionImpl.getInitialDomain(1)"
reference "org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(1)" "org.apache.commons.math.distribution.FDistributionImpl.numeratorDegreesOfFreedom"
contain "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(1)"
reference "org.apache.commons.math.distribution.FDistributionImpl.getNumeratorDegreesOfFreedom(0)" "org.apache.commons.math.distribution.FDistributionImpl.numeratorDegreesOfFreedom"
contain "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.distribution.FDistributionImpl.getNumeratorDegreesOfFreedom(0)"
reference "org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(1)" "org.apache.commons.math.distribution.FDistributionImpl.denominatorDegreesOfFreedom"
contain "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(1)"
reference "org.apache.commons.math.distribution.FDistributionImpl.getDenominatorDegreesOfFreedom(0)" "org.apache.commons.math.distribution.FDistributionImpl.denominatorDegreesOfFreedom"
contain "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.distribution.FDistributionImpl.getDenominatorDegreesOfFreedom(0)"
contain "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.distribution.FDistributionImpl.serialVersionUID"
contain "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.distribution.FDistributionImpl.numeratorDegreesOfFreedom"
contain "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.distribution.FDistributionImpl.denominatorDegreesOfFreedom"
reference "org.apache.commons.math.ode.GillIntegrator" "org.apache.commons.math.ode.GillStepInterpolator"
reference "org.apache.commons.math.ode.GillIntegrator" "double[]"
reference "org.apache.commons.math.ode.GillIntegrator" "org.apache.commons.math.ode.RungeKuttaIntegrator"
reference "org.apache.commons.math.ode.GillIntegrator.GillIntegrator(1)" "org.apache.commons.math.ode.GillIntegrator.c"
reference "org.apache.commons.math.ode.GillIntegrator.GillIntegrator(1)" "org.apache.commons.math.ode.GillIntegrator.a"
reference "org.apache.commons.math.ode.GillIntegrator.GillIntegrator(1)" "org.apache.commons.math.ode.GillIntegrator.b"
call "org.apache.commons.math.ode.GillIntegrator.GillIntegrator(1)" "org.apache.commons.math.ode.GillStepInterpolator.GillStepInterpolator(0)"
call "org.apache.commons.math.ode.GillIntegrator.GillIntegrator(1)" "org.apache.commons.math.ode.RungeKuttaIntegrator.RungeKuttaIntegrator(6)"
contain "org.apache.commons.math.ode.GillIntegrator" "org.apache.commons.math.ode.GillIntegrator.GillIntegrator(1)"
contain "org.apache.commons.math.ode.GillIntegrator" "org.apache.commons.math.ode.GillIntegrator.getName(0)"
reference "org.apache.commons.math.ode.GillIntegrator.static {...}" "org.apache.commons.math.ode.GillIntegrator.sqrt2"
reference "org.apache.commons.math.ode.GillIntegrator.static {...}" "org.apache.commons.math.ode.GillIntegrator.c"
reference "org.apache.commons.math.ode.GillIntegrator.static {...}" "org.apache.commons.math.ode.GillIntegrator.a"
reference "org.apache.commons.math.ode.GillIntegrator.static {...}" "org.apache.commons.math.ode.GillIntegrator.b"
contain "org.apache.commons.math.ode.GillIntegrator" "org.apache.commons.math.ode.GillIntegrator.static {...}"
contain "org.apache.commons.math.ode.GillIntegrator" "org.apache.commons.math.ode.GillIntegrator.methodName"
contain "org.apache.commons.math.ode.GillIntegrator" "org.apache.commons.math.ode.GillIntegrator.sqrt2"
reference "org.apache.commons.math.ode.GillIntegrator.c" "double[]"
contain "org.apache.commons.math.ode.GillIntegrator" "org.apache.commons.math.ode.GillIntegrator.c"
reference "org.apache.commons.math.ode.GillIntegrator.a" "double[][]"
contain "org.apache.commons.math.ode.GillIntegrator" "org.apache.commons.math.ode.GillIntegrator.a"
reference "org.apache.commons.math.ode.GillIntegrator.b" "double[]"
contain "org.apache.commons.math.ode.GillIntegrator" "org.apache.commons.math.ode.GillIntegrator.b"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.DimensionMismatchException"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "double[]"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "double[][]"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.random.NotPositiveDefiniteMatrixException"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.linear.RealMatrixImpl"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.random.RandomVectorGenerator"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.random.NormalizedRandomGenerator"
call "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(4)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(4)" "org.apache.commons.math.DimensionMismatchException.DimensionMismatchException(2)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(4)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.mean"
call "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(4)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.decompose(2)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(4)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.generator"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(4)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.rank"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(4)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.normalized"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(4)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(3)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(3)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.mean"
call "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(3)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.decompose(2)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(3)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.generator"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(3)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.rank"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(3)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.normalized"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(3)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.getGenerator(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.generator"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.getGenerator(0)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.getRootMatrix(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.root"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.getRootMatrix(0)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.getRank(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.rank"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.getRank(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.decompose(2)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.decompose(2)" "org.apache.commons.math.linear.RealMatrix.getData(0)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.decompose(2)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.rank"
call "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.decompose(2)" "org.apache.commons.math.random.NotPositiveDefiniteMatrixException.NotPositiveDefiniteMatrixException(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.decompose(2)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.decompose(2)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.root"
call "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.decompose(2)" "org.apache.commons.math.linear.RealMatrixImpl.getDataRef(0)"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.decompose(2)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.nextVector(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.rank"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.nextVector(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.normalized"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.nextVector(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.generator"
call "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.nextVector(0)" "org.apache.commons.math.random.NormalizedRandomGenerator.nextNormalizedDouble(0)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.nextVector(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.mean"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.nextVector(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.root"
call "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.nextVector(0)" "org.apache.commons.math.linear.RealMatrixImpl.getEntry(2)"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.nextVector(0)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.mean" "double[]"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.mean"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.root" "org.apache.commons.math.linear.RealMatrixImpl"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.root"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.rank"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.generator" "org.apache.commons.math.random.NormalizedRandomGenerator"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.generator"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.normalized" "double[]"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.normalized"
reference "org.apache.commons.math.ode.FirstOrderDifferentialEquations" "org.apache.commons.math.ode.DerivativeException"
contain "org.apache.commons.math.ode.FirstOrderDifferentialEquations" "org.apache.commons.math.ode.FirstOrderDifferentialEquations.getDimension(0)"
contain "org.apache.commons.math.ode.FirstOrderDifferentialEquations" "org.apache.commons.math.ode.FirstOrderDifferentialEquations.computeDerivatives(3)"
reference "org.apache.commons.math.analysis.SplineInterpolator" "org.apache.commons.math.analysis.PolynomialFunction"
reference "org.apache.commons.math.analysis.SplineInterpolator" "org.apache.commons.math.analysis.PolynomialSplineFunction"
reference "org.apache.commons.math.analysis.SplineInterpolator" "org.apache.commons.math.analysis.UnivariateRealInterpolator"
contain "org.apache.commons.math.analysis.SplineInterpolator" "org.apache.commons.math.analysis.SplineInterpolator.SplineInterpolator(0)"
call "org.apache.commons.math.analysis.SplineInterpolator.interpolate(2)" "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)"
call "org.apache.commons.math.analysis.SplineInterpolator.interpolate(2)" "org.apache.commons.math.analysis.PolynomialSplineFunction.PolynomialSplineFunction(2)"
contain "org.apache.commons.math.analysis.SplineInterpolator" "org.apache.commons.math.analysis.SplineInterpolator.interpolate(2)"
reference "org.apache.commons.math.ode.SecondOrderDifferentialEquations" "org.apache.commons.math.ode.DerivativeException"
contain "org.apache.commons.math.ode.SecondOrderDifferentialEquations" "org.apache.commons.math.ode.SecondOrderDifferentialEquations.getDimension(0)"
contain "org.apache.commons.math.ode.SecondOrderDifferentialEquations" "org.apache.commons.math.ode.SecondOrderDifferentialEquations.computeSecondDerivatives(4)"
reference "org.apache.commons.math.ArgumentOutsideDomainException" "org.apache.commons.math.FunctionEvaluationException"
call "org.apache.commons.math.ArgumentOutsideDomainException.ArgumentOutsideDomainException(3)" "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(3)"
contain "org.apache.commons.math.ArgumentOutsideDomainException" "org.apache.commons.math.ArgumentOutsideDomainException.ArgumentOutsideDomainException(3)"
contain "org.apache.commons.math.ArgumentOutsideDomainException" "org.apache.commons.math.ArgumentOutsideDomainException.serialVersionUID"
reference "org.apache.commons.math.random.AbstractRandomGenerator" "org.apache.commons.math.random.RandomGenerator"
reference "org.apache.commons.math.random.AbstractRandomGenerator.AbstractRandomGenerator(0)" "org.apache.commons.math.random.AbstractRandomGenerator.cachedNormalDeviate"
contain "org.apache.commons.math.random.AbstractRandomGenerator" "org.apache.commons.math.random.AbstractRandomGenerator.AbstractRandomGenerator(0)"
reference "org.apache.commons.math.random.AbstractRandomGenerator.clear(0)" "org.apache.commons.math.random.AbstractRandomGenerator.cachedNormalDeviate"
contain "org.apache.commons.math.random.AbstractRandomGenerator" "org.apache.commons.math.random.AbstractRandomGenerator.clear(0)"
contain "org.apache.commons.math.random.AbstractRandomGenerator" "org.apache.commons.math.random.AbstractRandomGenerator.setSeed(1)"
call "org.apache.commons.math.random.AbstractRandomGenerator.nextBytes(1)" "org.apache.commons.math.random.AbstractRandomGenerator.nextInt(0)"
contain "org.apache.commons.math.random.AbstractRandomGenerator" "org.apache.commons.math.random.AbstractRandomGenerator.nextBytes(1)"
call "org.apache.commons.math.random.AbstractRandomGenerator.nextInt(0)" "org.apache.commons.math.random.AbstractRandomGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.AbstractRandomGenerator" "org.apache.commons.math.random.AbstractRandomGenerator.nextInt(0)"
call "org.apache.commons.math.random.AbstractRandomGenerator.nextInt(1)" "org.apache.commons.math.random.AbstractRandomGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.AbstractRandomGenerator" "org.apache.commons.math.random.AbstractRandomGenerator.nextInt(1)"
call "org.apache.commons.math.random.AbstractRandomGenerator.nextLong(0)" "org.apache.commons.math.random.AbstractRandomGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.AbstractRandomGenerator" "org.apache.commons.math.random.AbstractRandomGenerator.nextLong(0)"
call "org.apache.commons.math.random.AbstractRandomGenerator.nextBoolean(0)" "org.apache.commons.math.random.AbstractRandomGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.AbstractRandomGenerator" "org.apache.commons.math.random.AbstractRandomGenerator.nextBoolean(0)"
call "org.apache.commons.math.random.AbstractRandomGenerator.nextFloat(0)" "org.apache.commons.math.random.AbstractRandomGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.AbstractRandomGenerator" "org.apache.commons.math.random.AbstractRandomGenerator.nextFloat(0)"
contain "org.apache.commons.math.random.AbstractRandomGenerator" "org.apache.commons.math.random.AbstractRandomGenerator.nextDouble(0)"
reference "org.apache.commons.math.random.AbstractRandomGenerator.nextGaussian(0)" "org.apache.commons.math.random.AbstractRandomGenerator.cachedNormalDeviate"
call "org.apache.commons.math.random.AbstractRandomGenerator.nextGaussian(0)" "org.apache.commons.math.random.AbstractRandomGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.AbstractRandomGenerator" "org.apache.commons.math.random.AbstractRandomGenerator.nextGaussian(0)"
contain "org.apache.commons.math.random.AbstractRandomGenerator" "org.apache.commons.math.random.AbstractRandomGenerator.cachedNormalDeviate"
reference "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.NotARotationMatrixException"
reference "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Vector3D"
reference "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.CardanEulerSingularityException"
reference "org.apache.commons.math.geometry.Rotation" "double[]"
reference "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.RotationOrder"
reference "org.apache.commons.math.geometry.Rotation.Rotation(0)" "org.apache.commons.math.geometry.Rotation.q0"
reference "org.apache.commons.math.geometry.Rotation.Rotation(0)" "org.apache.commons.math.geometry.Rotation.q1"
reference "org.apache.commons.math.geometry.Rotation.Rotation(0)" "org.apache.commons.math.geometry.Rotation.q2"
reference "org.apache.commons.math.geometry.Rotation.Rotation(0)" "org.apache.commons.math.geometry.Rotation.q3"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.Rotation(0)"
reference "org.apache.commons.math.geometry.Rotation.Rotation(5)" "org.apache.commons.math.geometry.Rotation.q0"
reference "org.apache.commons.math.geometry.Rotation.Rotation(5)" "org.apache.commons.math.geometry.Rotation.q1"
reference "org.apache.commons.math.geometry.Rotation.Rotation(5)" "org.apache.commons.math.geometry.Rotation.q2"
reference "org.apache.commons.math.geometry.Rotation.Rotation(5)" "org.apache.commons.math.geometry.Rotation.q3"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.Rotation(5)"
call "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Vector3D.getNorm(0)"
reference "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Rotation.q0"
call "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Vector3D.getX(0)"
reference "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Rotation.q1"
call "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Vector3D.getY(0)"
reference "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Rotation.q2"
call "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Vector3D.getZ(0)"
reference "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Rotation.q3"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.Rotation(2)"
call "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.NotARotationMatrixException.NotARotationMatrixException(2)"
call "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Rotation.orthogonalizeMatrix(2)"
reference "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Rotation.q0"
reference "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Rotation.q1"
reference "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Rotation.q2"
reference "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Rotation.q3"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.Rotation(2)"
call "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Vector3D.dotProduct(2)"
call "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Vector3D.getX(0)"
call "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Vector3D.getY(0)"
call "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Vector3D.getZ(0)"
call "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Vector3D.crossProduct(2)"
reference "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Rotation.q0"
reference "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Rotation.q1"
reference "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Rotation.q2"
reference "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Rotation.q3"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.Rotation(4)"
call "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Vector3D.getNorm(0)"
call "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Vector3D.dotProduct(2)"
call "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Vector3D.orthogonal(0)"
reference "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Rotation.q0"
call "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Vector3D.getX(0)"
reference "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Rotation.q1"
call "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Vector3D.getY(0)"
reference "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Rotation.q2"
call "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Vector3D.getZ(0)"
reference "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Rotation.q3"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.Rotation(2)"
call "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.RotationOrder.getA1(0)"
call "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Rotation.Rotation(2)"
call "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.RotationOrder.getA2(0)"
call "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.RotationOrder.getA3(0)"
call "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Rotation.applyTo(1)"
reference "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Rotation.q0"
reference "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Rotation.q1"
reference "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Rotation.q2"
reference "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Rotation.q3"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.Rotation(4)"
reference "org.apache.commons.math.geometry.Rotation.revert(0)" "org.apache.commons.math.geometry.Rotation.q0"
reference "org.apache.commons.math.geometry.Rotation.revert(0)" "org.apache.commons.math.geometry.Rotation.q1"
reference "org.apache.commons.math.geometry.Rotation.revert(0)" "org.apache.commons.math.geometry.Rotation.q2"
reference "org.apache.commons.math.geometry.Rotation.revert(0)" "org.apache.commons.math.geometry.Rotation.q3"
call "org.apache.commons.math.geometry.Rotation.revert(0)" "org.apache.commons.math.geometry.Rotation.Rotation(5)"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.revert(0)"
reference "org.apache.commons.math.geometry.Rotation.getQ0(0)" "org.apache.commons.math.geometry.Rotation.q0"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.getQ0(0)"
reference "org.apache.commons.math.geometry.Rotation.getQ1(0)" "org.apache.commons.math.geometry.Rotation.q1"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.getQ1(0)"
reference "org.apache.commons.math.geometry.Rotation.getQ2(0)" "org.apache.commons.math.geometry.Rotation.q2"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.getQ2(0)"
reference "org.apache.commons.math.geometry.Rotation.getQ3(0)" "org.apache.commons.math.geometry.Rotation.q3"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.getQ3(0)"
reference "org.apache.commons.math.geometry.Rotation.getAxis(0)" "org.apache.commons.math.geometry.Rotation.q1"
reference "org.apache.commons.math.geometry.Rotation.getAxis(0)" "org.apache.commons.math.geometry.Rotation.q2"
reference "org.apache.commons.math.geometry.Rotation.getAxis(0)" "org.apache.commons.math.geometry.Rotation.q3"
call "org.apache.commons.math.geometry.Rotation.getAxis(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
reference "org.apache.commons.math.geometry.Rotation.getAxis(0)" "org.apache.commons.math.geometry.Rotation.q0"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.getAxis(0)"
reference "org.apache.commons.math.geometry.Rotation.getAngle(0)" "org.apache.commons.math.geometry.Rotation.q0"
reference "org.apache.commons.math.geometry.Rotation.getAngle(0)" "org.apache.commons.math.geometry.Rotation.q1"
reference "org.apache.commons.math.geometry.Rotation.getAngle(0)" "org.apache.commons.math.geometry.Rotation.q2"
reference "org.apache.commons.math.geometry.Rotation.getAngle(0)" "org.apache.commons.math.geometry.Rotation.q3"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.getAngle(0)"
reference "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.RotationOrder.XYZ"
reference "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.Vector3D.plusK"
call "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.Rotation.applyTo(1)"
reference "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.Vector3D.plusI"
call "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)"
call "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.Vector3D.getZ(0)"
call "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.CardanEulerSingularityException.CardanEulerSingularityException(1)"
call "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.Vector3D.getY(0)"
call "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.Vector3D.getX(0)"
reference "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.RotationOrder.XZY"
reference "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.Vector3D.plusJ"
reference "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.RotationOrder.YXZ"
reference "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.RotationOrder.YZX"
reference "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.RotationOrder.ZXY"
reference "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.RotationOrder.ZYX"
reference "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.RotationOrder.XYX"
reference "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.RotationOrder.XZX"
reference "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.RotationOrder.YXY"
reference "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.RotationOrder.YZY"
reference "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.RotationOrder.ZXZ"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.getAngles(1)"
reference "org.apache.commons.math.geometry.Rotation.getMatrix(0)" "org.apache.commons.math.geometry.Rotation.q0"
reference "org.apache.commons.math.geometry.Rotation.getMatrix(0)" "org.apache.commons.math.geometry.Rotation.q1"
reference "org.apache.commons.math.geometry.Rotation.getMatrix(0)" "org.apache.commons.math.geometry.Rotation.q2"
reference "org.apache.commons.math.geometry.Rotation.getMatrix(0)" "org.apache.commons.math.geometry.Rotation.q3"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.getMatrix(0)"
call "org.apache.commons.math.geometry.Rotation.applyTo(1)" "org.apache.commons.math.geometry.Vector3D.getX(0)"
call "org.apache.commons.math.geometry.Rotation.applyTo(1)" "org.apache.commons.math.geometry.Vector3D.getY(0)"
call "org.apache.commons.math.geometry.Rotation.applyTo(1)" "org.apache.commons.math.geometry.Vector3D.getZ(0)"
reference "org.apache.commons.math.geometry.Rotation.applyTo(1)" "org.apache.commons.math.geometry.Rotation.q1"
reference "org.apache.commons.math.geometry.Rotation.applyTo(1)" "org.apache.commons.math.geometry.Rotation.q2"
reference "org.apache.commons.math.geometry.Rotation.applyTo(1)" "org.apache.commons.math.geometry.Rotation.q3"
reference "org.apache.commons.math.geometry.Rotation.applyTo(1)" "org.apache.commons.math.geometry.Rotation.q0"
call "org.apache.commons.math.geometry.Rotation.applyTo(1)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.applyTo(1)"
call "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)" "org.apache.commons.math.geometry.Vector3D.getX(0)"
call "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)" "org.apache.commons.math.geometry.Vector3D.getY(0)"
call "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)" "org.apache.commons.math.geometry.Vector3D.getZ(0)"
reference "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)" "org.apache.commons.math.geometry.Rotation.q1"
reference "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)" "org.apache.commons.math.geometry.Rotation.q2"
reference "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)" "org.apache.commons.math.geometry.Rotation.q3"
reference "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)" "org.apache.commons.math.geometry.Rotation.q0"
call "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)"
reference "org.apache.commons.math.geometry.Rotation.applyTo(1)" "org.apache.commons.math.geometry.Rotation.q0"
reference "org.apache.commons.math.geometry.Rotation.applyTo(1)" "org.apache.commons.math.geometry.Rotation.q1"
reference "org.apache.commons.math.geometry.Rotation.applyTo(1)" "org.apache.commons.math.geometry.Rotation.q2"
reference "org.apache.commons.math.geometry.Rotation.applyTo(1)" "org.apache.commons.math.geometry.Rotation.q3"
call "org.apache.commons.math.geometry.Rotation.applyTo(1)" "org.apache.commons.math.geometry.Rotation.Rotation(5)"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.applyTo(1)"
reference "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)" "org.apache.commons.math.geometry.Rotation.q0"
reference "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)" "org.apache.commons.math.geometry.Rotation.q1"
reference "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)" "org.apache.commons.math.geometry.Rotation.q2"
reference "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)" "org.apache.commons.math.geometry.Rotation.q3"
call "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)" "org.apache.commons.math.geometry.Rotation.Rotation(5)"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)"
call "org.apache.commons.math.geometry.Rotation.orthogonalizeMatrix(2)" "org.apache.commons.math.geometry.NotARotationMatrixException.NotARotationMatrixException(2)"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.orthogonalizeMatrix(2)"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.q0"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.q1"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.q2"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.q3"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.serialVersionUID"
reference "org.apache.commons.math.analysis.BisectionSolver" "org.apache.commons.math.MaxIterationsExceededException"
reference "org.apache.commons.math.analysis.BisectionSolver" "org.apache.commons.math.analysis.UnivariateRealSolverImpl"
reference "org.apache.commons.math.analysis.BisectionSolver" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.BisectionSolver" "org.apache.commons.math.analysis.UnivariateRealSolverUtils"
reference "org.apache.commons.math.analysis.BisectionSolver" "org.apache.commons.math.analysis.UnivariateRealFunction"
call "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(1)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)"
contain "org.apache.commons.math.analysis.BisectionSolver" "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(1)"
call "org.apache.commons.math.analysis.BisectionSolver.solve(3)" "org.apache.commons.math.analysis.BisectionSolver.solve(2)"
contain "org.apache.commons.math.analysis.BisectionSolver" "org.apache.commons.math.analysis.BisectionSolver.solve(3)"
call "org.apache.commons.math.analysis.BisectionSolver.solve(2)" "org.apache.commons.math.analysis.BisectionSolver.clearResult(0)"
call "org.apache.commons.math.analysis.BisectionSolver.solve(2)" "org.apache.commons.math.analysis.BisectionSolver.verifyInterval(2)"
reference "org.apache.commons.math.analysis.BisectionSolver.solve(2)" "org.apache.commons.math.analysis.BisectionSolver.maximalIterationCount"
call "org.apache.commons.math.analysis.BisectionSolver.solve(2)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.midpoint(2)"
reference "org.apache.commons.math.analysis.BisectionSolver.solve(2)" "org.apache.commons.math.analysis.BisectionSolver.f"
call "org.apache.commons.math.analysis.BisectionSolver.solve(2)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
reference "org.apache.commons.math.analysis.BisectionSolver.solve(2)" "org.apache.commons.math.analysis.BisectionSolver.absoluteAccuracy"
call "org.apache.commons.math.analysis.BisectionSolver.solve(2)" "org.apache.commons.math.analysis.BisectionSolver.setResult(2)"
call "org.apache.commons.math.analysis.BisectionSolver.solve(2)" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)"
contain "org.apache.commons.math.analysis.BisectionSolver" "org.apache.commons.math.analysis.BisectionSolver.solve(2)"
contain "org.apache.commons.math.analysis.BisectionSolver" "org.apache.commons.math.analysis.BisectionSolver.serialVersionUID"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.1" "org.apache.commons.math.random.EmpiricalDistributionImpl"
contain "org.apache.commons.math.random.EmpiricalDistribution" "org.apache.commons.math.random.EmpiricalDistribution.load(1)"
contain "org.apache.commons.math.random.EmpiricalDistribution" "org.apache.commons.math.random.EmpiricalDistribution.load(1)"
contain "org.apache.commons.math.random.EmpiricalDistribution" "org.apache.commons.math.random.EmpiricalDistribution.load(1)"
contain "org.apache.commons.math.random.EmpiricalDistribution" "org.apache.commons.math.random.EmpiricalDistribution.getNextValue(0)"
contain "org.apache.commons.math.random.EmpiricalDistribution" "org.apache.commons.math.random.EmpiricalDistribution.getSampleStats(0)"
contain "org.apache.commons.math.random.EmpiricalDistribution" "org.apache.commons.math.random.EmpiricalDistribution.isLoaded(0)"
contain "org.apache.commons.math.random.EmpiricalDistribution" "org.apache.commons.math.random.EmpiricalDistribution.getBinCount(0)"
contain "org.apache.commons.math.random.EmpiricalDistribution" "org.apache.commons.math.random.EmpiricalDistribution.getBinStats(0)"
contain "org.apache.commons.math.random.EmpiricalDistribution" "org.apache.commons.math.random.EmpiricalDistribution.getUpperBounds(0)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.Variance"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(0)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(0)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(1)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(1)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(1)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(1)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(2)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(2)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(2)" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(2)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(2)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.increment(1)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.increment(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.increment(1)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.increment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.getN(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.getN(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.getN(0)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.getN(0)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.clear(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.clear(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.clear(0)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.clear(0)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.evaluate(1)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.evaluate(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(1)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.evaluate(1)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.evaluate(3)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.evaluate(4)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.evaluate(4)" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(4)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.evaluate(4)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.evaluate(2)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.evaluate(2)" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(2)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.evaluate(2)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.isBiasCorrected(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.isBiasCorrected(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.isBiasCorrected(0)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.isBiasCorrected(0)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.setBiasCorrected(1)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.setBiasCorrected(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.setBiasCorrected(1)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.setBiasCorrected(1)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance" "org.apache.commons.math.stat.descriptive.moment.Variance"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatistic" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(1)"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatistic" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(3)"
reference "org.apache.commons.math.util.NumberTransformer" "org.apache.commons.math.MathException"
contain "org.apache.commons.math.util.NumberTransformer" "org.apache.commons.math.util.NumberTransformer.transform(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory" "double[]"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory" "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory" "org.apache.commons.math.random.EmpiricalDistributionImpl"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory.DataAdapterFactory(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory.this$0"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory.DataAdapterFactory(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory.getAdapter(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory.this$0"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory.getAdapter(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.StreamDataAdapter(1)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory.getAdapter(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.ArrayDataAdapter(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory.getAdapter(1)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory.DataAdapterFactory(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory.DataAdapterFactory(0)"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory.DataAdapterFactory(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory.this$0" "org.apache.commons.math.random.EmpiricalDistributionImpl"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory.this$0"
reference "org.apache.commons.math.MaxIterationsExceededException" "org.apache.commons.math.ConvergenceException"
call "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)" "org.apache.commons.math.ConvergenceException.ConvergenceException(2)"
reference "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)" "org.apache.commons.math.MaxIterationsExceededException.maxIterations"
contain "org.apache.commons.math.MaxIterationsExceededException" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)"
call "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(3)" "org.apache.commons.math.ConvergenceException.ConvergenceException(2)"
reference "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(3)" "org.apache.commons.math.MaxIterationsExceededException.maxIterations"
contain "org.apache.commons.math.MaxIterationsExceededException" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(3)"
reference "org.apache.commons.math.MaxIterationsExceededException.getMaxIterations(0)" "org.apache.commons.math.MaxIterationsExceededException.maxIterations"
contain "org.apache.commons.math.MaxIterationsExceededException" "org.apache.commons.math.MaxIterationsExceededException.getMaxIterations(0)"
contain "org.apache.commons.math.MaxIterationsExceededException" "org.apache.commons.math.MaxIterationsExceededException.serialVersionUID"
contain "org.apache.commons.math.MaxIterationsExceededException" "org.apache.commons.math.MaxIterationsExceededException.maxIterations"
reference "org.apache.commons.math.distribution.CauchyDistribution" "org.apache.commons.math.distribution.ContinuousDistribution"
contain "org.apache.commons.math.distribution.CauchyDistribution" "org.apache.commons.math.distribution.CauchyDistribution.getMedian(0)"
contain "org.apache.commons.math.distribution.CauchyDistribution" "org.apache.commons.math.distribution.CauchyDistribution.getScale(0)"
contain "org.apache.commons.math.distribution.CauchyDistribution" "org.apache.commons.math.distribution.CauchyDistribution.setMedian(1)"
contain "org.apache.commons.math.distribution.CauchyDistribution" "org.apache.commons.math.distribution.CauchyDistribution.setScale(1)"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator" "org.apache.commons.math.ode.RungeKuttaStepInterpolator"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator" "org.apache.commons.math.ode.DerivativeException"
call "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator.ClassicalRungeKuttaStepInterpolator(0)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(0)"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator" "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator.ClassicalRungeKuttaStepInterpolator(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator.ClassicalRungeKuttaStepInterpolator(1)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(1)"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator" "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator.ClassicalRungeKuttaStepInterpolator(1)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator.clone(0)" "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator.ClassicalRungeKuttaStepInterpolator(1)"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator" "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator.clone(0)"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator.interpolatedState"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator.currentState"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator.yDotK"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator" "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator.computeInterpolatedState(2)"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator" "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness" "org.apache.commons.math.stat.descriptive.moment.Mean"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic"
call "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(0)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(0)" "org.apache.commons.math.stat.descriptive.moment.Skewness.moment"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(0)" "org.apache.commons.math.stat.descriptive.moment.Skewness.incMoment"
call "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.ThirdMoment(0)"
contain "org.apache.commons.math.stat.descriptive.moment.Skewness" "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(0)"
call "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(1)" "org.apache.commons.math.stat.descriptive.moment.Skewness.moment"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(1)" "org.apache.commons.math.stat.descriptive.moment.Skewness.incMoment"
contain "org.apache.commons.math.stat.descriptive.moment.Skewness" "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(1)"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness.increment(1)" "org.apache.commons.math.stat.descriptive.moment.Skewness.incMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness.increment(1)" "org.apache.commons.math.stat.descriptive.moment.Skewness.moment"
call "org.apache.commons.math.stat.descriptive.moment.Skewness.increment(1)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.increment(1)"
contain "org.apache.commons.math.stat.descriptive.moment.Skewness" "org.apache.commons.math.stat.descriptive.moment.Skewness.increment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.Skewness.moment"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.n"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.m2"
call "org.apache.commons.math.stat.descriptive.moment.Skewness.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.getN(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.m3"
contain "org.apache.commons.math.stat.descriptive.moment.Skewness" "org.apache.commons.math.stat.descriptive.moment.Skewness.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness.getN(0)" "org.apache.commons.math.stat.descriptive.moment.Skewness.moment"
call "org.apache.commons.math.stat.descriptive.moment.Skewness.getN(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.getN(0)"
contain "org.apache.commons.math.stat.descriptive.moment.Skewness" "org.apache.commons.math.stat.descriptive.moment.Skewness.getN(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness.clear(0)" "org.apache.commons.math.stat.descriptive.moment.Skewness.incMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness.clear(0)" "org.apache.commons.math.stat.descriptive.moment.Skewness.moment"
call "org.apache.commons.math.stat.descriptive.moment.Skewness.clear(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.clear(0)"
contain "org.apache.commons.math.stat.descriptive.moment.Skewness" "org.apache.commons.math.stat.descriptive.moment.Skewness.clear(0)"
call "org.apache.commons.math.stat.descriptive.moment.Skewness.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.Skewness.test(3)"
call "org.apache.commons.math.stat.descriptive.moment.Skewness.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)"
call "org.apache.commons.math.stat.descriptive.moment.Skewness.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.Mean.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.moment.Skewness" "org.apache.commons.math.stat.descriptive.moment.Skewness.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.moment.Skewness" "org.apache.commons.math.stat.descriptive.moment.Skewness.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness.moment" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment"
contain "org.apache.commons.math.stat.descriptive.moment.Skewness" "org.apache.commons.math.stat.descriptive.moment.Skewness.moment"
contain "org.apache.commons.math.stat.descriptive.moment.Skewness" "org.apache.commons.math.stat.descriptive.moment.Skewness.incMoment"
reference "org.apache.commons.math.ode.StepNormalizer" "double[]"
reference "org.apache.commons.math.ode.StepNormalizer" "org.apache.commons.math.ode.StepHandler"
reference "org.apache.commons.math.ode.StepNormalizer" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.StepNormalizer" "org.apache.commons.math.ode.StepInterpolator"
reference "org.apache.commons.math.ode.StepNormalizer" "org.apache.commons.math.ode.FixedStepHandler"
reference "org.apache.commons.math.ode.StepNormalizer.StepNormalizer(2)" "org.apache.commons.math.ode.StepNormalizer.h"
reference "org.apache.commons.math.ode.StepNormalizer.StepNormalizer(2)" "org.apache.commons.math.ode.StepNormalizer.handler"
call "org.apache.commons.math.ode.StepNormalizer.StepNormalizer(2)" "org.apache.commons.math.ode.StepNormalizer.reset(0)"
contain "org.apache.commons.math.ode.StepNormalizer" "org.apache.commons.math.ode.StepNormalizer.StepNormalizer(2)"
contain "org.apache.commons.math.ode.StepNormalizer" "org.apache.commons.math.ode.StepNormalizer.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.StepNormalizer.reset(0)" "org.apache.commons.math.ode.StepNormalizer.lastTime"
reference "org.apache.commons.math.ode.StepNormalizer.reset(0)" "org.apache.commons.math.ode.StepNormalizer.lastState"
reference "org.apache.commons.math.ode.StepNormalizer.reset(0)" "org.apache.commons.math.ode.StepNormalizer.forward"
contain "org.apache.commons.math.ode.StepNormalizer" "org.apache.commons.math.ode.StepNormalizer.reset(0)"
reference "org.apache.commons.math.ode.StepNormalizer.handleStep(2)" "org.apache.commons.math.ode.StepNormalizer.lastState"
call "org.apache.commons.math.ode.StepNormalizer.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getPreviousTime(0)"
reference "org.apache.commons.math.ode.StepNormalizer.handleStep(2)" "org.apache.commons.math.ode.StepNormalizer.lastTime"
call "org.apache.commons.math.ode.StepNormalizer.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.StepNormalizer.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getInterpolatedState(0)"
call "org.apache.commons.math.ode.StepNormalizer.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getCurrentTime(0)"
reference "org.apache.commons.math.ode.StepNormalizer.handleStep(2)" "org.apache.commons.math.ode.StepNormalizer.forward"
reference "org.apache.commons.math.ode.StepNormalizer.handleStep(2)" "org.apache.commons.math.ode.StepNormalizer.h"
reference "org.apache.commons.math.ode.StepNormalizer.handleStep(2)" "org.apache.commons.math.ode.StepNormalizer.handler"
call "org.apache.commons.math.ode.StepNormalizer.handleStep(2)" "org.apache.commons.math.ode.FixedStepHandler.handleStep(3)"
contain "org.apache.commons.math.ode.StepNormalizer" "org.apache.commons.math.ode.StepNormalizer.handleStep(2)"
contain "org.apache.commons.math.ode.StepNormalizer" "org.apache.commons.math.ode.StepNormalizer.h"
reference "org.apache.commons.math.ode.StepNormalizer.handler" "org.apache.commons.math.ode.FixedStepHandler"
contain "org.apache.commons.math.ode.StepNormalizer" "org.apache.commons.math.ode.StepNormalizer.handler"
contain "org.apache.commons.math.ode.StepNormalizer" "org.apache.commons.math.ode.StepNormalizer.lastTime"
reference "org.apache.commons.math.ode.StepNormalizer.lastState" "double[]"
contain "org.apache.commons.math.ode.StepNormalizer" "org.apache.commons.math.ode.StepNormalizer.lastState"
contain "org.apache.commons.math.ode.StepNormalizer" "org.apache.commons.math.ode.StepNormalizer.forward"
reference "org.apache.commons.math.special.Gamma" "org.apache.commons.math.MaxIterationsExceededException"
reference "org.apache.commons.math.special.Gamma" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.special.Gamma" "org.apache.commons.math.util.ContinuedFraction"
contain "org.apache.commons.math.special.Gamma" "org.apache.commons.math.special.Gamma.Gamma(0)"
reference "org.apache.commons.math.special.Gamma.logGamma(1)" "org.apache.commons.math.special.Gamma.lanczos"
reference "org.apache.commons.math.special.Gamma.logGamma(1)" "org.apache.commons.math.special.Gamma.HALF_LOG_2_PI"
contain "org.apache.commons.math.special.Gamma" "org.apache.commons.math.special.Gamma.logGamma(1)"
call "org.apache.commons.math.special.Gamma.regularizedGammaP(2)" "org.apache.commons.math.special.Gamma.regularizedGammaP(4)"
contain "org.apache.commons.math.special.Gamma" "org.apache.commons.math.special.Gamma.regularizedGammaP(2)"
call "org.apache.commons.math.special.Gamma.regularizedGammaP(4)" "org.apache.commons.math.special.Gamma.regularizedGammaQ(4)"
call "org.apache.commons.math.special.Gamma.regularizedGammaP(4)" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)"
call "org.apache.commons.math.special.Gamma.regularizedGammaP(4)" "org.apache.commons.math.special.Gamma.logGamma(1)"
contain "org.apache.commons.math.special.Gamma" "org.apache.commons.math.special.Gamma.regularizedGammaP(4)"
call "org.apache.commons.math.special.Gamma.regularizedGammaQ(2)" "org.apache.commons.math.special.Gamma.regularizedGammaQ(4)"
contain "org.apache.commons.math.special.Gamma" "org.apache.commons.math.special.Gamma.regularizedGammaQ(2)"
call "org.apache.commons.math.special.Gamma.regularizedGammaQ(4)" "org.apache.commons.math.special.Gamma.regularizedGammaP(4)"
call "org.apache.commons.math.special.Gamma.regularizedGammaQ(4)" "org.apache.commons.math.special.Gamma.1.{...}"
call "org.apache.commons.math.special.Gamma.regularizedGammaQ(4)" "org.apache.commons.math.util.ContinuedFraction.evaluate(3)"
call "org.apache.commons.math.special.Gamma.regularizedGammaQ(4)" "org.apache.commons.math.special.Gamma.logGamma(1)"
contain "org.apache.commons.math.special.Gamma" "org.apache.commons.math.special.Gamma.regularizedGammaQ(4)"
reference "org.apache.commons.math.special.Gamma.static {...}" "org.apache.commons.math.special.Gamma.lanczos"
reference "org.apache.commons.math.special.Gamma.static {...}" "org.apache.commons.math.special.Gamma.HALF_LOG_2_PI"
contain "org.apache.commons.math.special.Gamma" "org.apache.commons.math.special.Gamma.static {...}"
contain "org.apache.commons.math.special.Gamma" "org.apache.commons.math.special.Gamma.serialVersionUID"
contain "org.apache.commons.math.special.Gamma" "org.apache.commons.math.special.Gamma.DEFAULT_EPSILON"
reference "org.apache.commons.math.special.Gamma.lanczos" "double[]"
contain "org.apache.commons.math.special.Gamma" "org.apache.commons.math.special.Gamma.lanczos"
contain "org.apache.commons.math.special.Gamma" "org.apache.commons.math.special.Gamma.HALF_LOG_2_PI"
reference "org.apache.commons.math.analysis.SecantSolver" "org.apache.commons.math.MaxIterationsExceededException"
reference "org.apache.commons.math.analysis.SecantSolver" "org.apache.commons.math.analysis.UnivariateRealSolverImpl"
reference "org.apache.commons.math.analysis.SecantSolver" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.SecantSolver" "org.apache.commons.math.analysis.UnivariateRealFunction"
call "org.apache.commons.math.analysis.SecantSolver.SecantSolver(1)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)"
contain "org.apache.commons.math.analysis.SecantSolver" "org.apache.commons.math.analysis.SecantSolver.SecantSolver(1)"
call "org.apache.commons.math.analysis.SecantSolver.solve(3)" "org.apache.commons.math.analysis.SecantSolver.solve(2)"
contain "org.apache.commons.math.analysis.SecantSolver" "org.apache.commons.math.analysis.SecantSolver.solve(3)"
call "org.apache.commons.math.analysis.SecantSolver.solve(2)" "org.apache.commons.math.analysis.SecantSolver.clearResult(0)"
call "org.apache.commons.math.analysis.SecantSolver.solve(2)" "org.apache.commons.math.analysis.SecantSolver.verifyInterval(2)"
reference "org.apache.commons.math.analysis.SecantSolver.solve(2)" "org.apache.commons.math.analysis.SecantSolver.f"
call "org.apache.commons.math.analysis.SecantSolver.solve(2)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
reference "org.apache.commons.math.analysis.SecantSolver.solve(2)" "org.apache.commons.math.analysis.SecantSolver.maximalIterationCount"
reference "org.apache.commons.math.analysis.SecantSolver.solve(2)" "org.apache.commons.math.analysis.SecantSolver.functionValueAccuracy"
call "org.apache.commons.math.analysis.SecantSolver.solve(2)" "org.apache.commons.math.analysis.SecantSolver.setResult(2)"
reference "org.apache.commons.math.analysis.SecantSolver.solve(2)" "org.apache.commons.math.analysis.SecantSolver.result"
reference "org.apache.commons.math.analysis.SecantSolver.solve(2)" "org.apache.commons.math.analysis.SecantSolver.relativeAccuracy"
reference "org.apache.commons.math.analysis.SecantSolver.solve(2)" "org.apache.commons.math.analysis.SecantSolver.absoluteAccuracy"
call "org.apache.commons.math.analysis.SecantSolver.solve(2)" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)"
contain "org.apache.commons.math.analysis.SecantSolver" "org.apache.commons.math.analysis.SecantSolver.solve(2)"
contain "org.apache.commons.math.analysis.SecantSolver" "org.apache.commons.math.analysis.SecantSolver.serialVersionUID"
reference "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.Vector3D"
reference "org.apache.commons.math.geometry.RotationOrder.RotationOrder(4)" "org.apache.commons.math.geometry.RotationOrder.name"
reference "org.apache.commons.math.geometry.RotationOrder.RotationOrder(4)" "org.apache.commons.math.geometry.RotationOrder.a1"
reference "org.apache.commons.math.geometry.RotationOrder.RotationOrder(4)" "org.apache.commons.math.geometry.RotationOrder.a2"
reference "org.apache.commons.math.geometry.RotationOrder.RotationOrder(4)" "org.apache.commons.math.geometry.RotationOrder.a3"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.RotationOrder(4)"
reference "org.apache.commons.math.geometry.RotationOrder.toString(0)" "org.apache.commons.math.geometry.RotationOrder.name"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.toString(0)"
reference "org.apache.commons.math.geometry.RotationOrder.getA1(0)" "org.apache.commons.math.geometry.RotationOrder.a1"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.getA1(0)"
reference "org.apache.commons.math.geometry.RotationOrder.getA2(0)" "org.apache.commons.math.geometry.RotationOrder.a2"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.getA2(0)"
reference "org.apache.commons.math.geometry.RotationOrder.getA3(0)" "org.apache.commons.math.geometry.RotationOrder.a3"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.getA3(0)"
reference "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.Vector3D.plusI"
reference "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.Vector3D.plusJ"
reference "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.Vector3D.plusK"
call "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.RotationOrder.RotationOrder(4)"
reference "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.RotationOrder.XYZ"
reference "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.RotationOrder.XZY"
reference "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.RotationOrder.YXZ"
reference "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.RotationOrder.YZX"
reference "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.RotationOrder.ZXY"
reference "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.RotationOrder.ZYX"
reference "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.RotationOrder.XYX"
reference "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.RotationOrder.XZX"
reference "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.RotationOrder.YXY"
reference "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.RotationOrder.YZY"
reference "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.RotationOrder.ZXZ"
reference "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.RotationOrder.ZYZ"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.static {...}"
reference "org.apache.commons.math.geometry.RotationOrder.XYZ" "org.apache.commons.math.geometry.RotationOrder"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.XYZ"
reference "org.apache.commons.math.geometry.RotationOrder.XZY" "org.apache.commons.math.geometry.RotationOrder"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.XZY"
reference "org.apache.commons.math.geometry.RotationOrder.YXZ" "org.apache.commons.math.geometry.RotationOrder"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.YXZ"
reference "org.apache.commons.math.geometry.RotationOrder.YZX" "org.apache.commons.math.geometry.RotationOrder"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.YZX"
reference "org.apache.commons.math.geometry.RotationOrder.ZXY" "org.apache.commons.math.geometry.RotationOrder"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.ZXY"
reference "org.apache.commons.math.geometry.RotationOrder.ZYX" "org.apache.commons.math.geometry.RotationOrder"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.ZYX"
reference "org.apache.commons.math.geometry.RotationOrder.XYX" "org.apache.commons.math.geometry.RotationOrder"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.XYX"
reference "org.apache.commons.math.geometry.RotationOrder.XZX" "org.apache.commons.math.geometry.RotationOrder"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.XZX"
reference "org.apache.commons.math.geometry.RotationOrder.YXY" "org.apache.commons.math.geometry.RotationOrder"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.YXY"
reference "org.apache.commons.math.geometry.RotationOrder.YZY" "org.apache.commons.math.geometry.RotationOrder"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.YZY"
reference "org.apache.commons.math.geometry.RotationOrder.ZXZ" "org.apache.commons.math.geometry.RotationOrder"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.ZXZ"
reference "org.apache.commons.math.geometry.RotationOrder.ZYZ" "org.apache.commons.math.geometry.RotationOrder"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.ZYZ"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.name"
reference "org.apache.commons.math.geometry.RotationOrder.a1" "org.apache.commons.math.geometry.Vector3D"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.a1"
reference "org.apache.commons.math.geometry.RotationOrder.a2" "org.apache.commons.math.geometry.Vector3D"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.a2"
reference "org.apache.commons.math.geometry.RotationOrder.a3" "org.apache.commons.math.geometry.Vector3D"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.a3"
reference "org.apache.commons.math.stat.descriptive.moment.Mean" "org.apache.commons.math.stat.descriptive.moment.FirstMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Mean" "org.apache.commons.math.stat.descriptive.summary.Sum"
reference "org.apache.commons.math.stat.descriptive.moment.Mean" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic"
call "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.incMoment"
call "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.FirstMoment(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.moment"
contain "org.apache.commons.math.stat.descriptive.moment.Mean" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)"
call "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(1)" "org.apache.commons.math.stat.descriptive.moment.Mean.moment"
reference "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(1)" "org.apache.commons.math.stat.descriptive.moment.Mean.incMoment"
contain "org.apache.commons.math.stat.descriptive.moment.Mean" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(1)"
reference "org.apache.commons.math.stat.descriptive.moment.Mean.increment(1)" "org.apache.commons.math.stat.descriptive.moment.Mean.incMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Mean.increment(1)" "org.apache.commons.math.stat.descriptive.moment.Mean.moment"
call "org.apache.commons.math.stat.descriptive.moment.Mean.increment(1)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.increment(1)"
contain "org.apache.commons.math.stat.descriptive.moment.Mean" "org.apache.commons.math.stat.descriptive.moment.Mean.increment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.Mean.clear(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.incMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Mean.clear(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.moment"
call "org.apache.commons.math.stat.descriptive.moment.Mean.clear(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.clear(0)"
contain "org.apache.commons.math.stat.descriptive.moment.Mean" "org.apache.commons.math.stat.descriptive.moment.Mean.clear(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Mean.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.moment"
reference "org.apache.commons.math.stat.descriptive.moment.Mean.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.m1"
contain "org.apache.commons.math.stat.descriptive.moment.Mean" "org.apache.commons.math.stat.descriptive.moment.Mean.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Mean.getN(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.moment"
call "org.apache.commons.math.stat.descriptive.moment.Mean.getN(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.getN(0)"
contain "org.apache.commons.math.stat.descriptive.moment.Mean" "org.apache.commons.math.stat.descriptive.moment.Mean.getN(0)"
call "org.apache.commons.math.stat.descriptive.moment.Mean.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.Mean.test(3)"
call "org.apache.commons.math.stat.descriptive.moment.Mean.evaluate(3)" "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(0)"
call "org.apache.commons.math.stat.descriptive.moment.Mean.evaluate(3)" "org.apache.commons.math.stat.descriptive.summary.Sum.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.moment.Mean" "org.apache.commons.math.stat.descriptive.moment.Mean.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.moment.Mean" "org.apache.commons.math.stat.descriptive.moment.Mean.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.moment.Mean.moment" "org.apache.commons.math.stat.descriptive.moment.FirstMoment"
contain "org.apache.commons.math.stat.descriptive.moment.Mean" "org.apache.commons.math.stat.descriptive.moment.Mean.moment"
contain "org.apache.commons.math.stat.descriptive.moment.Mean" "org.apache.commons.math.stat.descriptive.moment.Mean.incMoment"
reference "org.apache.commons.math.ode.EulerIntegrator" "org.apache.commons.math.ode.EulerStepInterpolator"
reference "org.apache.commons.math.ode.EulerIntegrator" "double[]"
reference "org.apache.commons.math.ode.EulerIntegrator" "org.apache.commons.math.ode.RungeKuttaIntegrator"
reference "org.apache.commons.math.ode.EulerIntegrator.EulerIntegrator(1)" "org.apache.commons.math.ode.EulerIntegrator.c"
reference "org.apache.commons.math.ode.EulerIntegrator.EulerIntegrator(1)" "org.apache.commons.math.ode.EulerIntegrator.a"
reference "org.apache.commons.math.ode.EulerIntegrator.EulerIntegrator(1)" "org.apache.commons.math.ode.EulerIntegrator.b"
call "org.apache.commons.math.ode.EulerIntegrator.EulerIntegrator(1)" "org.apache.commons.math.ode.EulerStepInterpolator.EulerStepInterpolator(0)"
call "org.apache.commons.math.ode.EulerIntegrator.EulerIntegrator(1)" "org.apache.commons.math.ode.RungeKuttaIntegrator.RungeKuttaIntegrator(6)"
contain "org.apache.commons.math.ode.EulerIntegrator" "org.apache.commons.math.ode.EulerIntegrator.EulerIntegrator(1)"
contain "org.apache.commons.math.ode.EulerIntegrator" "org.apache.commons.math.ode.EulerIntegrator.getName(0)"
reference "org.apache.commons.math.ode.EulerIntegrator.static {...}" "org.apache.commons.math.ode.EulerIntegrator.c"
reference "org.apache.commons.math.ode.EulerIntegrator.static {...}" "org.apache.commons.math.ode.EulerIntegrator.a"
reference "org.apache.commons.math.ode.EulerIntegrator.static {...}" "org.apache.commons.math.ode.EulerIntegrator.b"
contain "org.apache.commons.math.ode.EulerIntegrator" "org.apache.commons.math.ode.EulerIntegrator.static {...}"
contain "org.apache.commons.math.ode.EulerIntegrator" "org.apache.commons.math.ode.EulerIntegrator.methodName"
reference "org.apache.commons.math.ode.EulerIntegrator.c" "double[]"
contain "org.apache.commons.math.ode.EulerIntegrator" "org.apache.commons.math.ode.EulerIntegrator.c"
reference "org.apache.commons.math.ode.EulerIntegrator.a" "double[][]"
contain "org.apache.commons.math.ode.EulerIntegrator" "org.apache.commons.math.ode.EulerIntegrator.a"
reference "org.apache.commons.math.ode.EulerIntegrator.b" "double[]"
contain "org.apache.commons.math.ode.EulerIntegrator" "org.apache.commons.math.ode.EulerIntegrator.b"
reference "org.apache.commons.math.complex.ComplexUtils" "org.apache.commons.math.complex.Complex"
reference "org.apache.commons.math.complex.ComplexUtils" "org.apache.commons.math.util.MathUtils"
contain "org.apache.commons.math.complex.ComplexUtils" "org.apache.commons.math.complex.ComplexUtils.ComplexUtils(0)"
call "org.apache.commons.math.complex.ComplexUtils.acos(1)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.ComplexUtils.acos(1)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.ComplexUtils.acos(1)" "org.apache.commons.math.complex.Complex.I"
call "org.apache.commons.math.complex.ComplexUtils.acos(1)" "org.apache.commons.math.complex.Complex.negate(0)"
call "org.apache.commons.math.complex.ComplexUtils.acos(1)" "org.apache.commons.math.complex.ComplexUtils.sqrt1z(1)"
call "org.apache.commons.math.complex.ComplexUtils.acos(1)" "org.apache.commons.math.complex.Complex.multiply(1)"
call "org.apache.commons.math.complex.ComplexUtils.acos(1)" "org.apache.commons.math.complex.Complex.add(1)"
call "org.apache.commons.math.complex.ComplexUtils.acos(1)" "org.apache.commons.math.complex.ComplexUtils.log(1)"
contain "org.apache.commons.math.complex.ComplexUtils" "org.apache.commons.math.complex.ComplexUtils.acos(1)"
call "org.apache.commons.math.complex.ComplexUtils.asin(1)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.ComplexUtils.asin(1)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.ComplexUtils.asin(1)" "org.apache.commons.math.complex.Complex.I"
call "org.apache.commons.math.complex.ComplexUtils.asin(1)" "org.apache.commons.math.complex.Complex.negate(0)"
call "org.apache.commons.math.complex.ComplexUtils.asin(1)" "org.apache.commons.math.complex.ComplexUtils.sqrt1z(1)"
call "org.apache.commons.math.complex.ComplexUtils.asin(1)" "org.apache.commons.math.complex.Complex.multiply(1)"
call "org.apache.commons.math.complex.ComplexUtils.asin(1)" "org.apache.commons.math.complex.Complex.add(1)"
call "org.apache.commons.math.complex.ComplexUtils.asin(1)" "org.apache.commons.math.complex.ComplexUtils.log(1)"
contain "org.apache.commons.math.complex.ComplexUtils" "org.apache.commons.math.complex.ComplexUtils.asin(1)"
call "org.apache.commons.math.complex.ComplexUtils.atan(1)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.ComplexUtils.atan(1)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.ComplexUtils.atan(1)" "org.apache.commons.math.complex.Complex.I"
call "org.apache.commons.math.complex.ComplexUtils.atan(1)" "org.apache.commons.math.complex.Complex.add(1)"
call "org.apache.commons.math.complex.ComplexUtils.atan(1)" "org.apache.commons.math.complex.Complex.subtract(1)"
call "org.apache.commons.math.complex.ComplexUtils.atan(1)" "org.apache.commons.math.complex.Complex.divide(1)"
call "org.apache.commons.math.complex.ComplexUtils.atan(1)" "org.apache.commons.math.complex.ComplexUtils.log(1)"
call "org.apache.commons.math.complex.ComplexUtils.atan(1)" "org.apache.commons.math.complex.Complex.multiply(1)"
call "org.apache.commons.math.complex.ComplexUtils.atan(1)" "org.apache.commons.math.complex.Complex.Complex(2)"
contain "org.apache.commons.math.complex.ComplexUtils" "org.apache.commons.math.complex.ComplexUtils.atan(1)"
call "org.apache.commons.math.complex.ComplexUtils.cos(1)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.ComplexUtils.cos(1)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexUtils.cos(1)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexUtils.cos(1)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
call "org.apache.commons.math.complex.ComplexUtils.cos(1)" "org.apache.commons.math.util.MathUtils.cosh(1)"
call "org.apache.commons.math.complex.ComplexUtils.cos(1)" "org.apache.commons.math.util.MathUtils.sinh(1)"
call "org.apache.commons.math.complex.ComplexUtils.cos(1)" "org.apache.commons.math.complex.Complex.Complex(2)"
contain "org.apache.commons.math.complex.ComplexUtils" "org.apache.commons.math.complex.ComplexUtils.cos(1)"
call "org.apache.commons.math.complex.ComplexUtils.cosh(1)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.ComplexUtils.cosh(1)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexUtils.cosh(1)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexUtils.cosh(1)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
call "org.apache.commons.math.complex.ComplexUtils.cosh(1)" "org.apache.commons.math.util.MathUtils.cosh(1)"
call "org.apache.commons.math.complex.ComplexUtils.cosh(1)" "org.apache.commons.math.util.MathUtils.sinh(1)"
call "org.apache.commons.math.complex.ComplexUtils.cosh(1)" "org.apache.commons.math.complex.Complex.Complex(2)"
contain "org.apache.commons.math.complex.ComplexUtils" "org.apache.commons.math.complex.ComplexUtils.cosh(1)"
call "org.apache.commons.math.complex.ComplexUtils.exp(1)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.ComplexUtils.exp(1)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexUtils.exp(1)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
call "org.apache.commons.math.complex.ComplexUtils.exp(1)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexUtils.exp(1)" "org.apache.commons.math.complex.Complex.Complex(2)"
contain "org.apache.commons.math.complex.ComplexUtils" "org.apache.commons.math.complex.ComplexUtils.exp(1)"
call "org.apache.commons.math.complex.ComplexUtils.log(1)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.ComplexUtils.log(1)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexUtils.log(1)" "org.apache.commons.math.complex.Complex.abs(0)"
call "org.apache.commons.math.complex.ComplexUtils.log(1)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
call "org.apache.commons.math.complex.ComplexUtils.log(1)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexUtils.log(1)" "org.apache.commons.math.complex.Complex.Complex(2)"
contain "org.apache.commons.math.complex.ComplexUtils" "org.apache.commons.math.complex.ComplexUtils.log(1)"
call "org.apache.commons.math.complex.ComplexUtils.polar2Complex(2)" "org.apache.commons.math.complex.Complex.Complex(2)"
contain "org.apache.commons.math.complex.ComplexUtils" "org.apache.commons.math.complex.ComplexUtils.polar2Complex(2)"
call "org.apache.commons.math.complex.ComplexUtils.pow(2)" "org.apache.commons.math.complex.ComplexUtils.log(1)"
call "org.apache.commons.math.complex.ComplexUtils.pow(2)" "org.apache.commons.math.complex.Complex.multiply(1)"
call "org.apache.commons.math.complex.ComplexUtils.pow(2)" "org.apache.commons.math.complex.ComplexUtils.exp(1)"
contain "org.apache.commons.math.complex.ComplexUtils" "org.apache.commons.math.complex.ComplexUtils.pow(2)"
call "org.apache.commons.math.complex.ComplexUtils.sin(1)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.ComplexUtils.sin(1)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexUtils.sin(1)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexUtils.sin(1)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
call "org.apache.commons.math.complex.ComplexUtils.sin(1)" "org.apache.commons.math.util.MathUtils.cosh(1)"
call "org.apache.commons.math.complex.ComplexUtils.sin(1)" "org.apache.commons.math.util.MathUtils.sinh(1)"
call "org.apache.commons.math.complex.ComplexUtils.sin(1)" "org.apache.commons.math.complex.Complex.Complex(2)"
contain "org.apache.commons.math.complex.ComplexUtils" "org.apache.commons.math.complex.ComplexUtils.sin(1)"
call "org.apache.commons.math.complex.ComplexUtils.sinh(1)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.ComplexUtils.sinh(1)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexUtils.sinh(1)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexUtils.sinh(1)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
call "org.apache.commons.math.complex.ComplexUtils.sinh(1)" "org.apache.commons.math.util.MathUtils.sinh(1)"
call "org.apache.commons.math.complex.ComplexUtils.sinh(1)" "org.apache.commons.math.util.MathUtils.cosh(1)"
call "org.apache.commons.math.complex.ComplexUtils.sinh(1)" "org.apache.commons.math.complex.Complex.Complex(2)"
contain "org.apache.commons.math.complex.ComplexUtils" "org.apache.commons.math.complex.ComplexUtils.sinh(1)"
call "org.apache.commons.math.complex.ComplexUtils.sqrt(1)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.ComplexUtils.sqrt(1)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexUtils.sqrt(1)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexUtils.sqrt(1)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
call "org.apache.commons.math.complex.ComplexUtils.sqrt(1)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexUtils.sqrt(1)" "org.apache.commons.math.complex.Complex.abs(0)"
call "org.apache.commons.math.complex.ComplexUtils.sqrt(1)" "org.apache.commons.math.util.MathUtils.indicator(1)"
contain "org.apache.commons.math.complex.ComplexUtils" "org.apache.commons.math.complex.ComplexUtils.sqrt(1)"
reference "org.apache.commons.math.complex.ComplexUtils.sqrt1z(1)" "org.apache.commons.math.complex.Complex.ONE"
call "org.apache.commons.math.complex.ComplexUtils.sqrt1z(1)" "org.apache.commons.math.complex.Complex.multiply(1)"
call "org.apache.commons.math.complex.ComplexUtils.sqrt1z(1)" "org.apache.commons.math.complex.Complex.subtract(1)"
call "org.apache.commons.math.complex.ComplexUtils.sqrt1z(1)" "org.apache.commons.math.complex.ComplexUtils.sqrt(1)"
contain "org.apache.commons.math.complex.ComplexUtils" "org.apache.commons.math.complex.ComplexUtils.sqrt1z(1)"
call "org.apache.commons.math.complex.ComplexUtils.tan(1)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.ComplexUtils.tan(1)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexUtils.tan(1)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexUtils.tan(1)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
call "org.apache.commons.math.complex.ComplexUtils.tan(1)" "org.apache.commons.math.util.MathUtils.cosh(1)"
call "org.apache.commons.math.complex.ComplexUtils.tan(1)" "org.apache.commons.math.util.MathUtils.sinh(1)"
call "org.apache.commons.math.complex.ComplexUtils.tan(1)" "org.apache.commons.math.complex.Complex.Complex(2)"
contain "org.apache.commons.math.complex.ComplexUtils" "org.apache.commons.math.complex.ComplexUtils.tan(1)"
call "org.apache.commons.math.complex.ComplexUtils.tanh(1)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.ComplexUtils.tanh(1)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexUtils.tanh(1)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexUtils.tanh(1)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
call "org.apache.commons.math.complex.ComplexUtils.tanh(1)" "org.apache.commons.math.util.MathUtils.cosh(1)"
call "org.apache.commons.math.complex.ComplexUtils.tanh(1)" "org.apache.commons.math.util.MathUtils.sinh(1)"
call "org.apache.commons.math.complex.ComplexUtils.tanh(1)" "org.apache.commons.math.complex.Complex.Complex(2)"
contain "org.apache.commons.math.complex.ComplexUtils" "org.apache.commons.math.complex.ComplexUtils.tanh(1)"
reference "org.apache.commons.math.stat.inference.TestFactory" "org.apache.commons.discovery.tools.DiscoverClass"
reference "org.apache.commons.math.stat.inference.TestFactory" "org.apache.commons.math.stat.inference.TestFactoryImpl"
contain "org.apache.commons.math.stat.inference.TestFactory" "org.apache.commons.math.stat.inference.TestFactory.TestFactory(0)"
call "org.apache.commons.math.stat.inference.TestFactory.newInstance(0)" "org.apache.commons.discovery.tools.DiscoverClass.DiscoverClass(0)"
reference "org.apache.commons.math.stat.inference.TestFactory.newInstance(0)" "org.apache.commons.math.stat.inference.TestFactory.class$org$apache$commons$math$stat$inference$TestFactory"
call "org.apache.commons.math.stat.inference.TestFactory.newInstance(0)" "org.apache.commons.math.stat.inference.TestFactory.class$(1)"
call "org.apache.commons.math.stat.inference.TestFactory.newInstance(0)" "org.apache.commons.discovery.tools.DiscoverClass.newInstance(2)"
call "org.apache.commons.math.stat.inference.TestFactory.newInstance(0)" "org.apache.commons.math.stat.inference.TestFactoryImpl.TestFactoryImpl(0)"
contain "org.apache.commons.math.stat.inference.TestFactory" "org.apache.commons.math.stat.inference.TestFactory.newInstance(0)"
contain "org.apache.commons.math.stat.inference.TestFactory" "org.apache.commons.math.stat.inference.TestFactory.createTTest(0)"
contain "org.apache.commons.math.stat.inference.TestFactory" "org.apache.commons.math.stat.inference.TestFactory.createChiSquareTest(0)"
contain "org.apache.commons.math.stat.inference.TestFactory" "org.apache.commons.math.stat.inference.TestFactory.class$(1)"
contain "org.apache.commons.math.stat.inference.TestFactory" "org.apache.commons.math.stat.inference.TestFactory.class$org$apache$commons$math$stat$inference$TestFactory"
reference "org.apache.commons.math.stat.descriptive.rank.Max" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic"
call "org.apache.commons.math.stat.descriptive.rank.Max.Max(0)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.rank.Max.Max(0)" "org.apache.commons.math.stat.descriptive.rank.Max.n"
reference "org.apache.commons.math.stat.descriptive.rank.Max.Max(0)" "org.apache.commons.math.stat.descriptive.rank.Max.value"
contain "org.apache.commons.math.stat.descriptive.rank.Max" "org.apache.commons.math.stat.descriptive.rank.Max.Max(0)"
reference "org.apache.commons.math.stat.descriptive.rank.Max.increment(1)" "org.apache.commons.math.stat.descriptive.rank.Max.value"
reference "org.apache.commons.math.stat.descriptive.rank.Max.increment(1)" "org.apache.commons.math.stat.descriptive.rank.Max.n"
contain "org.apache.commons.math.stat.descriptive.rank.Max" "org.apache.commons.math.stat.descriptive.rank.Max.increment(1)"
reference "org.apache.commons.math.stat.descriptive.rank.Max.clear(0)" "org.apache.commons.math.stat.descriptive.rank.Max.value"
reference "org.apache.commons.math.stat.descriptive.rank.Max.clear(0)" "org.apache.commons.math.stat.descriptive.rank.Max.n"
contain "org.apache.commons.math.stat.descriptive.rank.Max" "org.apache.commons.math.stat.descriptive.rank.Max.clear(0)"
reference "org.apache.commons.math.stat.descriptive.rank.Max.getResult(0)" "org.apache.commons.math.stat.descriptive.rank.Max.value"
contain "org.apache.commons.math.stat.descriptive.rank.Max" "org.apache.commons.math.stat.descriptive.rank.Max.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.rank.Max.getN(0)" "org.apache.commons.math.stat.descriptive.rank.Max.n"
contain "org.apache.commons.math.stat.descriptive.rank.Max" "org.apache.commons.math.stat.descriptive.rank.Max.getN(0)"
call "org.apache.commons.math.stat.descriptive.rank.Max.evaluate(3)" "org.apache.commons.math.stat.descriptive.rank.Max.test(3)"
contain "org.apache.commons.math.stat.descriptive.rank.Max" "org.apache.commons.math.stat.descriptive.rank.Max.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.rank.Max" "org.apache.commons.math.stat.descriptive.rank.Max.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.rank.Max" "org.apache.commons.math.stat.descriptive.rank.Max.n"
contain "org.apache.commons.math.stat.descriptive.rank.Max" "org.apache.commons.math.stat.descriptive.rank.Max.value"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.analysis.UnivariateRealFunction"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.FunctionEvaluationException"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.PolynomialFunctionNewtonForm(2)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.verifyInputArray(2)"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.PolynomialFunctionNewtonForm(2)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.a"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.PolynomialFunctionNewtonForm(2)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.c"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.PolynomialFunctionNewtonForm(2)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.coefficientsComputed"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.PolynomialFunctionNewtonForm(2)"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.value(1)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.a"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.value(1)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.c"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.value(1)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.evaluate(3)"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.value(1)"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.degree(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.c"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.degree(0)"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.getNewtonCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.a"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.getNewtonCoefficients(0)"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.getCenters(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.c"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.getCenters(0)"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.getCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.coefficientsComputed"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.getCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.computeCoefficients(0)"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.getCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.coefficients"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.getCoefficients(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.evaluate(3)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.verifyInputArray(2)"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.evaluate(3)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.computeCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.degree(0)"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.computeCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.coefficients"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.computeCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.a"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.computeCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.c"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.computeCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.coefficientsComputed"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.computeCoefficients(0)"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.verifyInputArray(2)"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.serialVersionUID"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.coefficients" "double[]"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.coefficients"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.a" "double[]"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.a"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.c" "double[]"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.c"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.coefficientsComputed"
reference "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.GammaDistributionImpl"
reference "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.AbstractContinuousDistribution"
reference "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.ChiSquaredDistribution"
reference "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.GammaDistribution"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.ChiSquaredDistributionImpl(1)" "org.apache.commons.math.distribution.GammaDistributionImpl.GammaDistributionImpl(2)"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.ChiSquaredDistributionImpl(1)" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.ChiSquaredDistributionImpl(2)"
contain "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.ChiSquaredDistributionImpl(1)"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.ChiSquaredDistributionImpl(2)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.AbstractContinuousDistribution(0)"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.ChiSquaredDistributionImpl(2)" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.setGamma(1)"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.ChiSquaredDistributionImpl(2)" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.setDegreesOfFreedom(1)"
contain "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.ChiSquaredDistributionImpl(2)"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.setDegreesOfFreedom(1)" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getGamma(0)"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.setDegreesOfFreedom(1)" "org.apache.commons.math.distribution.GammaDistribution.setAlpha(1)"
contain "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.setDegreesOfFreedom(1)"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getDegreesOfFreedom(0)" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getGamma(0)"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getDegreesOfFreedom(0)" "org.apache.commons.math.distribution.GammaDistribution.getAlpha(0)"
contain "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getDegreesOfFreedom(0)"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getGamma(0)"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.GammaDistribution.cumulativeProbability(1)"
contain "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.inverseCumulativeProbability(1)"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getDomainLowerBound(1)" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getGamma(0)"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getDomainLowerBound(1)" "org.apache.commons.math.distribution.GammaDistribution.getBeta(0)"
contain "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getDomainLowerBound(1)"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getDomainUpperBound(1)" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getDegreesOfFreedom(0)"
contain "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getDomainUpperBound(1)"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getInitialDomain(1)" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getDegreesOfFreedom(0)"
contain "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getInitialDomain(1)"
reference "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.setGamma(1)" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.gamma"
contain "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.setGamma(1)"
reference "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getGamma(0)" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.gamma"
contain "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getGamma(0)"
contain "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.serialVersionUID"
reference "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.gamma" "org.apache.commons.math.distribution.GammaDistribution"
contain "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.gamma"
reference "org.apache.commons.math.analysis.DividedDifferenceInterpolator" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm"
reference "org.apache.commons.math.analysis.DividedDifferenceInterpolator" "org.apache.commons.math.DuplicateSampleAbscissaException"
reference "org.apache.commons.math.analysis.DividedDifferenceInterpolator" "org.apache.commons.math.analysis.UnivariateRealInterpolator"
reference "org.apache.commons.math.analysis.DividedDifferenceInterpolator" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm"
contain "org.apache.commons.math.analysis.DividedDifferenceInterpolator" "org.apache.commons.math.analysis.DividedDifferenceInterpolator.DividedDifferenceInterpolator(0)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolator.interpolate(2)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.verifyInterpolationArray(2)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolator.interpolate(2)" "org.apache.commons.math.analysis.DividedDifferenceInterpolator.computeDividedDifference(2)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolator.interpolate(2)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.PolynomialFunctionNewtonForm(2)"
contain "org.apache.commons.math.analysis.DividedDifferenceInterpolator" "org.apache.commons.math.analysis.DividedDifferenceInterpolator.interpolate(2)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolator.computeDividedDifference(2)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.verifyInterpolationArray(2)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolator.computeDividedDifference(2)" "org.apache.commons.math.DuplicateSampleAbscissaException.DuplicateSampleAbscissaException(3)"
contain "org.apache.commons.math.analysis.DividedDifferenceInterpolator" "org.apache.commons.math.analysis.DividedDifferenceInterpolator.computeDividedDifference(2)"
contain "org.apache.commons.math.analysis.DividedDifferenceInterpolator" "org.apache.commons.math.analysis.DividedDifferenceInterpolator.serialVersionUID"
reference "org.apache.commons.math.stat.inference.TestFactoryImpl" "org.apache.commons.math.stat.inference.TTestImpl"
reference "org.apache.commons.math.stat.inference.TestFactoryImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl"
reference "org.apache.commons.math.stat.inference.TestFactoryImpl" "org.apache.commons.math.stat.inference.TestFactory"
call "org.apache.commons.math.stat.inference.TestFactoryImpl.TestFactoryImpl(0)" "org.apache.commons.math.stat.inference.TestFactory.TestFactory(0)"
contain "org.apache.commons.math.stat.inference.TestFactoryImpl" "org.apache.commons.math.stat.inference.TestFactoryImpl.TestFactoryImpl(0)"
call "org.apache.commons.math.stat.inference.TestFactoryImpl.createTTest(0)" "org.apache.commons.math.stat.inference.TTestImpl.TTestImpl(0)"
contain "org.apache.commons.math.stat.inference.TestFactoryImpl" "org.apache.commons.math.stat.inference.TestFactoryImpl.createTTest(0)"
call "org.apache.commons.math.stat.inference.TestFactoryImpl.createChiSquareTest(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.ChiSquareTestImpl(0)"
contain "org.apache.commons.math.stat.inference.TestFactoryImpl" "org.apache.commons.math.stat.inference.TestFactoryImpl.createChiSquareTest(0)"
reference "org.apache.commons.math.ode.SecondOrderIntegrator" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.SecondOrderIntegrator" "org.apache.commons.math.ode.IntegratorException"
contain "org.apache.commons.math.ode.SecondOrderIntegrator" "org.apache.commons.math.ode.SecondOrderIntegrator.getName(0)"
contain "org.apache.commons.math.ode.SecondOrderIntegrator" "org.apache.commons.math.ode.SecondOrderIntegrator.setStepHandler(1)"
contain "org.apache.commons.math.ode.SecondOrderIntegrator" "org.apache.commons.math.ode.SecondOrderIntegrator.getStepHandler(0)"
contain "org.apache.commons.math.ode.SecondOrderIntegrator" "org.apache.commons.math.ode.SecondOrderIntegrator.integrate(7)"
reference "org.apache.commons.math.random.JDKRandomGenerator" "org.apache.commons.math.random.RandomGenerator"
contain "org.apache.commons.math.random.JDKRandomGenerator" "org.apache.commons.math.random.JDKRandomGenerator.JDKRandomGenerator(0)"
contain "org.apache.commons.math.random.JDKRandomGenerator" "org.apache.commons.math.random.JDKRandomGenerator.serialVersionUID"
reference "org.apache.commons.math.distribution.ChiSquaredDistribution" "org.apache.commons.math.distribution.ContinuousDistribution"
contain "org.apache.commons.math.distribution.ChiSquaredDistribution" "org.apache.commons.math.distribution.ChiSquaredDistribution.setDegreesOfFreedom(1)"
contain "org.apache.commons.math.distribution.ChiSquaredDistribution" "org.apache.commons.math.distribution.ChiSquaredDistribution.getDegreesOfFreedom(0)"
reference "org.apache.commons.math.special.Beta" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.special.Beta" "org.apache.commons.math.util.ContinuedFraction"
reference "org.apache.commons.math.special.Beta" "org.apache.commons.math.special.Gamma"
contain "org.apache.commons.math.special.Beta" "org.apache.commons.math.special.Beta.Beta(0)"
call "org.apache.commons.math.special.Beta.regularizedBeta(3)" "org.apache.commons.math.special.Beta.regularizedBeta(5)"
contain "org.apache.commons.math.special.Beta" "org.apache.commons.math.special.Beta.regularizedBeta(3)"
call "org.apache.commons.math.special.Beta.regularizedBeta(4)" "org.apache.commons.math.special.Beta.regularizedBeta(5)"
contain "org.apache.commons.math.special.Beta" "org.apache.commons.math.special.Beta.regularizedBeta(4)"
call "org.apache.commons.math.special.Beta.regularizedBeta(4)" "org.apache.commons.math.special.Beta.regularizedBeta(5)"
contain "org.apache.commons.math.special.Beta" "org.apache.commons.math.special.Beta.regularizedBeta(4)"
call "org.apache.commons.math.special.Beta.regularizedBeta(5)" "org.apache.commons.math.special.Beta.regularizedBeta(5)"
call "org.apache.commons.math.special.Beta.regularizedBeta(5)" "org.apache.commons.math.special.Beta.1.{...}"
call "org.apache.commons.math.special.Beta.regularizedBeta(5)" "org.apache.commons.math.special.Beta.logBeta(4)"
call "org.apache.commons.math.special.Beta.regularizedBeta(5)" "org.apache.commons.math.util.ContinuedFraction.evaluate(3)"
contain "org.apache.commons.math.special.Beta" "org.apache.commons.math.special.Beta.regularizedBeta(5)"
call "org.apache.commons.math.special.Beta.logBeta(2)" "org.apache.commons.math.special.Beta.logBeta(4)"
contain "org.apache.commons.math.special.Beta" "org.apache.commons.math.special.Beta.logBeta(2)"
call "org.apache.commons.math.special.Beta.logBeta(4)" "org.apache.commons.math.special.Gamma.logGamma(1)"
contain "org.apache.commons.math.special.Beta" "org.apache.commons.math.special.Beta.logBeta(4)"
contain "org.apache.commons.math.special.Beta" "org.apache.commons.math.special.Beta.serialVersionUID"
contain "org.apache.commons.math.special.Beta" "org.apache.commons.math.special.Beta.DEFAULT_EPSILON"
contain "org.apache.commons.math.MessagesResources_fr" "org.apache.commons.math.MessagesResources_fr.MessagesResources_fr(0)"
reference "org.apache.commons.math.MessagesResources_fr.getContents(0)" "org.apache.commons.math.MessagesResources_fr.contents"
contain "org.apache.commons.math.MessagesResources_fr" "org.apache.commons.math.MessagesResources_fr.getContents(0)"
reference "org.apache.commons.math.MessagesResources_fr.static {...}" "org.apache.commons.math.MessagesResources_fr.contents"
contain "org.apache.commons.math.MessagesResources_fr" "org.apache.commons.math.MessagesResources_fr.static {...}"
contain "org.apache.commons.math.MessagesResources_fr" "org.apache.commons.math.MessagesResources_fr.contents"
reference "org.apache.commons.math.distribution.ContinuousDistribution" "org.apache.commons.math.distribution.Distribution"
reference "org.apache.commons.math.distribution.ContinuousDistribution" "org.apache.commons.math.MathException"
contain "org.apache.commons.math.distribution.ContinuousDistribution" "org.apache.commons.math.distribution.ContinuousDistribution.inverseCumulativeProbability(1)"
reference "org.apache.commons.math.transform.FastSineTransformer" "org.apache.commons.math.transform.FastFourierTransformer"
reference "org.apache.commons.math.transform.FastSineTransformer" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.transform.FastSineTransformer" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.transform.FastSineTransformer" "org.apache.commons.math.transform.FastSineTransformer.FastSineTransformer(0)"
call "org.apache.commons.math.transform.FastSineTransformer.transform(1)" "org.apache.commons.math.transform.FastSineTransformer.fst(1)"
contain "org.apache.commons.math.transform.FastSineTransformer" "org.apache.commons.math.transform.FastSineTransformer.transform(1)"
call "org.apache.commons.math.transform.FastSineTransformer.transform(4)" "org.apache.commons.math.transform.FastFourierTransformer.sample(4)"
call "org.apache.commons.math.transform.FastSineTransformer.transform(4)" "org.apache.commons.math.transform.FastSineTransformer.fst(1)"
contain "org.apache.commons.math.transform.FastSineTransformer" "org.apache.commons.math.transform.FastSineTransformer.transform(4)"
call "org.apache.commons.math.transform.FastSineTransformer.transform2(1)" "org.apache.commons.math.transform.FastSineTransformer.fst(1)"
call "org.apache.commons.math.transform.FastSineTransformer.transform2(1)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastSineTransformer" "org.apache.commons.math.transform.FastSineTransformer.transform2(1)"
call "org.apache.commons.math.transform.FastSineTransformer.transform2(4)" "org.apache.commons.math.transform.FastFourierTransformer.sample(4)"
call "org.apache.commons.math.transform.FastSineTransformer.transform2(4)" "org.apache.commons.math.transform.FastSineTransformer.fst(1)"
call "org.apache.commons.math.transform.FastSineTransformer.transform2(4)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastSineTransformer" "org.apache.commons.math.transform.FastSineTransformer.transform2(4)"
call "org.apache.commons.math.transform.FastSineTransformer.inversetransform(1)" "org.apache.commons.math.transform.FastSineTransformer.fst(1)"
call "org.apache.commons.math.transform.FastSineTransformer.inversetransform(1)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastSineTransformer" "org.apache.commons.math.transform.FastSineTransformer.inversetransform(1)"
call "org.apache.commons.math.transform.FastSineTransformer.inversetransform(4)" "org.apache.commons.math.transform.FastFourierTransformer.sample(4)"
call "org.apache.commons.math.transform.FastSineTransformer.inversetransform(4)" "org.apache.commons.math.transform.FastSineTransformer.fst(1)"
call "org.apache.commons.math.transform.FastSineTransformer.inversetransform(4)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastSineTransformer" "org.apache.commons.math.transform.FastSineTransformer.inversetransform(4)"
call "org.apache.commons.math.transform.FastSineTransformer.inversetransform2(1)" "org.apache.commons.math.transform.FastSineTransformer.transform2(1)"
contain "org.apache.commons.math.transform.FastSineTransformer" "org.apache.commons.math.transform.FastSineTransformer.inversetransform2(1)"
call "org.apache.commons.math.transform.FastSineTransformer.inversetransform2(4)" "org.apache.commons.math.transform.FastSineTransformer.transform2(4)"
contain "org.apache.commons.math.transform.FastSineTransformer" "org.apache.commons.math.transform.FastSineTransformer.inversetransform2(4)"
call "org.apache.commons.math.transform.FastSineTransformer.fst(1)" "org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(1)"
call "org.apache.commons.math.transform.FastSineTransformer.fst(1)" "org.apache.commons.math.transform.FastFourierTransformer.FastFourierTransformer(0)"
call "org.apache.commons.math.transform.FastSineTransformer.fst(1)" "org.apache.commons.math.transform.FastFourierTransformer.transform(1)"
call "org.apache.commons.math.transform.FastSineTransformer.fst(1)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.transform.FastSineTransformer.fst(1)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
contain "org.apache.commons.math.transform.FastSineTransformer" "org.apache.commons.math.transform.FastSineTransformer.fst(1)"
contain "org.apache.commons.math.transform.FastSineTransformer" "org.apache.commons.math.transform.FastSineTransformer.serialVersionUID"
reference "org.apache.commons.math.analysis.RiddersSolver" "org.apache.commons.math.MaxIterationsExceededException"
reference "org.apache.commons.math.analysis.RiddersSolver" "org.apache.commons.math.analysis.UnivariateRealSolverImpl"
reference "org.apache.commons.math.analysis.RiddersSolver" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.RiddersSolver" "org.apache.commons.math.analysis.UnivariateRealFunction"
reference "org.apache.commons.math.analysis.RiddersSolver" "org.apache.commons.math.util.MathUtils"
call "org.apache.commons.math.analysis.RiddersSolver.RiddersSolver(1)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)"
contain "org.apache.commons.math.analysis.RiddersSolver" "org.apache.commons.math.analysis.RiddersSolver.RiddersSolver(1)"
reference "org.apache.commons.math.analysis.RiddersSolver.solve(3)" "org.apache.commons.math.analysis.RiddersSolver.f"
call "org.apache.commons.math.analysis.RiddersSolver.solve(3)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.RiddersSolver.solve(3)" "org.apache.commons.math.analysis.RiddersSolver.verifyBracketing(3)"
call "org.apache.commons.math.analysis.RiddersSolver.solve(3)" "org.apache.commons.math.analysis.RiddersSolver.verifySequence(3)"
call "org.apache.commons.math.analysis.RiddersSolver.solve(3)" "org.apache.commons.math.analysis.RiddersSolver.isBracketing(3)"
call "org.apache.commons.math.analysis.RiddersSolver.solve(3)" "org.apache.commons.math.analysis.RiddersSolver.solve(2)"
contain "org.apache.commons.math.analysis.RiddersSolver" "org.apache.commons.math.analysis.RiddersSolver.solve(3)"
reference "org.apache.commons.math.analysis.RiddersSolver.solve(2)" "org.apache.commons.math.analysis.RiddersSolver.f"
call "org.apache.commons.math.analysis.RiddersSolver.solve(2)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.RiddersSolver.solve(2)" "org.apache.commons.math.analysis.RiddersSolver.verifyBracketing(3)"
reference "org.apache.commons.math.analysis.RiddersSolver.solve(2)" "org.apache.commons.math.analysis.RiddersSolver.maximalIterationCount"
reference "org.apache.commons.math.analysis.RiddersSolver.solve(2)" "org.apache.commons.math.analysis.RiddersSolver.functionValueAccuracy"
call "org.apache.commons.math.analysis.RiddersSolver.solve(2)" "org.apache.commons.math.analysis.RiddersSolver.setResult(2)"
reference "org.apache.commons.math.analysis.RiddersSolver.solve(2)" "org.apache.commons.math.analysis.RiddersSolver.result"
call "org.apache.commons.math.analysis.RiddersSolver.solve(2)" "org.apache.commons.math.util.MathUtils.sign(1)"
reference "org.apache.commons.math.analysis.RiddersSolver.solve(2)" "org.apache.commons.math.analysis.RiddersSolver.relativeAccuracy"
reference "org.apache.commons.math.analysis.RiddersSolver.solve(2)" "org.apache.commons.math.analysis.RiddersSolver.absoluteAccuracy"
call "org.apache.commons.math.analysis.RiddersSolver.solve(2)" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)"
contain "org.apache.commons.math.analysis.RiddersSolver" "org.apache.commons.math.analysis.RiddersSolver.solve(2)"
contain "org.apache.commons.math.analysis.RiddersSolver" "org.apache.commons.math.analysis.RiddersSolver.serialVersionUID"
reference "org.apache.commons.math.distribution.PoissonDistribution" "org.apache.commons.math.distribution.IntegerDistribution"
reference "org.apache.commons.math.distribution.PoissonDistribution" "org.apache.commons.math.MathException"
contain "org.apache.commons.math.distribution.PoissonDistribution" "org.apache.commons.math.distribution.PoissonDistribution.getMean(0)"
contain "org.apache.commons.math.distribution.PoissonDistribution" "org.apache.commons.math.distribution.PoissonDistribution.setMean(1)"
contain "org.apache.commons.math.distribution.PoissonDistribution" "org.apache.commons.math.distribution.PoissonDistribution.normalApproximateProbability(1)"
reference "org.apache.commons.math.distribution.PascalDistribution" "org.apache.commons.math.distribution.IntegerDistribution"
contain "org.apache.commons.math.distribution.PascalDistribution" "org.apache.commons.math.distribution.PascalDistribution.getNumberOfSuccesses(0)"
contain "org.apache.commons.math.distribution.PascalDistribution" "org.apache.commons.math.distribution.PascalDistribution.getProbabilityOfSuccess(0)"
contain "org.apache.commons.math.distribution.PascalDistribution" "org.apache.commons.math.distribution.PascalDistribution.setNumberOfSuccesses(1)"
contain "org.apache.commons.math.distribution.PascalDistribution" "org.apache.commons.math.distribution.PascalDistribution.setProbabilityOfSuccess(1)"
reference "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.MatrixIndexException"
reference "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.InvalidMatrixException"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.copy(0)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.add(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.scalarAdd(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.scalarMultiply(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.preMultiply(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.getData(0)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.getSubMatrix(4)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.getSubMatrix(2)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.getRowMatrix(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.getColumnMatrix(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.getRow(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.getColumn(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.inverse(0)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.getDeterminant(0)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.isSquare(0)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.isSingular(0)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.getTrace(0)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.operate(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.preMultiply(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.solve(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.solve(1)"
reference "org.apache.commons.math.util.ContinuedFraction" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.util.ContinuedFraction" "org.apache.commons.math.MaxIterationsExceededException"
reference "org.apache.commons.math.util.ContinuedFraction" "org.apache.commons.math.MathException"
contain "org.apache.commons.math.util.ContinuedFraction" "org.apache.commons.math.util.ContinuedFraction.ContinuedFraction(0)"
contain "org.apache.commons.math.util.ContinuedFraction" "org.apache.commons.math.util.ContinuedFraction.getA(2)"
contain "org.apache.commons.math.util.ContinuedFraction" "org.apache.commons.math.util.ContinuedFraction.getB(2)"
call "org.apache.commons.math.util.ContinuedFraction.evaluate(1)" "org.apache.commons.math.util.ContinuedFraction.evaluate(3)"
contain "org.apache.commons.math.util.ContinuedFraction" "org.apache.commons.math.util.ContinuedFraction.evaluate(1)"
call "org.apache.commons.math.util.ContinuedFraction.evaluate(2)" "org.apache.commons.math.util.ContinuedFraction.evaluate(3)"
contain "org.apache.commons.math.util.ContinuedFraction" "org.apache.commons.math.util.ContinuedFraction.evaluate(2)"
call "org.apache.commons.math.util.ContinuedFraction.evaluate(2)" "org.apache.commons.math.util.ContinuedFraction.evaluate(3)"
contain "org.apache.commons.math.util.ContinuedFraction" "org.apache.commons.math.util.ContinuedFraction.evaluate(2)"
call "org.apache.commons.math.util.ContinuedFraction.evaluate(3)" "org.apache.commons.math.util.ContinuedFraction.getA(2)"
call "org.apache.commons.math.util.ContinuedFraction.evaluate(3)" "org.apache.commons.math.util.ContinuedFraction.getB(2)"
call "org.apache.commons.math.util.ContinuedFraction.evaluate(3)" "org.apache.commons.math.ConvergenceException.ConvergenceException(2)"
call "org.apache.commons.math.util.ContinuedFraction.evaluate(3)" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(3)"
contain "org.apache.commons.math.util.ContinuedFraction" "org.apache.commons.math.util.ContinuedFraction.evaluate(3)"
contain "org.apache.commons.math.util.ContinuedFraction" "org.apache.commons.math.util.ContinuedFraction.serialVersionUID"
contain "org.apache.commons.math.util.ContinuedFraction" "org.apache.commons.math.util.ContinuedFraction.DEFAULT_EPSILON"
contain "org.apache.commons.math.random.RandomGenerator" "org.apache.commons.math.random.RandomGenerator.setSeed(1)"
contain "org.apache.commons.math.random.RandomGenerator" "org.apache.commons.math.random.RandomGenerator.nextBytes(1)"
contain "org.apache.commons.math.random.RandomGenerator" "org.apache.commons.math.random.RandomGenerator.nextInt(0)"
contain "org.apache.commons.math.random.RandomGenerator" "org.apache.commons.math.random.RandomGenerator.nextInt(1)"
contain "org.apache.commons.math.random.RandomGenerator" "org.apache.commons.math.random.RandomGenerator.nextLong(0)"
contain "org.apache.commons.math.random.RandomGenerator" "org.apache.commons.math.random.RandomGenerator.nextBoolean(0)"
contain "org.apache.commons.math.random.RandomGenerator" "org.apache.commons.math.random.RandomGenerator.nextFloat(0)"
contain "org.apache.commons.math.random.RandomGenerator" "org.apache.commons.math.random.RandomGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.RandomGenerator" "org.apache.commons.math.random.RandomGenerator.nextGaussian(0)"
reference "org.apache.commons.math.MathConfigurationException" "org.apache.commons.math.MathException"
call "org.apache.commons.math.MathConfigurationException.MathConfigurationException(0)" "org.apache.commons.math.MathException.MathException(0)"
contain "org.apache.commons.math.MathConfigurationException" "org.apache.commons.math.MathConfigurationException.MathConfigurationException(0)"
call "org.apache.commons.math.MathConfigurationException.MathConfigurationException(1)" "org.apache.commons.math.MathException.MathException(1)"
contain "org.apache.commons.math.MathConfigurationException" "org.apache.commons.math.MathConfigurationException.MathConfigurationException(1)"
call "org.apache.commons.math.MathConfigurationException.MathConfigurationException(2)" "org.apache.commons.math.MathException.MathException(2)"
contain "org.apache.commons.math.MathConfigurationException" "org.apache.commons.math.MathConfigurationException.MathConfigurationException(2)"
call "org.apache.commons.math.MathConfigurationException.MathConfigurationException(2)" "org.apache.commons.math.MathException.MathException(2)"
contain "org.apache.commons.math.MathConfigurationException" "org.apache.commons.math.MathConfigurationException.MathConfigurationException(2)"
call "org.apache.commons.math.MathConfigurationException.MathConfigurationException(1)" "org.apache.commons.math.MathException.MathException(1)"
contain "org.apache.commons.math.MathConfigurationException" "org.apache.commons.math.MathConfigurationException.MathConfigurationException(1)"
call "org.apache.commons.math.MathConfigurationException.MathConfigurationException(3)" "org.apache.commons.math.MathException.MathException(3)"
contain "org.apache.commons.math.MathConfigurationException" "org.apache.commons.math.MathConfigurationException.MathConfigurationException(3)"
contain "org.apache.commons.math.MathConfigurationException" "org.apache.commons.math.MathConfigurationException.serialVersionUID"
reference "org.apache.commons.math.ode.DummyStepInterpolator" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.DummyStepInterpolator" "org.apache.commons.math.ode.AbstractStepInterpolator"
call "org.apache.commons.math.ode.DummyStepInterpolator.DummyStepInterpolator(0)" "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(0)"
contain "org.apache.commons.math.ode.DummyStepInterpolator" "org.apache.commons.math.ode.DummyStepInterpolator.DummyStepInterpolator(0)"
call "org.apache.commons.math.ode.DummyStepInterpolator.DummyStepInterpolator(2)" "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(2)"
contain "org.apache.commons.math.ode.DummyStepInterpolator" "org.apache.commons.math.ode.DummyStepInterpolator.DummyStepInterpolator(2)"
call "org.apache.commons.math.ode.DummyStepInterpolator.DummyStepInterpolator(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(1)"
contain "org.apache.commons.math.ode.DummyStepInterpolator" "org.apache.commons.math.ode.DummyStepInterpolator.DummyStepInterpolator(1)"
contain "org.apache.commons.math.ode.DummyStepInterpolator" "org.apache.commons.math.ode.DummyStepInterpolator.computeInterpolatedState(2)"
call "org.apache.commons.math.ode.DummyStepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.DummyStepInterpolator.writeBaseExternal(1)"
contain "org.apache.commons.math.ode.DummyStepInterpolator" "org.apache.commons.math.ode.DummyStepInterpolator.writeExternal(1)"
call "org.apache.commons.math.ode.DummyStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.DummyStepInterpolator.readBaseExternal(1)"
call "org.apache.commons.math.ode.DummyStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.DummyStepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.DummyStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.DerivativeException.getMessage(0)"
contain "org.apache.commons.math.ode.DummyStepInterpolator" "org.apache.commons.math.ode.DummyStepInterpolator.readExternal(1)"
contain "org.apache.commons.math.ode.DummyStepInterpolator" "org.apache.commons.math.ode.DummyStepInterpolator.serialVersionUID"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction" "org.apache.commons.math.analysis.PolynomialFunction"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction" "org.apache.commons.math.ArgumentOutsideDomainException"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction" "org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.PolynomialSplineFunction(2)" "org.apache.commons.math.analysis.PolynomialSplineFunction.polynomials"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.PolynomialSplineFunction(2)" "org.apache.commons.math.analysis.PolynomialSplineFunction.n"
call "org.apache.commons.math.analysis.PolynomialSplineFunction.PolynomialSplineFunction(2)" "org.apache.commons.math.analysis.PolynomialSplineFunction.isStrictlyIncreasing(1)"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.PolynomialSplineFunction(2)" "org.apache.commons.math.analysis.PolynomialSplineFunction.knots"
contain "org.apache.commons.math.analysis.PolynomialSplineFunction" "org.apache.commons.math.analysis.PolynomialSplineFunction.PolynomialSplineFunction(2)"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.value(1)" "org.apache.commons.math.analysis.PolynomialSplineFunction.knots"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.value(1)" "org.apache.commons.math.analysis.PolynomialSplineFunction.n"
call "org.apache.commons.math.analysis.PolynomialSplineFunction.value(1)" "org.apache.commons.math.ArgumentOutsideDomainException.ArgumentOutsideDomainException(3)"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.value(1)" "org.apache.commons.math.analysis.PolynomialSplineFunction.polynomials"
call "org.apache.commons.math.analysis.PolynomialSplineFunction.value(1)" "org.apache.commons.math.analysis.PolynomialFunction.value(1)"
contain "org.apache.commons.math.analysis.PolynomialSplineFunction" "org.apache.commons.math.analysis.PolynomialSplineFunction.value(1)"
call "org.apache.commons.math.analysis.PolynomialSplineFunction.derivative(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.polynomialSplineDerivative(0)"
contain "org.apache.commons.math.analysis.PolynomialSplineFunction" "org.apache.commons.math.analysis.PolynomialSplineFunction.derivative(0)"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.polynomialSplineDerivative(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.n"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.polynomialSplineDerivative(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.polynomials"
call "org.apache.commons.math.analysis.PolynomialSplineFunction.polynomialSplineDerivative(0)" "org.apache.commons.math.analysis.PolynomialFunction.polynomialDerivative(0)"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.polynomialSplineDerivative(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.knots"
call "org.apache.commons.math.analysis.PolynomialSplineFunction.polynomialSplineDerivative(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.PolynomialSplineFunction(2)"
contain "org.apache.commons.math.analysis.PolynomialSplineFunction" "org.apache.commons.math.analysis.PolynomialSplineFunction.polynomialSplineDerivative(0)"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.getN(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.n"
contain "org.apache.commons.math.analysis.PolynomialSplineFunction" "org.apache.commons.math.analysis.PolynomialSplineFunction.getN(0)"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.getPolynomials(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.n"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.getPolynomials(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.polynomials"
contain "org.apache.commons.math.analysis.PolynomialSplineFunction" "org.apache.commons.math.analysis.PolynomialSplineFunction.getPolynomials(0)"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.getKnots(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.n"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.getKnots(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.knots"
contain "org.apache.commons.math.analysis.PolynomialSplineFunction" "org.apache.commons.math.analysis.PolynomialSplineFunction.getKnots(0)"
contain "org.apache.commons.math.analysis.PolynomialSplineFunction" "org.apache.commons.math.analysis.PolynomialSplineFunction.isStrictlyIncreasing(1)"
contain "org.apache.commons.math.analysis.PolynomialSplineFunction" "org.apache.commons.math.analysis.PolynomialSplineFunction.serialVersionUID"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.knots" "double[]"
contain "org.apache.commons.math.analysis.PolynomialSplineFunction" "org.apache.commons.math.analysis.PolynomialSplineFunction.knots"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.polynomials" "org.apache.commons.math.analysis.PolynomialFunction[]"
contain "org.apache.commons.math.analysis.PolynomialSplineFunction" "org.apache.commons.math.analysis.PolynomialSplineFunction.polynomials"
contain "org.apache.commons.math.analysis.PolynomialSplineFunction" "org.apache.commons.math.analysis.PolynomialSplineFunction.n"
reference "org.apache.commons.math.ode.EulerStepInterpolator" "org.apache.commons.math.ode.RungeKuttaStepInterpolator"
reference "org.apache.commons.math.ode.EulerStepInterpolator" "org.apache.commons.math.ode.DerivativeException"
call "org.apache.commons.math.ode.EulerStepInterpolator.EulerStepInterpolator(0)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(0)"
contain "org.apache.commons.math.ode.EulerStepInterpolator" "org.apache.commons.math.ode.EulerStepInterpolator.EulerStepInterpolator(0)"
call "org.apache.commons.math.ode.EulerStepInterpolator.EulerStepInterpolator(1)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(1)"
contain "org.apache.commons.math.ode.EulerStepInterpolator" "org.apache.commons.math.ode.EulerStepInterpolator.EulerStepInterpolator(1)"
call "org.apache.commons.math.ode.EulerStepInterpolator.clone(0)" "org.apache.commons.math.ode.EulerStepInterpolator.EulerStepInterpolator(1)"
contain "org.apache.commons.math.ode.EulerStepInterpolator" "org.apache.commons.math.ode.EulerStepInterpolator.clone(0)"
reference "org.apache.commons.math.ode.EulerStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.EulerStepInterpolator.interpolatedState"
reference "org.apache.commons.math.ode.EulerStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.EulerStepInterpolator.currentState"
reference "org.apache.commons.math.ode.EulerStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.EulerStepInterpolator.yDotK"
contain "org.apache.commons.math.ode.EulerStepInterpolator" "org.apache.commons.math.ode.EulerStepInterpolator.computeInterpolatedState(2)"
contain "org.apache.commons.math.ode.EulerStepInterpolator" "org.apache.commons.math.ode.EulerStepInterpolator.serialVersionUID"
reference "org.apache.commons.math.analysis.SimpsonIntegrator" "org.apache.commons.math.analysis.TrapezoidIntegrator"
reference "org.apache.commons.math.analysis.SimpsonIntegrator" "org.apache.commons.math.MaxIterationsExceededException"
reference "org.apache.commons.math.analysis.SimpsonIntegrator" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl"
reference "org.apache.commons.math.analysis.SimpsonIntegrator" "org.apache.commons.math.FunctionEvaluationException"
call "org.apache.commons.math.analysis.SimpsonIntegrator.SimpsonIntegrator(1)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.UnivariateRealIntegratorImpl(2)"
contain "org.apache.commons.math.analysis.SimpsonIntegrator" "org.apache.commons.math.analysis.SimpsonIntegrator.SimpsonIntegrator(1)"
call "org.apache.commons.math.analysis.SimpsonIntegrator.integrate(2)" "org.apache.commons.math.analysis.SimpsonIntegrator.clearResult(0)"
call "org.apache.commons.math.analysis.SimpsonIntegrator.integrate(2)" "org.apache.commons.math.analysis.SimpsonIntegrator.verifyInterval(2)"
call "org.apache.commons.math.analysis.SimpsonIntegrator.integrate(2)" "org.apache.commons.math.analysis.SimpsonIntegrator.verifyIterationCount(0)"
reference "org.apache.commons.math.analysis.SimpsonIntegrator.integrate(2)" "org.apache.commons.math.analysis.SimpsonIntegrator.f"
call "org.apache.commons.math.analysis.SimpsonIntegrator.integrate(2)" "org.apache.commons.math.analysis.TrapezoidIntegrator.TrapezoidIntegrator(1)"
reference "org.apache.commons.math.analysis.SimpsonIntegrator.integrate(2)" "org.apache.commons.math.analysis.SimpsonIntegrator.minimalIterationCount"
call "org.apache.commons.math.analysis.SimpsonIntegrator.integrate(2)" "org.apache.commons.math.analysis.TrapezoidIntegrator.stage(3)"
call "org.apache.commons.math.analysis.SimpsonIntegrator.integrate(2)" "org.apache.commons.math.analysis.SimpsonIntegrator.setResult(2)"
reference "org.apache.commons.math.analysis.SimpsonIntegrator.integrate(2)" "org.apache.commons.math.analysis.SimpsonIntegrator.result"
reference "org.apache.commons.math.analysis.SimpsonIntegrator.integrate(2)" "org.apache.commons.math.analysis.SimpsonIntegrator.maximalIterationCount"
reference "org.apache.commons.math.analysis.SimpsonIntegrator.integrate(2)" "org.apache.commons.math.analysis.SimpsonIntegrator.relativeAccuracy"
call "org.apache.commons.math.analysis.SimpsonIntegrator.integrate(2)" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)"
contain "org.apache.commons.math.analysis.SimpsonIntegrator" "org.apache.commons.math.analysis.SimpsonIntegrator.integrate(2)"
call "org.apache.commons.math.analysis.SimpsonIntegrator.verifyIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.verifyIterationCount(0)"
reference "org.apache.commons.math.analysis.SimpsonIntegrator.verifyIterationCount(0)" "org.apache.commons.math.analysis.SimpsonIntegrator.maximalIterationCount"
contain "org.apache.commons.math.analysis.SimpsonIntegrator" "org.apache.commons.math.analysis.SimpsonIntegrator.verifyIterationCount(0)"
contain "org.apache.commons.math.analysis.SimpsonIntegrator" "org.apache.commons.math.analysis.SimpsonIntegrator.serialVersionUID"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtils" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtils" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtils" "org.apache.commons.math.analysis.UnivariateRealSolverFactory"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtils" "org.apache.commons.math.analysis.UnivariateRealSolver"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtils" "org.apache.commons.math.analysis.UnivariateRealFunction"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtils" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.UnivariateRealSolverUtils(0)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(3)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.setup(1)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(3)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.factory"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(3)" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newDefaultSolver(1)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(3)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtils" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(3)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(4)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.setup(1)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(4)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.factory"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(4)" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newDefaultSolver(1)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(4)" "org.apache.commons.math.analysis.UnivariateRealSolver.setAbsoluteAccuracy(1)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(4)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtils" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(4)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket(4)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket(5)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtils" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket(4)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket(5)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket(5)" "org.apache.commons.math.ConvergenceException.ConvergenceException(2)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtils" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket(5)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtils" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.midpoint(2)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtils.setup(1)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.factory"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtils.setup(1)" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newInstance(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtils" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.setup(1)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtils.static {...}" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.factory"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtils" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.static {...}"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtils.factory" "org.apache.commons.math.analysis.UnivariateRealSolverFactory"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtils" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.factory"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.ArrayDataAdapter(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter.DataAdapter(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.ArrayDataAdapter(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.this$0"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.ArrayDataAdapter(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.inputArray"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.ArrayDataAdapter(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.computeStats(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.this$0"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.computeStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance(0)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.computeStats(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.access$302(2)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.computeStats(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.inputArray"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.computeStats(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.access$300(1)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.computeStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.computeStats(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.computeBinStats(2)" "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.inputArray"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.computeBinStats(2)" "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.this$0"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.computeBinStats(2)" "org.apache.commons.math.random.EmpiricalDistributionImpl.access$200(1)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.computeBinStats(2)" "org.apache.commons.math.random.EmpiricalDistributionImpl.access$100(4)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.computeBinStats(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.computeBinStats(2)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.inputArray" "double[]"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.inputArray"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.this$0" "org.apache.commons.math.random.EmpiricalDistributionImpl"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.this$0"
reference "org.apache.commons.math.ode.RungeKuttaStepInterpolator" "double[][]"
reference "org.apache.commons.math.ode.RungeKuttaStepInterpolator" "double[]"
reference "org.apache.commons.math.ode.RungeKuttaStepInterpolator" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.RungeKuttaStepInterpolator" "org.apache.commons.math.ode.AbstractStepInterpolator"
call "org.apache.commons.math.ode.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(0)" "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(0)"
reference "org.apache.commons.math.ode.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(0)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.yDotK"
reference "org.apache.commons.math.ode.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(0)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.equations"
contain "org.apache.commons.math.ode.RungeKuttaStepInterpolator" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(0)"
call "org.apache.commons.math.ode.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(1)"
reference "org.apache.commons.math.ode.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(1)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.currentState"
reference "org.apache.commons.math.ode.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(1)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.yDotK"
reference "org.apache.commons.math.ode.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(1)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.equations"
contain "org.apache.commons.math.ode.RungeKuttaStepInterpolator" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(1)"
call "org.apache.commons.math.ode.RungeKuttaStepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.reinitialize(2)"
reference "org.apache.commons.math.ode.RungeKuttaStepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.yDotK"
reference "org.apache.commons.math.ode.RungeKuttaStepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.equations"
contain "org.apache.commons.math.ode.RungeKuttaStepInterpolator" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.reinitialize(4)"
call "org.apache.commons.math.ode.RungeKuttaStepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.writeBaseExternal(1)"
reference "org.apache.commons.math.ode.RungeKuttaStepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.yDotK"
reference "org.apache.commons.math.ode.RungeKuttaStepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.currentState"
contain "org.apache.commons.math.ode.RungeKuttaStepInterpolator" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.writeExternal(1)"
call "org.apache.commons.math.ode.RungeKuttaStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.readBaseExternal(1)"
reference "org.apache.commons.math.ode.RungeKuttaStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.yDotK"
reference "org.apache.commons.math.ode.RungeKuttaStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.currentState"
reference "org.apache.commons.math.ode.RungeKuttaStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.equations"
call "org.apache.commons.math.ode.RungeKuttaStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.RungeKuttaStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.DerivativeException.getMessage(0)"
contain "org.apache.commons.math.ode.RungeKuttaStepInterpolator" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.readExternal(1)"
reference "org.apache.commons.math.ode.RungeKuttaStepInterpolator.yDotK" "double[][]"
contain "org.apache.commons.math.ode.RungeKuttaStepInterpolator" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.yDotK"
reference "org.apache.commons.math.ode.RungeKuttaStepInterpolator.equations" "org.apache.commons.math.ode.FirstOrderDifferentialEquations"
contain "org.apache.commons.math.ode.RungeKuttaStepInterpolator" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.equations"
reference "org.apache.commons.math.ode.HighamHall54Integrator" "org.apache.commons.math.ode.HighamHall54StepInterpolator"
reference "org.apache.commons.math.ode.HighamHall54Integrator" "double[]"
reference "org.apache.commons.math.ode.HighamHall54Integrator" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator"
reference "org.apache.commons.math.ode.HighamHall54Integrator.HighamHall54Integrator(4)" "org.apache.commons.math.ode.HighamHall54Integrator.c"
reference "org.apache.commons.math.ode.HighamHall54Integrator.HighamHall54Integrator(4)" "org.apache.commons.math.ode.HighamHall54Integrator.a"
reference "org.apache.commons.math.ode.HighamHall54Integrator.HighamHall54Integrator(4)" "org.apache.commons.math.ode.HighamHall54Integrator.b"
call "org.apache.commons.math.ode.HighamHall54Integrator.HighamHall54Integrator(4)" "org.apache.commons.math.ode.HighamHall54StepInterpolator.HighamHall54StepInterpolator(0)"
call "org.apache.commons.math.ode.HighamHall54Integrator.HighamHall54Integrator(4)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.RungeKuttaFehlbergIntegrator(9)"
contain "org.apache.commons.math.ode.HighamHall54Integrator" "org.apache.commons.math.ode.HighamHall54Integrator.HighamHall54Integrator(4)"
reference "org.apache.commons.math.ode.HighamHall54Integrator.HighamHall54Integrator(4)" "org.apache.commons.math.ode.HighamHall54Integrator.c"
reference "org.apache.commons.math.ode.HighamHall54Integrator.HighamHall54Integrator(4)" "org.apache.commons.math.ode.HighamHall54Integrator.a"
reference "org.apache.commons.math.ode.HighamHall54Integrator.HighamHall54Integrator(4)" "org.apache.commons.math.ode.HighamHall54Integrator.b"
call "org.apache.commons.math.ode.HighamHall54Integrator.HighamHall54Integrator(4)" "org.apache.commons.math.ode.HighamHall54StepInterpolator.HighamHall54StepInterpolator(0)"
call "org.apache.commons.math.ode.HighamHall54Integrator.HighamHall54Integrator(4)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.RungeKuttaFehlbergIntegrator(9)"
contain "org.apache.commons.math.ode.HighamHall54Integrator" "org.apache.commons.math.ode.HighamHall54Integrator.HighamHall54Integrator(4)"
contain "org.apache.commons.math.ode.HighamHall54Integrator" "org.apache.commons.math.ode.HighamHall54Integrator.getName(0)"
contain "org.apache.commons.math.ode.HighamHall54Integrator" "org.apache.commons.math.ode.HighamHall54Integrator.getOrder(0)"
reference "org.apache.commons.math.ode.HighamHall54Integrator.estimateError(4)" "org.apache.commons.math.ode.HighamHall54Integrator.e"
reference "org.apache.commons.math.ode.HighamHall54Integrator.estimateError(4)" "org.apache.commons.math.ode.HighamHall54Integrator.vecAbsoluteTolerance"
reference "org.apache.commons.math.ode.HighamHall54Integrator.estimateError(4)" "org.apache.commons.math.ode.HighamHall54Integrator.scalAbsoluteTolerance"
reference "org.apache.commons.math.ode.HighamHall54Integrator.estimateError(4)" "org.apache.commons.math.ode.HighamHall54Integrator.scalRelativeTolerance"
reference "org.apache.commons.math.ode.HighamHall54Integrator.estimateError(4)" "org.apache.commons.math.ode.HighamHall54Integrator.vecRelativeTolerance"
contain "org.apache.commons.math.ode.HighamHall54Integrator" "org.apache.commons.math.ode.HighamHall54Integrator.estimateError(4)"
reference "org.apache.commons.math.ode.HighamHall54Integrator.static {...}" "org.apache.commons.math.ode.HighamHall54Integrator.c"
reference "org.apache.commons.math.ode.HighamHall54Integrator.static {...}" "org.apache.commons.math.ode.HighamHall54Integrator.a"
reference "org.apache.commons.math.ode.HighamHall54Integrator.static {...}" "org.apache.commons.math.ode.HighamHall54Integrator.b"
reference "org.apache.commons.math.ode.HighamHall54Integrator.static {...}" "org.apache.commons.math.ode.HighamHall54Integrator.e"
contain "org.apache.commons.math.ode.HighamHall54Integrator" "org.apache.commons.math.ode.HighamHall54Integrator.static {...}"
contain "org.apache.commons.math.ode.HighamHall54Integrator" "org.apache.commons.math.ode.HighamHall54Integrator.methodName"
reference "org.apache.commons.math.ode.HighamHall54Integrator.c" "double[]"
contain "org.apache.commons.math.ode.HighamHall54Integrator" "org.apache.commons.math.ode.HighamHall54Integrator.c"
reference "org.apache.commons.math.ode.HighamHall54Integrator.a" "double[][]"
contain "org.apache.commons.math.ode.HighamHall54Integrator" "org.apache.commons.math.ode.HighamHall54Integrator.a"
reference "org.apache.commons.math.ode.HighamHall54Integrator.b" "double[]"
contain "org.apache.commons.math.ode.HighamHall54Integrator" "org.apache.commons.math.ode.HighamHall54Integrator.b"
reference "org.apache.commons.math.ode.HighamHall54Integrator.e" "double[]"
contain "org.apache.commons.math.ode.HighamHall54Integrator" "org.apache.commons.math.ode.HighamHall54Integrator.e"
reference "org.apache.commons.math.analysis.RombergIntegrator" "double[][]"
reference "org.apache.commons.math.analysis.RombergIntegrator" "org.apache.commons.math.analysis.TrapezoidIntegrator"
reference "org.apache.commons.math.analysis.RombergIntegrator" "org.apache.commons.math.MaxIterationsExceededException"
reference "org.apache.commons.math.analysis.RombergIntegrator" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl"
reference "org.apache.commons.math.analysis.RombergIntegrator" "org.apache.commons.math.FunctionEvaluationException"
call "org.apache.commons.math.analysis.RombergIntegrator.RombergIntegrator(1)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.UnivariateRealIntegratorImpl(2)"
contain "org.apache.commons.math.analysis.RombergIntegrator" "org.apache.commons.math.analysis.RombergIntegrator.RombergIntegrator(1)"
reference "org.apache.commons.math.analysis.RombergIntegrator.integrate(2)" "org.apache.commons.math.analysis.RombergIntegrator.maximalIterationCount"
call "org.apache.commons.math.analysis.RombergIntegrator.integrate(2)" "org.apache.commons.math.analysis.RombergIntegrator.clearResult(0)"
call "org.apache.commons.math.analysis.RombergIntegrator.integrate(2)" "org.apache.commons.math.analysis.RombergIntegrator.verifyInterval(2)"
call "org.apache.commons.math.analysis.RombergIntegrator.integrate(2)" "org.apache.commons.math.analysis.RombergIntegrator.verifyIterationCount(0)"
reference "org.apache.commons.math.analysis.RombergIntegrator.integrate(2)" "org.apache.commons.math.analysis.RombergIntegrator.f"
call "org.apache.commons.math.analysis.RombergIntegrator.integrate(2)" "org.apache.commons.math.analysis.TrapezoidIntegrator.TrapezoidIntegrator(1)"
call "org.apache.commons.math.analysis.RombergIntegrator.integrate(2)" "org.apache.commons.math.analysis.TrapezoidIntegrator.stage(3)"
reference "org.apache.commons.math.analysis.RombergIntegrator.integrate(2)" "org.apache.commons.math.analysis.RombergIntegrator.minimalIterationCount"
reference "org.apache.commons.math.analysis.RombergIntegrator.integrate(2)" "org.apache.commons.math.analysis.RombergIntegrator.relativeAccuracy"
call "org.apache.commons.math.analysis.RombergIntegrator.integrate(2)" "org.apache.commons.math.analysis.RombergIntegrator.setResult(2)"
reference "org.apache.commons.math.analysis.RombergIntegrator.integrate(2)" "org.apache.commons.math.analysis.RombergIntegrator.result"
call "org.apache.commons.math.analysis.RombergIntegrator.integrate(2)" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)"
contain "org.apache.commons.math.analysis.RombergIntegrator" "org.apache.commons.math.analysis.RombergIntegrator.integrate(2)"
call "org.apache.commons.math.analysis.RombergIntegrator.verifyIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.verifyIterationCount(0)"
reference "org.apache.commons.math.analysis.RombergIntegrator.verifyIterationCount(0)" "org.apache.commons.math.analysis.RombergIntegrator.maximalIterationCount"
contain "org.apache.commons.math.analysis.RombergIntegrator" "org.apache.commons.math.analysis.RombergIntegrator.verifyIterationCount(0)"
contain "org.apache.commons.math.analysis.RombergIntegrator" "org.apache.commons.math.analysis.RombergIntegrator.serialVersionUID"
reference "org.apache.commons.math.ode.HighamHall54StepInterpolator" "org.apache.commons.math.ode.RungeKuttaStepInterpolator"
reference "org.apache.commons.math.ode.HighamHall54StepInterpolator" "org.apache.commons.math.ode.DerivativeException"
call "org.apache.commons.math.ode.HighamHall54StepInterpolator.HighamHall54StepInterpolator(0)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(0)"
contain "org.apache.commons.math.ode.HighamHall54StepInterpolator" "org.apache.commons.math.ode.HighamHall54StepInterpolator.HighamHall54StepInterpolator(0)"
call "org.apache.commons.math.ode.HighamHall54StepInterpolator.HighamHall54StepInterpolator(1)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(1)"
contain "org.apache.commons.math.ode.HighamHall54StepInterpolator" "org.apache.commons.math.ode.HighamHall54StepInterpolator.HighamHall54StepInterpolator(1)"
call "org.apache.commons.math.ode.HighamHall54StepInterpolator.clone(0)" "org.apache.commons.math.ode.HighamHall54StepInterpolator.HighamHall54StepInterpolator(1)"
contain "org.apache.commons.math.ode.HighamHall54StepInterpolator" "org.apache.commons.math.ode.HighamHall54StepInterpolator.clone(0)"
reference "org.apache.commons.math.ode.HighamHall54StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.HighamHall54StepInterpolator.h"
reference "org.apache.commons.math.ode.HighamHall54StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.HighamHall54StepInterpolator.interpolatedState"
reference "org.apache.commons.math.ode.HighamHall54StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.HighamHall54StepInterpolator.currentState"
reference "org.apache.commons.math.ode.HighamHall54StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.HighamHall54StepInterpolator.yDotK"
contain "org.apache.commons.math.ode.HighamHall54StepInterpolator" "org.apache.commons.math.ode.HighamHall54StepInterpolator.computeInterpolatedState(2)"
contain "org.apache.commons.math.ode.HighamHall54StepInterpolator" "org.apache.commons.math.ode.HighamHall54StepInterpolator.serialVersionUID"
reference "org.apache.commons.math.distribution.AbstractIntegerDistribution" "org.apache.commons.math.distribution.AbstractDistribution"
reference "org.apache.commons.math.distribution.AbstractIntegerDistribution" "org.apache.commons.math.distribution.IntegerDistribution"
reference "org.apache.commons.math.distribution.AbstractIntegerDistribution" "org.apache.commons.math.MathException"
call "org.apache.commons.math.distribution.AbstractIntegerDistribution.AbstractIntegerDistribution(0)" "org.apache.commons.math.distribution.AbstractDistribution.AbstractDistribution(0)"
contain "org.apache.commons.math.distribution.AbstractIntegerDistribution" "org.apache.commons.math.distribution.AbstractIntegerDistribution.AbstractIntegerDistribution(0)"
call "org.apache.commons.math.distribution.AbstractIntegerDistribution.cumulativeProbability(1)" "org.apache.commons.math.distribution.AbstractIntegerDistribution.cumulativeProbability(1)"
contain "org.apache.commons.math.distribution.AbstractIntegerDistribution" "org.apache.commons.math.distribution.AbstractIntegerDistribution.cumulativeProbability(1)"
contain "org.apache.commons.math.distribution.AbstractIntegerDistribution" "org.apache.commons.math.distribution.AbstractIntegerDistribution.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.AbstractIntegerDistribution.probability(1)" "org.apache.commons.math.distribution.AbstractIntegerDistribution.probability(1)"
contain "org.apache.commons.math.distribution.AbstractIntegerDistribution" "org.apache.commons.math.distribution.AbstractIntegerDistribution.probability(1)"
call "org.apache.commons.math.distribution.AbstractIntegerDistribution.cumulativeProbability(2)" "org.apache.commons.math.distribution.AbstractIntegerDistribution.cumulativeProbability(1)"
contain "org.apache.commons.math.distribution.AbstractIntegerDistribution" "org.apache.commons.math.distribution.AbstractIntegerDistribution.cumulativeProbability(2)"
call "org.apache.commons.math.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.AbstractIntegerDistribution.getDomainLowerBound(1)"
call "org.apache.commons.math.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.AbstractIntegerDistribution.getDomainUpperBound(1)"
call "org.apache.commons.math.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.AbstractIntegerDistribution.cumulativeProbability(1)"
contain "org.apache.commons.math.distribution.AbstractIntegerDistribution" "org.apache.commons.math.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.AbstractIntegerDistribution" "org.apache.commons.math.distribution.AbstractIntegerDistribution.getDomainLowerBound(1)"
contain "org.apache.commons.math.distribution.AbstractIntegerDistribution" "org.apache.commons.math.distribution.AbstractIntegerDistribution.getDomainUpperBound(1)"
contain "org.apache.commons.math.distribution.AbstractIntegerDistribution" "org.apache.commons.math.distribution.AbstractIntegerDistribution.serialVersionUID"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.RandomDataImpl"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistribution"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.RandomData"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.binStats"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.sampleStats"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.binCount"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.loaded"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.upperBounds"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(0)" "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.randomData"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.binStats"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.sampleStats"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.binCount"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.loaded"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.upperBounds"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(1)" "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.randomData"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(1)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.ArrayDataAdapter(1)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter.computeStats(0)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.loaded"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.StreamDataAdapter(1)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter.computeStats(0)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.loaded"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.StreamDataAdapter(1)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter.computeStats(0)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.loaded"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.sampleStats"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMin(0)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMax(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.binCount"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.binStats"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance(0)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory.DataAdapterFactory(1)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory.getAdapter(1)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter.computeBinStats(2)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.upperBounds"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getN(0)"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.findBin(3)" "org.apache.commons.math.random.EmpiricalDistributionImpl.binCount"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.findBin(3)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.getNextValue(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.loaded"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.getNextValue(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.binCount"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.getNextValue(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.upperBounds"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.getNextValue(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.binStats"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.getNextValue(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getN(0)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.getNextValue(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getStandardDeviation(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.getNextValue(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.randomData"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.getNextValue(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.getNextValue(0)" "org.apache.commons.math.random.RandomData.nextGaussian(2)"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.getNextValue(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.getSampleStats(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.sampleStats"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.getSampleStats(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.getBinCount(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.binCount"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.getBinCount(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.getBinStats(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.binStats"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.getBinStats(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.getUpperBounds(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.upperBounds"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.getUpperBounds(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.isLoaded(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.loaded"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.isLoaded(0)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.access$100(4)" "org.apache.commons.math.random.EmpiricalDistributionImpl.findBin(3)"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.access$100(4)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.access$200(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.binStats"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.access$200(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.access$302(2)" "org.apache.commons.math.random.EmpiricalDistributionImpl.sampleStats"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.access$302(2)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.access$300(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.sampleStats"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.access$300(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.serialVersionUID"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.binStats"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.sampleStats" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.sampleStats"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.binCount"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.loaded"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.upperBounds" "double[]"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.upperBounds"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.randomData" "org.apache.commons.math.random.RandomData"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.randomData"
reference "org.apache.commons.math.linear.RealMatrixImpl" "double[][]"
reference "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.MatrixIndexException"
reference "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.InvalidMatrixException"
reference "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.MatrixUtils"
reference "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.util.MathUtils"
reference "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(0)" "org.apache.commons.math.linear.RealMatrixImpl.data"
reference "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(0)" "org.apache.commons.math.linear.RealMatrixImpl.lu"
reference "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(0)" "org.apache.commons.math.linear.RealMatrixImpl.permutation"
reference "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(0)" "org.apache.commons.math.linear.RealMatrixImpl.parity"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)" "org.apache.commons.math.linear.RealMatrixImpl.data"
reference "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)" "org.apache.commons.math.linear.RealMatrixImpl.lu"
reference "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)" "org.apache.commons.math.linear.RealMatrixImpl.permutation"
reference "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)" "org.apache.commons.math.linear.RealMatrixImpl.parity"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)"
reference "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)" "org.apache.commons.math.linear.RealMatrixImpl.data"
reference "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)" "org.apache.commons.math.linear.RealMatrixImpl.lu"
reference "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)" "org.apache.commons.math.linear.RealMatrixImpl.permutation"
reference "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)" "org.apache.commons.math.linear.RealMatrixImpl.parity"
call "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)" "org.apache.commons.math.linear.RealMatrixImpl.copyIn(1)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)" "org.apache.commons.math.linear.RealMatrixImpl.data"
reference "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)" "org.apache.commons.math.linear.RealMatrixImpl.lu"
reference "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)" "org.apache.commons.math.linear.RealMatrixImpl.permutation"
reference "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)" "org.apache.commons.math.linear.RealMatrixImpl.parity"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.copy(0)" "org.apache.commons.math.linear.RealMatrixImpl.copyOut(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.copy(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.copy(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.add(1)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.add(1)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.add(1)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.add(1)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.add(1)" "org.apache.commons.math.linear.RealMatrixImpl.data"
call "org.apache.commons.math.linear.RealMatrixImpl.add(1)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.RealMatrixImpl.add(1)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.add(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.subtract(1)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.subtract(1)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.subtract(1)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.subtract(1)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.subtract(1)" "org.apache.commons.math.linear.RealMatrixImpl.data"
call "org.apache.commons.math.linear.RealMatrixImpl.subtract(1)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.RealMatrixImpl.subtract(1)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.subtract(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.scalarAdd(1)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.scalarAdd(1)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.scalarAdd(1)" "org.apache.commons.math.linear.RealMatrixImpl.data"
call "org.apache.commons.math.linear.RealMatrixImpl.scalarAdd(1)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.scalarAdd(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.scalarMultiply(1)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.scalarMultiply(1)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.scalarMultiply(1)" "org.apache.commons.math.linear.RealMatrixImpl.data"
call "org.apache.commons.math.linear.RealMatrixImpl.scalarMultiply(1)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.scalarMultiply(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.multiply(1)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.multiply(1)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.multiply(1)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.multiply(1)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.multiply(1)" "org.apache.commons.math.linear.RealMatrixImpl.data"
call "org.apache.commons.math.linear.RealMatrixImpl.multiply(1)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.RealMatrixImpl.multiply(1)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.multiply(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.preMultiply(1)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.preMultiply(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.getData(0)" "org.apache.commons.math.linear.RealMatrixImpl.copyOut(0)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.getData(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.getDataRef(0)" "org.apache.commons.math.linear.RealMatrixImpl.data"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.getDataRef(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.getNorm(0)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.getNorm(0)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.getNorm(0)" "org.apache.commons.math.linear.RealMatrixImpl.data"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.getNorm(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.getSubMatrix(4)" "org.apache.commons.math.linear.RealMatrixImpl.data"
call "org.apache.commons.math.linear.RealMatrixImpl.getSubMatrix(4)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.getSubMatrix(4)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)"
call "org.apache.commons.math.linear.RealMatrixImpl.getSubMatrix(4)" "org.apache.commons.math.linear.RealMatrixImpl.getDataRef(0)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.getSubMatrix(4)"
call "org.apache.commons.math.linear.RealMatrixImpl.getSubMatrix(2)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.getSubMatrix(2)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)"
call "org.apache.commons.math.linear.RealMatrixImpl.getSubMatrix(2)" "org.apache.commons.math.linear.RealMatrixImpl.getDataRef(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.getSubMatrix(2)" "org.apache.commons.math.linear.RealMatrixImpl.data"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.getSubMatrix(2)"
call "org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix(3)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(1)"
reference "org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix(3)" "org.apache.commons.math.linear.RealMatrixImpl.data"
call "org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix(3)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix(3)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix(3)" "org.apache.commons.math.linear.RealMatrixImpl.lu"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix(3)"
call "org.apache.commons.math.linear.RealMatrixImpl.getRowMatrix(1)" "org.apache.commons.math.linear.RealMatrixImpl.isValidCoordinate(2)"
call "org.apache.commons.math.linear.RealMatrixImpl.getRowMatrix(1)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.getRowMatrix(1)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.getRowMatrix(1)" "org.apache.commons.math.linear.RealMatrixImpl.data"
call "org.apache.commons.math.linear.RealMatrixImpl.getRowMatrix(1)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.getRowMatrix(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.getColumnMatrix(1)" "org.apache.commons.math.linear.RealMatrixImpl.isValidCoordinate(2)"
call "org.apache.commons.math.linear.RealMatrixImpl.getColumnMatrix(1)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.getColumnMatrix(1)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.getColumnMatrix(1)" "org.apache.commons.math.linear.RealMatrixImpl.data"
call "org.apache.commons.math.linear.RealMatrixImpl.getColumnMatrix(1)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.getColumnMatrix(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.getRow(1)" "org.apache.commons.math.linear.RealMatrixImpl.isValidCoordinate(2)"
call "org.apache.commons.math.linear.RealMatrixImpl.getRow(1)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.getRow(1)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.getRow(1)" "org.apache.commons.math.linear.RealMatrixImpl.data"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.getRow(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.getColumn(1)" "org.apache.commons.math.linear.RealMatrixImpl.isValidCoordinate(2)"
call "org.apache.commons.math.linear.RealMatrixImpl.getColumn(1)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.getColumn(1)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.getColumn(1)" "org.apache.commons.math.linear.RealMatrixImpl.data"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.getColumn(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.getEntry(2)" "org.apache.commons.math.linear.RealMatrixImpl.isValidCoordinate(2)"
call "org.apache.commons.math.linear.RealMatrixImpl.getEntry(2)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(1)"
reference "org.apache.commons.math.linear.RealMatrixImpl.getEntry(2)" "org.apache.commons.math.linear.RealMatrixImpl.data"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.getEntry(2)"
call "org.apache.commons.math.linear.RealMatrixImpl.transpose(0)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.transpose(0)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.transpose(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)"
call "org.apache.commons.math.linear.RealMatrixImpl.transpose(0)" "org.apache.commons.math.linear.RealMatrixImpl.getDataRef(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.transpose(0)" "org.apache.commons.math.linear.RealMatrixImpl.data"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.transpose(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.inverse(0)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.inverse(0)" "org.apache.commons.math.linear.MatrixUtils.createRealIdentityMatrix(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.inverse(0)" "org.apache.commons.math.linear.RealMatrixImpl.solve(1)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.inverse(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.getDeterminant(0)" "org.apache.commons.math.linear.RealMatrixImpl.isSquare(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.getDeterminant(0)" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.getDeterminant(0)" "org.apache.commons.math.linear.RealMatrixImpl.isSingular(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.getDeterminant(0)" "org.apache.commons.math.linear.RealMatrixImpl.parity"
call "org.apache.commons.math.linear.RealMatrixImpl.getDeterminant(0)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.getDeterminant(0)" "org.apache.commons.math.linear.RealMatrixImpl.lu"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.getDeterminant(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.isSquare(0)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.isSquare(0)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.isSquare(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.isSingular(0)" "org.apache.commons.math.linear.RealMatrixImpl.lu"
call "org.apache.commons.math.linear.RealMatrixImpl.isSingular(0)" "org.apache.commons.math.linear.RealMatrixImpl.luDecompose(0)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.isSingular(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)" "org.apache.commons.math.linear.RealMatrixImpl.data"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)" "org.apache.commons.math.linear.RealMatrixImpl.data"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.getTrace(0)" "org.apache.commons.math.linear.RealMatrixImpl.isSquare(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.getTrace(0)" "org.apache.commons.math.linear.RealMatrixImpl.data"
call "org.apache.commons.math.linear.RealMatrixImpl.getTrace(0)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.getTrace(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.operate(1)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.operate(1)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.operate(1)" "org.apache.commons.math.linear.RealMatrixImpl.data"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.operate(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.preMultiply(1)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.preMultiply(1)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.preMultiply(1)" "org.apache.commons.math.linear.RealMatrixImpl.data"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.preMultiply(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.solve(1)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.solve(1)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.solve(1)" "org.apache.commons.math.linear.RealMatrixImpl.solve(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.solve(1)" "org.apache.commons.math.linear.RealMatrixImpl.getDataRef(0)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.solve(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.solve(1)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.solve(1)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.solve(1)" "org.apache.commons.math.linear.RealMatrixImpl.isSquare(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.solve(1)" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.solve(1)" "org.apache.commons.math.linear.RealMatrixImpl.isSingular(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.solve(1)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.solve(1)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.solve(1)" "org.apache.commons.math.linear.RealMatrixImpl.permutation"
call "org.apache.commons.math.linear.RealMatrixImpl.solve(1)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
reference "org.apache.commons.math.linear.RealMatrixImpl.solve(1)" "org.apache.commons.math.linear.RealMatrixImpl.lu"
call "org.apache.commons.math.linear.RealMatrixImpl.solve(1)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.solve(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.luDecompose(0)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.luDecompose(0)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.luDecompose(0)" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.luDecompose(0)" "org.apache.commons.math.linear.RealMatrixImpl.getData(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.luDecompose(0)" "org.apache.commons.math.linear.RealMatrixImpl.lu"
reference "org.apache.commons.math.linear.RealMatrixImpl.luDecompose(0)" "org.apache.commons.math.linear.RealMatrixImpl.permutation"
reference "org.apache.commons.math.linear.RealMatrixImpl.luDecompose(0)" "org.apache.commons.math.linear.RealMatrixImpl.parity"
reference "org.apache.commons.math.linear.RealMatrixImpl.luDecompose(0)" "org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.luDecompose(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.toString(0)" "org.apache.commons.math.linear.RealMatrixImpl.data"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.toString(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.equals(1)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.equals(1)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.equals(1)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.equals(1)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.equals(1)" "org.apache.commons.math.linear.RealMatrixImpl.data"
call "org.apache.commons.math.linear.RealMatrixImpl.equals(1)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.equals(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.hashCode(0)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.hashCode(0)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.hashCode(0)" "org.apache.commons.math.linear.RealMatrixImpl.data"
call "org.apache.commons.math.linear.RealMatrixImpl.hashCode(0)" "org.apache.commons.math.util.MathUtils.hash(1)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.hashCode(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.getIdentity(1)" "org.apache.commons.math.linear.MatrixUtils.createRealIdentityMatrix(1)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.getIdentity(1)"
reference "org.apache.commons.math.linear.RealMatrixImpl.getLUMatrix(0)" "org.apache.commons.math.linear.RealMatrixImpl.lu"
call "org.apache.commons.math.linear.RealMatrixImpl.getLUMatrix(0)" "org.apache.commons.math.linear.RealMatrixImpl.luDecompose(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.getLUMatrix(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.getLUMatrix(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.getPermutation(0)" "org.apache.commons.math.linear.RealMatrixImpl.permutation"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.getPermutation(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.copyOut(0)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.copyOut(0)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.copyOut(0)" "org.apache.commons.math.linear.RealMatrixImpl.data"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.copyOut(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.copyIn(1)" "org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix(3)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.copyIn(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.isValidCoordinate(2)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.isValidCoordinate(2)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.isValidCoordinate(2)"
reference "org.apache.commons.math.linear.RealMatrixImpl.static {...}" "org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.static {...}"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID"
reference "org.apache.commons.math.linear.RealMatrixImpl.data" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.data"
reference "org.apache.commons.math.linear.RealMatrixImpl.lu" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.lu"
reference "org.apache.commons.math.linear.RealMatrixImpl.permutation" "int[]"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.permutation"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.parity"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL"
reference "org.apache.commons.math.distribution.HypergeometricDistribution" "org.apache.commons.math.distribution.IntegerDistribution"
contain "org.apache.commons.math.distribution.HypergeometricDistribution" "org.apache.commons.math.distribution.HypergeometricDistribution.getNumberOfSuccesses(0)"
contain "org.apache.commons.math.distribution.HypergeometricDistribution" "org.apache.commons.math.distribution.HypergeometricDistribution.getPopulationSize(0)"
contain "org.apache.commons.math.distribution.HypergeometricDistribution" "org.apache.commons.math.distribution.HypergeometricDistribution.getSampleSize(0)"
contain "org.apache.commons.math.distribution.HypergeometricDistribution" "org.apache.commons.math.distribution.HypergeometricDistribution.setNumberOfSuccesses(1)"
contain "org.apache.commons.math.distribution.HypergeometricDistribution" "org.apache.commons.math.distribution.HypergeometricDistribution.setPopulationSize(1)"
contain "org.apache.commons.math.distribution.HypergeometricDistribution" "org.apache.commons.math.distribution.HypergeometricDistribution.setSampleSize(1)"
contain "org.apache.commons.math.util.DoubleArray" "org.apache.commons.math.util.DoubleArray.getNumElements(0)"
contain "org.apache.commons.math.util.DoubleArray" "org.apache.commons.math.util.DoubleArray.getElement(1)"
contain "org.apache.commons.math.util.DoubleArray" "org.apache.commons.math.util.DoubleArray.setElement(2)"
contain "org.apache.commons.math.util.DoubleArray" "org.apache.commons.math.util.DoubleArray.addElement(1)"
contain "org.apache.commons.math.util.DoubleArray" "org.apache.commons.math.util.DoubleArray.addElementRolling(1)"
contain "org.apache.commons.math.util.DoubleArray" "org.apache.commons.math.util.DoubleArray.getElements(0)"
contain "org.apache.commons.math.util.DoubleArray" "org.apache.commons.math.util.DoubleArray.clear(0)"
contain "org.apache.commons.math.optimization.ConvergenceChecker" "org.apache.commons.math.optimization.ConvergenceChecker.converged(1)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.EstimationException"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.Estimator"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.WeightedMeasurement"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.EstimationProblem"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.EstimatedParameter"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setInitialStepBoundFactor(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setMaxCostEval(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setCostRelativeTolerance(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setParRelativeTolerance(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setOrthoTolerance(1)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setInitialStepBoundFactor(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.initialStepBoundFactor"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setInitialStepBoundFactor(1)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setMaxCostEval(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.maxCostEval"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setMaxCostEval(1)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setCostRelativeTolerance(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.costRelativeTolerance"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setCostRelativeTolerance(1)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setParRelativeTolerance(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.parRelativeTolerance"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setParRelativeTolerance(1)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setOrthoTolerance(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.orthoTolerance"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setOrthoTolerance(1)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getCostEvaluations(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.costEvaluations"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getCostEvaluations(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getJacobianEvaluations(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.jacobianEvaluations"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getJacobianEvaluations(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.updateJacobian(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.jacobianEvaluations"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.updateJacobian(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.jacobian"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.updateJacobian(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.rows"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.updateJacobian(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.measurements"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.updateJacobian(0)" "org.apache.commons.math.estimation.WeightedMeasurement.getWeight(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.updateJacobian(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.cols"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.updateJacobian(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.parameters"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.updateJacobian(0)" "org.apache.commons.math.estimation.WeightedMeasurement.getPartial(1)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.updateJacobian(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.updateResidualsAndCost(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.costEvaluations"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.updateResidualsAndCost(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.cost"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.updateResidualsAndCost(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.rows"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.updateResidualsAndCost(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.measurements"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.updateResidualsAndCost(0)" "org.apache.commons.math.estimation.WeightedMeasurement.getResidual(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.updateResidualsAndCost(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.residuals"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.updateResidualsAndCost(0)" "org.apache.commons.math.estimation.WeightedMeasurement.getWeight(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.updateResidualsAndCost(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.cols"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.updateResidualsAndCost(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)" "org.apache.commons.math.estimation.EstimationProblem.getMeasurements(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)" "org.apache.commons.math.estimation.WeightedMeasurement.getResidual(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)" "org.apache.commons.math.estimation.WeightedMeasurement.getWeight(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.EstimationProblem.getMeasurements(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.measurements"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.EstimationProblem.getUnboundParameters(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.parameters"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.rows"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.cols"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.solvedCols"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.jacobian"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.diagR"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.jacNorm"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.beta"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.permutation"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.lmDir"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.residuals"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.updateResidualsAndCost(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.lmPar"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.costEvaluations"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.jacobianEvaluations"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.maxCostEval"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.updateJacobian(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qrDecomposition(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qTy(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.initialStepBoundFactor"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.cost"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.orthoTolerance"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMParameter(6)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.EstimatedParameter.setEstimate(1)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.costRelativeTolerance"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.parRelativeTolerance"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.EstimationException.EstimationException(2)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMParameter(6)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.rank"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMParameter(6)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.lmDir"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMParameter(6)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.permutation"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMParameter(6)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.cols"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMParameter(6)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.diagR"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMParameter(6)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.jacobian"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMParameter(6)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.solvedCols"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMParameter(6)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.lmPar"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMParameter(6)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMDirection(4)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMParameter(6)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMDirection(4)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.solvedCols"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMDirection(4)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.permutation"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMDirection(4)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.jacobian"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMDirection(4)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.cols"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMDirection(4)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.lmDir"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMDirection(4)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.diagR"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMDirection(4)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qrDecomposition(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.cols"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qrDecomposition(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.permutation"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qrDecomposition(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.jacobian"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qrDecomposition(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.jacNorm"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qrDecomposition(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.rank"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qrDecomposition(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.beta"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qrDecomposition(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.diagR"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qrDecomposition(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.solvedCols"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qrDecomposition(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qTy(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.cols"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qTy(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.permutation"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qTy(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.rows"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qTy(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.jacobian"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qTy(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.beta"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qTy(1)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.measurements" "org.apache.commons.math.estimation.WeightedMeasurement[]"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.measurements"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.parameters" "org.apache.commons.math.estimation.EstimatedParameter[]"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.parameters"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.jacobian" "double[]"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.jacobian"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.cols"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.solvedCols"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.rows"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.diagR" "double[]"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.diagR"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.jacNorm" "double[]"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.jacNorm"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.beta" "double[]"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.beta"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.permutation" "int[]"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.permutation"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.rank"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.lmPar"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.lmDir" "double[]"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.lmDir"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.residuals" "double[]"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.residuals"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.cost"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.initialStepBoundFactor"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.maxCostEval"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.costEvaluations"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.jacobianEvaluations"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.costRelativeTolerance"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.parRelativeTolerance"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.orthoTolerance"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.serialVersionUID"
reference "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.distribution.AbstractIntegerDistribution"
reference "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.distribution.PascalDistribution"
reference "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.special.Beta"
reference "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.util.MathUtils"
call "org.apache.commons.math.distribution.PascalDistributionImpl.PascalDistributionImpl(2)" "org.apache.commons.math.distribution.AbstractIntegerDistribution.AbstractIntegerDistribution(0)"
call "org.apache.commons.math.distribution.PascalDistributionImpl.PascalDistributionImpl(2)" "org.apache.commons.math.distribution.PascalDistributionImpl.setNumberOfSuccesses(1)"
call "org.apache.commons.math.distribution.PascalDistributionImpl.PascalDistributionImpl(2)" "org.apache.commons.math.distribution.PascalDistributionImpl.setProbabilityOfSuccess(1)"
contain "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.distribution.PascalDistributionImpl.PascalDistributionImpl(2)"
reference "org.apache.commons.math.distribution.PascalDistributionImpl.getNumberOfSuccesses(0)" "org.apache.commons.math.distribution.PascalDistributionImpl.numberOfSuccesses"
contain "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.distribution.PascalDistributionImpl.getNumberOfSuccesses(0)"
reference "org.apache.commons.math.distribution.PascalDistributionImpl.getProbabilityOfSuccess(0)" "org.apache.commons.math.distribution.PascalDistributionImpl.probabilityOfSuccess"
contain "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.distribution.PascalDistributionImpl.getProbabilityOfSuccess(0)"
reference "org.apache.commons.math.distribution.PascalDistributionImpl.setNumberOfSuccesses(1)" "org.apache.commons.math.distribution.PascalDistributionImpl.numberOfSuccesses"
contain "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.distribution.PascalDistributionImpl.setNumberOfSuccesses(1)"
reference "org.apache.commons.math.distribution.PascalDistributionImpl.setProbabilityOfSuccess(1)" "org.apache.commons.math.distribution.PascalDistributionImpl.probabilityOfSuccess"
contain "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.distribution.PascalDistributionImpl.setProbabilityOfSuccess(1)"
contain "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.distribution.PascalDistributionImpl.getDomainLowerBound(1)"
contain "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.distribution.PascalDistributionImpl.getDomainUpperBound(1)"
call "org.apache.commons.math.distribution.PascalDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.PascalDistributionImpl.getProbabilityOfSuccess(0)"
call "org.apache.commons.math.distribution.PascalDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.PascalDistributionImpl.getNumberOfSuccesses(0)"
call "org.apache.commons.math.distribution.PascalDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.special.Beta.regularizedBeta(3)"
contain "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.distribution.PascalDistributionImpl.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.PascalDistributionImpl.probability(1)" "org.apache.commons.math.distribution.PascalDistributionImpl.getNumberOfSuccesses(0)"
call "org.apache.commons.math.distribution.PascalDistributionImpl.probability(1)" "org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(2)"
call "org.apache.commons.math.distribution.PascalDistributionImpl.probability(1)" "org.apache.commons.math.distribution.PascalDistributionImpl.getProbabilityOfSuccess(0)"
contain "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.distribution.PascalDistributionImpl.probability(1)"
call "org.apache.commons.math.distribution.PascalDistributionImpl.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.distribution.PascalDistributionImpl.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.distribution.PascalDistributionImpl.serialVersionUID"
contain "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.distribution.PascalDistributionImpl.numberOfSuccesses"
contain "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.distribution.PascalDistributionImpl.probabilityOfSuccess"
reference "org.apache.commons.math.ode.ThreeEighthesStepInterpolator" "org.apache.commons.math.ode.RungeKuttaStepInterpolator"
reference "org.apache.commons.math.ode.ThreeEighthesStepInterpolator" "org.apache.commons.math.ode.DerivativeException"
call "org.apache.commons.math.ode.ThreeEighthesStepInterpolator.ThreeEighthesStepInterpolator(0)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(0)"
contain "org.apache.commons.math.ode.ThreeEighthesStepInterpolator" "org.apache.commons.math.ode.ThreeEighthesStepInterpolator.ThreeEighthesStepInterpolator(0)"
call "org.apache.commons.math.ode.ThreeEighthesStepInterpolator.ThreeEighthesStepInterpolator(1)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(1)"
contain "org.apache.commons.math.ode.ThreeEighthesStepInterpolator" "org.apache.commons.math.ode.ThreeEighthesStepInterpolator.ThreeEighthesStepInterpolator(1)"
call "org.apache.commons.math.ode.ThreeEighthesStepInterpolator.clone(0)" "org.apache.commons.math.ode.ThreeEighthesStepInterpolator.ThreeEighthesStepInterpolator(1)"
contain "org.apache.commons.math.ode.ThreeEighthesStepInterpolator" "org.apache.commons.math.ode.ThreeEighthesStepInterpolator.clone(0)"
reference "org.apache.commons.math.ode.ThreeEighthesStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.ThreeEighthesStepInterpolator.interpolatedState"
reference "org.apache.commons.math.ode.ThreeEighthesStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.ThreeEighthesStepInterpolator.currentState"
reference "org.apache.commons.math.ode.ThreeEighthesStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.ThreeEighthesStepInterpolator.yDotK"
contain "org.apache.commons.math.ode.ThreeEighthesStepInterpolator" "org.apache.commons.math.ode.ThreeEighthesStepInterpolator.computeInterpolatedState(2)"
contain "org.apache.commons.math.ode.ThreeEighthesStepInterpolator" "org.apache.commons.math.ode.ThreeEighthesStepInterpolator.serialVersionUID"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "double[][]"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "double[]"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.RungeKuttaStepInterpolator"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.FirstOrderDifferentialEquations"
call "org.apache.commons.math.ode.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator(0)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(0)"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.yDotKLast"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.yTmp"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.v"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.vectorsInitialized"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator(0)"
call "org.apache.commons.math.ode.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator(1)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(1)"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator(1)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.currentState"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator(1)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.yDotKLast"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator(1)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.v"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator(1)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.vectorsInitialized"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator(1)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.yTmp"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator(1)"
call "org.apache.commons.math.ode.DormandPrince853StepInterpolator.clone(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator(1)"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.clone(0)"
call "org.apache.commons.math.ode.DormandPrince853StepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.reinitialize(4)"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.currentState"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.yDotKLast"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.yTmp"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.v"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.vectorsInitialized"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.reinitialize(4)"
call "org.apache.commons.math.ode.DormandPrince853StepInterpolator.storeTime(1)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.storeTime(1)"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.storeTime(1)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.vectorsInitialized"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.storeTime(1)"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.vectorsInitialized"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.v"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.interpolatedState"
call "org.apache.commons.math.ode.DormandPrince853StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.finalizeStep(0)"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.h"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_01"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.yDotK"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_06"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_07"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_08"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_09"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_10"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_11"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_12"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.d"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.yDotKLast"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.currentState"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.computeInterpolatedState(2)"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.currentState"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_01"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.yDotK"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_06"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_07"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_08"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_09"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_10"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_11"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_12"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_13"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.yTmp"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.h"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.equations"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.previousTime"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.c14"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.yDotKLast"
call "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.FirstOrderDifferentialEquations.computeDerivatives(3)"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_01"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_06"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_07"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_08"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_09"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_10"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_11"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_12"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_13"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_14"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.c15"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_01"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_06"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_07"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_08"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_09"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_10"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_11"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_12"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_13"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_14"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_15"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.c16"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.doFinalize(0)"
call "org.apache.commons.math.ode.DormandPrince853StepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.finalizeStep(0)"
call "org.apache.commons.math.ode.DormandPrince853StepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.DerivativeException.getMessage(0)"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.currentState"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.yDotKLast"
call "org.apache.commons.math.ode.DormandPrince853StepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.writeExternal(1)"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.writeExternal(1)"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.readExternal(1)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.yDotKLast"
call "org.apache.commons.math.ode.DormandPrince853StepInterpolator.readExternal(1)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.readExternal(1)"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.readExternal(1)"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_01"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_06"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_07"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_08"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_09"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_10"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_11"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_12"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.c14"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_01"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_06"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_07"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_08"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_09"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_10"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_11"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_12"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_13"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.c15"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_01"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_06"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_07"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_08"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_09"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_10"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_11"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_12"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_13"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_14"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.c16"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_01"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_06"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_07"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_08"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_09"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_10"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_11"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_12"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_13"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_14"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_15"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.d"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.static {...}"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.yDotKLast" "double[][]"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.yDotKLast"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.yTmp" "double[]"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.yTmp"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.v" "double[][]"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.v"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.vectorsInitialized"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_01"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_06"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_07"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_08"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_09"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_10"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_11"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.b_12"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.c14"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_01"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_06"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_07"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_08"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_09"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_10"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_11"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_12"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k14_13"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.c15"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_01"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_06"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_07"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_08"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_09"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_10"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_11"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_12"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_13"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k15_14"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.c16"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_01"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_06"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_07"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_08"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_09"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_10"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_11"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_12"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_13"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_14"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.k16_15"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolator.d" "double[][]"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.d"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.serialVersionUID"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.SwitchingFunctionsHandler"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.FirstOrderIntegrator"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.DummyStepHandler"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.FirstOrderDifferentialEquations"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(4)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.minStep"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(4)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.maxStep"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(4)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.initialStep"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(4)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.scalAbsoluteTolerance"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(4)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.scalRelativeTolerance"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(4)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.vecAbsoluteTolerance"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(4)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.vecRelativeTolerance"
call "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(4)" "org.apache.commons.math.ode.DummyStepHandler.getInstance(0)"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(4)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.handler"
call "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(4)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.SwitchingFunctionsHandler(0)"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(4)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.switchesHandler"
contain "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(4)"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(4)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.minStep"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(4)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.maxStep"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(4)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.initialStep"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(4)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.scalAbsoluteTolerance"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(4)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.scalRelativeTolerance"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(4)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.vecAbsoluteTolerance"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(4)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.vecRelativeTolerance"
call "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(4)" "org.apache.commons.math.ode.DummyStepHandler.getInstance(0)"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(4)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.handler"
call "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(4)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.SwitchingFunctionsHandler(0)"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(4)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.switchesHandler"
contain "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(4)"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.setInitialStepSize(1)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.minStep"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.setInitialStepSize(1)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.maxStep"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.setInitialStepSize(1)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.initialStep"
contain "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.setInitialStepSize(1)"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.setStepHandler(1)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.handler"
contain "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.setStepHandler(1)"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.getStepHandler(0)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.handler"
contain "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.getStepHandler(0)"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.addSwitchingFunction(3)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.switchesHandler"
call "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.addSwitchingFunction(3)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.add(3)"
contain "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.addSwitchingFunction(3)"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.initializeStep(9)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.initialStep"
call "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.initializeStep(9)" "org.apache.commons.math.ode.FirstOrderDifferentialEquations.computeDerivatives(3)"
call "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.initializeStep(9)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.getMinStep(0)"
call "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.initializeStep(9)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.getMaxStep(0)"
contain "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.initializeStep(9)"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.filterStep(2)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.minStep"
call "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.filterStep(2)" "org.apache.commons.math.ode.IntegratorException.IntegratorException(2)"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.filterStep(2)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.maxStep"
contain "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.filterStep(2)"
contain "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.integrate(5)"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.getMinStep(0)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.minStep"
contain "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.getMinStep(0)"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.getMaxStep(0)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.maxStep"
contain "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.getMaxStep(0)"
contain "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.minStep"
contain "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.maxStep"
contain "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.initialStep"
contain "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.scalAbsoluteTolerance"
contain "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.scalRelativeTolerance"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.vecAbsoluteTolerance" "double[]"
contain "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.vecAbsoluteTolerance"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.vecRelativeTolerance" "double[]"
contain "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.vecRelativeTolerance"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.handler" "org.apache.commons.math.ode.StepHandler"
contain "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.handler"
reference "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.switchesHandler" "org.apache.commons.math.ode.SwitchingFunctionsHandler"
contain "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.switchesHandler"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegrator"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.UnivariateRealIntegratorImpl(2)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.resultComputed"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.UnivariateRealIntegratorImpl(2)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.f"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.UnivariateRealIntegratorImpl(2)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.defaultMaximalIterationCount"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.UnivariateRealIntegratorImpl(2)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.maximalIterationCount"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.UnivariateRealIntegratorImpl(2)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.defaultRelativeAccuracy"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.UnivariateRealIntegratorImpl(2)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.relativeAccuracy"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.UnivariateRealIntegratorImpl(2)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.defaultMinimalIterationCount"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.UnivariateRealIntegratorImpl(2)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.minimalIterationCount"
call "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.UnivariateRealIntegratorImpl(2)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.verifyIterationCount(0)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.UnivariateRealIntegratorImpl(2)"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.getResult(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.resultComputed"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.getResult(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.result"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.getResult(0)"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.getIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.resultComputed"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.getIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.iterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.getIterationCount(0)"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.setResult(2)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.result"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.setResult(2)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.iterationCount"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.setResult(2)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.resultComputed"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.setResult(2)"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.clearResult(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.resultComputed"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.clearResult(0)"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.setMaximalIterationCount(1)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.maximalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.setMaximalIterationCount(1)"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.getMaximalIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.maximalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.getMaximalIterationCount(0)"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.resetMaximalIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.defaultMaximalIterationCount"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.resetMaximalIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.maximalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.resetMaximalIterationCount(0)"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.setMinimalIterationCount(1)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.minimalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.setMinimalIterationCount(1)"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.getMinimalIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.minimalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.getMinimalIterationCount(0)"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.resetMinimalIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.defaultMinimalIterationCount"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.resetMinimalIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.minimalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.resetMinimalIterationCount(0)"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.setRelativeAccuracy(1)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.relativeAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.setRelativeAccuracy(1)"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.getRelativeAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.relativeAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.getRelativeAccuracy(0)"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.resetRelativeAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.defaultRelativeAccuracy"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.resetRelativeAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.relativeAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.resetRelativeAccuracy(0)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.isSequence(3)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.verifyInterval(2)"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.verifyIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.minimalIterationCount"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.verifyIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.maximalIterationCount"
call "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.verifyIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.isSequence(3)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.verifyIterationCount(0)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.serialVersionUID"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.relativeAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.maximalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.minimalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.defaultRelativeAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.defaultMaximalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.defaultMinimalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.resultComputed"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.result"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.iterationCount"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.f" "org.apache.commons.math.analysis.UnivariateRealFunction"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.f"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummary"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.util.MathUtils"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.StatisticalSummaryValues(6)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.mean"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.StatisticalSummaryValues(6)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.variance"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.StatisticalSummaryValues(6)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.n"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.StatisticalSummaryValues(6)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.max"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.StatisticalSummaryValues(6)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.min"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.StatisticalSummaryValues(6)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.sum"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.StatisticalSummaryValues(6)"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getMax(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.max"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getMax(0)"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getMean(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.mean"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getMean(0)"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getMin(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.min"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getMin(0)"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getN(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.n"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getN(0)"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getSum(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.sum"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getSum(0)"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getStandardDeviation(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.variance"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getStandardDeviation(0)"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getVariance(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.variance"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getVariance(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.equals(1)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getMax(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.equals(1)" "org.apache.commons.math.util.MathUtils.equals(2)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.equals(1)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getMean(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.equals(1)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getMin(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.equals(1)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getN(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.equals(1)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getSum(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.equals(1)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getVariance(0)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.equals(1)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.hashCode(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getMax(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.hashCode(0)" "org.apache.commons.math.util.MathUtils.hash(1)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.hashCode(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getMean(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.hashCode(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getMin(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.hashCode(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getN(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.hashCode(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getSum(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.hashCode(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getVariance(0)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.hashCode(0)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.mean"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.variance"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.n"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.max"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.min"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.sum"
reference "org.apache.commons.math.optimization.CostException" "org.apache.commons.math.MathException"
call "org.apache.commons.math.optimization.CostException.CostException(2)" "org.apache.commons.math.MathException.MathException(2)"
contain "org.apache.commons.math.optimization.CostException" "org.apache.commons.math.optimization.CostException.CostException(2)"
call "org.apache.commons.math.optimization.CostException.CostException(1)" "org.apache.commons.math.MathException.MathException(1)"
contain "org.apache.commons.math.optimization.CostException" "org.apache.commons.math.optimization.CostException.CostException(1)"
contain "org.apache.commons.math.optimization.CostException" "org.apache.commons.math.optimization.CostException.serialVersionUID"
reference "org.apache.commons.math.ode.MidpointStepInterpolator" "org.apache.commons.math.ode.RungeKuttaStepInterpolator"
reference "org.apache.commons.math.ode.MidpointStepInterpolator" "org.apache.commons.math.ode.DerivativeException"
call "org.apache.commons.math.ode.MidpointStepInterpolator.MidpointStepInterpolator(0)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(0)"
contain "org.apache.commons.math.ode.MidpointStepInterpolator" "org.apache.commons.math.ode.MidpointStepInterpolator.MidpointStepInterpolator(0)"
call "org.apache.commons.math.ode.MidpointStepInterpolator.MidpointStepInterpolator(1)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(1)"
contain "org.apache.commons.math.ode.MidpointStepInterpolator" "org.apache.commons.math.ode.MidpointStepInterpolator.MidpointStepInterpolator(1)"
call "org.apache.commons.math.ode.MidpointStepInterpolator.clone(0)" "org.apache.commons.math.ode.MidpointStepInterpolator.MidpointStepInterpolator(1)"
contain "org.apache.commons.math.ode.MidpointStepInterpolator" "org.apache.commons.math.ode.MidpointStepInterpolator.clone(0)"
reference "org.apache.commons.math.ode.MidpointStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.MidpointStepInterpolator.interpolatedState"
reference "org.apache.commons.math.ode.MidpointStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.MidpointStepInterpolator.currentState"
reference "org.apache.commons.math.ode.MidpointStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.MidpointStepInterpolator.yDotK"
contain "org.apache.commons.math.ode.MidpointStepInterpolator" "org.apache.commons.math.ode.MidpointStepInterpolator.computeInterpolatedState(2)"
contain "org.apache.commons.math.ode.MidpointStepInterpolator" "org.apache.commons.math.ode.MidpointStepInterpolator.serialVersionUID"
reference "org.apache.commons.math.distribution.AbstractContinuousDistribution.1" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.distribution.AbstractContinuousDistribution.1" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.distribution.AbstractContinuousDistribution.1" "org.apache.commons.math.analysis.UnivariateRealFunction"
reference "org.apache.commons.math.distribution.AbstractContinuousDistribution.1" "org.apache.commons.math.distribution.AbstractContinuousDistribution"
reference "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.{...}" "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.this$0"
reference "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.{...}" "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.val$p"
contain "org.apache.commons.math.distribution.AbstractContinuousDistribution.1" "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.{...}"
reference "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.value(1)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.this$0"
call "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.value(1)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.cumulativeProbability(1)"
reference "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.value(1)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.val$p"
call "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.value(1)" "org.apache.commons.math.MathException.getPattern(0)"
call "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.value(1)" "org.apache.commons.math.MathException.getArguments(0)"
call "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.value(1)" "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(4)"
contain "org.apache.commons.math.distribution.AbstractContinuousDistribution.1" "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.value(1)"
contain "org.apache.commons.math.distribution.AbstractContinuousDistribution.1" "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.val$p"
reference "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.this$0" "org.apache.commons.math.distribution.AbstractContinuousDistribution"
contain "org.apache.commons.math.distribution.AbstractContinuousDistribution.1" "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.this$0"
reference "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.MatrixIndexException"
reference "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.InvalidMatrixException"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.copy(0)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.add(1)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.subtract(1)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.scalarAdd(1)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.scalarMultiply(1)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.multiply(1)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.preMultiply(1)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getData(0)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getDataAsDoubleArray(0)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getRoundingMode(0)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getNorm(0)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getSubMatrix(4)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getSubMatrix(2)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getRowMatrix(1)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getColumnMatrix(1)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getRow(1)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getRowAsDoubleArray(1)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getColumn(1)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getColumnAsDoubleArray(1)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getEntry(2)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getEntryAsDouble(2)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.transpose(0)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.inverse(0)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getDeterminant(0)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.isSquare(0)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.isSingular(0)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getRowDimension(0)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getColumnDimension(0)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getTrace(0)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.operate(1)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.preMultiply(1)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.solve(1)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.solve(1)"
reference "org.apache.commons.math.distribution.DistributionFactoryImpl" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl"
reference "org.apache.commons.math.distribution.DistributionFactoryImpl" "org.apache.commons.math.distribution.GammaDistributionImpl"
reference "org.apache.commons.math.distribution.DistributionFactoryImpl" "org.apache.commons.math.distribution.TDistributionImpl"
reference "org.apache.commons.math.distribution.DistributionFactoryImpl" "org.apache.commons.math.distribution.FDistributionImpl"
reference "org.apache.commons.math.distribution.DistributionFactoryImpl" "org.apache.commons.math.distribution.ExponentialDistributionImpl"
reference "org.apache.commons.math.distribution.DistributionFactoryImpl" "org.apache.commons.math.distribution.BinomialDistributionImpl"
reference "org.apache.commons.math.distribution.DistributionFactoryImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl"
reference "org.apache.commons.math.distribution.DistributionFactoryImpl" "org.apache.commons.math.distribution.NormalDistributionImpl"
reference "org.apache.commons.math.distribution.DistributionFactoryImpl" "org.apache.commons.math.distribution.PoissonDistributionImpl"
reference "org.apache.commons.math.distribution.DistributionFactoryImpl" "org.apache.commons.math.distribution.DistributionFactory"
call "org.apache.commons.math.distribution.DistributionFactoryImpl.DistributionFactoryImpl(0)" "org.apache.commons.math.distribution.DistributionFactory.DistributionFactory(0)"
contain "org.apache.commons.math.distribution.DistributionFactoryImpl" "org.apache.commons.math.distribution.DistributionFactoryImpl.DistributionFactoryImpl(0)"
call "org.apache.commons.math.distribution.DistributionFactoryImpl.createChiSquareDistribution(1)" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.ChiSquaredDistributionImpl(1)"
contain "org.apache.commons.math.distribution.DistributionFactoryImpl" "org.apache.commons.math.distribution.DistributionFactoryImpl.createChiSquareDistribution(1)"
call "org.apache.commons.math.distribution.DistributionFactoryImpl.createGammaDistribution(2)" "org.apache.commons.math.distribution.GammaDistributionImpl.GammaDistributionImpl(2)"
contain "org.apache.commons.math.distribution.DistributionFactoryImpl" "org.apache.commons.math.distribution.DistributionFactoryImpl.createGammaDistribution(2)"
call "org.apache.commons.math.distribution.DistributionFactoryImpl.createTDistribution(1)" "org.apache.commons.math.distribution.TDistributionImpl.TDistributionImpl(1)"
contain "org.apache.commons.math.distribution.DistributionFactoryImpl" "org.apache.commons.math.distribution.DistributionFactoryImpl.createTDistribution(1)"
call "org.apache.commons.math.distribution.DistributionFactoryImpl.createFDistribution(2)" "org.apache.commons.math.distribution.FDistributionImpl.FDistributionImpl(2)"
contain "org.apache.commons.math.distribution.DistributionFactoryImpl" "org.apache.commons.math.distribution.DistributionFactoryImpl.createFDistribution(2)"
call "org.apache.commons.math.distribution.DistributionFactoryImpl.createExponentialDistribution(1)" "org.apache.commons.math.distribution.ExponentialDistributionImpl.ExponentialDistributionImpl(1)"
contain "org.apache.commons.math.distribution.DistributionFactoryImpl" "org.apache.commons.math.distribution.DistributionFactoryImpl.createExponentialDistribution(1)"
call "org.apache.commons.math.distribution.DistributionFactoryImpl.createBinomialDistribution(2)" "org.apache.commons.math.distribution.BinomialDistributionImpl.BinomialDistributionImpl(2)"
contain "org.apache.commons.math.distribution.DistributionFactoryImpl" "org.apache.commons.math.distribution.DistributionFactoryImpl.createBinomialDistribution(2)"
call "org.apache.commons.math.distribution.DistributionFactoryImpl.createHypergeometricDistribution(3)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.HypergeometricDistributionImpl(3)"
contain "org.apache.commons.math.distribution.DistributionFactoryImpl" "org.apache.commons.math.distribution.DistributionFactoryImpl.createHypergeometricDistribution(3)"
call "org.apache.commons.math.distribution.DistributionFactoryImpl.createNormalDistribution(2)" "org.apache.commons.math.distribution.NormalDistributionImpl.NormalDistributionImpl(2)"
contain "org.apache.commons.math.distribution.DistributionFactoryImpl" "org.apache.commons.math.distribution.DistributionFactoryImpl.createNormalDistribution(2)"
call "org.apache.commons.math.distribution.DistributionFactoryImpl.createNormalDistribution(0)" "org.apache.commons.math.distribution.NormalDistributionImpl.NormalDistributionImpl(0)"
contain "org.apache.commons.math.distribution.DistributionFactoryImpl" "org.apache.commons.math.distribution.DistributionFactoryImpl.createNormalDistribution(0)"
call "org.apache.commons.math.distribution.DistributionFactoryImpl.createPoissonDistribution(1)" "org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(1)"
contain "org.apache.commons.math.distribution.DistributionFactoryImpl" "org.apache.commons.math.distribution.DistributionFactoryImpl.createPoissonDistribution(1)"
reference "org.apache.commons.math.random.NotPositiveDefiniteMatrixException" "org.apache.commons.math.MathException"
call "org.apache.commons.math.random.NotPositiveDefiniteMatrixException.NotPositiveDefiniteMatrixException(0)" "org.apache.commons.math.MathException.MathException(2)"
contain "org.apache.commons.math.random.NotPositiveDefiniteMatrixException" "org.apache.commons.math.random.NotPositiveDefiniteMatrixException.NotPositiveDefiniteMatrixException(0)"
contain "org.apache.commons.math.random.NotPositiveDefiniteMatrixException" "org.apache.commons.math.random.NotPositiveDefiniteMatrixException.serialVersionUID"
reference "org.apache.commons.math.stat.inference.ChiSquareTest" "org.apache.commons.math.MathException"
contain "org.apache.commons.math.stat.inference.ChiSquareTest" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquare(2)"
contain "org.apache.commons.math.stat.inference.ChiSquareTest" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareTest(2)"
contain "org.apache.commons.math.stat.inference.ChiSquareTest" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareTest(3)"
contain "org.apache.commons.math.stat.inference.ChiSquareTest" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquare(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTest" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareTest(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTest" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareTest(2)"
contain "org.apache.commons.math.stat.inference.ChiSquareTest" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareDataSetsComparison(2)"
contain "org.apache.commons.math.stat.inference.ChiSquareTest" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareTestDataSetsComparison(2)"
contain "org.apache.commons.math.stat.inference.ChiSquareTest" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareTestDataSetsComparison(3)"
reference "org.apache.commons.math.stat.descriptive.rank.Percentile" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic"
call "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)"
contain "org.apache.commons.math.stat.descriptive.rank.Percentile" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(0)"
call "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic.AbstractUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)" "org.apache.commons.math.stat.descriptive.rank.Percentile.quantile"
call "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)" "org.apache.commons.math.stat.descriptive.rank.Percentile.setQuantile(1)"
contain "org.apache.commons.math.stat.descriptive.rank.Percentile" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)"
call "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(2)" "org.apache.commons.math.stat.descriptive.rank.Percentile.test(3)"
call "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(2)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(4)"
contain "org.apache.commons.math.stat.descriptive.rank.Percentile" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(2)"
reference "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(3)" "org.apache.commons.math.stat.descriptive.rank.Percentile.quantile"
call "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(3)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(4)"
contain "org.apache.commons.math.stat.descriptive.rank.Percentile" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(3)"
call "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(4)" "org.apache.commons.math.stat.descriptive.rank.Percentile.test(3)"
contain "org.apache.commons.math.stat.descriptive.rank.Percentile" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(4)"
reference "org.apache.commons.math.stat.descriptive.rank.Percentile.getQuantile(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.quantile"
contain "org.apache.commons.math.stat.descriptive.rank.Percentile" "org.apache.commons.math.stat.descriptive.rank.Percentile.getQuantile(0)"
reference "org.apache.commons.math.stat.descriptive.rank.Percentile.setQuantile(1)" "org.apache.commons.math.stat.descriptive.rank.Percentile.quantile"
contain "org.apache.commons.math.stat.descriptive.rank.Percentile" "org.apache.commons.math.stat.descriptive.rank.Percentile.setQuantile(1)"
contain "org.apache.commons.math.stat.descriptive.rank.Percentile" "org.apache.commons.math.stat.descriptive.rank.Percentile.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.rank.Percentile" "org.apache.commons.math.stat.descriptive.rank.Percentile.quantile"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator" "double[]"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator" "org.apache.commons.math.ode.RungeKuttaStepInterpolator"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator" "org.apache.commons.math.ode.DummyStepInterpolator"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator" "org.apache.commons.math.ode.FirstOrderDifferentialEquations"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator" "org.apache.commons.math.ode.StepHandler"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator" "org.apache.commons.math.ode.SwitchingFunctionsHandler"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator" "org.apache.commons.math.ode.AbstractStepInterpolator"
call "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.RungeKuttaFehlbergIntegrator(9)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(4)"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.RungeKuttaFehlbergIntegrator(9)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.fsal"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.RungeKuttaFehlbergIntegrator(9)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.c"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.RungeKuttaFehlbergIntegrator(9)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.a"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.RungeKuttaFehlbergIntegrator(9)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.b"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.RungeKuttaFehlbergIntegrator(9)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.prototype"
call "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.RungeKuttaFehlbergIntegrator(9)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.getOrder(0)"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.RungeKuttaFehlbergIntegrator(9)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.exp"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.RungeKuttaFehlbergIntegrator(9)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.safety"
call "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.RungeKuttaFehlbergIntegrator(9)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.setMinReduction(1)"
call "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.RungeKuttaFehlbergIntegrator(9)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.setMaxGrowth(1)"
contain "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.RungeKuttaFehlbergIntegrator(9)"
call "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.RungeKuttaFehlbergIntegrator(9)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(4)"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.RungeKuttaFehlbergIntegrator(9)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.fsal"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.RungeKuttaFehlbergIntegrator(9)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.c"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.RungeKuttaFehlbergIntegrator(9)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.a"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.RungeKuttaFehlbergIntegrator(9)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.b"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.RungeKuttaFehlbergIntegrator(9)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.prototype"
call "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.RungeKuttaFehlbergIntegrator(9)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.getOrder(0)"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.RungeKuttaFehlbergIntegrator(9)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.exp"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.RungeKuttaFehlbergIntegrator(9)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.safety"
call "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.RungeKuttaFehlbergIntegrator(9)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.setMinReduction(1)"
call "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.RungeKuttaFehlbergIntegrator(9)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.setMaxGrowth(1)"
contain "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.RungeKuttaFehlbergIntegrator(9)"
contain "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.getName(0)"
contain "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.getOrder(0)"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.getSafety(0)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.safety"
contain "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.getSafety(0)"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.setSafety(1)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.safety"
contain "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.setSafety(1)"
call "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.FirstOrderDifferentialEquations.getDimension(0)"
call "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.IntegratorException.IntegratorException(2)"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.c"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.handler"
call "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.StepHandler.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.switchesHandler"
call "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.isEmpty(0)"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.prototype"
call "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.clone(0)"
call "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.reinitialize(4)"
call "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.DummyStepInterpolator.DummyStepInterpolator(2)"
call "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.AbstractStepInterpolator.storeTime(1)"
call "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.StepHandler.reset(0)"
call "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.AbstractStepInterpolator.shift(0)"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.fsal"
call "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.FirstOrderDifferentialEquations.computeDerivatives(3)"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.vecAbsoluteTolerance"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.scalAbsoluteTolerance"
call "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.getOrder(0)"
call "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.initializeStep(9)"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.a"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.b"
call "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.estimateError(4)"
call "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.evaluateStep(1)"
call "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.getEventTime(0)"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.maxGrowth"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.minReduction"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.safety"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.exp"
call "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.filterStep(2)"
call "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.stepAccepted(2)"
call "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.stop(0)"
call "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.StepHandler.handleStep(2)"
call "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.reset(2)"
contain "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.integrate(5)"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.getMinReduction(0)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.minReduction"
contain "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.getMinReduction(0)"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.setMinReduction(1)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.minReduction"
contain "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.setMinReduction(1)"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.getMaxGrowth(0)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.maxGrowth"
contain "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.getMaxGrowth(0)"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.setMaxGrowth(1)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.maxGrowth"
contain "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.setMaxGrowth(1)"
contain "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.estimateError(4)"
contain "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.fsal"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.c" "double[]"
contain "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.c"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.a" "double[][]"
contain "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.a"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.b" "double[]"
contain "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.b"
reference "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.prototype" "org.apache.commons.math.ode.RungeKuttaStepInterpolator"
contain "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.prototype"
contain "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.exp"
contain "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.safety"
contain "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.minReduction"
contain "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.maxGrowth"
reference "org.apache.commons.math.optimization.NelderMead" "org.apache.commons.math.optimization.PointCostPair"
reference "org.apache.commons.math.optimization.NelderMead" "org.apache.commons.math.optimization.DirectSearchOptimizer"
reference "org.apache.commons.math.optimization.NelderMead" "org.apache.commons.math.optimization.CostException"
call "org.apache.commons.math.optimization.NelderMead.NelderMead(0)" "org.apache.commons.math.optimization.DirectSearchOptimizer.DirectSearchOptimizer(0)"
reference "org.apache.commons.math.optimization.NelderMead.NelderMead(0)" "org.apache.commons.math.optimization.NelderMead.rho"
reference "org.apache.commons.math.optimization.NelderMead.NelderMead(0)" "org.apache.commons.math.optimization.NelderMead.khi"
reference "org.apache.commons.math.optimization.NelderMead.NelderMead(0)" "org.apache.commons.math.optimization.NelderMead.gamma"
reference "org.apache.commons.math.optimization.NelderMead.NelderMead(0)" "org.apache.commons.math.optimization.NelderMead.sigma"
contain "org.apache.commons.math.optimization.NelderMead" "org.apache.commons.math.optimization.NelderMead.NelderMead(0)"
call "org.apache.commons.math.optimization.NelderMead.NelderMead(4)" "org.apache.commons.math.optimization.DirectSearchOptimizer.DirectSearchOptimizer(0)"
reference "org.apache.commons.math.optimization.NelderMead.NelderMead(4)" "org.apache.commons.math.optimization.NelderMead.rho"
reference "org.apache.commons.math.optimization.NelderMead.NelderMead(4)" "org.apache.commons.math.optimization.NelderMead.khi"
reference "org.apache.commons.math.optimization.NelderMead.NelderMead(4)" "org.apache.commons.math.optimization.NelderMead.gamma"
reference "org.apache.commons.math.optimization.NelderMead.NelderMead(4)" "org.apache.commons.math.optimization.NelderMead.sigma"
contain "org.apache.commons.math.optimization.NelderMead" "org.apache.commons.math.optimization.NelderMead.NelderMead(4)"
reference "org.apache.commons.math.optimization.NelderMead.iterateSimplex(0)" "org.apache.commons.math.optimization.NelderMead.simplex"
reference "org.apache.commons.math.optimization.NelderMead.iterateSimplex(0)" "org.apache.commons.math.optimization.PointCostPair.cost"
reference "org.apache.commons.math.optimization.NelderMead.iterateSimplex(0)" "org.apache.commons.math.optimization.PointCostPair.point"
reference "org.apache.commons.math.optimization.NelderMead.iterateSimplex(0)" "org.apache.commons.math.optimization.NelderMead.rho"
call "org.apache.commons.math.optimization.NelderMead.iterateSimplex(0)" "org.apache.commons.math.optimization.NelderMead.evaluateCost(1)"
call "org.apache.commons.math.optimization.NelderMead.iterateSimplex(0)" "org.apache.commons.math.optimization.PointCostPair.PointCostPair(2)"
call "org.apache.commons.math.optimization.NelderMead.iterateSimplex(0)" "org.apache.commons.math.optimization.NelderMead.replaceWorstPoint(1)"
reference "org.apache.commons.math.optimization.NelderMead.iterateSimplex(0)" "org.apache.commons.math.optimization.NelderMead.khi"
reference "org.apache.commons.math.optimization.NelderMead.iterateSimplex(0)" "org.apache.commons.math.optimization.NelderMead.gamma"
reference "org.apache.commons.math.optimization.NelderMead.iterateSimplex(0)" "org.apache.commons.math.optimization.NelderMead.sigma"
call "org.apache.commons.math.optimization.NelderMead.iterateSimplex(0)" "org.apache.commons.math.optimization.NelderMead.evaluateSimplex(0)"
contain "org.apache.commons.math.optimization.NelderMead" "org.apache.commons.math.optimization.NelderMead.iterateSimplex(0)"
contain "org.apache.commons.math.optimization.NelderMead" "org.apache.commons.math.optimization.NelderMead.rho"
contain "org.apache.commons.math.optimization.NelderMead" "org.apache.commons.math.optimization.NelderMead.khi"
contain "org.apache.commons.math.optimization.NelderMead" "org.apache.commons.math.optimization.NelderMead.gamma"
contain "org.apache.commons.math.optimization.NelderMead" "org.apache.commons.math.optimization.NelderMead.sigma"
reference "org.apache.commons.math.optimization.MultiDirectional" "org.apache.commons.math.optimization.PointCostPair"
reference "org.apache.commons.math.optimization.MultiDirectional" "org.apache.commons.math.optimization.DirectSearchOptimizer"
reference "org.apache.commons.math.optimization.MultiDirectional" "org.apache.commons.math.optimization.CostException"
call "org.apache.commons.math.optimization.MultiDirectional.MultiDirectional(0)" "org.apache.commons.math.optimization.DirectSearchOptimizer.DirectSearchOptimizer(0)"
reference "org.apache.commons.math.optimization.MultiDirectional.MultiDirectional(0)" "org.apache.commons.math.optimization.MultiDirectional.khi"
reference "org.apache.commons.math.optimization.MultiDirectional.MultiDirectional(0)" "org.apache.commons.math.optimization.MultiDirectional.gamma"
contain "org.apache.commons.math.optimization.MultiDirectional" "org.apache.commons.math.optimization.MultiDirectional.MultiDirectional(0)"
call "org.apache.commons.math.optimization.MultiDirectional.MultiDirectional(2)" "org.apache.commons.math.optimization.DirectSearchOptimizer.DirectSearchOptimizer(0)"
reference "org.apache.commons.math.optimization.MultiDirectional.MultiDirectional(2)" "org.apache.commons.math.optimization.MultiDirectional.khi"
reference "org.apache.commons.math.optimization.MultiDirectional.MultiDirectional(2)" "org.apache.commons.math.optimization.MultiDirectional.gamma"
contain "org.apache.commons.math.optimization.MultiDirectional" "org.apache.commons.math.optimization.MultiDirectional.MultiDirectional(2)"
reference "org.apache.commons.math.optimization.MultiDirectional.iterateSimplex(0)" "org.apache.commons.math.optimization.MultiDirectional.simplex"
reference "org.apache.commons.math.optimization.MultiDirectional.iterateSimplex(0)" "org.apache.commons.math.optimization.PointCostPair.cost"
call "org.apache.commons.math.optimization.MultiDirectional.iterateSimplex(0)" "org.apache.commons.math.optimization.MultiDirectional.evaluateNewSimplex(2)"
reference "org.apache.commons.math.optimization.MultiDirectional.iterateSimplex(0)" "org.apache.commons.math.optimization.MultiDirectional.khi"
reference "org.apache.commons.math.optimization.MultiDirectional.iterateSimplex(0)" "org.apache.commons.math.optimization.MultiDirectional.gamma"
contain "org.apache.commons.math.optimization.MultiDirectional" "org.apache.commons.math.optimization.MultiDirectional.iterateSimplex(0)"
reference "org.apache.commons.math.optimization.MultiDirectional.evaluateNewSimplex(2)" "org.apache.commons.math.optimization.PointCostPair.point"
reference "org.apache.commons.math.optimization.MultiDirectional.evaluateNewSimplex(2)" "org.apache.commons.math.optimization.MultiDirectional.simplex"
call "org.apache.commons.math.optimization.MultiDirectional.evaluateNewSimplex(2)" "org.apache.commons.math.optimization.PointCostPair.PointCostPair(2)"
call "org.apache.commons.math.optimization.MultiDirectional.evaluateNewSimplex(2)" "org.apache.commons.math.optimization.MultiDirectional.evaluateSimplex(0)"
reference "org.apache.commons.math.optimization.MultiDirectional.evaluateNewSimplex(2)" "org.apache.commons.math.optimization.PointCostPair.cost"
contain "org.apache.commons.math.optimization.MultiDirectional" "org.apache.commons.math.optimization.MultiDirectional.evaluateNewSimplex(2)"
contain "org.apache.commons.math.optimization.MultiDirectional" "org.apache.commons.math.optimization.MultiDirectional.khi"
contain "org.apache.commons.math.optimization.MultiDirectional" "org.apache.commons.math.optimization.MultiDirectional.gamma"
reference "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl"
reference "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.AbstractIntegerDistribution"
reference "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.PoissonDistribution"
reference "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.NormalDistribution"
reference "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.util.MathUtils"
reference "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.special.Gamma"
call "org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(1)" "org.apache.commons.math.distribution.NormalDistributionImpl.NormalDistributionImpl(0)"
call "org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(1)" "org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(2)"
contain "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(1)"
call "org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(2)" "org.apache.commons.math.distribution.AbstractIntegerDistribution.AbstractIntegerDistribution(0)"
call "org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(2)" "org.apache.commons.math.distribution.PoissonDistributionImpl.setNormal(1)"
call "org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(2)" "org.apache.commons.math.distribution.PoissonDistributionImpl.setMean(1)"
contain "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(2)"
reference "org.apache.commons.math.distribution.PoissonDistributionImpl.getMean(0)" "org.apache.commons.math.distribution.PoissonDistributionImpl.mean"
contain "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.PoissonDistributionImpl.getMean(0)"
reference "org.apache.commons.math.distribution.PoissonDistributionImpl.setMean(1)" "org.apache.commons.math.distribution.PoissonDistributionImpl.mean"
reference "org.apache.commons.math.distribution.PoissonDistributionImpl.setMean(1)" "org.apache.commons.math.distribution.PoissonDistributionImpl.normal"
call "org.apache.commons.math.distribution.PoissonDistributionImpl.setMean(1)" "org.apache.commons.math.distribution.NormalDistribution.setMean(1)"
call "org.apache.commons.math.distribution.PoissonDistributionImpl.setMean(1)" "org.apache.commons.math.distribution.NormalDistribution.setStandardDeviation(1)"
contain "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.PoissonDistributionImpl.setMean(1)"
call "org.apache.commons.math.distribution.PoissonDistributionImpl.probability(1)" "org.apache.commons.math.distribution.PoissonDistributionImpl.getMean(0)"
call "org.apache.commons.math.distribution.PoissonDistributionImpl.probability(1)" "org.apache.commons.math.util.MathUtils.factorialDouble(1)"
reference "org.apache.commons.math.distribution.PoissonDistributionImpl.probability(1)" "org.apache.commons.math.distribution.PoissonDistributionImpl.mean"
contain "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.PoissonDistributionImpl.probability(1)"
reference "org.apache.commons.math.distribution.PoissonDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.PoissonDistributionImpl.mean"
call "org.apache.commons.math.distribution.PoissonDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.special.Gamma.regularizedGammaQ(4)"
contain "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.PoissonDistributionImpl.cumulativeProbability(1)"
reference "org.apache.commons.math.distribution.PoissonDistributionImpl.normalApproximateProbability(1)" "org.apache.commons.math.distribution.PoissonDistributionImpl.normal"
call "org.apache.commons.math.distribution.PoissonDistributionImpl.normalApproximateProbability(1)" "org.apache.commons.math.distribution.NormalDistribution.cumulativeProbability(1)"
contain "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.PoissonDistributionImpl.normalApproximateProbability(1)"
contain "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.PoissonDistributionImpl.getDomainLowerBound(1)"
contain "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.PoissonDistributionImpl.getDomainUpperBound(1)"
reference "org.apache.commons.math.distribution.PoissonDistributionImpl.setNormal(1)" "org.apache.commons.math.distribution.PoissonDistributionImpl.normal"
contain "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.PoissonDistributionImpl.setNormal(1)"
contain "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.PoissonDistributionImpl.serialVersionUID"
reference "org.apache.commons.math.distribution.PoissonDistributionImpl.normal" "org.apache.commons.math.distribution.NormalDistribution"
contain "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.PoissonDistributionImpl.normal"
contain "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.PoissonDistributionImpl.mean"
reference "org.apache.commons.math.optimization.CostFunction" "org.apache.commons.math.optimization.CostException"
contain "org.apache.commons.math.optimization.CostFunction" "org.apache.commons.math.optimization.CostFunction.cost(1)"
reference "org.apache.commons.math.random.RandomAdaptor" "org.apache.commons.math.random.RandomGenerator"
reference "org.apache.commons.math.random.RandomAdaptor.RandomAdaptor(0)" "org.apache.commons.math.random.RandomAdaptor.randomGenerator"
contain "org.apache.commons.math.random.RandomAdaptor" "org.apache.commons.math.random.RandomAdaptor.RandomAdaptor(0)"
reference "org.apache.commons.math.random.RandomAdaptor.RandomAdaptor(1)" "org.apache.commons.math.random.RandomAdaptor.randomGenerator"
contain "org.apache.commons.math.random.RandomAdaptor" "org.apache.commons.math.random.RandomAdaptor.RandomAdaptor(1)"
call "org.apache.commons.math.random.RandomAdaptor.createAdaptor(1)" "org.apache.commons.math.random.RandomAdaptor.RandomAdaptor(1)"
contain "org.apache.commons.math.random.RandomAdaptor" "org.apache.commons.math.random.RandomAdaptor.createAdaptor(1)"
reference "org.apache.commons.math.random.RandomAdaptor.nextBoolean(0)" "org.apache.commons.math.random.RandomAdaptor.randomGenerator"
call "org.apache.commons.math.random.RandomAdaptor.nextBoolean(0)" "org.apache.commons.math.random.RandomGenerator.nextBoolean(0)"
contain "org.apache.commons.math.random.RandomAdaptor" "org.apache.commons.math.random.RandomAdaptor.nextBoolean(0)"
reference "org.apache.commons.math.random.RandomAdaptor.nextBytes(1)" "org.apache.commons.math.random.RandomAdaptor.randomGenerator"
call "org.apache.commons.math.random.RandomAdaptor.nextBytes(1)" "org.apache.commons.math.random.RandomGenerator.nextBytes(1)"
contain "org.apache.commons.math.random.RandomAdaptor" "org.apache.commons.math.random.RandomAdaptor.nextBytes(1)"
reference "org.apache.commons.math.random.RandomAdaptor.nextDouble(0)" "org.apache.commons.math.random.RandomAdaptor.randomGenerator"
call "org.apache.commons.math.random.RandomAdaptor.nextDouble(0)" "org.apache.commons.math.random.RandomGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.RandomAdaptor" "org.apache.commons.math.random.RandomAdaptor.nextDouble(0)"
reference "org.apache.commons.math.random.RandomAdaptor.nextFloat(0)" "org.apache.commons.math.random.RandomAdaptor.randomGenerator"
call "org.apache.commons.math.random.RandomAdaptor.nextFloat(0)" "org.apache.commons.math.random.RandomGenerator.nextFloat(0)"
contain "org.apache.commons.math.random.RandomAdaptor" "org.apache.commons.math.random.RandomAdaptor.nextFloat(0)"
reference "org.apache.commons.math.random.RandomAdaptor.nextGaussian(0)" "org.apache.commons.math.random.RandomAdaptor.randomGenerator"
call "org.apache.commons.math.random.RandomAdaptor.nextGaussian(0)" "org.apache.commons.math.random.RandomGenerator.nextGaussian(0)"
contain "org.apache.commons.math.random.RandomAdaptor" "org.apache.commons.math.random.RandomAdaptor.nextGaussian(0)"
reference "org.apache.commons.math.random.RandomAdaptor.nextInt(0)" "org.apache.commons.math.random.RandomAdaptor.randomGenerator"
call "org.apache.commons.math.random.RandomAdaptor.nextInt(0)" "org.apache.commons.math.random.RandomGenerator.nextInt(0)"
contain "org.apache.commons.math.random.RandomAdaptor" "org.apache.commons.math.random.RandomAdaptor.nextInt(0)"
reference "org.apache.commons.math.random.RandomAdaptor.nextInt(1)" "org.apache.commons.math.random.RandomAdaptor.randomGenerator"
call "org.apache.commons.math.random.RandomAdaptor.nextInt(1)" "org.apache.commons.math.random.RandomGenerator.nextInt(1)"
contain "org.apache.commons.math.random.RandomAdaptor" "org.apache.commons.math.random.RandomAdaptor.nextInt(1)"
reference "org.apache.commons.math.random.RandomAdaptor.nextLong(0)" "org.apache.commons.math.random.RandomAdaptor.randomGenerator"
call "org.apache.commons.math.random.RandomAdaptor.nextLong(0)" "org.apache.commons.math.random.RandomGenerator.nextLong(0)"
contain "org.apache.commons.math.random.RandomAdaptor" "org.apache.commons.math.random.RandomAdaptor.nextLong(0)"
reference "org.apache.commons.math.random.RandomAdaptor.setSeed(1)" "org.apache.commons.math.random.RandomAdaptor.randomGenerator"
call "org.apache.commons.math.random.RandomAdaptor.setSeed(1)" "org.apache.commons.math.random.RandomGenerator.setSeed(1)"
contain "org.apache.commons.math.random.RandomAdaptor" "org.apache.commons.math.random.RandomAdaptor.setSeed(1)"
contain "org.apache.commons.math.random.RandomAdaptor" "org.apache.commons.math.random.RandomAdaptor.serialVersionUID"
reference "org.apache.commons.math.random.RandomAdaptor.randomGenerator" "org.apache.commons.math.random.RandomGenerator"
contain "org.apache.commons.math.random.RandomAdaptor" "org.apache.commons.math.random.RandomAdaptor.randomGenerator"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.estimation.EstimationException"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.linear.RealMatrixImpl"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.linear.InvalidMatrixException"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.estimation.Estimator"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.estimation.EstimationProblem"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.estimation.WeightedMeasurement"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator.GaussNewtonEstimator(3)" "org.apache.commons.math.estimation.GaussNewtonEstimator.maxIterations"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator.GaussNewtonEstimator(3)" "org.apache.commons.math.estimation.GaussNewtonEstimator.steadyStateThreshold"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator.GaussNewtonEstimator(3)" "org.apache.commons.math.estimation.GaussNewtonEstimator.convergence"
contain "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.estimation.GaussNewtonEstimator.GaussNewtonEstimator(3)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.estimation.GaussNewtonEstimator.maxIterations"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.estimation.EstimationException.EstimationException(2)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.estimation.GaussNewtonEstimator.linearEstimate(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.estimation.GaussNewtonEstimator.evaluateCriterion(1)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.estimation.GaussNewtonEstimator.steadyStateThreshold"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.estimation.GaussNewtonEstimator.convergence"
contain "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.linearEstimate(1)" "org.apache.commons.math.estimation.EstimationProblem.getUnboundParameters(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.linearEstimate(1)" "org.apache.commons.math.estimation.EstimationProblem.getMeasurements(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.linearEstimate(1)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.linearEstimate(1)" "org.apache.commons.math.linear.RealMatrixImpl.getDataRef(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.linearEstimate(1)" "org.apache.commons.math.estimation.WeightedMeasurement.isIgnored(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.linearEstimate(1)" "org.apache.commons.math.estimation.WeightedMeasurement.getWeight(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.linearEstimate(1)" "org.apache.commons.math.estimation.WeightedMeasurement.getResidual(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.linearEstimate(1)" "org.apache.commons.math.estimation.WeightedMeasurement.getPartial(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.linearEstimate(1)" "org.apache.commons.math.linear.RealMatrix.add(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.linearEstimate(1)" "org.apache.commons.math.linear.RealMatrix.solve(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.linearEstimate(1)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.linearEstimate(1)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.linearEstimate(1)" "org.apache.commons.math.estimation.EstimatedParameter.setEstimate(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.linearEstimate(1)" "org.apache.commons.math.estimation.EstimationException.EstimationException(1)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.estimation.GaussNewtonEstimator.linearEstimate(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.evaluateCriterion(1)" "org.apache.commons.math.estimation.EstimationProblem.getMeasurements(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.evaluateCriterion(1)" "org.apache.commons.math.estimation.WeightedMeasurement.getResidual(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.evaluateCriterion(1)" "org.apache.commons.math.estimation.WeightedMeasurement.getWeight(0)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.estimation.GaussNewtonEstimator.evaluateCriterion(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.getRMS(1)" "org.apache.commons.math.estimation.GaussNewtonEstimator.evaluateCriterion(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.getRMS(1)" "org.apache.commons.math.estimation.EstimationProblem.getMeasurements(0)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.estimation.GaussNewtonEstimator.getRMS(1)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.estimation.GaussNewtonEstimator.maxIterations"
contain "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.estimation.GaussNewtonEstimator.steadyStateThreshold"
contain "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.estimation.GaussNewtonEstimator.convergence"
contain "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID"
reference "org.apache.commons.math.ode.SwitchState.1" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.SwitchState.1" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.ode.SwitchState.1" "org.apache.commons.math.analysis.UnivariateRealFunction"
reference "org.apache.commons.math.ode.SwitchState.1" "org.apache.commons.math.ode.StepInterpolator"
reference "org.apache.commons.math.ode.SwitchState.1" "org.apache.commons.math.ode.SwitchState"
reference "org.apache.commons.math.ode.SwitchState.1" "org.apache.commons.math.ode.SwitchingFunction"
reference "org.apache.commons.math.ode.SwitchState.1.{...}" "org.apache.commons.math.ode.SwitchState.1.this$0"
reference "org.apache.commons.math.ode.SwitchState.1.{...}" "org.apache.commons.math.ode.SwitchState.1.val$interpolator"
contain "org.apache.commons.math.ode.SwitchState.1" "org.apache.commons.math.ode.SwitchState.1.{...}"
reference "org.apache.commons.math.ode.SwitchState.1.value(1)" "org.apache.commons.math.ode.SwitchState.1.val$interpolator"
call "org.apache.commons.math.ode.SwitchState.1.value(1)" "org.apache.commons.math.ode.StepInterpolator.setInterpolatedTime(1)"
reference "org.apache.commons.math.ode.SwitchState.1.value(1)" "org.apache.commons.math.ode.SwitchState.1.this$0"
call "org.apache.commons.math.ode.SwitchState.1.value(1)" "org.apache.commons.math.ode.SwitchState.access$000(1)"
call "org.apache.commons.math.ode.SwitchState.1.value(1)" "org.apache.commons.math.ode.StepInterpolator.getInterpolatedState(0)"
call "org.apache.commons.math.ode.SwitchState.1.value(1)" "org.apache.commons.math.ode.SwitchingFunction.g(2)"
call "org.apache.commons.math.ode.SwitchState.1.value(1)" "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(2)"
contain "org.apache.commons.math.ode.SwitchState.1" "org.apache.commons.math.ode.SwitchState.1.value(1)"
reference "org.apache.commons.math.ode.SwitchState.1.val$interpolator" "org.apache.commons.math.ode.StepInterpolator"
contain "org.apache.commons.math.ode.SwitchState.1" "org.apache.commons.math.ode.SwitchState.1.val$interpolator"
reference "org.apache.commons.math.ode.SwitchState.1.this$0" "org.apache.commons.math.ode.SwitchState"
contain "org.apache.commons.math.ode.SwitchState.1" "org.apache.commons.math.ode.SwitchState.1.this$0"
reference "org.apache.commons.math.distribution.AbstractDistribution" "org.apache.commons.math.distribution.Distribution"
reference "org.apache.commons.math.distribution.AbstractDistribution" "org.apache.commons.math.MathException"
contain "org.apache.commons.math.distribution.AbstractDistribution" "org.apache.commons.math.distribution.AbstractDistribution.AbstractDistribution(0)"
call "org.apache.commons.math.distribution.AbstractDistribution.cumulativeProbability(2)" "org.apache.commons.math.distribution.AbstractDistribution.cumulativeProbability(1)"
contain "org.apache.commons.math.distribution.AbstractDistribution" "org.apache.commons.math.distribution.AbstractDistribution.cumulativeProbability(2)"
contain "org.apache.commons.math.distribution.AbstractDistribution" "org.apache.commons.math.distribution.AbstractDistribution.serialVersionUID"
reference "org.apache.commons.math.ode.DerivativeException" "org.apache.commons.math.MathException"
call "org.apache.commons.math.ode.DerivativeException.DerivativeException(2)" "org.apache.commons.math.MathException.MathException(2)"
contain "org.apache.commons.math.ode.DerivativeException" "org.apache.commons.math.ode.DerivativeException.DerivativeException(2)"
call "org.apache.commons.math.ode.DerivativeException.DerivativeException(1)" "org.apache.commons.math.MathException.MathException(1)"
contain "org.apache.commons.math.ode.DerivativeException" "org.apache.commons.math.ode.DerivativeException.DerivativeException(1)"
contain "org.apache.commons.math.ode.DerivativeException" "org.apache.commons.math.ode.DerivativeException.serialVersionUID"
reference "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)" "org.apache.commons.math.estimation.EstimatedParameter.name"
reference "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)" "org.apache.commons.math.estimation.EstimatedParameter.estimate"
reference "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)" "org.apache.commons.math.estimation.EstimatedParameter.bound"
contain "org.apache.commons.math.estimation.EstimatedParameter" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
reference "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(3)" "org.apache.commons.math.estimation.EstimatedParameter.name"
reference "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(3)" "org.apache.commons.math.estimation.EstimatedParameter.estimate"
reference "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(3)" "org.apache.commons.math.estimation.EstimatedParameter.bound"
contain "org.apache.commons.math.estimation.EstimatedParameter" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(3)"
reference "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(1)" "org.apache.commons.math.estimation.EstimatedParameter.name"
reference "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(1)" "org.apache.commons.math.estimation.EstimatedParameter.estimate"
reference "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(1)" "org.apache.commons.math.estimation.EstimatedParameter.bound"
contain "org.apache.commons.math.estimation.EstimatedParameter" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(1)"
reference "org.apache.commons.math.estimation.EstimatedParameter.setEstimate(1)" "org.apache.commons.math.estimation.EstimatedParameter.estimate"
contain "org.apache.commons.math.estimation.EstimatedParameter" "org.apache.commons.math.estimation.EstimatedParameter.setEstimate(1)"
reference "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)" "org.apache.commons.math.estimation.EstimatedParameter.estimate"
contain "org.apache.commons.math.estimation.EstimatedParameter" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.EstimatedParameter.getName(0)" "org.apache.commons.math.estimation.EstimatedParameter.name"
contain "org.apache.commons.math.estimation.EstimatedParameter" "org.apache.commons.math.estimation.EstimatedParameter.getName(0)"
reference "org.apache.commons.math.estimation.EstimatedParameter.setBound(1)" "org.apache.commons.math.estimation.EstimatedParameter.bound"
contain "org.apache.commons.math.estimation.EstimatedParameter" "org.apache.commons.math.estimation.EstimatedParameter.setBound(1)"
reference "org.apache.commons.math.estimation.EstimatedParameter.isBound(0)" "org.apache.commons.math.estimation.EstimatedParameter.bound"
contain "org.apache.commons.math.estimation.EstimatedParameter" "org.apache.commons.math.estimation.EstimatedParameter.isBound(0)"
contain "org.apache.commons.math.estimation.EstimatedParameter" "org.apache.commons.math.estimation.EstimatedParameter.name"
contain "org.apache.commons.math.estimation.EstimatedParameter" "org.apache.commons.math.estimation.EstimatedParameter.estimate"
contain "org.apache.commons.math.estimation.EstimatedParameter" "org.apache.commons.math.estimation.EstimatedParameter.bound"
contain "org.apache.commons.math.estimation.EstimatedParameter" "org.apache.commons.math.estimation.EstimatedParameter.serialVersionUID"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.DuplicateSampleAbscissaException"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.analysis.UnivariateRealFunction"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.PolynomialFunctionLagrangeForm(2)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.verifyInterpolationArray(2)"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.PolynomialFunctionLagrangeForm(2)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.x"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.PolynomialFunctionLagrangeForm(2)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.y"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.PolynomialFunctionLagrangeForm(2)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.coefficientsComputed"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.PolynomialFunctionLagrangeForm(2)"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.value(1)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.x"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.value(1)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.y"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.value(1)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.evaluate(3)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.value(1)" "org.apache.commons.math.DuplicateSampleAbscissaException.getPattern(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.value(1)" "org.apache.commons.math.DuplicateSampleAbscissaException.getArguments(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.value(1)" "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(4)"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.value(1)"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.degree(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.x"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.degree(0)"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.getInterpolatingPoints(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.x"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.getInterpolatingPoints(0)"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.getInterpolatingValues(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.y"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.getInterpolatingValues(0)"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.getCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.coefficientsComputed"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.getCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.computeCoefficients(0)"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.getCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.coefficients"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.getCoefficients(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.evaluate(3)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.verifyInterpolationArray(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.evaluate(3)" "org.apache.commons.math.DuplicateSampleAbscissaException.DuplicateSampleAbscissaException(3)"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.evaluate(3)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.computeCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.degree(0)"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.computeCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.coefficients"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.computeCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.x"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.computeCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.y"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.computeCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.coefficientsComputed"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.computeCoefficients(0)"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.verifyInterpolationArray(2)"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.serialVersionUID"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.coefficients" "double[]"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.coefficients"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.x" "double[]"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.x"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.y" "double[]"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.y"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.coefficientsComputed"
reference "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.RealMatrixImpl"
reference "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.BigMatrixImpl"
reference "org.apache.commons.math.linear.MatrixUtils" "double[][]"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.MatrixUtils(0)"
call "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtils.createRealIdentityMatrix(1)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)"
call "org.apache.commons.math.linear.MatrixUtils.createRealIdentityMatrix(1)" "org.apache.commons.math.linear.RealMatrixImpl.getDataRef(0)"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createRealIdentityMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtils.createBigMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createBigMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtils.createBigMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createBigMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtils.createBigMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createBigMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(1)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtils.createColumnRealMatrix(1)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createColumnRealMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtils.createColumnBigMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createColumnBigMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtils.createColumnBigMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createColumnBigMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtils.createColumnBigMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createColumnBigMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtils.createBigIdentityMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
call "org.apache.commons.math.linear.MatrixUtils.createBigIdentityMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.getDataRef(0)"
reference "org.apache.commons.math.linear.MatrixUtils.createBigIdentityMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.ONE"
reference "org.apache.commons.math.linear.MatrixUtils.createBigIdentityMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.ZERO"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createBigIdentityMatrix(1)"
reference "org.apache.commons.math.analysis.NewtonSolver" "org.apache.commons.math.MaxIterationsExceededException"
reference "org.apache.commons.math.analysis.NewtonSolver" "org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction"
reference "org.apache.commons.math.analysis.NewtonSolver" "org.apache.commons.math.analysis.UnivariateRealSolverImpl"
reference "org.apache.commons.math.analysis.NewtonSolver" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.NewtonSolver" "org.apache.commons.math.analysis.UnivariateRealSolverUtils"
reference "org.apache.commons.math.analysis.NewtonSolver" "org.apache.commons.math.analysis.UnivariateRealFunction"
call "org.apache.commons.math.analysis.NewtonSolver.NewtonSolver(1)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)"
call "org.apache.commons.math.analysis.NewtonSolver.NewtonSolver(1)" "org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction.derivative(0)"
reference "org.apache.commons.math.analysis.NewtonSolver.NewtonSolver(1)" "org.apache.commons.math.analysis.NewtonSolver.derivative"
contain "org.apache.commons.math.analysis.NewtonSolver" "org.apache.commons.math.analysis.NewtonSolver.NewtonSolver(1)"
call "org.apache.commons.math.analysis.NewtonSolver.solve(2)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.midpoint(2)"
call "org.apache.commons.math.analysis.NewtonSolver.solve(2)" "org.apache.commons.math.analysis.NewtonSolver.solve(3)"
contain "org.apache.commons.math.analysis.NewtonSolver" "org.apache.commons.math.analysis.NewtonSolver.solve(2)"
call "org.apache.commons.math.analysis.NewtonSolver.solve(3)" "org.apache.commons.math.analysis.NewtonSolver.clearResult(0)"
call "org.apache.commons.math.analysis.NewtonSolver.solve(3)" "org.apache.commons.math.analysis.NewtonSolver.verifySequence(3)"
reference "org.apache.commons.math.analysis.NewtonSolver.solve(3)" "org.apache.commons.math.analysis.NewtonSolver.maximalIterationCount"
reference "org.apache.commons.math.analysis.NewtonSolver.solve(3)" "org.apache.commons.math.analysis.NewtonSolver.f"
call "org.apache.commons.math.analysis.NewtonSolver.solve(3)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
reference "org.apache.commons.math.analysis.NewtonSolver.solve(3)" "org.apache.commons.math.analysis.NewtonSolver.derivative"
reference "org.apache.commons.math.analysis.NewtonSolver.solve(3)" "org.apache.commons.math.analysis.NewtonSolver.absoluteAccuracy"
call "org.apache.commons.math.analysis.NewtonSolver.solve(3)" "org.apache.commons.math.analysis.NewtonSolver.setResult(2)"
call "org.apache.commons.math.analysis.NewtonSolver.solve(3)" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)"
contain "org.apache.commons.math.analysis.NewtonSolver" "org.apache.commons.math.analysis.NewtonSolver.solve(3)"
reference "org.apache.commons.math.analysis.NewtonSolver.readObject(1)" "org.apache.commons.math.analysis.NewtonSolver.f"
call "org.apache.commons.math.analysis.NewtonSolver.readObject(1)" "org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction.derivative(0)"
reference "org.apache.commons.math.analysis.NewtonSolver.readObject(1)" "org.apache.commons.math.analysis.NewtonSolver.derivative"
contain "org.apache.commons.math.analysis.NewtonSolver" "org.apache.commons.math.analysis.NewtonSolver.readObject(1)"
contain "org.apache.commons.math.analysis.NewtonSolver" "org.apache.commons.math.analysis.NewtonSolver.serialVersionUID"
reference "org.apache.commons.math.analysis.NewtonSolver.derivative" "org.apache.commons.math.analysis.UnivariateRealFunction"
contain "org.apache.commons.math.analysis.NewtonSolver" "org.apache.commons.math.analysis.NewtonSolver.derivative"
reference "org.apache.commons.math.distribution.WeibullDistributionImpl" "org.apache.commons.math.distribution.AbstractContinuousDistribution"
reference "org.apache.commons.math.distribution.WeibullDistributionImpl" "org.apache.commons.math.distribution.WeibullDistribution"
call "org.apache.commons.math.distribution.WeibullDistributionImpl.WeibullDistributionImpl(2)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.AbstractContinuousDistribution(0)"
call "org.apache.commons.math.distribution.WeibullDistributionImpl.WeibullDistributionImpl(2)" "org.apache.commons.math.distribution.WeibullDistributionImpl.setShape(1)"
call "org.apache.commons.math.distribution.WeibullDistributionImpl.WeibullDistributionImpl(2)" "org.apache.commons.math.distribution.WeibullDistributionImpl.setScale(1)"
contain "org.apache.commons.math.distribution.WeibullDistributionImpl" "org.apache.commons.math.distribution.WeibullDistributionImpl.WeibullDistributionImpl(2)"
call "org.apache.commons.math.distribution.WeibullDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.WeibullDistributionImpl.getScale(0)"
call "org.apache.commons.math.distribution.WeibullDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.WeibullDistributionImpl.getShape(0)"
contain "org.apache.commons.math.distribution.WeibullDistributionImpl" "org.apache.commons.math.distribution.WeibullDistributionImpl.cumulativeProbability(1)"
reference "org.apache.commons.math.distribution.WeibullDistributionImpl.getShape(0)" "org.apache.commons.math.distribution.WeibullDistributionImpl.alpha"
contain "org.apache.commons.math.distribution.WeibullDistributionImpl" "org.apache.commons.math.distribution.WeibullDistributionImpl.getShape(0)"
reference "org.apache.commons.math.distribution.WeibullDistributionImpl.getScale(0)" "org.apache.commons.math.distribution.WeibullDistributionImpl.beta"
contain "org.apache.commons.math.distribution.WeibullDistributionImpl" "org.apache.commons.math.distribution.WeibullDistributionImpl.getScale(0)"
call "org.apache.commons.math.distribution.WeibullDistributionImpl.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.WeibullDistributionImpl.getScale(0)"
call "org.apache.commons.math.distribution.WeibullDistributionImpl.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.WeibullDistributionImpl.getShape(0)"
contain "org.apache.commons.math.distribution.WeibullDistributionImpl" "org.apache.commons.math.distribution.WeibullDistributionImpl.inverseCumulativeProbability(1)"
reference "org.apache.commons.math.distribution.WeibullDistributionImpl.setShape(1)" "org.apache.commons.math.distribution.WeibullDistributionImpl.alpha"
contain "org.apache.commons.math.distribution.WeibullDistributionImpl" "org.apache.commons.math.distribution.WeibullDistributionImpl.setShape(1)"
reference "org.apache.commons.math.distribution.WeibullDistributionImpl.setScale(1)" "org.apache.commons.math.distribution.WeibullDistributionImpl.beta"
contain "org.apache.commons.math.distribution.WeibullDistributionImpl" "org.apache.commons.math.distribution.WeibullDistributionImpl.setScale(1)"
contain "org.apache.commons.math.distribution.WeibullDistributionImpl" "org.apache.commons.math.distribution.WeibullDistributionImpl.getDomainLowerBound(1)"
contain "org.apache.commons.math.distribution.WeibullDistributionImpl" "org.apache.commons.math.distribution.WeibullDistributionImpl.getDomainUpperBound(1)"
call "org.apache.commons.math.distribution.WeibullDistributionImpl.getInitialDomain(1)" "org.apache.commons.math.distribution.WeibullDistributionImpl.getScale(0)"
call "org.apache.commons.math.distribution.WeibullDistributionImpl.getInitialDomain(1)" "org.apache.commons.math.distribution.WeibullDistributionImpl.getShape(0)"
contain "org.apache.commons.math.distribution.WeibullDistributionImpl" "org.apache.commons.math.distribution.WeibullDistributionImpl.getInitialDomain(1)"
contain "org.apache.commons.math.distribution.WeibullDistributionImpl" "org.apache.commons.math.distribution.WeibullDistributionImpl.serialVersionUID"
contain "org.apache.commons.math.distribution.WeibullDistributionImpl" "org.apache.commons.math.distribution.WeibullDistributionImpl.alpha"
contain "org.apache.commons.math.distribution.WeibullDistributionImpl" "org.apache.commons.math.distribution.WeibullDistributionImpl.beta"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator" "org.apache.commons.math.ode.SwitchingFunctionsHandler"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator" "double[]"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator" "org.apache.commons.math.ode.RungeKuttaStepInterpolator"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator" "org.apache.commons.math.ode.DummyStepInterpolator"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator" "org.apache.commons.math.ode.FirstOrderIntegrator"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator" "org.apache.commons.math.ode.DummyStepHandler"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator" "org.apache.commons.math.ode.FirstOrderDifferentialEquations"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator" "org.apache.commons.math.ode.StepHandler"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator" "org.apache.commons.math.ode.AbstractStepInterpolator"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator.RungeKuttaIntegrator(6)" "org.apache.commons.math.ode.RungeKuttaIntegrator.fsal"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator.RungeKuttaIntegrator(6)" "org.apache.commons.math.ode.RungeKuttaIntegrator.c"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator.RungeKuttaIntegrator(6)" "org.apache.commons.math.ode.RungeKuttaIntegrator.a"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator.RungeKuttaIntegrator(6)" "org.apache.commons.math.ode.RungeKuttaIntegrator.b"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator.RungeKuttaIntegrator(6)" "org.apache.commons.math.ode.RungeKuttaIntegrator.prototype"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator.RungeKuttaIntegrator(6)" "org.apache.commons.math.ode.RungeKuttaIntegrator.step"
call "org.apache.commons.math.ode.RungeKuttaIntegrator.RungeKuttaIntegrator(6)" "org.apache.commons.math.ode.DummyStepHandler.getInstance(0)"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator.RungeKuttaIntegrator(6)" "org.apache.commons.math.ode.RungeKuttaIntegrator.handler"
call "org.apache.commons.math.ode.RungeKuttaIntegrator.RungeKuttaIntegrator(6)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.SwitchingFunctionsHandler(0)"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator.RungeKuttaIntegrator(6)" "org.apache.commons.math.ode.RungeKuttaIntegrator.switchesHandler"
contain "org.apache.commons.math.ode.RungeKuttaIntegrator" "org.apache.commons.math.ode.RungeKuttaIntegrator.RungeKuttaIntegrator(6)"
contain "org.apache.commons.math.ode.RungeKuttaIntegrator" "org.apache.commons.math.ode.RungeKuttaIntegrator.getName(0)"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator.setStepHandler(1)" "org.apache.commons.math.ode.RungeKuttaIntegrator.handler"
contain "org.apache.commons.math.ode.RungeKuttaIntegrator" "org.apache.commons.math.ode.RungeKuttaIntegrator.setStepHandler(1)"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator.getStepHandler(0)" "org.apache.commons.math.ode.RungeKuttaIntegrator.handler"
contain "org.apache.commons.math.ode.RungeKuttaIntegrator" "org.apache.commons.math.ode.RungeKuttaIntegrator.getStepHandler(0)"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator.addSwitchingFunction(3)" "org.apache.commons.math.ode.RungeKuttaIntegrator.switchesHandler"
call "org.apache.commons.math.ode.RungeKuttaIntegrator.addSwitchingFunction(3)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.add(3)"
contain "org.apache.commons.math.ode.RungeKuttaIntegrator" "org.apache.commons.math.ode.RungeKuttaIntegrator.addSwitchingFunction(3)"
call "org.apache.commons.math.ode.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.FirstOrderDifferentialEquations.getDimension(0)"
call "org.apache.commons.math.ode.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.IntegratorException.IntegratorException(2)"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.RungeKuttaIntegrator.c"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.RungeKuttaIntegrator.handler"
call "org.apache.commons.math.ode.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.StepHandler.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.RungeKuttaIntegrator.switchesHandler"
call "org.apache.commons.math.ode.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.isEmpty(0)"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.RungeKuttaIntegrator.prototype"
call "org.apache.commons.math.ode.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.clone(0)"
call "org.apache.commons.math.ode.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.RungeKuttaStepInterpolator.reinitialize(4)"
call "org.apache.commons.math.ode.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.DummyStepInterpolator.DummyStepInterpolator(2)"
call "org.apache.commons.math.ode.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.AbstractStepInterpolator.storeTime(1)"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.RungeKuttaIntegrator.step"
call "org.apache.commons.math.ode.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.StepHandler.reset(0)"
call "org.apache.commons.math.ode.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.AbstractStepInterpolator.shift(0)"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.RungeKuttaIntegrator.fsal"
call "org.apache.commons.math.ode.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.FirstOrderDifferentialEquations.computeDerivatives(3)"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.RungeKuttaIntegrator.a"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.RungeKuttaIntegrator.b"
call "org.apache.commons.math.ode.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.evaluateStep(1)"
call "org.apache.commons.math.ode.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.getEventTime(0)"
call "org.apache.commons.math.ode.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.stepAccepted(2)"
call "org.apache.commons.math.ode.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.stop(0)"
call "org.apache.commons.math.ode.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.StepHandler.handleStep(2)"
call "org.apache.commons.math.ode.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.reset(2)"
contain "org.apache.commons.math.ode.RungeKuttaIntegrator" "org.apache.commons.math.ode.RungeKuttaIntegrator.integrate(5)"
contain "org.apache.commons.math.ode.RungeKuttaIntegrator" "org.apache.commons.math.ode.RungeKuttaIntegrator.fsal"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator.c" "double[]"
contain "org.apache.commons.math.ode.RungeKuttaIntegrator" "org.apache.commons.math.ode.RungeKuttaIntegrator.c"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator.a" "double[][]"
contain "org.apache.commons.math.ode.RungeKuttaIntegrator" "org.apache.commons.math.ode.RungeKuttaIntegrator.a"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator.b" "double[]"
contain "org.apache.commons.math.ode.RungeKuttaIntegrator" "org.apache.commons.math.ode.RungeKuttaIntegrator.b"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator.prototype" "org.apache.commons.math.ode.RungeKuttaStepInterpolator"
contain "org.apache.commons.math.ode.RungeKuttaIntegrator" "org.apache.commons.math.ode.RungeKuttaIntegrator.prototype"
contain "org.apache.commons.math.ode.RungeKuttaIntegrator" "org.apache.commons.math.ode.RungeKuttaIntegrator.step"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator.handler" "org.apache.commons.math.ode.StepHandler"
contain "org.apache.commons.math.ode.RungeKuttaIntegrator" "org.apache.commons.math.ode.RungeKuttaIntegrator.handler"
reference "org.apache.commons.math.ode.RungeKuttaIntegrator.switchesHandler" "org.apache.commons.math.ode.SwitchingFunctionsHandler"
contain "org.apache.commons.math.ode.RungeKuttaIntegrator" "org.apache.commons.math.ode.RungeKuttaIntegrator.switchesHandler"
reference "org.apache.commons.math.distribution.Distribution" "org.apache.commons.math.MathException"
contain "org.apache.commons.math.distribution.Distribution" "org.apache.commons.math.distribution.Distribution.cumulativeProbability(1)"
contain "org.apache.commons.math.distribution.Distribution" "org.apache.commons.math.distribution.Distribution.cumulativeProbability(2)"
reference "org.apache.commons.math.distribution.DistributionFactory" "org.apache.commons.math.distribution.DistributionFactoryImpl"
reference "org.apache.commons.math.distribution.DistributionFactory" "org.apache.commons.math.distribution.PascalDistributionImpl"
reference "org.apache.commons.math.distribution.DistributionFactory" "org.apache.commons.math.distribution.CauchyDistributionImpl"
reference "org.apache.commons.math.distribution.DistributionFactory" "org.apache.commons.math.distribution.WeibullDistributionImpl"
contain "org.apache.commons.math.distribution.DistributionFactory" "org.apache.commons.math.distribution.DistributionFactory.DistributionFactory(0)"
call "org.apache.commons.math.distribution.DistributionFactory.newInstance(0)" "org.apache.commons.math.distribution.DistributionFactoryImpl.DistributionFactoryImpl(0)"
contain "org.apache.commons.math.distribution.DistributionFactory" "org.apache.commons.math.distribution.DistributionFactory.newInstance(0)"
contain "org.apache.commons.math.distribution.DistributionFactory" "org.apache.commons.math.distribution.DistributionFactory.createBinomialDistribution(2)"
call "org.apache.commons.math.distribution.DistributionFactory.createPascalDistribution(2)" "org.apache.commons.math.distribution.PascalDistributionImpl.PascalDistributionImpl(2)"
contain "org.apache.commons.math.distribution.DistributionFactory" "org.apache.commons.math.distribution.DistributionFactory.createPascalDistribution(2)"
call "org.apache.commons.math.distribution.DistributionFactory.createCauchyDistribution(2)" "org.apache.commons.math.distribution.CauchyDistributionImpl.CauchyDistributionImpl(2)"
contain "org.apache.commons.math.distribution.DistributionFactory" "org.apache.commons.math.distribution.DistributionFactory.createCauchyDistribution(2)"
contain "org.apache.commons.math.distribution.DistributionFactory" "org.apache.commons.math.distribution.DistributionFactory.createChiSquareDistribution(1)"
contain "org.apache.commons.math.distribution.DistributionFactory" "org.apache.commons.math.distribution.DistributionFactory.createExponentialDistribution(1)"
contain "org.apache.commons.math.distribution.DistributionFactory" "org.apache.commons.math.distribution.DistributionFactory.createFDistribution(2)"
contain "org.apache.commons.math.distribution.DistributionFactory" "org.apache.commons.math.distribution.DistributionFactory.createGammaDistribution(2)"
contain "org.apache.commons.math.distribution.DistributionFactory" "org.apache.commons.math.distribution.DistributionFactory.createTDistribution(1)"
contain "org.apache.commons.math.distribution.DistributionFactory" "org.apache.commons.math.distribution.DistributionFactory.createHypergeometricDistribution(3)"
contain "org.apache.commons.math.distribution.DistributionFactory" "org.apache.commons.math.distribution.DistributionFactory.createNormalDistribution(2)"
contain "org.apache.commons.math.distribution.DistributionFactory" "org.apache.commons.math.distribution.DistributionFactory.createNormalDistribution(0)"
contain "org.apache.commons.math.distribution.DistributionFactory" "org.apache.commons.math.distribution.DistributionFactory.createPoissonDistribution(1)"
call "org.apache.commons.math.distribution.DistributionFactory.createWeibullDistribution(2)" "org.apache.commons.math.distribution.WeibullDistributionImpl.WeibullDistributionImpl(2)"
contain "org.apache.commons.math.distribution.DistributionFactory" "org.apache.commons.math.distribution.DistributionFactory.createWeibullDistribution(2)"
reference "org.apache.commons.math.ode.AbstractStepInterpolator" "double[]"
reference "org.apache.commons.math.ode.AbstractStepInterpolator" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.AbstractStepInterpolator" "org.apache.commons.math.ode.StepInterpolator"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(0)" "org.apache.commons.math.ode.AbstractStepInterpolator.previousTime"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(0)" "org.apache.commons.math.ode.AbstractStepInterpolator.currentTime"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(0)" "org.apache.commons.math.ode.AbstractStepInterpolator.h"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(0)" "org.apache.commons.math.ode.AbstractStepInterpolator.interpolatedTime"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(0)" "org.apache.commons.math.ode.AbstractStepInterpolator.currentState"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(0)" "org.apache.commons.math.ode.AbstractStepInterpolator.interpolatedState"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(0)" "org.apache.commons.math.ode.AbstractStepInterpolator.finalized"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(0)" "org.apache.commons.math.ode.AbstractStepInterpolator.forward"
contain "org.apache.commons.math.ode.AbstractStepInterpolator" "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(0)"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(2)" "org.apache.commons.math.ode.AbstractStepInterpolator.previousTime"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(2)" "org.apache.commons.math.ode.AbstractStepInterpolator.currentTime"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(2)" "org.apache.commons.math.ode.AbstractStepInterpolator.h"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(2)" "org.apache.commons.math.ode.AbstractStepInterpolator.interpolatedTime"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(2)" "org.apache.commons.math.ode.AbstractStepInterpolator.currentState"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(2)" "org.apache.commons.math.ode.AbstractStepInterpolator.interpolatedState"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(2)" "org.apache.commons.math.ode.AbstractStepInterpolator.finalized"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(2)" "org.apache.commons.math.ode.AbstractStepInterpolator.forward"
contain "org.apache.commons.math.ode.AbstractStepInterpolator" "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(2)"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.previousTime"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.currentTime"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.h"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.interpolatedTime"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.currentState"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.interpolatedState"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.finalized"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.forward"
contain "org.apache.commons.math.ode.AbstractStepInterpolator" "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(1)"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.reinitialize(2)" "org.apache.commons.math.ode.AbstractStepInterpolator.previousTime"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.reinitialize(2)" "org.apache.commons.math.ode.AbstractStepInterpolator.currentTime"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.reinitialize(2)" "org.apache.commons.math.ode.AbstractStepInterpolator.h"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.reinitialize(2)" "org.apache.commons.math.ode.AbstractStepInterpolator.interpolatedTime"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.reinitialize(2)" "org.apache.commons.math.ode.AbstractStepInterpolator.currentState"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.reinitialize(2)" "org.apache.commons.math.ode.AbstractStepInterpolator.interpolatedState"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.reinitialize(2)" "org.apache.commons.math.ode.AbstractStepInterpolator.finalized"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.reinitialize(2)" "org.apache.commons.math.ode.AbstractStepInterpolator.forward"
contain "org.apache.commons.math.ode.AbstractStepInterpolator" "org.apache.commons.math.ode.AbstractStepInterpolator.reinitialize(2)"
contain "org.apache.commons.math.ode.AbstractStepInterpolator" "org.apache.commons.math.ode.AbstractStepInterpolator.clone(0)"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.shift(0)" "org.apache.commons.math.ode.AbstractStepInterpolator.currentTime"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.shift(0)" "org.apache.commons.math.ode.AbstractStepInterpolator.previousTime"
contain "org.apache.commons.math.ode.AbstractStepInterpolator" "org.apache.commons.math.ode.AbstractStepInterpolator.shift(0)"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.storeTime(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.currentTime"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.storeTime(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.previousTime"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.storeTime(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.h"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.storeTime(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.interpolatedTime"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.storeTime(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.currentState"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.storeTime(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.interpolatedState"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.storeTime(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.finalized"
contain "org.apache.commons.math.ode.AbstractStepInterpolator" "org.apache.commons.math.ode.AbstractStepInterpolator.storeTime(1)"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.getPreviousTime(0)" "org.apache.commons.math.ode.AbstractStepInterpolator.previousTime"
contain "org.apache.commons.math.ode.AbstractStepInterpolator" "org.apache.commons.math.ode.AbstractStepInterpolator.getPreviousTime(0)"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.getCurrentTime(0)" "org.apache.commons.math.ode.AbstractStepInterpolator.currentTime"
contain "org.apache.commons.math.ode.AbstractStepInterpolator" "org.apache.commons.math.ode.AbstractStepInterpolator.getCurrentTime(0)"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.getInterpolatedTime(0)" "org.apache.commons.math.ode.AbstractStepInterpolator.interpolatedTime"
contain "org.apache.commons.math.ode.AbstractStepInterpolator" "org.apache.commons.math.ode.AbstractStepInterpolator.getInterpolatedTime(0)"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.setInterpolatedTime(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.interpolatedTime"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.setInterpolatedTime(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.currentTime"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.setInterpolatedTime(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.h"
call "org.apache.commons.math.ode.AbstractStepInterpolator.setInterpolatedTime(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.computeInterpolatedState(2)"
contain "org.apache.commons.math.ode.AbstractStepInterpolator" "org.apache.commons.math.ode.AbstractStepInterpolator.setInterpolatedTime(1)"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.isForward(0)" "org.apache.commons.math.ode.AbstractStepInterpolator.forward"
contain "org.apache.commons.math.ode.AbstractStepInterpolator" "org.apache.commons.math.ode.AbstractStepInterpolator.isForward(0)"
contain "org.apache.commons.math.ode.AbstractStepInterpolator" "org.apache.commons.math.ode.AbstractStepInterpolator.computeInterpolatedState(2)"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.getInterpolatedState(0)" "org.apache.commons.math.ode.AbstractStepInterpolator.interpolatedState"
contain "org.apache.commons.math.ode.AbstractStepInterpolator" "org.apache.commons.math.ode.AbstractStepInterpolator.getInterpolatedState(0)"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.finalizeStep(0)" "org.apache.commons.math.ode.AbstractStepInterpolator.finalized"
call "org.apache.commons.math.ode.AbstractStepInterpolator.finalizeStep(0)" "org.apache.commons.math.ode.AbstractStepInterpolator.doFinalize(0)"
contain "org.apache.commons.math.ode.AbstractStepInterpolator" "org.apache.commons.math.ode.AbstractStepInterpolator.finalizeStep(0)"
contain "org.apache.commons.math.ode.AbstractStepInterpolator" "org.apache.commons.math.ode.AbstractStepInterpolator.doFinalize(0)"
contain "org.apache.commons.math.ode.AbstractStepInterpolator" "org.apache.commons.math.ode.AbstractStepInterpolator.writeExternal(1)"
contain "org.apache.commons.math.ode.AbstractStepInterpolator" "org.apache.commons.math.ode.AbstractStepInterpolator.readExternal(1)"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.writeBaseExternal(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.currentState"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.writeBaseExternal(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.previousTime"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.writeBaseExternal(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.currentTime"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.writeBaseExternal(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.h"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.writeBaseExternal(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.forward"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.writeBaseExternal(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.interpolatedTime"
call "org.apache.commons.math.ode.AbstractStepInterpolator.writeBaseExternal(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.finalizeStep(0)"
call "org.apache.commons.math.ode.AbstractStepInterpolator.writeBaseExternal(1)" "org.apache.commons.math.ode.DerivativeException.getMessage(0)"
contain "org.apache.commons.math.ode.AbstractStepInterpolator" "org.apache.commons.math.ode.AbstractStepInterpolator.writeBaseExternal(1)"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.readBaseExternal(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.previousTime"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.readBaseExternal(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.currentTime"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.readBaseExternal(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.h"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.readBaseExternal(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.forward"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.readBaseExternal(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.currentState"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.readBaseExternal(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.interpolatedTime"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.readBaseExternal(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.interpolatedState"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.readBaseExternal(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.finalized"
contain "org.apache.commons.math.ode.AbstractStepInterpolator" "org.apache.commons.math.ode.AbstractStepInterpolator.readBaseExternal(1)"
contain "org.apache.commons.math.ode.AbstractStepInterpolator" "org.apache.commons.math.ode.AbstractStepInterpolator.previousTime"
contain "org.apache.commons.math.ode.AbstractStepInterpolator" "org.apache.commons.math.ode.AbstractStepInterpolator.currentTime"
contain "org.apache.commons.math.ode.AbstractStepInterpolator" "org.apache.commons.math.ode.AbstractStepInterpolator.h"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.currentState" "double[]"
contain "org.apache.commons.math.ode.AbstractStepInterpolator" "org.apache.commons.math.ode.AbstractStepInterpolator.currentState"
contain "org.apache.commons.math.ode.AbstractStepInterpolator" "org.apache.commons.math.ode.AbstractStepInterpolator.interpolatedTime"
reference "org.apache.commons.math.ode.AbstractStepInterpolator.interpolatedState" "double[]"
contain "org.apache.commons.math.ode.AbstractStepInterpolator" "org.apache.commons.math.ode.AbstractStepInterpolator.interpolatedState"
contain "org.apache.commons.math.ode.AbstractStepInterpolator" "org.apache.commons.math.ode.AbstractStepInterpolator.finalized"
contain "org.apache.commons.math.ode.AbstractStepInterpolator" "org.apache.commons.math.ode.AbstractStepInterpolator.forward"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl" "org.apache.commons.math.util.ResizableDoubleArray"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.DescriptiveStatisticsImpl(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.DescriptiveStatisticsImpl(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.DescriptiveStatisticsImpl(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.DescriptiveStatisticsImpl(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.DescriptiveStatisticsImpl(1)" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.DescriptiveStatisticsImpl(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.eDA"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.DescriptiveStatisticsImpl(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.setWindowSize(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.DescriptiveStatisticsImpl(1)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.getWindowSize(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.windowSize"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.getWindowSize(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.getValues(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.eDA"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.getValues(0)" "org.apache.commons.math.util.ResizableDoubleArray.getNumElements(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.getValues(0)" "org.apache.commons.math.util.ResizableDoubleArray.getElements(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.getValues(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.getElement(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.eDA"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.getElement(1)" "org.apache.commons.math.util.ResizableDoubleArray.getElement(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.getElement(1)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.getN(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.eDA"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.getN(0)" "org.apache.commons.math.util.ResizableDoubleArray.getNumElements(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.getN(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.addValue(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.windowSize"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.addValue(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.getN(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.addValue(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.eDA"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.addValue(1)" "org.apache.commons.math.util.ResizableDoubleArray.addElementRolling(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.addValue(1)" "org.apache.commons.math.util.ResizableDoubleArray.addElement(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.addValue(1)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.clear(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.eDA"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.clear(0)" "org.apache.commons.math.util.ResizableDoubleArray.clear(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.clear(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.setWindowSize(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.windowSize"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.setWindowSize(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.eDA"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.setWindowSize(1)" "org.apache.commons.math.util.ResizableDoubleArray.getNumElements(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.setWindowSize(1)" "org.apache.commons.math.util.ResizableDoubleArray.discardFrontElements(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.setWindowSize(1)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.apply(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.eDA"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.apply(1)" "org.apache.commons.math.util.ResizableDoubleArray.getValues(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.apply(1)" "org.apache.commons.math.util.ResizableDoubleArray.start(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.apply(1)" "org.apache.commons.math.util.ResizableDoubleArray.getNumElements(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.apply(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.apply(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.windowSize"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.eDA" "org.apache.commons.math.util.ResizableDoubleArray"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.eDA"
reference "org.apache.commons.math.ode.StepHandler" "org.apache.commons.math.ode.DerivativeException"
contain "org.apache.commons.math.ode.StepHandler" "org.apache.commons.math.ode.StepHandler.requiresDenseOutput(0)"
contain "org.apache.commons.math.ode.StepHandler" "org.apache.commons.math.ode.StepHandler.reset(0)"
contain "org.apache.commons.math.ode.StepHandler" "org.apache.commons.math.ode.StepHandler.handleStep(2)"
reference "org.apache.commons.math.ode.DummyStepHandler" "org.apache.commons.math.ode.StepHandler"
contain "org.apache.commons.math.ode.DummyStepHandler" "org.apache.commons.math.ode.DummyStepHandler.DummyStepHandler(0)"
reference "org.apache.commons.math.ode.DummyStepHandler.getInstance(0)" "org.apache.commons.math.ode.DummyStepHandler.instance"
call "org.apache.commons.math.ode.DummyStepHandler.getInstance(0)" "org.apache.commons.math.ode.DummyStepHandler.DummyStepHandler(0)"
contain "org.apache.commons.math.ode.DummyStepHandler" "org.apache.commons.math.ode.DummyStepHandler.getInstance(0)"
contain "org.apache.commons.math.ode.DummyStepHandler" "org.apache.commons.math.ode.DummyStepHandler.requiresDenseOutput(0)"
contain "org.apache.commons.math.ode.DummyStepHandler" "org.apache.commons.math.ode.DummyStepHandler.reset(0)"
contain "org.apache.commons.math.ode.DummyStepHandler" "org.apache.commons.math.ode.DummyStepHandler.handleStep(2)"
reference "org.apache.commons.math.ode.DummyStepHandler.static {...}" "org.apache.commons.math.ode.DummyStepHandler.instance"
contain "org.apache.commons.math.ode.DummyStepHandler" "org.apache.commons.math.ode.DummyStepHandler.static {...}"
reference "org.apache.commons.math.ode.DummyStepHandler.instance" "org.apache.commons.math.ode.DummyStepHandler"
contain "org.apache.commons.math.ode.DummyStepHandler" "org.apache.commons.math.ode.DummyStepHandler.instance"
reference "org.apache.commons.math.distribution.NormalDistribution" "org.apache.commons.math.distribution.ContinuousDistribution"
contain "org.apache.commons.math.distribution.NormalDistribution" "org.apache.commons.math.distribution.NormalDistribution.getMean(0)"
contain "org.apache.commons.math.distribution.NormalDistribution" "org.apache.commons.math.distribution.NormalDistribution.setMean(1)"
contain "org.apache.commons.math.distribution.NormalDistribution" "org.apache.commons.math.distribution.NormalDistribution.getStandardDeviation(0)"
contain "org.apache.commons.math.distribution.NormalDistribution" "org.apache.commons.math.distribution.NormalDistribution.setStandardDeviation(1)"
reference "org.apache.commons.math.DuplicateSampleAbscissaException" "org.apache.commons.math.MathException"
call "org.apache.commons.math.DuplicateSampleAbscissaException.DuplicateSampleAbscissaException(3)" "org.apache.commons.math.MathException.MathException(2)"
contain "org.apache.commons.math.DuplicateSampleAbscissaException" "org.apache.commons.math.DuplicateSampleAbscissaException.DuplicateSampleAbscissaException(3)"
call "org.apache.commons.math.DuplicateSampleAbscissaException.getDuplicateAbscissa(0)" "org.apache.commons.math.DuplicateSampleAbscissaException.getArguments(0)"
contain "org.apache.commons.math.DuplicateSampleAbscissaException" "org.apache.commons.math.DuplicateSampleAbscissaException.getDuplicateAbscissa(0)"
contain "org.apache.commons.math.DuplicateSampleAbscissaException" "org.apache.commons.math.DuplicateSampleAbscissaException.serialVersionUID"
reference "org.apache.commons.math.complex.Complex" "org.apache.commons.math.util.MathUtils"
reference "org.apache.commons.math.complex.Complex.Complex(2)" "org.apache.commons.math.complex.Complex.real"
reference "org.apache.commons.math.complex.Complex.Complex(2)" "org.apache.commons.math.complex.Complex.imaginary"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.Complex.abs(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.Complex.abs(0)" "org.apache.commons.math.complex.Complex.isInfinite(0)"
reference "org.apache.commons.math.complex.Complex.abs(0)" "org.apache.commons.math.complex.Complex.real"
reference "org.apache.commons.math.complex.Complex.abs(0)" "org.apache.commons.math.complex.Complex.imaginary"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.abs(0)"
reference "org.apache.commons.math.complex.Complex.add(1)" "org.apache.commons.math.complex.Complex.real"
call "org.apache.commons.math.complex.Complex.add(1)" "org.apache.commons.math.complex.Complex.getReal(0)"
reference "org.apache.commons.math.complex.Complex.add(1)" "org.apache.commons.math.complex.Complex.imaginary"
call "org.apache.commons.math.complex.Complex.add(1)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
call "org.apache.commons.math.complex.Complex.add(1)" "org.apache.commons.math.complex.Complex.Complex(2)"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.add(1)"
call "org.apache.commons.math.complex.Complex.conjugate(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.Complex.conjugate(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.Complex.conjugate(0)" "org.apache.commons.math.complex.Complex.real"
reference "org.apache.commons.math.complex.Complex.conjugate(0)" "org.apache.commons.math.complex.Complex.imaginary"
call "org.apache.commons.math.complex.Complex.conjugate(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.conjugate(0)"
call "org.apache.commons.math.complex.Complex.divide(1)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.Complex.divide(1)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.Complex.divide(1)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.Complex.divide(1)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
call "org.apache.commons.math.complex.Complex.divide(1)" "org.apache.commons.math.complex.Complex.isInfinite(0)"
reference "org.apache.commons.math.complex.Complex.divide(1)" "org.apache.commons.math.complex.Complex.ZERO"
reference "org.apache.commons.math.complex.Complex.divide(1)" "org.apache.commons.math.complex.Complex.real"
reference "org.apache.commons.math.complex.Complex.divide(1)" "org.apache.commons.math.complex.Complex.imaginary"
call "org.apache.commons.math.complex.Complex.divide(1)" "org.apache.commons.math.complex.Complex.Complex(2)"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.divide(1)"
call "org.apache.commons.math.complex.Complex.equals(1)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.Complex.equals(1)" "org.apache.commons.math.complex.Complex.real"
call "org.apache.commons.math.complex.Complex.equals(1)" "org.apache.commons.math.complex.Complex.getReal(0)"
reference "org.apache.commons.math.complex.Complex.equals(1)" "org.apache.commons.math.complex.Complex.imaginary"
call "org.apache.commons.math.complex.Complex.equals(1)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.equals(1)"
call "org.apache.commons.math.complex.Complex.hashCode(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.Complex.hashCode(0)" "org.apache.commons.math.complex.Complex.imaginary"
call "org.apache.commons.math.complex.Complex.hashCode(0)" "org.apache.commons.math.util.MathUtils.hash(1)"
reference "org.apache.commons.math.complex.Complex.hashCode(0)" "org.apache.commons.math.complex.Complex.real"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.hashCode(0)"
reference "org.apache.commons.math.complex.Complex.getImaginary(0)" "org.apache.commons.math.complex.Complex.imaginary"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.getImaginary(0)"
reference "org.apache.commons.math.complex.Complex.getReal(0)" "org.apache.commons.math.complex.Complex.real"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.getReal(0)"
reference "org.apache.commons.math.complex.Complex.isNaN(0)" "org.apache.commons.math.complex.Complex.real"
reference "org.apache.commons.math.complex.Complex.isNaN(0)" "org.apache.commons.math.complex.Complex.imaginary"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.Complex.isInfinite(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.Complex.isInfinite(0)" "org.apache.commons.math.complex.Complex.real"
reference "org.apache.commons.math.complex.Complex.isInfinite(0)" "org.apache.commons.math.complex.Complex.imaginary"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.isInfinite(0)"
call "org.apache.commons.math.complex.Complex.multiply(1)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.Complex.multiply(1)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.Complex.multiply(1)" "org.apache.commons.math.complex.Complex.real"
reference "org.apache.commons.math.complex.Complex.multiply(1)" "org.apache.commons.math.complex.Complex.imaginary"
call "org.apache.commons.math.complex.Complex.multiply(1)" "org.apache.commons.math.complex.Complex.Complex(2)"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.multiply(1)"
call "org.apache.commons.math.complex.Complex.negate(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.Complex.negate(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.Complex.negate(0)" "org.apache.commons.math.complex.Complex.real"
reference "org.apache.commons.math.complex.Complex.negate(0)" "org.apache.commons.math.complex.Complex.imaginary"
call "org.apache.commons.math.complex.Complex.negate(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.negate(0)"
call "org.apache.commons.math.complex.Complex.subtract(1)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.Complex.subtract(1)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.Complex.subtract(1)" "org.apache.commons.math.complex.Complex.real"
call "org.apache.commons.math.complex.Complex.subtract(1)" "org.apache.commons.math.complex.Complex.getReal(0)"
reference "org.apache.commons.math.complex.Complex.subtract(1)" "org.apache.commons.math.complex.Complex.imaginary"
call "org.apache.commons.math.complex.Complex.subtract(1)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
call "org.apache.commons.math.complex.Complex.subtract(1)" "org.apache.commons.math.complex.Complex.Complex(2)"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.subtract(1)"
call "org.apache.commons.math.complex.Complex.static {...}" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.Complex.static {...}" "org.apache.commons.math.complex.Complex.I"
reference "org.apache.commons.math.complex.Complex.static {...}" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.Complex.static {...}" "org.apache.commons.math.complex.Complex.ONE"
reference "org.apache.commons.math.complex.Complex.static {...}" "org.apache.commons.math.complex.Complex.ZERO"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.static {...}"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.serialVersionUID"
reference "org.apache.commons.math.complex.Complex.I" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.I"
reference "org.apache.commons.math.complex.Complex.NaN" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.Complex.ONE" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.ONE"
reference "org.apache.commons.math.complex.Complex.ZERO" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.ZERO"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.imaginary"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.real"
reference "org.apache.commons.math.optimization.PointCostPair" "double[]"
reference "org.apache.commons.math.optimization.PointCostPair.PointCostPair(2)" "org.apache.commons.math.optimization.PointCostPair.point"
reference "org.apache.commons.math.optimization.PointCostPair.PointCostPair(2)" "org.apache.commons.math.optimization.PointCostPair.cost"
contain "org.apache.commons.math.optimization.PointCostPair" "org.apache.commons.math.optimization.PointCostPair.PointCostPair(2)"
reference "org.apache.commons.math.optimization.PointCostPair.point" "double[]"
contain "org.apache.commons.math.optimization.PointCostPair" "org.apache.commons.math.optimization.PointCostPair.point"
contain "org.apache.commons.math.optimization.PointCostPair" "org.apache.commons.math.optimization.PointCostPair.cost"
reference "org.apache.commons.math.analysis.NevilleInterpolator" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm"
reference "org.apache.commons.math.analysis.NevilleInterpolator" "org.apache.commons.math.analysis.UnivariateRealInterpolator"
reference "org.apache.commons.math.analysis.NevilleInterpolator" "org.apache.commons.math.MathException"
contain "org.apache.commons.math.analysis.NevilleInterpolator" "org.apache.commons.math.analysis.NevilleInterpolator.NevilleInterpolator(0)"
call "org.apache.commons.math.analysis.NevilleInterpolator.interpolate(2)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.PolynomialFunctionLagrangeForm(2)"
contain "org.apache.commons.math.analysis.NevilleInterpolator" "org.apache.commons.math.analysis.NevilleInterpolator.interpolate(2)"
contain "org.apache.commons.math.analysis.NevilleInterpolator" "org.apache.commons.math.analysis.NevilleInterpolator.serialVersionUID"
reference "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.NaturalComparator"
reference "org.apache.commons.math.stat.Frequency.Frequency(0)" "org.apache.commons.math.stat.Frequency.freqTable"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.Frequency(0)"
reference "org.apache.commons.math.stat.Frequency.Frequency(1)" "org.apache.commons.math.stat.Frequency.freqTable"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.Frequency(1)"
reference "org.apache.commons.math.stat.Frequency.toString(0)" "org.apache.commons.math.stat.Frequency.freqTable"
call "org.apache.commons.math.stat.Frequency.toString(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
call "org.apache.commons.math.stat.Frequency.toString(0)" "org.apache.commons.math.stat.Frequency.getPct(1)"
call "org.apache.commons.math.stat.Frequency.toString(0)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.toString(0)"
reference "org.apache.commons.math.stat.Frequency.addValue(1)" "org.apache.commons.math.stat.Frequency.freqTable"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.stat.Frequency.addValue(1)" "org.apache.commons.math.stat.Frequency.addValue(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.stat.Frequency.addValue(1)" "org.apache.commons.math.stat.Frequency.addValue(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.stat.Frequency.addValue(1)" "org.apache.commons.math.stat.Frequency.addValue(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.stat.Frequency.addValue(1)" "org.apache.commons.math.stat.Frequency.addValue(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.addValue(1)"
reference "org.apache.commons.math.stat.Frequency.clear(0)" "org.apache.commons.math.stat.Frequency.freqTable"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.clear(0)"
reference "org.apache.commons.math.stat.Frequency.valuesIterator(0)" "org.apache.commons.math.stat.Frequency.freqTable"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.valuesIterator(0)"
reference "org.apache.commons.math.stat.Frequency.getSumFreq(0)" "org.apache.commons.math.stat.Frequency.freqTable"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getSumFreq(0)"
call "org.apache.commons.math.stat.Frequency.getCount(1)" "org.apache.commons.math.stat.Frequency.getCount(1)"
reference "org.apache.commons.math.stat.Frequency.getCount(1)" "org.apache.commons.math.stat.Frequency.freqTable"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getCount(1)"
call "org.apache.commons.math.stat.Frequency.getCount(1)" "org.apache.commons.math.stat.Frequency.getCount(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getCount(1)"
call "org.apache.commons.math.stat.Frequency.getCount(1)" "org.apache.commons.math.stat.Frequency.getCount(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getCount(1)"
call "org.apache.commons.math.stat.Frequency.getCount(1)" "org.apache.commons.math.stat.Frequency.getCount(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getCount(1)"
call "org.apache.commons.math.stat.Frequency.getPct(1)" "org.apache.commons.math.stat.Frequency.getSumFreq(0)"
call "org.apache.commons.math.stat.Frequency.getPct(1)" "org.apache.commons.math.stat.Frequency.getCount(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getPct(1)"
call "org.apache.commons.math.stat.Frequency.getPct(1)" "org.apache.commons.math.stat.Frequency.getPct(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getPct(1)"
call "org.apache.commons.math.stat.Frequency.getPct(1)" "org.apache.commons.math.stat.Frequency.getPct(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getPct(1)"
call "org.apache.commons.math.stat.Frequency.getPct(1)" "org.apache.commons.math.stat.Frequency.getPct(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getPct(1)"
call "org.apache.commons.math.stat.Frequency.getCumFreq(1)" "org.apache.commons.math.stat.Frequency.getSumFreq(0)"
call "org.apache.commons.math.stat.Frequency.getCumFreq(1)" "org.apache.commons.math.stat.Frequency.getCumFreq(1)"
reference "org.apache.commons.math.stat.Frequency.getCumFreq(1)" "org.apache.commons.math.stat.Frequency.freqTable"
call "org.apache.commons.math.stat.Frequency.getCumFreq(1)" "org.apache.commons.math.stat.Frequency.NaturalComparator.NaturalComparator(1)"
call "org.apache.commons.math.stat.Frequency.getCumFreq(1)" "org.apache.commons.math.stat.Frequency.valuesIterator(0)"
call "org.apache.commons.math.stat.Frequency.getCumFreq(1)" "org.apache.commons.math.stat.Frequency.getCount(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getCumFreq(1)"
call "org.apache.commons.math.stat.Frequency.getCumFreq(1)" "org.apache.commons.math.stat.Frequency.getCumFreq(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getCumFreq(1)"
call "org.apache.commons.math.stat.Frequency.getCumFreq(1)" "org.apache.commons.math.stat.Frequency.getCumFreq(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getCumFreq(1)"
call "org.apache.commons.math.stat.Frequency.getCumFreq(1)" "org.apache.commons.math.stat.Frequency.getCumFreq(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getCumFreq(1)"
call "org.apache.commons.math.stat.Frequency.getCumPct(1)" "org.apache.commons.math.stat.Frequency.getSumFreq(0)"
call "org.apache.commons.math.stat.Frequency.getCumPct(1)" "org.apache.commons.math.stat.Frequency.getCumFreq(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
call "org.apache.commons.math.stat.Frequency.getCumPct(1)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
call "org.apache.commons.math.stat.Frequency.getCumPct(1)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
call "org.apache.commons.math.stat.Frequency.getCumPct(1)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.serialVersionUID"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.freqTable"
reference "org.apache.commons.math.distribution.BinomialDistribution" "org.apache.commons.math.distribution.IntegerDistribution"
contain "org.apache.commons.math.distribution.BinomialDistribution" "org.apache.commons.math.distribution.BinomialDistribution.getNumberOfTrials(0)"
contain "org.apache.commons.math.distribution.BinomialDistribution" "org.apache.commons.math.distribution.BinomialDistribution.getProbabilityOfSuccess(0)"
contain "org.apache.commons.math.distribution.BinomialDistribution" "org.apache.commons.math.distribution.BinomialDistribution.setNumberOfTrials(1)"
contain "org.apache.commons.math.distribution.BinomialDistribution" "org.apache.commons.math.distribution.BinomialDistribution.setProbabilityOfSuccess(1)"
reference "org.apache.commons.math.random.UniformRandomGenerator" "org.apache.commons.math.random.NormalizedRandomGenerator"
reference "org.apache.commons.math.random.UniformRandomGenerator" "org.apache.commons.math.random.RandomGenerator"
reference "org.apache.commons.math.random.UniformRandomGenerator.UniformRandomGenerator(1)" "org.apache.commons.math.random.UniformRandomGenerator.generator"
contain "org.apache.commons.math.random.UniformRandomGenerator" "org.apache.commons.math.random.UniformRandomGenerator.UniformRandomGenerator(1)"
reference "org.apache.commons.math.random.UniformRandomGenerator.nextNormalizedDouble(0)" "org.apache.commons.math.random.UniformRandomGenerator.SQRT3"
reference "org.apache.commons.math.random.UniformRandomGenerator.nextNormalizedDouble(0)" "org.apache.commons.math.random.UniformRandomGenerator.generator"
call "org.apache.commons.math.random.UniformRandomGenerator.nextNormalizedDouble(0)" "org.apache.commons.math.random.RandomGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.UniformRandomGenerator" "org.apache.commons.math.random.UniformRandomGenerator.nextNormalizedDouble(0)"
reference "org.apache.commons.math.random.UniformRandomGenerator.static {...}" "org.apache.commons.math.random.UniformRandomGenerator.SQRT3"
contain "org.apache.commons.math.random.UniformRandomGenerator" "org.apache.commons.math.random.UniformRandomGenerator.static {...}"
reference "org.apache.commons.math.random.UniformRandomGenerator.generator" "org.apache.commons.math.random.RandomGenerator"
contain "org.apache.commons.math.random.UniformRandomGenerator" "org.apache.commons.math.random.UniformRandomGenerator.generator"
contain "org.apache.commons.math.random.UniformRandomGenerator" "org.apache.commons.math.random.UniformRandomGenerator.SQRT3"
reference "org.apache.commons.math.fraction.FractionConversionException" "org.apache.commons.math.MaxIterationsExceededException"
call "org.apache.commons.math.fraction.FractionConversionException.FractionConversionException(2)" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(3)"
contain "org.apache.commons.math.fraction.FractionConversionException" "org.apache.commons.math.fraction.FractionConversionException.FractionConversionException(2)"
contain "org.apache.commons.math.fraction.FractionConversionException" "org.apache.commons.math.fraction.FractionConversionException.serialVersionUID"
reference "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.MaxIterationsExceededException"
reference "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.AbstractContinuousDistribution"
reference "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistribution"
reference "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.special.Erf"
call "org.apache.commons.math.distribution.NormalDistributionImpl.NormalDistributionImpl(2)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.AbstractContinuousDistribution(0)"
reference "org.apache.commons.math.distribution.NormalDistributionImpl.NormalDistributionImpl(2)" "org.apache.commons.math.distribution.NormalDistributionImpl.mean"
reference "org.apache.commons.math.distribution.NormalDistributionImpl.NormalDistributionImpl(2)" "org.apache.commons.math.distribution.NormalDistributionImpl.standardDeviation"
call "org.apache.commons.math.distribution.NormalDistributionImpl.NormalDistributionImpl(2)" "org.apache.commons.math.distribution.NormalDistributionImpl.setMean(1)"
call "org.apache.commons.math.distribution.NormalDistributionImpl.NormalDistributionImpl(2)" "org.apache.commons.math.distribution.NormalDistributionImpl.setStandardDeviation(1)"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.NormalDistributionImpl(2)"
call "org.apache.commons.math.distribution.NormalDistributionImpl.NormalDistributionImpl(0)" "org.apache.commons.math.distribution.NormalDistributionImpl.NormalDistributionImpl(2)"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.NormalDistributionImpl(0)"
reference "org.apache.commons.math.distribution.NormalDistributionImpl.getMean(0)" "org.apache.commons.math.distribution.NormalDistributionImpl.mean"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.getMean(0)"
reference "org.apache.commons.math.distribution.NormalDistributionImpl.setMean(1)" "org.apache.commons.math.distribution.NormalDistributionImpl.mean"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.setMean(1)"
reference "org.apache.commons.math.distribution.NormalDistributionImpl.getStandardDeviation(0)" "org.apache.commons.math.distribution.NormalDistributionImpl.standardDeviation"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.getStandardDeviation(0)"
reference "org.apache.commons.math.distribution.NormalDistributionImpl.setStandardDeviation(1)" "org.apache.commons.math.distribution.NormalDistributionImpl.standardDeviation"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.setStandardDeviation(1)"
reference "org.apache.commons.math.distribution.NormalDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.NormalDistributionImpl.mean"
reference "org.apache.commons.math.distribution.NormalDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.NormalDistributionImpl.standardDeviation"
call "org.apache.commons.math.distribution.NormalDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.special.Erf.erf(1)"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.NormalDistributionImpl.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.inverseCumulativeProbability(1)"
call "org.apache.commons.math.distribution.NormalDistributionImpl.getDomainLowerBound(1)" "org.apache.commons.math.distribution.NormalDistributionImpl.getMean(0)"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.getDomainLowerBound(1)"
call "org.apache.commons.math.distribution.NormalDistributionImpl.getDomainUpperBound(1)" "org.apache.commons.math.distribution.NormalDistributionImpl.getMean(0)"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.getDomainUpperBound(1)"
call "org.apache.commons.math.distribution.NormalDistributionImpl.getInitialDomain(1)" "org.apache.commons.math.distribution.NormalDistributionImpl.getMean(0)"
call "org.apache.commons.math.distribution.NormalDistributionImpl.getInitialDomain(1)" "org.apache.commons.math.distribution.NormalDistributionImpl.getStandardDeviation(0)"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.getInitialDomain(1)"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.serialVersionUID"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.mean"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.standardDeviation"
contain "org.apache.commons.math.ode.FixedStepHandler" "org.apache.commons.math.ode.FixedStepHandler.handleStep(3)"
reference "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.distribution.TDistributionImpl"
reference "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTest"
reference "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.StatUtils"
reference "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.descriptive.StatisticalSummary"
reference "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.distribution.DistributionFactory"
reference "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.distribution.TDistribution"
call "org.apache.commons.math.stat.inference.TTestImpl.TTestImpl(0)" "org.apache.commons.math.distribution.TDistributionImpl.TDistributionImpl(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.TTestImpl(0)" "org.apache.commons.math.stat.inference.TTestImpl.TTestImpl(1)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.TTestImpl(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.TTestImpl(1)" "org.apache.commons.math.stat.inference.TTestImpl.setDistribution(1)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.TTestImpl(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.pairedT(2)" "org.apache.commons.math.stat.StatUtils.meanDifference(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.pairedT(2)" "org.apache.commons.math.stat.StatUtils.varianceDifference(3)"
call "org.apache.commons.math.stat.inference.TTestImpl.pairedT(2)" "org.apache.commons.math.stat.inference.TTestImpl.t(4)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.pairedT(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.pairedTTest(2)" "org.apache.commons.math.stat.StatUtils.meanDifference(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.pairedTTest(2)" "org.apache.commons.math.stat.StatUtils.varianceDifference(3)"
call "org.apache.commons.math.stat.inference.TTestImpl.pairedTTest(2)" "org.apache.commons.math.stat.inference.TTestImpl.tTest(4)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.pairedTTest(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.pairedTTest(3)" "org.apache.commons.math.stat.inference.TTestImpl.pairedTTest(2)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.pairedTTest(3)"
call "org.apache.commons.math.stat.inference.TTestImpl.t(2)" "org.apache.commons.math.stat.StatUtils.mean(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.t(2)" "org.apache.commons.math.stat.StatUtils.variance(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.t(2)" "org.apache.commons.math.stat.inference.TTestImpl.t(4)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.t(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.t(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getN(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.t(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getMean(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.t(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getVariance(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.t(2)" "org.apache.commons.math.stat.inference.TTestImpl.t(4)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.t(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticT(2)" "org.apache.commons.math.stat.StatUtils.mean(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticT(2)" "org.apache.commons.math.stat.StatUtils.variance(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticT(2)" "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticT(6)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticT(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.t(2)" "org.apache.commons.math.stat.StatUtils.mean(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.t(2)" "org.apache.commons.math.stat.StatUtils.variance(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.t(2)" "org.apache.commons.math.stat.inference.TTestImpl.t(6)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.t(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.t(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getN(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.t(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getMean(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.t(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getVariance(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.t(2)" "org.apache.commons.math.stat.inference.TTestImpl.t(6)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.t(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticT(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getN(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticT(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getMean(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticT(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getVariance(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticT(2)" "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticT(6)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticT(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)" "org.apache.commons.math.stat.StatUtils.mean(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)" "org.apache.commons.math.stat.StatUtils.variance(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)" "org.apache.commons.math.stat.inference.TTestImpl.tTest(4)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(3)" "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.tTest(3)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getN(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getMean(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getVariance(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)" "org.apache.commons.math.stat.inference.TTestImpl.tTest(4)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(3)" "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.tTest(3)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)" "org.apache.commons.math.stat.StatUtils.mean(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)" "org.apache.commons.math.stat.StatUtils.variance(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)" "org.apache.commons.math.stat.inference.TTestImpl.tTest(6)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(2)" "org.apache.commons.math.stat.StatUtils.mean(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(2)" "org.apache.commons.math.stat.StatUtils.variance(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(2)" "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(6)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(3)" "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.tTest(3)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(3)" "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(2)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(3)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getN(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getMean(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getVariance(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)" "org.apache.commons.math.stat.inference.TTestImpl.tTest(6)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getN(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getMean(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getVariance(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(2)" "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(6)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(3)" "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.tTest(3)"
call "org.apache.commons.math.stat.inference.TTestImpl.getDistributionFactory(0)" "org.apache.commons.math.distribution.DistributionFactory.newInstance(0)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.getDistributionFactory(0)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.df(4)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.t(4)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.t(6)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticT(6)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(4)" "org.apache.commons.math.stat.inference.TTestImpl.t(4)"
reference "org.apache.commons.math.stat.inference.TTestImpl.tTest(4)" "org.apache.commons.math.stat.inference.TTestImpl.distribution"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(4)" "org.apache.commons.math.distribution.TDistribution.setDegreesOfFreedom(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(4)" "org.apache.commons.math.distribution.TDistribution.cumulativeProbability(2)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.tTest(4)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(6)" "org.apache.commons.math.stat.inference.TTestImpl.t(6)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(6)" "org.apache.commons.math.stat.inference.TTestImpl.df(4)"
reference "org.apache.commons.math.stat.inference.TTestImpl.tTest(6)" "org.apache.commons.math.stat.inference.TTestImpl.distribution"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(6)" "org.apache.commons.math.distribution.TDistribution.setDegreesOfFreedom(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(6)" "org.apache.commons.math.distribution.TDistribution.cumulativeProbability(2)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.tTest(6)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(6)" "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticT(6)"
reference "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(6)" "org.apache.commons.math.stat.inference.TTestImpl.distribution"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(6)" "org.apache.commons.math.distribution.TDistribution.setDegreesOfFreedom(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(6)" "org.apache.commons.math.distribution.TDistribution.cumulativeProbability(2)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(6)"
reference "org.apache.commons.math.stat.inference.TTestImpl.setDistribution(1)" "org.apache.commons.math.stat.inference.TTestImpl.distribution"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.setDistribution(1)"
reference "org.apache.commons.math.stat.inference.TTestImpl.distribution" "org.apache.commons.math.distribution.TDistribution"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.distribution"
reference "org.apache.commons.math.ode.FirstOrderIntegrator" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.FirstOrderIntegrator" "org.apache.commons.math.ode.IntegratorException"
contain "org.apache.commons.math.ode.FirstOrderIntegrator" "org.apache.commons.math.ode.FirstOrderIntegrator.getName(0)"
contain "org.apache.commons.math.ode.FirstOrderIntegrator" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
contain "org.apache.commons.math.ode.FirstOrderIntegrator" "org.apache.commons.math.ode.FirstOrderIntegrator.getStepHandler(0)"
contain "org.apache.commons.math.ode.FirstOrderIntegrator" "org.apache.commons.math.ode.FirstOrderIntegrator.addSwitchingFunction(3)"
contain "org.apache.commons.math.ode.FirstOrderIntegrator" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
reference "org.apache.commons.math.special.Erf" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.special.Erf" "org.apache.commons.math.special.Gamma"
contain "org.apache.commons.math.special.Erf" "org.apache.commons.math.special.Erf.Erf(0)"
call "org.apache.commons.math.special.Erf.erf(1)" "org.apache.commons.math.special.Gamma.regularizedGammaP(4)"
contain "org.apache.commons.math.special.Erf" "org.apache.commons.math.special.Erf.erf(1)"
contain "org.apache.commons.math.special.Erf" "org.apache.commons.math.special.Erf.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.stat.descriptive.moment.FourthMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.stat.descriptive.moment.Variance"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.stat.descriptive.moment.SecondMoment"
call "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(0)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(0)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.incMoment"
call "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(0)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.FourthMoment(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(0)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.moment"
contain "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(0)"
call "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(1)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.incMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(1)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.moment"
contain "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(1)"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.increment(1)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.incMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.increment(1)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.moment"
call "org.apache.commons.math.stat.descriptive.moment.Kurtosis.increment(1)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.increment(1)"
contain "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.increment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.moment"
call "org.apache.commons.math.stat.descriptive.moment.Kurtosis.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.getN(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.m2"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.n"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.m4"
contain "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.clear(0)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.incMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.clear(0)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.moment"
call "org.apache.commons.math.stat.descriptive.moment.Kurtosis.clear(0)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.clear(0)"
contain "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.clear(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.getN(0)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.moment"
call "org.apache.commons.math.stat.descriptive.moment.Kurtosis.getN(0)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.getN(0)"
contain "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.getN(0)"
call "org.apache.commons.math.stat.descriptive.moment.Kurtosis.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.test(3)"
call "org.apache.commons.math.stat.descriptive.moment.Kurtosis.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(0)"
call "org.apache.commons.math.stat.descriptive.moment.Kurtosis.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.Variance.incrementAll(3)"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.Variance.moment"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.m1"
call "org.apache.commons.math.stat.descriptive.moment.Kurtosis.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.Variance.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.moment" "org.apache.commons.math.stat.descriptive.moment.FourthMoment"
contain "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.moment"
contain "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.incMoment"
reference "org.apache.commons.math.ode.DormandPrince54Integrator" "org.apache.commons.math.ode.DormandPrince54StepInterpolator"
reference "org.apache.commons.math.ode.DormandPrince54Integrator" "double[]"
reference "org.apache.commons.math.ode.DormandPrince54Integrator" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator"
reference "org.apache.commons.math.ode.DormandPrince54Integrator.DormandPrince54Integrator(4)" "org.apache.commons.math.ode.DormandPrince54Integrator.c"
reference "org.apache.commons.math.ode.DormandPrince54Integrator.DormandPrince54Integrator(4)" "org.apache.commons.math.ode.DormandPrince54Integrator.a"
reference "org.apache.commons.math.ode.DormandPrince54Integrator.DormandPrince54Integrator(4)" "org.apache.commons.math.ode.DormandPrince54Integrator.b"
call "org.apache.commons.math.ode.DormandPrince54Integrator.DormandPrince54Integrator(4)" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(0)"
call "org.apache.commons.math.ode.DormandPrince54Integrator.DormandPrince54Integrator(4)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.RungeKuttaFehlbergIntegrator(9)"
contain "org.apache.commons.math.ode.DormandPrince54Integrator" "org.apache.commons.math.ode.DormandPrince54Integrator.DormandPrince54Integrator(4)"
reference "org.apache.commons.math.ode.DormandPrince54Integrator.DormandPrince54Integrator(4)" "org.apache.commons.math.ode.DormandPrince54Integrator.c"
reference "org.apache.commons.math.ode.DormandPrince54Integrator.DormandPrince54Integrator(4)" "org.apache.commons.math.ode.DormandPrince54Integrator.a"
reference "org.apache.commons.math.ode.DormandPrince54Integrator.DormandPrince54Integrator(4)" "org.apache.commons.math.ode.DormandPrince54Integrator.b"
call "org.apache.commons.math.ode.DormandPrince54Integrator.DormandPrince54Integrator(4)" "org.apache.commons.math.ode.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(0)"
call "org.apache.commons.math.ode.DormandPrince54Integrator.DormandPrince54Integrator(4)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.RungeKuttaFehlbergIntegrator(9)"
contain "org.apache.commons.math.ode.DormandPrince54Integrator" "org.apache.commons.math.ode.DormandPrince54Integrator.DormandPrince54Integrator(4)"
contain "org.apache.commons.math.ode.DormandPrince54Integrator" "org.apache.commons.math.ode.DormandPrince54Integrator.getName(0)"
contain "org.apache.commons.math.ode.DormandPrince54Integrator" "org.apache.commons.math.ode.DormandPrince54Integrator.getOrder(0)"
reference "org.apache.commons.math.ode.DormandPrince54Integrator.estimateError(4)" "org.apache.commons.math.ode.DormandPrince54Integrator.vecAbsoluteTolerance"
reference "org.apache.commons.math.ode.DormandPrince54Integrator.estimateError(4)" "org.apache.commons.math.ode.DormandPrince54Integrator.scalAbsoluteTolerance"
reference "org.apache.commons.math.ode.DormandPrince54Integrator.estimateError(4)" "org.apache.commons.math.ode.DormandPrince54Integrator.scalRelativeTolerance"
reference "org.apache.commons.math.ode.DormandPrince54Integrator.estimateError(4)" "org.apache.commons.math.ode.DormandPrince54Integrator.vecRelativeTolerance"
contain "org.apache.commons.math.ode.DormandPrince54Integrator" "org.apache.commons.math.ode.DormandPrince54Integrator.estimateError(4)"
reference "org.apache.commons.math.ode.DormandPrince54Integrator.static {...}" "org.apache.commons.math.ode.DormandPrince54Integrator.c"
reference "org.apache.commons.math.ode.DormandPrince54Integrator.static {...}" "org.apache.commons.math.ode.DormandPrince54Integrator.a"
reference "org.apache.commons.math.ode.DormandPrince54Integrator.static {...}" "org.apache.commons.math.ode.DormandPrince54Integrator.b"
contain "org.apache.commons.math.ode.DormandPrince54Integrator" "org.apache.commons.math.ode.DormandPrince54Integrator.static {...}"
contain "org.apache.commons.math.ode.DormandPrince54Integrator" "org.apache.commons.math.ode.DormandPrince54Integrator.methodName"
reference "org.apache.commons.math.ode.DormandPrince54Integrator.c" "double[]"
contain "org.apache.commons.math.ode.DormandPrince54Integrator" "org.apache.commons.math.ode.DormandPrince54Integrator.c"
reference "org.apache.commons.math.ode.DormandPrince54Integrator.a" "double[][]"
contain "org.apache.commons.math.ode.DormandPrince54Integrator" "org.apache.commons.math.ode.DormandPrince54Integrator.a"
reference "org.apache.commons.math.ode.DormandPrince54Integrator.b" "double[]"
contain "org.apache.commons.math.ode.DormandPrince54Integrator" "org.apache.commons.math.ode.DormandPrince54Integrator.b"
contain "org.apache.commons.math.ode.DormandPrince54Integrator" "org.apache.commons.math.ode.DormandPrince54Integrator.e1"
contain "org.apache.commons.math.ode.DormandPrince54Integrator" "org.apache.commons.math.ode.DormandPrince54Integrator.e3"
contain "org.apache.commons.math.ode.DormandPrince54Integrator" "org.apache.commons.math.ode.DormandPrince54Integrator.e4"
contain "org.apache.commons.math.ode.DormandPrince54Integrator" "org.apache.commons.math.ode.DormandPrince54Integrator.e5"
contain "org.apache.commons.math.ode.DormandPrince54Integrator" "org.apache.commons.math.ode.DormandPrince54Integrator.e6"
contain "org.apache.commons.math.ode.DormandPrince54Integrator" "org.apache.commons.math.ode.DormandPrince54Integrator.e7"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfSquares" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic"
call "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.SumOfSquares(0)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.SumOfSquares(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.n"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.SumOfSquares(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.value"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfSquares" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.SumOfSquares(0)"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.increment(1)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.n"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.increment(1)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.value"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfSquares" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.increment(1)"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.getResult(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.value"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfSquares" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.getN(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.n"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfSquares" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.getN(0)"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.clear(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.value"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.clear(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.n"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfSquares" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.clear(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.evaluate(3)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.test(3)"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfSquares" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfSquares" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfSquares" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.n"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfSquares" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.value"
reference "org.apache.commons.math.stat.descriptive.moment.SecondMoment" "org.apache.commons.math.stat.descriptive.moment.FirstMoment"
call "org.apache.commons.math.stat.descriptive.moment.SecondMoment.SecondMoment(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.FirstMoment(0)"
reference "org.apache.commons.math.stat.descriptive.moment.SecondMoment.SecondMoment(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.m2"
contain "org.apache.commons.math.stat.descriptive.moment.SecondMoment" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.SecondMoment(0)"
reference "org.apache.commons.math.stat.descriptive.moment.SecondMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.n"
reference "org.apache.commons.math.stat.descriptive.moment.SecondMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.m2"
reference "org.apache.commons.math.stat.descriptive.moment.SecondMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.m1"
call "org.apache.commons.math.stat.descriptive.moment.SecondMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.increment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.SecondMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.dev"
reference "org.apache.commons.math.stat.descriptive.moment.SecondMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.nDev"
contain "org.apache.commons.math.stat.descriptive.moment.SecondMoment" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.increment(1)"
call "org.apache.commons.math.stat.descriptive.moment.SecondMoment.clear(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.clear(0)"
reference "org.apache.commons.math.stat.descriptive.moment.SecondMoment.clear(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.m2"
contain "org.apache.commons.math.stat.descriptive.moment.SecondMoment" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.clear(0)"
reference "org.apache.commons.math.stat.descriptive.moment.SecondMoment.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.m2"
contain "org.apache.commons.math.stat.descriptive.moment.SecondMoment" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.moment.SecondMoment" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.moment.SecondMoment" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.m2"
reference "org.apache.commons.math.geometry.CardanEulerSingularityException" "org.apache.commons.math.MathException"
call "org.apache.commons.math.geometry.CardanEulerSingularityException.CardanEulerSingularityException(1)" "org.apache.commons.math.MathException.MathException(2)"
contain "org.apache.commons.math.geometry.CardanEulerSingularityException" "org.apache.commons.math.geometry.CardanEulerSingularityException.CardanEulerSingularityException(1)"
contain "org.apache.commons.math.geometry.CardanEulerSingularityException" "org.apache.commons.math.geometry.CardanEulerSingularityException.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.rank.Median" "org.apache.commons.math.stat.descriptive.rank.Percentile"
call "org.apache.commons.math.stat.descriptive.rank.Median.Median(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)"
contain "org.apache.commons.math.stat.descriptive.rank.Median" "org.apache.commons.math.stat.descriptive.rank.Median.Median(0)"
contain "org.apache.commons.math.stat.descriptive.rank.Median" "org.apache.commons.math.stat.descriptive.rank.Median.serialVersionUID"
reference "org.apache.commons.math.geometry.NotARotationMatrixException" "org.apache.commons.math.MathException"
call "org.apache.commons.math.geometry.NotARotationMatrixException.NotARotationMatrixException(2)" "org.apache.commons.math.MathException.MathException(2)"
contain "org.apache.commons.math.geometry.NotARotationMatrixException" "org.apache.commons.math.geometry.NotARotationMatrixException.NotARotationMatrixException(2)"
contain "org.apache.commons.math.geometry.NotARotationMatrixException" "org.apache.commons.math.geometry.NotARotationMatrixException.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic"
reference "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic"
reference "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic" "org.apache.commons.math.util.MathUtils"
call "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic.AbstractUnivariateStatistic(0)"
contain "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
call "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(3)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.test(3)"
call "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(3)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.clear(0)"
call "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(3)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(3)"
call "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(3)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.clear(0)"
contain "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.increment(1)"
call "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(3)"
contain "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(1)"
call "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(3)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.test(3)"
call "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(3)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.increment(1)"
contain "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(3)"
call "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.getResult(0)"
call "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(1)" "org.apache.commons.math.util.MathUtils.equals(2)"
call "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.getN(0)"
contain "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(1)"
call "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode(0)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.getResult(0)"
call "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode(0)" "org.apache.commons.math.util.MathUtils.hash(1)"
call "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode(0)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.getN(0)"
contain "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode(0)"
contain "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.serialVersionUID"
reference "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.RandomDataImpl"
reference "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.EmpiricalDistributionImpl"
reference "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.EmpiricalDistribution"
reference "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.stat.descriptive.StatisticalSummary"
reference "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.RandomData"
reference "org.apache.commons.math.random.ValueServer.ValueServer(0)" "org.apache.commons.math.random.ValueServer.mode"
reference "org.apache.commons.math.random.ValueServer.ValueServer(0)" "org.apache.commons.math.random.ValueServer.valuesFileURL"
reference "org.apache.commons.math.random.ValueServer.ValueServer(0)" "org.apache.commons.math.random.ValueServer.mu"
reference "org.apache.commons.math.random.ValueServer.ValueServer(0)" "org.apache.commons.math.random.ValueServer.sigma"
reference "org.apache.commons.math.random.ValueServer.ValueServer(0)" "org.apache.commons.math.random.ValueServer.empiricalDistribution"
reference "org.apache.commons.math.random.ValueServer.ValueServer(0)" "org.apache.commons.math.random.ValueServer.filePointer"
call "org.apache.commons.math.random.ValueServer.ValueServer(0)" "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(0)"
reference "org.apache.commons.math.random.ValueServer.ValueServer(0)" "org.apache.commons.math.random.ValueServer.randomData"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.ValueServer(0)"
reference "org.apache.commons.math.random.ValueServer.getNext(0)" "org.apache.commons.math.random.ValueServer.mode"
call "org.apache.commons.math.random.ValueServer.getNext(0)" "org.apache.commons.math.random.ValueServer.getNextDigest(0)"
call "org.apache.commons.math.random.ValueServer.getNext(0)" "org.apache.commons.math.random.ValueServer.getNextReplay(0)"
call "org.apache.commons.math.random.ValueServer.getNext(0)" "org.apache.commons.math.random.ValueServer.getNextUniform(0)"
call "org.apache.commons.math.random.ValueServer.getNext(0)" "org.apache.commons.math.random.ValueServer.getNextExponential(0)"
call "org.apache.commons.math.random.ValueServer.getNext(0)" "org.apache.commons.math.random.ValueServer.getNextGaussian(0)"
reference "org.apache.commons.math.random.ValueServer.getNext(0)" "org.apache.commons.math.random.ValueServer.mu"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.getNext(0)"
call "org.apache.commons.math.random.ValueServer.fill(1)" "org.apache.commons.math.random.ValueServer.getNext(0)"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.fill(1)"
call "org.apache.commons.math.random.ValueServer.fill(1)" "org.apache.commons.math.random.ValueServer.getNext(0)"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.fill(1)"
call "org.apache.commons.math.random.ValueServer.computeDistribution(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(0)"
reference "org.apache.commons.math.random.ValueServer.computeDistribution(0)" "org.apache.commons.math.random.ValueServer.empiricalDistribution"
reference "org.apache.commons.math.random.ValueServer.computeDistribution(0)" "org.apache.commons.math.random.ValueServer.valuesFileURL"
call "org.apache.commons.math.random.ValueServer.computeDistribution(0)" "org.apache.commons.math.random.EmpiricalDistribution.load(1)"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.computeDistribution(0)"
call "org.apache.commons.math.random.ValueServer.computeDistribution(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(1)"
reference "org.apache.commons.math.random.ValueServer.computeDistribution(1)" "org.apache.commons.math.random.ValueServer.empiricalDistribution"
reference "org.apache.commons.math.random.ValueServer.computeDistribution(1)" "org.apache.commons.math.random.ValueServer.valuesFileURL"
call "org.apache.commons.math.random.ValueServer.computeDistribution(1)" "org.apache.commons.math.random.EmpiricalDistribution.load(1)"
call "org.apache.commons.math.random.ValueServer.computeDistribution(1)" "org.apache.commons.math.random.EmpiricalDistribution.getSampleStats(0)"
call "org.apache.commons.math.random.ValueServer.computeDistribution(1)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getMean(0)"
reference "org.apache.commons.math.random.ValueServer.computeDistribution(1)" "org.apache.commons.math.random.ValueServer.mu"
call "org.apache.commons.math.random.ValueServer.computeDistribution(1)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getStandardDeviation(0)"
reference "org.apache.commons.math.random.ValueServer.computeDistribution(1)" "org.apache.commons.math.random.ValueServer.sigma"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.computeDistribution(1)"
reference "org.apache.commons.math.random.ValueServer.getMode(0)" "org.apache.commons.math.random.ValueServer.mode"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.getMode(0)"
reference "org.apache.commons.math.random.ValueServer.setMode(1)" "org.apache.commons.math.random.ValueServer.mode"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.setMode(1)"
reference "org.apache.commons.math.random.ValueServer.getValuesFileURL(0)" "org.apache.commons.math.random.ValueServer.valuesFileURL"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.getValuesFileURL(0)"
reference "org.apache.commons.math.random.ValueServer.setValuesFileURL(1)" "org.apache.commons.math.random.ValueServer.valuesFileURL"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.setValuesFileURL(1)"
reference "org.apache.commons.math.random.ValueServer.setValuesFileURL(1)" "org.apache.commons.math.random.ValueServer.valuesFileURL"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.setValuesFileURL(1)"
reference "org.apache.commons.math.random.ValueServer.getEmpiricalDistribution(0)" "org.apache.commons.math.random.ValueServer.empiricalDistribution"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.getEmpiricalDistribution(0)"
reference "org.apache.commons.math.random.ValueServer.resetReplayFile(0)" "org.apache.commons.math.random.ValueServer.filePointer"
reference "org.apache.commons.math.random.ValueServer.resetReplayFile(0)" "org.apache.commons.math.random.ValueServer.valuesFileURL"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.resetReplayFile(0)"
reference "org.apache.commons.math.random.ValueServer.closeReplayFile(0)" "org.apache.commons.math.random.ValueServer.filePointer"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.closeReplayFile(0)"
reference "org.apache.commons.math.random.ValueServer.getMu(0)" "org.apache.commons.math.random.ValueServer.mu"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.getMu(0)"
reference "org.apache.commons.math.random.ValueServer.setMu(1)" "org.apache.commons.math.random.ValueServer.mu"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.setMu(1)"
reference "org.apache.commons.math.random.ValueServer.getSigma(0)" "org.apache.commons.math.random.ValueServer.sigma"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.getSigma(0)"
reference "org.apache.commons.math.random.ValueServer.setSigma(1)" "org.apache.commons.math.random.ValueServer.sigma"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.setSigma(1)"
reference "org.apache.commons.math.random.ValueServer.getNextDigest(0)" "org.apache.commons.math.random.ValueServer.empiricalDistribution"
call "org.apache.commons.math.random.ValueServer.getNextDigest(0)" "org.apache.commons.math.random.EmpiricalDistribution.getBinStats(0)"
call "org.apache.commons.math.random.ValueServer.getNextDigest(0)" "org.apache.commons.math.random.EmpiricalDistribution.getNextValue(0)"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.getNextDigest(0)"
reference "org.apache.commons.math.random.ValueServer.getNextReplay(0)" "org.apache.commons.math.random.ValueServer.filePointer"
call "org.apache.commons.math.random.ValueServer.getNextReplay(0)" "org.apache.commons.math.random.ValueServer.resetReplayFile(0)"
call "org.apache.commons.math.random.ValueServer.getNextReplay(0)" "org.apache.commons.math.random.ValueServer.closeReplayFile(0)"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.getNextReplay(0)"
reference "org.apache.commons.math.random.ValueServer.getNextUniform(0)" "org.apache.commons.math.random.ValueServer.randomData"
reference "org.apache.commons.math.random.ValueServer.getNextUniform(0)" "org.apache.commons.math.random.ValueServer.mu"
call "org.apache.commons.math.random.ValueServer.getNextUniform(0)" "org.apache.commons.math.random.RandomData.nextUniform(2)"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.getNextUniform(0)"
reference "org.apache.commons.math.random.ValueServer.getNextExponential(0)" "org.apache.commons.math.random.ValueServer.randomData"
reference "org.apache.commons.math.random.ValueServer.getNextExponential(0)" "org.apache.commons.math.random.ValueServer.mu"
call "org.apache.commons.math.random.ValueServer.getNextExponential(0)" "org.apache.commons.math.random.RandomData.nextExponential(1)"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.getNextExponential(0)"
reference "org.apache.commons.math.random.ValueServer.getNextGaussian(0)" "org.apache.commons.math.random.ValueServer.randomData"
reference "org.apache.commons.math.random.ValueServer.getNextGaussian(0)" "org.apache.commons.math.random.ValueServer.mu"
reference "org.apache.commons.math.random.ValueServer.getNextGaussian(0)" "org.apache.commons.math.random.ValueServer.sigma"
call "org.apache.commons.math.random.ValueServer.getNextGaussian(0)" "org.apache.commons.math.random.RandomData.nextGaussian(2)"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.getNextGaussian(0)"
reference "org.apache.commons.math.random.ValueServer.ValueServer(1)" "org.apache.commons.math.random.ValueServer.mode"
reference "org.apache.commons.math.random.ValueServer.ValueServer(1)" "org.apache.commons.math.random.ValueServer.valuesFileURL"
reference "org.apache.commons.math.random.ValueServer.ValueServer(1)" "org.apache.commons.math.random.ValueServer.mu"
reference "org.apache.commons.math.random.ValueServer.ValueServer(1)" "org.apache.commons.math.random.ValueServer.sigma"
reference "org.apache.commons.math.random.ValueServer.ValueServer(1)" "org.apache.commons.math.random.ValueServer.empiricalDistribution"
reference "org.apache.commons.math.random.ValueServer.ValueServer(1)" "org.apache.commons.math.random.ValueServer.filePointer"
call "org.apache.commons.math.random.ValueServer.ValueServer(1)" "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(0)"
reference "org.apache.commons.math.random.ValueServer.ValueServer(1)" "org.apache.commons.math.random.ValueServer.randomData"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.ValueServer(1)"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.mode"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.valuesFileURL"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.mu"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.sigma"
reference "org.apache.commons.math.random.ValueServer.empiricalDistribution" "org.apache.commons.math.random.EmpiricalDistribution"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.empiricalDistribution"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.filePointer"
reference "org.apache.commons.math.random.ValueServer.randomData" "org.apache.commons.math.random.RandomData"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.randomData"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.DIGEST_MODE"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.REPLAY_MODE"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.UNIFORM_MODE"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.EXPONENTIAL_MODE"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.GAUSSIAN_MODE"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.CONSTANT_MODE"
reference "org.apache.commons.math.analysis.TrapezoidIntegrator" "org.apache.commons.math.MaxIterationsExceededException"
reference "org.apache.commons.math.analysis.TrapezoidIntegrator" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl"
reference "org.apache.commons.math.analysis.TrapezoidIntegrator" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.TrapezoidIntegrator" "org.apache.commons.math.analysis.UnivariateRealFunction"
call "org.apache.commons.math.analysis.TrapezoidIntegrator.TrapezoidIntegrator(1)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.UnivariateRealIntegratorImpl(2)"
contain "org.apache.commons.math.analysis.TrapezoidIntegrator" "org.apache.commons.math.analysis.TrapezoidIntegrator.TrapezoidIntegrator(1)"
reference "org.apache.commons.math.analysis.TrapezoidIntegrator.stage(3)" "org.apache.commons.math.analysis.TrapezoidIntegrator.f"
call "org.apache.commons.math.analysis.TrapezoidIntegrator.stage(3)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
reference "org.apache.commons.math.analysis.TrapezoidIntegrator.stage(3)" "org.apache.commons.math.analysis.TrapezoidIntegrator.s"
contain "org.apache.commons.math.analysis.TrapezoidIntegrator" "org.apache.commons.math.analysis.TrapezoidIntegrator.stage(3)"
call "org.apache.commons.math.analysis.TrapezoidIntegrator.integrate(2)" "org.apache.commons.math.analysis.TrapezoidIntegrator.clearResult(0)"
call "org.apache.commons.math.analysis.TrapezoidIntegrator.integrate(2)" "org.apache.commons.math.analysis.TrapezoidIntegrator.verifyInterval(2)"
call "org.apache.commons.math.analysis.TrapezoidIntegrator.integrate(2)" "org.apache.commons.math.analysis.TrapezoidIntegrator.verifyIterationCount(0)"
call "org.apache.commons.math.analysis.TrapezoidIntegrator.integrate(2)" "org.apache.commons.math.analysis.TrapezoidIntegrator.stage(3)"
reference "org.apache.commons.math.analysis.TrapezoidIntegrator.integrate(2)" "org.apache.commons.math.analysis.TrapezoidIntegrator.maximalIterationCount"
reference "org.apache.commons.math.analysis.TrapezoidIntegrator.integrate(2)" "org.apache.commons.math.analysis.TrapezoidIntegrator.minimalIterationCount"
reference "org.apache.commons.math.analysis.TrapezoidIntegrator.integrate(2)" "org.apache.commons.math.analysis.TrapezoidIntegrator.relativeAccuracy"
call "org.apache.commons.math.analysis.TrapezoidIntegrator.integrate(2)" "org.apache.commons.math.analysis.TrapezoidIntegrator.setResult(2)"
reference "org.apache.commons.math.analysis.TrapezoidIntegrator.integrate(2)" "org.apache.commons.math.analysis.TrapezoidIntegrator.result"
call "org.apache.commons.math.analysis.TrapezoidIntegrator.integrate(2)" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)"
contain "org.apache.commons.math.analysis.TrapezoidIntegrator" "org.apache.commons.math.analysis.TrapezoidIntegrator.integrate(2)"
call "org.apache.commons.math.analysis.TrapezoidIntegrator.verifyIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.verifyIterationCount(0)"
reference "org.apache.commons.math.analysis.TrapezoidIntegrator.verifyIterationCount(0)" "org.apache.commons.math.analysis.TrapezoidIntegrator.maximalIterationCount"
contain "org.apache.commons.math.analysis.TrapezoidIntegrator" "org.apache.commons.math.analysis.TrapezoidIntegrator.verifyIterationCount(0)"
contain "org.apache.commons.math.analysis.TrapezoidIntegrator" "org.apache.commons.math.analysis.TrapezoidIntegrator.serialVersionUID"
contain "org.apache.commons.math.analysis.TrapezoidIntegrator" "org.apache.commons.math.analysis.TrapezoidIntegrator.s"
reference "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.AbstractContinuousDistribution"
reference "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.CauchyDistribution"
call "org.apache.commons.math.distribution.CauchyDistributionImpl.CauchyDistributionImpl(0)" "org.apache.commons.math.distribution.CauchyDistributionImpl.CauchyDistributionImpl(2)"
contain "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.CauchyDistributionImpl.CauchyDistributionImpl(0)"
call "org.apache.commons.math.distribution.CauchyDistributionImpl.CauchyDistributionImpl(2)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.AbstractContinuousDistribution(0)"
reference "org.apache.commons.math.distribution.CauchyDistributionImpl.CauchyDistributionImpl(2)" "org.apache.commons.math.distribution.CauchyDistributionImpl.median"
reference "org.apache.commons.math.distribution.CauchyDistributionImpl.CauchyDistributionImpl(2)" "org.apache.commons.math.distribution.CauchyDistributionImpl.scale"
call "org.apache.commons.math.distribution.CauchyDistributionImpl.CauchyDistributionImpl(2)" "org.apache.commons.math.distribution.CauchyDistributionImpl.setMedian(1)"
call "org.apache.commons.math.distribution.CauchyDistributionImpl.CauchyDistributionImpl(2)" "org.apache.commons.math.distribution.CauchyDistributionImpl.setScale(1)"
contain "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.CauchyDistributionImpl.CauchyDistributionImpl(2)"
reference "org.apache.commons.math.distribution.CauchyDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.CauchyDistributionImpl.median"
reference "org.apache.commons.math.distribution.CauchyDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.CauchyDistributionImpl.scale"
contain "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.CauchyDistributionImpl.cumulativeProbability(1)"
reference "org.apache.commons.math.distribution.CauchyDistributionImpl.getMedian(0)" "org.apache.commons.math.distribution.CauchyDistributionImpl.median"
contain "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.CauchyDistributionImpl.getMedian(0)"
reference "org.apache.commons.math.distribution.CauchyDistributionImpl.getScale(0)" "org.apache.commons.math.distribution.CauchyDistributionImpl.scale"
contain "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.CauchyDistributionImpl.getScale(0)"
reference "org.apache.commons.math.distribution.CauchyDistributionImpl.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.CauchyDistributionImpl.median"
reference "org.apache.commons.math.distribution.CauchyDistributionImpl.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.CauchyDistributionImpl.scale"
contain "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.CauchyDistributionImpl.inverseCumulativeProbability(1)"
reference "org.apache.commons.math.distribution.CauchyDistributionImpl.setMedian(1)" "org.apache.commons.math.distribution.CauchyDistributionImpl.median"
contain "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.CauchyDistributionImpl.setMedian(1)"
reference "org.apache.commons.math.distribution.CauchyDistributionImpl.setScale(1)" "org.apache.commons.math.distribution.CauchyDistributionImpl.scale"
contain "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.CauchyDistributionImpl.setScale(1)"
call "org.apache.commons.math.distribution.CauchyDistributionImpl.getDomainLowerBound(1)" "org.apache.commons.math.distribution.CauchyDistributionImpl.getMedian(0)"
contain "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.CauchyDistributionImpl.getDomainLowerBound(1)"
call "org.apache.commons.math.distribution.CauchyDistributionImpl.getDomainUpperBound(1)" "org.apache.commons.math.distribution.CauchyDistributionImpl.getMedian(0)"
contain "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.CauchyDistributionImpl.getDomainUpperBound(1)"
call "org.apache.commons.math.distribution.CauchyDistributionImpl.getInitialDomain(1)" "org.apache.commons.math.distribution.CauchyDistributionImpl.getMedian(0)"
call "org.apache.commons.math.distribution.CauchyDistributionImpl.getInitialDomain(1)" "org.apache.commons.math.distribution.CauchyDistributionImpl.getScale(0)"
contain "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.CauchyDistributionImpl.getInitialDomain(1)"
contain "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.CauchyDistributionImpl.serialVersionUID"
contain "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.CauchyDistributionImpl.median"
contain "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.CauchyDistributionImpl.scale"
reference "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.analysis.PolynomialFunction"
reference "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.complex.Complex"
reference "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.MaxIterationsExceededException"
reference "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.analysis.UnivariateRealSolverImpl"
reference "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.complex.ComplexUtils"
call "org.apache.commons.math.analysis.LaguerreSolver.LaguerreSolver(1)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)"
reference "org.apache.commons.math.analysis.LaguerreSolver.LaguerreSolver(1)" "org.apache.commons.math.analysis.LaguerreSolver.p"
contain "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.analysis.LaguerreSolver.LaguerreSolver(1)"
reference "org.apache.commons.math.analysis.LaguerreSolver.getPolynomialFunction(0)" "org.apache.commons.math.analysis.LaguerreSolver.p"
call "org.apache.commons.math.analysis.LaguerreSolver.getPolynomialFunction(0)" "org.apache.commons.math.analysis.PolynomialFunction.getCoefficients(0)"
call "org.apache.commons.math.analysis.LaguerreSolver.getPolynomialFunction(0)" "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)"
contain "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.analysis.LaguerreSolver.getPolynomialFunction(0)"
reference "org.apache.commons.math.analysis.LaguerreSolver.solve(3)" "org.apache.commons.math.analysis.LaguerreSolver.p"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(3)" "org.apache.commons.math.analysis.PolynomialFunction.value(1)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(3)" "org.apache.commons.math.analysis.LaguerreSolver.verifyBracketing(3)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(3)" "org.apache.commons.math.analysis.LaguerreSolver.verifySequence(3)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(3)" "org.apache.commons.math.analysis.LaguerreSolver.isBracketing(3)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(3)" "org.apache.commons.math.analysis.LaguerreSolver.solve(2)"
contain "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.analysis.LaguerreSolver.solve(3)"
reference "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.analysis.LaguerreSolver.p"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.analysis.PolynomialFunction.value(1)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.analysis.LaguerreSolver.verifyBracketing(3)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.analysis.PolynomialFunction.getCoefficients(0)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.analysis.LaguerreSolver.solve(2)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.analysis.LaguerreSolver.isRootOK(3)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.complex.Complex.getReal(0)"
reference "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.analysis.LaguerreSolver.iterationCount"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.analysis.LaguerreSolver.setResult(2)"
reference "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.analysis.LaguerreSolver.result"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.analysis.LaguerreSolver.solveAll(2)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.ConvergenceException.ConvergenceException(0)"
contain "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.analysis.LaguerreSolver.solve(2)"
reference "org.apache.commons.math.analysis.LaguerreSolver.isRootOK(3)" "org.apache.commons.math.analysis.LaguerreSolver.relativeAccuracy"
call "org.apache.commons.math.analysis.LaguerreSolver.isRootOK(3)" "org.apache.commons.math.complex.Complex.abs(0)"
reference "org.apache.commons.math.analysis.LaguerreSolver.isRootOK(3)" "org.apache.commons.math.analysis.LaguerreSolver.absoluteAccuracy"
call "org.apache.commons.math.analysis.LaguerreSolver.isRootOK(3)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.analysis.LaguerreSolver.isRootOK(3)" "org.apache.commons.math.analysis.LaguerreSolver.isSequence(3)"
call "org.apache.commons.math.analysis.LaguerreSolver.isRootOK(3)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
reference "org.apache.commons.math.analysis.LaguerreSolver.isRootOK(3)" "org.apache.commons.math.analysis.LaguerreSolver.functionValueAccuracy"
contain "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.analysis.LaguerreSolver.isRootOK(3)"
call "org.apache.commons.math.analysis.LaguerreSolver.solveAll(2)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.analysis.LaguerreSolver.solveAll(2)" "org.apache.commons.math.analysis.LaguerreSolver.solveAll(2)"
contain "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.analysis.LaguerreSolver.solveAll(2)"
call "org.apache.commons.math.analysis.LaguerreSolver.solveAll(2)" "org.apache.commons.math.analysis.LaguerreSolver.solve(2)"
call "org.apache.commons.math.analysis.LaguerreSolver.solveAll(2)" "org.apache.commons.math.complex.Complex.multiply(1)"
call "org.apache.commons.math.analysis.LaguerreSolver.solveAll(2)" "org.apache.commons.math.complex.Complex.add(1)"
reference "org.apache.commons.math.analysis.LaguerreSolver.solveAll(2)" "org.apache.commons.math.analysis.LaguerreSolver.iterationCount"
reference "org.apache.commons.math.analysis.LaguerreSolver.solveAll(2)" "org.apache.commons.math.analysis.LaguerreSolver.resultComputed"
contain "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.analysis.LaguerreSolver.solveAll(2)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.analysis.LaguerreSolver.maximalIterationCount"
reference "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.complex.Complex.ZERO"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.complex.Complex.multiply(1)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.complex.Complex.add(1)"
reference "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.analysis.LaguerreSolver.relativeAccuracy"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.complex.Complex.abs(0)"
reference "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.analysis.LaguerreSolver.absoluteAccuracy"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.complex.Complex.subtract(1)"
reference "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.analysis.LaguerreSolver.resultComputed"
reference "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.analysis.LaguerreSolver.iterationCount"
reference "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.analysis.LaguerreSolver.functionValueAccuracy"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.complex.Complex.divide(1)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.complex.ComplexUtils.sqrt(1)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.complex.Complex.equals(1)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)"
contain "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.analysis.LaguerreSolver.solve(2)"
contain "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.analysis.LaguerreSolver.serialVersionUID"
reference "org.apache.commons.math.analysis.LaguerreSolver.p" "org.apache.commons.math.analysis.PolynomialFunction"
contain "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.analysis.LaguerreSolver.p"
reference "org.apache.commons.math.distribution.FDistribution" "org.apache.commons.math.distribution.ContinuousDistribution"
contain "org.apache.commons.math.distribution.FDistribution" "org.apache.commons.math.distribution.FDistribution.setNumeratorDegreesOfFreedom(1)"
contain "org.apache.commons.math.distribution.FDistribution" "org.apache.commons.math.distribution.FDistribution.getNumeratorDegreesOfFreedom(0)"
contain "org.apache.commons.math.distribution.FDistribution" "org.apache.commons.math.distribution.FDistribution.setDenominatorDegreesOfFreedom(1)"
contain "org.apache.commons.math.distribution.FDistribution" "org.apache.commons.math.distribution.FDistribution.getDenominatorDegreesOfFreedom(0)"
reference "org.apache.commons.math.ode.FirstOrderConverter" "org.apache.commons.math.ode.FirstOrderDifferentialEquations"
reference "org.apache.commons.math.ode.FirstOrderConverter" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.FirstOrderConverter" "org.apache.commons.math.ode.SecondOrderDifferentialEquations"
reference "org.apache.commons.math.ode.FirstOrderConverter.FirstOrderConverter(1)" "org.apache.commons.math.ode.FirstOrderConverter.equations"
call "org.apache.commons.math.ode.FirstOrderConverter.FirstOrderConverter(1)" "org.apache.commons.math.ode.SecondOrderDifferentialEquations.getDimension(0)"
reference "org.apache.commons.math.ode.FirstOrderConverter.FirstOrderConverter(1)" "org.apache.commons.math.ode.FirstOrderConverter.dimension"
reference "org.apache.commons.math.ode.FirstOrderConverter.FirstOrderConverter(1)" "org.apache.commons.math.ode.FirstOrderConverter.z"
reference "org.apache.commons.math.ode.FirstOrderConverter.FirstOrderConverter(1)" "org.apache.commons.math.ode.FirstOrderConverter.zDot"
reference "org.apache.commons.math.ode.FirstOrderConverter.FirstOrderConverter(1)" "org.apache.commons.math.ode.FirstOrderConverter.zDDot"
contain "org.apache.commons.math.ode.FirstOrderConverter" "org.apache.commons.math.ode.FirstOrderConverter.FirstOrderConverter(1)"
reference "org.apache.commons.math.ode.FirstOrderConverter.getDimension(0)" "org.apache.commons.math.ode.FirstOrderConverter.dimension"
contain "org.apache.commons.math.ode.FirstOrderConverter" "org.apache.commons.math.ode.FirstOrderConverter.getDimension(0)"
reference "org.apache.commons.math.ode.FirstOrderConverter.computeDerivatives(3)" "org.apache.commons.math.ode.FirstOrderConverter.z"
reference "org.apache.commons.math.ode.FirstOrderConverter.computeDerivatives(3)" "org.apache.commons.math.ode.FirstOrderConverter.dimension"
reference "org.apache.commons.math.ode.FirstOrderConverter.computeDerivatives(3)" "org.apache.commons.math.ode.FirstOrderConverter.zDot"
reference "org.apache.commons.math.ode.FirstOrderConverter.computeDerivatives(3)" "org.apache.commons.math.ode.FirstOrderConverter.equations"
reference "org.apache.commons.math.ode.FirstOrderConverter.computeDerivatives(3)" "org.apache.commons.math.ode.FirstOrderConverter.zDDot"
call "org.apache.commons.math.ode.FirstOrderConverter.computeDerivatives(3)" "org.apache.commons.math.ode.SecondOrderDifferentialEquations.computeSecondDerivatives(4)"
contain "org.apache.commons.math.ode.FirstOrderConverter" "org.apache.commons.math.ode.FirstOrderConverter.computeDerivatives(3)"
reference "org.apache.commons.math.ode.FirstOrderConverter.equations" "org.apache.commons.math.ode.SecondOrderDifferentialEquations"
contain "org.apache.commons.math.ode.FirstOrderConverter" "org.apache.commons.math.ode.FirstOrderConverter.equations"
contain "org.apache.commons.math.ode.FirstOrderConverter" "org.apache.commons.math.ode.FirstOrderConverter.dimension"
reference "org.apache.commons.math.ode.FirstOrderConverter.z" "double[]"
contain "org.apache.commons.math.ode.FirstOrderConverter" "org.apache.commons.math.ode.FirstOrderConverter.z"
reference "org.apache.commons.math.ode.FirstOrderConverter.zDot" "double[]"
contain "org.apache.commons.math.ode.FirstOrderConverter" "org.apache.commons.math.ode.FirstOrderConverter.zDot"
reference "org.apache.commons.math.ode.FirstOrderConverter.zDDot" "double[]"
contain "org.apache.commons.math.ode.FirstOrderConverter" "org.apache.commons.math.ode.FirstOrderConverter.zDDot"
reference "org.apache.commons.math.FunctionEvaluationException" "org.apache.commons.math.MathException"
call "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(1)" "org.apache.commons.math.MathException.MathException(2)"
reference "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(1)" "org.apache.commons.math.FunctionEvaluationException.argument"
contain "org.apache.commons.math.FunctionEvaluationException" "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(1)"
call "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(2)" "org.apache.commons.math.MathException.MathException(1)"
reference "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(2)" "org.apache.commons.math.FunctionEvaluationException.argument"
contain "org.apache.commons.math.FunctionEvaluationException" "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(2)"
call "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(3)" "org.apache.commons.math.MathException.MathException(2)"
reference "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(3)" "org.apache.commons.math.FunctionEvaluationException.argument"
contain "org.apache.commons.math.FunctionEvaluationException" "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(3)"
call "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(3)" "org.apache.commons.math.MathException.MathException(2)"
reference "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(3)" "org.apache.commons.math.FunctionEvaluationException.argument"
contain "org.apache.commons.math.FunctionEvaluationException" "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(3)"
call "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(2)" "org.apache.commons.math.MathException.MathException(1)"
reference "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(2)" "org.apache.commons.math.FunctionEvaluationException.argument"
contain "org.apache.commons.math.FunctionEvaluationException" "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(2)"
call "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(4)" "org.apache.commons.math.MathException.MathException(3)"
reference "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(4)" "org.apache.commons.math.FunctionEvaluationException.argument"
contain "org.apache.commons.math.FunctionEvaluationException" "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(4)"
reference "org.apache.commons.math.FunctionEvaluationException.getArgument(0)" "org.apache.commons.math.FunctionEvaluationException.argument"
contain "org.apache.commons.math.FunctionEvaluationException" "org.apache.commons.math.FunctionEvaluationException.getArgument(0)"
contain "org.apache.commons.math.FunctionEvaluationException" "org.apache.commons.math.FunctionEvaluationException.serialVersionUID"
contain "org.apache.commons.math.FunctionEvaluationException" "org.apache.commons.math.FunctionEvaluationException.argument"
call "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(0)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(1)"
contain "org.apache.commons.math.linear.MatrixIndexException" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(0)"
contain "org.apache.commons.math.linear.MatrixIndexException" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(1)"
contain "org.apache.commons.math.linear.MatrixIndexException" "org.apache.commons.math.linear.MatrixIndexException.serialVersionUID"
reference "org.apache.commons.math.distribution.TDistribution" "org.apache.commons.math.distribution.ContinuousDistribution"
contain "org.apache.commons.math.distribution.TDistribution" "org.apache.commons.math.distribution.TDistribution.setDegreesOfFreedom(1)"
contain "org.apache.commons.math.distribution.TDistribution" "org.apache.commons.math.distribution.TDistribution.getDegreesOfFreedom(0)"
contain "org.apache.commons.math.random.RandomVectorGenerator" "org.apache.commons.math.random.RandomVectorGenerator.nextVector(0)"
reference "org.apache.commons.math.stat.descriptive.summary.Sum" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic"
call "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(0)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(0)" "org.apache.commons.math.stat.descriptive.summary.Sum.n"
reference "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(0)" "org.apache.commons.math.stat.descriptive.summary.Sum.value"
contain "org.apache.commons.math.stat.descriptive.summary.Sum" "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(0)"
reference "org.apache.commons.math.stat.descriptive.summary.Sum.increment(1)" "org.apache.commons.math.stat.descriptive.summary.Sum.n"
reference "org.apache.commons.math.stat.descriptive.summary.Sum.increment(1)" "org.apache.commons.math.stat.descriptive.summary.Sum.value"
contain "org.apache.commons.math.stat.descriptive.summary.Sum" "org.apache.commons.math.stat.descriptive.summary.Sum.increment(1)"
reference "org.apache.commons.math.stat.descriptive.summary.Sum.getResult(0)" "org.apache.commons.math.stat.descriptive.summary.Sum.value"
contain "org.apache.commons.math.stat.descriptive.summary.Sum" "org.apache.commons.math.stat.descriptive.summary.Sum.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.summary.Sum.getN(0)" "org.apache.commons.math.stat.descriptive.summary.Sum.n"
contain "org.apache.commons.math.stat.descriptive.summary.Sum" "org.apache.commons.math.stat.descriptive.summary.Sum.getN(0)"
reference "org.apache.commons.math.stat.descriptive.summary.Sum.clear(0)" "org.apache.commons.math.stat.descriptive.summary.Sum.value"
reference "org.apache.commons.math.stat.descriptive.summary.Sum.clear(0)" "org.apache.commons.math.stat.descriptive.summary.Sum.n"
contain "org.apache.commons.math.stat.descriptive.summary.Sum" "org.apache.commons.math.stat.descriptive.summary.Sum.clear(0)"
call "org.apache.commons.math.stat.descriptive.summary.Sum.evaluate(3)" "org.apache.commons.math.stat.descriptive.summary.Sum.test(3)"
contain "org.apache.commons.math.stat.descriptive.summary.Sum" "org.apache.commons.math.stat.descriptive.summary.Sum.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.summary.Sum" "org.apache.commons.math.stat.descriptive.summary.Sum.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.summary.Sum" "org.apache.commons.math.stat.descriptive.summary.Sum.n"
contain "org.apache.commons.math.stat.descriptive.summary.Sum" "org.apache.commons.math.stat.descriptive.summary.Sum.value"
reference "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.increment(1)"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.incrementAll(1)"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.incrementAll(3)"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.getN(0)"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.clear(0)"
reference "org.apache.commons.math.stat.descriptive.rank.Min" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic"
call "org.apache.commons.math.stat.descriptive.rank.Min.Min(0)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.rank.Min.Min(0)" "org.apache.commons.math.stat.descriptive.rank.Min.n"
reference "org.apache.commons.math.stat.descriptive.rank.Min.Min(0)" "org.apache.commons.math.stat.descriptive.rank.Min.value"
contain "org.apache.commons.math.stat.descriptive.rank.Min" "org.apache.commons.math.stat.descriptive.rank.Min.Min(0)"
reference "org.apache.commons.math.stat.descriptive.rank.Min.increment(1)" "org.apache.commons.math.stat.descriptive.rank.Min.value"
reference "org.apache.commons.math.stat.descriptive.rank.Min.increment(1)" "org.apache.commons.math.stat.descriptive.rank.Min.n"
contain "org.apache.commons.math.stat.descriptive.rank.Min" "org.apache.commons.math.stat.descriptive.rank.Min.increment(1)"
reference "org.apache.commons.math.stat.descriptive.rank.Min.clear(0)" "org.apache.commons.math.stat.descriptive.rank.Min.value"
reference "org.apache.commons.math.stat.descriptive.rank.Min.clear(0)" "org.apache.commons.math.stat.descriptive.rank.Min.n"
contain "org.apache.commons.math.stat.descriptive.rank.Min" "org.apache.commons.math.stat.descriptive.rank.Min.clear(0)"
reference "org.apache.commons.math.stat.descriptive.rank.Min.getResult(0)" "org.apache.commons.math.stat.descriptive.rank.Min.value"
contain "org.apache.commons.math.stat.descriptive.rank.Min" "org.apache.commons.math.stat.descriptive.rank.Min.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.rank.Min.getN(0)" "org.apache.commons.math.stat.descriptive.rank.Min.n"
contain "org.apache.commons.math.stat.descriptive.rank.Min" "org.apache.commons.math.stat.descriptive.rank.Min.getN(0)"
call "org.apache.commons.math.stat.descriptive.rank.Min.evaluate(3)" "org.apache.commons.math.stat.descriptive.rank.Min.test(3)"
contain "org.apache.commons.math.stat.descriptive.rank.Min" "org.apache.commons.math.stat.descriptive.rank.Min.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.rank.Min" "org.apache.commons.math.stat.descriptive.rank.Min.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.rank.Min" "org.apache.commons.math.stat.descriptive.rank.Min.n"
contain "org.apache.commons.math.stat.descriptive.rank.Min" "org.apache.commons.math.stat.descriptive.rank.Min.value"
contain "org.apache.commons.math.random.NormalizedRandomGenerator" "org.apache.commons.math.random.NormalizedRandomGenerator.nextNormalizedDouble(0)"
reference "org.apache.commons.math.distribution.ExponentialDistributionImpl" "org.apache.commons.math.distribution.AbstractContinuousDistribution"
reference "org.apache.commons.math.distribution.ExponentialDistributionImpl" "org.apache.commons.math.distribution.ExponentialDistribution"
reference "org.apache.commons.math.distribution.ExponentialDistributionImpl" "org.apache.commons.math.MathException"
call "org.apache.commons.math.distribution.ExponentialDistributionImpl.ExponentialDistributionImpl(1)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.AbstractContinuousDistribution(0)"
call "org.apache.commons.math.distribution.ExponentialDistributionImpl.ExponentialDistributionImpl(1)" "org.apache.commons.math.distribution.ExponentialDistributionImpl.setMean(1)"
contain "org.apache.commons.math.distribution.ExponentialDistributionImpl" "org.apache.commons.math.distribution.ExponentialDistributionImpl.ExponentialDistributionImpl(1)"
reference "org.apache.commons.math.distribution.ExponentialDistributionImpl.setMean(1)" "org.apache.commons.math.distribution.ExponentialDistributionImpl.mean"
contain "org.apache.commons.math.distribution.ExponentialDistributionImpl" "org.apache.commons.math.distribution.ExponentialDistributionImpl.setMean(1)"
reference "org.apache.commons.math.distribution.ExponentialDistributionImpl.getMean(0)" "org.apache.commons.math.distribution.ExponentialDistributionImpl.mean"
contain "org.apache.commons.math.distribution.ExponentialDistributionImpl" "org.apache.commons.math.distribution.ExponentialDistributionImpl.getMean(0)"
call "org.apache.commons.math.distribution.ExponentialDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.ExponentialDistributionImpl.getMean(0)"
contain "org.apache.commons.math.distribution.ExponentialDistributionImpl" "org.apache.commons.math.distribution.ExponentialDistributionImpl.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.ExponentialDistributionImpl.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.ExponentialDistributionImpl.getMean(0)"
contain "org.apache.commons.math.distribution.ExponentialDistributionImpl" "org.apache.commons.math.distribution.ExponentialDistributionImpl.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.ExponentialDistributionImpl" "org.apache.commons.math.distribution.ExponentialDistributionImpl.getDomainLowerBound(1)"
call "org.apache.commons.math.distribution.ExponentialDistributionImpl.getDomainUpperBound(1)" "org.apache.commons.math.distribution.ExponentialDistributionImpl.getMean(0)"
contain "org.apache.commons.math.distribution.ExponentialDistributionImpl" "org.apache.commons.math.distribution.ExponentialDistributionImpl.getDomainUpperBound(1)"
call "org.apache.commons.math.distribution.ExponentialDistributionImpl.getInitialDomain(1)" "org.apache.commons.math.distribution.ExponentialDistributionImpl.getMean(0)"
contain "org.apache.commons.math.distribution.ExponentialDistributionImpl" "org.apache.commons.math.distribution.ExponentialDistributionImpl.getInitialDomain(1)"
contain "org.apache.commons.math.distribution.ExponentialDistributionImpl" "org.apache.commons.math.distribution.ExponentialDistributionImpl.serialVersionUID"
contain "org.apache.commons.math.distribution.ExponentialDistributionImpl" "org.apache.commons.math.distribution.ExponentialDistributionImpl.mean"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(0)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(0)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(0)" "org.apache.commons.math.geometry.Vector3D.z"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.Vector3D(0)"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(3)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(3)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(3)" "org.apache.commons.math.geometry.Vector3D.z"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(2)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(2)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(2)" "org.apache.commons.math.geometry.Vector3D.z"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.Vector3D(2)"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(2)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(2)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(2)" "org.apache.commons.math.geometry.Vector3D.z"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.Vector3D(2)"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(4)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(4)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(4)" "org.apache.commons.math.geometry.Vector3D.z"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.Vector3D(4)"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(6)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(6)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(6)" "org.apache.commons.math.geometry.Vector3D.z"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.Vector3D(6)"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(8)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(8)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(8)" "org.apache.commons.math.geometry.Vector3D.z"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.Vector3D(8)"
reference "org.apache.commons.math.geometry.Vector3D.getX(0)" "org.apache.commons.math.geometry.Vector3D.x"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.getX(0)"
reference "org.apache.commons.math.geometry.Vector3D.getY(0)" "org.apache.commons.math.geometry.Vector3D.y"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.getY(0)"
reference "org.apache.commons.math.geometry.Vector3D.getZ(0)" "org.apache.commons.math.geometry.Vector3D.z"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.getZ(0)"
reference "org.apache.commons.math.geometry.Vector3D.getNorm(0)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.getNorm(0)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.getNorm(0)" "org.apache.commons.math.geometry.Vector3D.z"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.getNorm(0)"
reference "org.apache.commons.math.geometry.Vector3D.getAlpha(0)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.getAlpha(0)" "org.apache.commons.math.geometry.Vector3D.x"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.getAlpha(0)"
reference "org.apache.commons.math.geometry.Vector3D.getDelta(0)" "org.apache.commons.math.geometry.Vector3D.z"
call "org.apache.commons.math.geometry.Vector3D.getDelta(0)" "org.apache.commons.math.geometry.Vector3D.getNorm(0)"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.getDelta(0)"
reference "org.apache.commons.math.geometry.Vector3D.add(1)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.add(1)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.add(1)" "org.apache.commons.math.geometry.Vector3D.z"
call "org.apache.commons.math.geometry.Vector3D.add(1)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.add(1)"
reference "org.apache.commons.math.geometry.Vector3D.add(2)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.add(2)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.add(2)" "org.apache.commons.math.geometry.Vector3D.z"
call "org.apache.commons.math.geometry.Vector3D.add(2)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.add(2)"
reference "org.apache.commons.math.geometry.Vector3D.subtract(1)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.subtract(1)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.subtract(1)" "org.apache.commons.math.geometry.Vector3D.z"
call "org.apache.commons.math.geometry.Vector3D.subtract(1)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.subtract(1)"
reference "org.apache.commons.math.geometry.Vector3D.subtract(2)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.subtract(2)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.subtract(2)" "org.apache.commons.math.geometry.Vector3D.z"
call "org.apache.commons.math.geometry.Vector3D.subtract(2)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.subtract(2)"
call "org.apache.commons.math.geometry.Vector3D.normalize(0)" "org.apache.commons.math.geometry.Vector3D.getNorm(0)"
call "org.apache.commons.math.geometry.Vector3D.normalize(0)" "org.apache.commons.math.geometry.Vector3D.multiply(1)"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.normalize(0)"
call "org.apache.commons.math.geometry.Vector3D.orthogonal(0)" "org.apache.commons.math.geometry.Vector3D.getNorm(0)"
reference "org.apache.commons.math.geometry.Vector3D.orthogonal(0)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.orthogonal(0)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.orthogonal(0)" "org.apache.commons.math.geometry.Vector3D.z"
call "org.apache.commons.math.geometry.Vector3D.orthogonal(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.orthogonal(0)"
call "org.apache.commons.math.geometry.Vector3D.angle(2)" "org.apache.commons.math.geometry.Vector3D.getNorm(0)"
call "org.apache.commons.math.geometry.Vector3D.angle(2)" "org.apache.commons.math.geometry.Vector3D.dotProduct(2)"
call "org.apache.commons.math.geometry.Vector3D.angle(2)" "org.apache.commons.math.geometry.Vector3D.crossProduct(2)"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.angle(2)"
reference "org.apache.commons.math.geometry.Vector3D.negate(0)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.negate(0)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.negate(0)" "org.apache.commons.math.geometry.Vector3D.z"
call "org.apache.commons.math.geometry.Vector3D.negate(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.negate(0)"
reference "org.apache.commons.math.geometry.Vector3D.multiply(1)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.multiply(1)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.multiply(1)" "org.apache.commons.math.geometry.Vector3D.z"
call "org.apache.commons.math.geometry.Vector3D.multiply(1)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.multiply(1)"
reference "org.apache.commons.math.geometry.Vector3D.dotProduct(2)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.dotProduct(2)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.dotProduct(2)" "org.apache.commons.math.geometry.Vector3D.z"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.dotProduct(2)"
reference "org.apache.commons.math.geometry.Vector3D.crossProduct(2)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.crossProduct(2)" "org.apache.commons.math.geometry.Vector3D.z"
reference "org.apache.commons.math.geometry.Vector3D.crossProduct(2)" "org.apache.commons.math.geometry.Vector3D.x"
call "org.apache.commons.math.geometry.Vector3D.crossProduct(2)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.crossProduct(2)"
call "org.apache.commons.math.geometry.Vector3D.static {...}" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
reference "org.apache.commons.math.geometry.Vector3D.static {...}" "org.apache.commons.math.geometry.Vector3D.plusI"
reference "org.apache.commons.math.geometry.Vector3D.static {...}" "org.apache.commons.math.geometry.Vector3D.minusI"
reference "org.apache.commons.math.geometry.Vector3D.static {...}" "org.apache.commons.math.geometry.Vector3D.plusJ"
reference "org.apache.commons.math.geometry.Vector3D.static {...}" "org.apache.commons.math.geometry.Vector3D.minusJ"
reference "org.apache.commons.math.geometry.Vector3D.static {...}" "org.apache.commons.math.geometry.Vector3D.plusK"
reference "org.apache.commons.math.geometry.Vector3D.static {...}" "org.apache.commons.math.geometry.Vector3D.minusK"
reference "org.apache.commons.math.geometry.Vector3D.static {...}" "org.apache.commons.math.geometry.Vector3D.zero"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.static {...}"
reference "org.apache.commons.math.geometry.Vector3D.plusI" "org.apache.commons.math.geometry.Vector3D"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.plusI"
reference "org.apache.commons.math.geometry.Vector3D.minusI" "org.apache.commons.math.geometry.Vector3D"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.minusI"
reference "org.apache.commons.math.geometry.Vector3D.plusJ" "org.apache.commons.math.geometry.Vector3D"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.plusJ"
reference "org.apache.commons.math.geometry.Vector3D.minusJ" "org.apache.commons.math.geometry.Vector3D"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.minusJ"
reference "org.apache.commons.math.geometry.Vector3D.plusK" "org.apache.commons.math.geometry.Vector3D"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.plusK"
reference "org.apache.commons.math.geometry.Vector3D.minusK" "org.apache.commons.math.geometry.Vector3D"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.minusK"
reference "org.apache.commons.math.geometry.Vector3D.zero" "org.apache.commons.math.geometry.Vector3D"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.zero"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.x"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.y"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.z"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.serialVersionUID"
reference "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.distribution.AbstractIntegerDistribution"
reference "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.distribution.BinomialDistribution"
reference "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.special.Beta"
reference "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.util.MathUtils"
call "org.apache.commons.math.distribution.BinomialDistributionImpl.BinomialDistributionImpl(2)" "org.apache.commons.math.distribution.AbstractIntegerDistribution.AbstractIntegerDistribution(0)"
call "org.apache.commons.math.distribution.BinomialDistributionImpl.BinomialDistributionImpl(2)" "org.apache.commons.math.distribution.BinomialDistributionImpl.setNumberOfTrials(1)"
call "org.apache.commons.math.distribution.BinomialDistributionImpl.BinomialDistributionImpl(2)" "org.apache.commons.math.distribution.BinomialDistributionImpl.setProbabilityOfSuccess(1)"
contain "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.distribution.BinomialDistributionImpl.BinomialDistributionImpl(2)"
reference "org.apache.commons.math.distribution.BinomialDistributionImpl.getNumberOfTrials(0)" "org.apache.commons.math.distribution.BinomialDistributionImpl.numberOfTrials"
contain "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.distribution.BinomialDistributionImpl.getNumberOfTrials(0)"
reference "org.apache.commons.math.distribution.BinomialDistributionImpl.getProbabilityOfSuccess(0)" "org.apache.commons.math.distribution.BinomialDistributionImpl.probabilityOfSuccess"
contain "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.distribution.BinomialDistributionImpl.getProbabilityOfSuccess(0)"
reference "org.apache.commons.math.distribution.BinomialDistributionImpl.setNumberOfTrials(1)" "org.apache.commons.math.distribution.BinomialDistributionImpl.numberOfTrials"
contain "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.distribution.BinomialDistributionImpl.setNumberOfTrials(1)"
reference "org.apache.commons.math.distribution.BinomialDistributionImpl.setProbabilityOfSuccess(1)" "org.apache.commons.math.distribution.BinomialDistributionImpl.probabilityOfSuccess"
contain "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.distribution.BinomialDistributionImpl.setProbabilityOfSuccess(1)"
contain "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.distribution.BinomialDistributionImpl.getDomainLowerBound(1)"
call "org.apache.commons.math.distribution.BinomialDistributionImpl.getDomainUpperBound(1)" "org.apache.commons.math.distribution.BinomialDistributionImpl.getNumberOfTrials(0)"
contain "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.distribution.BinomialDistributionImpl.getDomainUpperBound(1)"
call "org.apache.commons.math.distribution.BinomialDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.BinomialDistributionImpl.getNumberOfTrials(0)"
call "org.apache.commons.math.distribution.BinomialDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.BinomialDistributionImpl.getProbabilityOfSuccess(0)"
call "org.apache.commons.math.distribution.BinomialDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.special.Beta.regularizedBeta(3)"
contain "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.distribution.BinomialDistributionImpl.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.BinomialDistributionImpl.probability(1)" "org.apache.commons.math.distribution.BinomialDistributionImpl.getNumberOfTrials(0)"
call "org.apache.commons.math.distribution.BinomialDistributionImpl.probability(1)" "org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(2)"
call "org.apache.commons.math.distribution.BinomialDistributionImpl.probability(1)" "org.apache.commons.math.distribution.BinomialDistributionImpl.getProbabilityOfSuccess(0)"
contain "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.distribution.BinomialDistributionImpl.probability(1)"
call "org.apache.commons.math.distribution.BinomialDistributionImpl.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.distribution.BinomialDistributionImpl.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.distribution.BinomialDistributionImpl.serialVersionUID"
contain "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.distribution.BinomialDistributionImpl.numberOfTrials"
contain "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.distribution.BinomialDistributionImpl.probabilityOfSuccess"
reference "org.apache.commons.math.stat.descriptive.moment.FourthMoment" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment"
call "org.apache.commons.math.stat.descriptive.moment.FourthMoment.FourthMoment(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.ThirdMoment(0)"
reference "org.apache.commons.math.stat.descriptive.moment.FourthMoment.FourthMoment(0)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.m4"
contain "org.apache.commons.math.stat.descriptive.moment.FourthMoment" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.FourthMoment(0)"
reference "org.apache.commons.math.stat.descriptive.moment.FourthMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.n"
reference "org.apache.commons.math.stat.descriptive.moment.FourthMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.m4"
reference "org.apache.commons.math.stat.descriptive.moment.FourthMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.m3"
reference "org.apache.commons.math.stat.descriptive.moment.FourthMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.m2"
reference "org.apache.commons.math.stat.descriptive.moment.FourthMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.m1"
call "org.apache.commons.math.stat.descriptive.moment.FourthMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.increment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.FourthMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.nDev"
reference "org.apache.commons.math.stat.descriptive.moment.FourthMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.nDevSq"
contain "org.apache.commons.math.stat.descriptive.moment.FourthMoment" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.increment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.FourthMoment.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.m4"
contain "org.apache.commons.math.stat.descriptive.moment.FourthMoment" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.getResult(0)"
call "org.apache.commons.math.stat.descriptive.moment.FourthMoment.clear(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.clear(0)"
reference "org.apache.commons.math.stat.descriptive.moment.FourthMoment.clear(0)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.m4"
contain "org.apache.commons.math.stat.descriptive.moment.FourthMoment" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.clear(0)"
contain "org.apache.commons.math.stat.descriptive.moment.FourthMoment" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.moment.FourthMoment" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.m4"
reference "org.apache.commons.math.distribution.TDistributionImpl" "org.apache.commons.math.distribution.AbstractContinuousDistribution"
reference "org.apache.commons.math.distribution.TDistributionImpl" "org.apache.commons.math.distribution.TDistribution"
reference "org.apache.commons.math.distribution.TDistributionImpl" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.distribution.TDistributionImpl" "org.apache.commons.math.special.Beta"
call "org.apache.commons.math.distribution.TDistributionImpl.TDistributionImpl(1)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.AbstractContinuousDistribution(0)"
call "org.apache.commons.math.distribution.TDistributionImpl.TDistributionImpl(1)" "org.apache.commons.math.distribution.TDistributionImpl.setDegreesOfFreedom(1)"
contain "org.apache.commons.math.distribution.TDistributionImpl" "org.apache.commons.math.distribution.TDistributionImpl.TDistributionImpl(1)"
reference "org.apache.commons.math.distribution.TDistributionImpl.setDegreesOfFreedom(1)" "org.apache.commons.math.distribution.TDistributionImpl.degreesOfFreedom"
contain "org.apache.commons.math.distribution.TDistributionImpl" "org.apache.commons.math.distribution.TDistributionImpl.setDegreesOfFreedom(1)"
reference "org.apache.commons.math.distribution.TDistributionImpl.getDegreesOfFreedom(0)" "org.apache.commons.math.distribution.TDistributionImpl.degreesOfFreedom"
contain "org.apache.commons.math.distribution.TDistributionImpl" "org.apache.commons.math.distribution.TDistributionImpl.getDegreesOfFreedom(0)"
call "org.apache.commons.math.distribution.TDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.TDistributionImpl.getDegreesOfFreedom(0)"
call "org.apache.commons.math.distribution.TDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.special.Beta.regularizedBeta(3)"
contain "org.apache.commons.math.distribution.TDistributionImpl" "org.apache.commons.math.distribution.TDistributionImpl.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.TDistributionImpl.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.TDistributionImpl" "org.apache.commons.math.distribution.TDistributionImpl.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.TDistributionImpl" "org.apache.commons.math.distribution.TDistributionImpl.getDomainLowerBound(1)"
contain "org.apache.commons.math.distribution.TDistributionImpl" "org.apache.commons.math.distribution.TDistributionImpl.getDomainUpperBound(1)"
contain "org.apache.commons.math.distribution.TDistributionImpl" "org.apache.commons.math.distribution.TDistributionImpl.getInitialDomain(1)"
contain "org.apache.commons.math.distribution.TDistributionImpl" "org.apache.commons.math.distribution.TDistributionImpl.serialVersionUID"
contain "org.apache.commons.math.distribution.TDistributionImpl" "org.apache.commons.math.distribution.TDistributionImpl.degreesOfFreedom"
reference "org.apache.commons.math.distribution.AbstractContinuousDistribution" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.distribution.AbstractContinuousDistribution" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.distribution.AbstractContinuousDistribution" "org.apache.commons.math.distribution.AbstractDistribution"
reference "org.apache.commons.math.distribution.AbstractContinuousDistribution" "org.apache.commons.math.distribution.ContinuousDistribution"
reference "org.apache.commons.math.distribution.AbstractContinuousDistribution" "org.apache.commons.math.analysis.UnivariateRealSolverUtils"
reference "org.apache.commons.math.distribution.AbstractContinuousDistribution" "org.apache.commons.math.analysis.UnivariateRealFunction"
call "org.apache.commons.math.distribution.AbstractContinuousDistribution.AbstractContinuousDistribution(0)" "org.apache.commons.math.distribution.AbstractDistribution.AbstractDistribution(0)"
contain "org.apache.commons.math.distribution.AbstractContinuousDistribution" "org.apache.commons.math.distribution.AbstractContinuousDistribution.AbstractContinuousDistribution(0)"
call "org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.{...}"
call "org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.getDomainLowerBound(1)"
call "org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.getDomainUpperBound(1)"
call "org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.getInitialDomain(1)"
call "org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(1)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket(4)"
call "org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(1)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(1)" "org.apache.commons.math.MathException.MathException(1)"
call "org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(1)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(3)"
contain "org.apache.commons.math.distribution.AbstractContinuousDistribution" "org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.AbstractContinuousDistribution" "org.apache.commons.math.distribution.AbstractContinuousDistribution.getInitialDomain(1)"
contain "org.apache.commons.math.distribution.AbstractContinuousDistribution" "org.apache.commons.math.distribution.AbstractContinuousDistribution.getDomainLowerBound(1)"
contain "org.apache.commons.math.distribution.AbstractContinuousDistribution" "org.apache.commons.math.distribution.AbstractContinuousDistribution.getDomainUpperBound(1)"
contain "org.apache.commons.math.distribution.AbstractContinuousDistribution" "org.apache.commons.math.distribution.AbstractContinuousDistribution.serialVersionUID"
reference "org.apache.commons.math.random.GaussianRandomGenerator" "org.apache.commons.math.random.NormalizedRandomGenerator"
reference "org.apache.commons.math.random.GaussianRandomGenerator" "org.apache.commons.math.random.RandomGenerator"
reference "org.apache.commons.math.random.GaussianRandomGenerator.GaussianRandomGenerator(1)" "org.apache.commons.math.random.GaussianRandomGenerator.generator"
contain "org.apache.commons.math.random.GaussianRandomGenerator" "org.apache.commons.math.random.GaussianRandomGenerator.GaussianRandomGenerator(1)"
reference "org.apache.commons.math.random.GaussianRandomGenerator.nextNormalizedDouble(0)" "org.apache.commons.math.random.GaussianRandomGenerator.generator"
call "org.apache.commons.math.random.GaussianRandomGenerator.nextNormalizedDouble(0)" "org.apache.commons.math.random.RandomGenerator.nextGaussian(0)"
contain "org.apache.commons.math.random.GaussianRandomGenerator" "org.apache.commons.math.random.GaussianRandomGenerator.nextNormalizedDouble(0)"
reference "org.apache.commons.math.random.GaussianRandomGenerator.generator" "org.apache.commons.math.random.RandomGenerator"
contain "org.apache.commons.math.random.GaussianRandomGenerator" "org.apache.commons.math.random.GaussianRandomGenerator.generator"
reference "org.apache.commons.math.ode.DormandPrince853Integrator" "org.apache.commons.math.ode.DormandPrince853StepInterpolator"
reference "org.apache.commons.math.ode.DormandPrince853Integrator" "double[]"
reference "org.apache.commons.math.ode.DormandPrince853Integrator" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator"
reference "org.apache.commons.math.ode.DormandPrince853Integrator.DormandPrince853Integrator(4)" "org.apache.commons.math.ode.DormandPrince853Integrator.c"
reference "org.apache.commons.math.ode.DormandPrince853Integrator.DormandPrince853Integrator(4)" "org.apache.commons.math.ode.DormandPrince853Integrator.a"
reference "org.apache.commons.math.ode.DormandPrince853Integrator.DormandPrince853Integrator(4)" "org.apache.commons.math.ode.DormandPrince853Integrator.b"
call "org.apache.commons.math.ode.DormandPrince853Integrator.DormandPrince853Integrator(4)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator(0)"
call "org.apache.commons.math.ode.DormandPrince853Integrator.DormandPrince853Integrator(4)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.RungeKuttaFehlbergIntegrator(9)"
contain "org.apache.commons.math.ode.DormandPrince853Integrator" "org.apache.commons.math.ode.DormandPrince853Integrator.DormandPrince853Integrator(4)"
reference "org.apache.commons.math.ode.DormandPrince853Integrator.DormandPrince853Integrator(4)" "org.apache.commons.math.ode.DormandPrince853Integrator.c"
reference "org.apache.commons.math.ode.DormandPrince853Integrator.DormandPrince853Integrator(4)" "org.apache.commons.math.ode.DormandPrince853Integrator.a"
reference "org.apache.commons.math.ode.DormandPrince853Integrator.DormandPrince853Integrator(4)" "org.apache.commons.math.ode.DormandPrince853Integrator.b"
call "org.apache.commons.math.ode.DormandPrince853Integrator.DormandPrince853Integrator(4)" "org.apache.commons.math.ode.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator(0)"
call "org.apache.commons.math.ode.DormandPrince853Integrator.DormandPrince853Integrator(4)" "org.apache.commons.math.ode.RungeKuttaFehlbergIntegrator.RungeKuttaFehlbergIntegrator(9)"
contain "org.apache.commons.math.ode.DormandPrince853Integrator" "org.apache.commons.math.ode.DormandPrince853Integrator.DormandPrince853Integrator(4)"
contain "org.apache.commons.math.ode.DormandPrince853Integrator" "org.apache.commons.math.ode.DormandPrince853Integrator.getName(0)"
contain "org.apache.commons.math.ode.DormandPrince853Integrator" "org.apache.commons.math.ode.DormandPrince853Integrator.getOrder(0)"
reference "org.apache.commons.math.ode.DormandPrince853Integrator.estimateError(4)" "org.apache.commons.math.ode.DormandPrince853Integrator.vecAbsoluteTolerance"
reference "org.apache.commons.math.ode.DormandPrince853Integrator.estimateError(4)" "org.apache.commons.math.ode.DormandPrince853Integrator.scalAbsoluteTolerance"
reference "org.apache.commons.math.ode.DormandPrince853Integrator.estimateError(4)" "org.apache.commons.math.ode.DormandPrince853Integrator.scalRelativeTolerance"
reference "org.apache.commons.math.ode.DormandPrince853Integrator.estimateError(4)" "org.apache.commons.math.ode.DormandPrince853Integrator.vecRelativeTolerance"
contain "org.apache.commons.math.ode.DormandPrince853Integrator" "org.apache.commons.math.ode.DormandPrince853Integrator.estimateError(4)"
reference "org.apache.commons.math.ode.DormandPrince853Integrator.static {...}" "org.apache.commons.math.ode.DormandPrince853Integrator.sqrt6"
reference "org.apache.commons.math.ode.DormandPrince853Integrator.static {...}" "org.apache.commons.math.ode.DormandPrince853Integrator.c"
reference "org.apache.commons.math.ode.DormandPrince853Integrator.static {...}" "org.apache.commons.math.ode.DormandPrince853Integrator.a"
reference "org.apache.commons.math.ode.DormandPrince853Integrator.static {...}" "org.apache.commons.math.ode.DormandPrince853Integrator.b"
contain "org.apache.commons.math.ode.DormandPrince853Integrator" "org.apache.commons.math.ode.DormandPrince853Integrator.static {...}"
contain "org.apache.commons.math.ode.DormandPrince853Integrator" "org.apache.commons.math.ode.DormandPrince853Integrator.methodName"
contain "org.apache.commons.math.ode.DormandPrince853Integrator" "org.apache.commons.math.ode.DormandPrince853Integrator.sqrt6"
reference "org.apache.commons.math.ode.DormandPrince853Integrator.c" "double[]"
contain "org.apache.commons.math.ode.DormandPrince853Integrator" "org.apache.commons.math.ode.DormandPrince853Integrator.c"
reference "org.apache.commons.math.ode.DormandPrince853Integrator.a" "double[][]"
contain "org.apache.commons.math.ode.DormandPrince853Integrator" "org.apache.commons.math.ode.DormandPrince853Integrator.a"
reference "org.apache.commons.math.ode.DormandPrince853Integrator.b" "double[]"
contain "org.apache.commons.math.ode.DormandPrince853Integrator" "org.apache.commons.math.ode.DormandPrince853Integrator.b"
contain "org.apache.commons.math.ode.DormandPrince853Integrator" "org.apache.commons.math.ode.DormandPrince853Integrator.e1_01"
contain "org.apache.commons.math.ode.DormandPrince853Integrator" "org.apache.commons.math.ode.DormandPrince853Integrator.e1_06"
contain "org.apache.commons.math.ode.DormandPrince853Integrator" "org.apache.commons.math.ode.DormandPrince853Integrator.e1_07"
contain "org.apache.commons.math.ode.DormandPrince853Integrator" "org.apache.commons.math.ode.DormandPrince853Integrator.e1_08"
contain "org.apache.commons.math.ode.DormandPrince853Integrator" "org.apache.commons.math.ode.DormandPrince853Integrator.e1_09"
contain "org.apache.commons.math.ode.DormandPrince853Integrator" "org.apache.commons.math.ode.DormandPrince853Integrator.e1_10"
contain "org.apache.commons.math.ode.DormandPrince853Integrator" "org.apache.commons.math.ode.DormandPrince853Integrator.e1_11"
contain "org.apache.commons.math.ode.DormandPrince853Integrator" "org.apache.commons.math.ode.DormandPrince853Integrator.e1_12"
contain "org.apache.commons.math.ode.DormandPrince853Integrator" "org.apache.commons.math.ode.DormandPrince853Integrator.e2_01"
contain "org.apache.commons.math.ode.DormandPrince853Integrator" "org.apache.commons.math.ode.DormandPrince853Integrator.e2_06"
contain "org.apache.commons.math.ode.DormandPrince853Integrator" "org.apache.commons.math.ode.DormandPrince853Integrator.e2_07"
contain "org.apache.commons.math.ode.DormandPrince853Integrator" "org.apache.commons.math.ode.DormandPrince853Integrator.e2_08"
contain "org.apache.commons.math.ode.DormandPrince853Integrator" "org.apache.commons.math.ode.DormandPrince853Integrator.e2_09"
contain "org.apache.commons.math.ode.DormandPrince853Integrator" "org.apache.commons.math.ode.DormandPrince853Integrator.e2_10"
contain "org.apache.commons.math.ode.DormandPrince853Integrator" "org.apache.commons.math.ode.DormandPrince853Integrator.e2_11"
contain "org.apache.commons.math.ode.DormandPrince853Integrator" "org.apache.commons.math.ode.DormandPrince853Integrator.e2_12"
call "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(0)" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(1)"
contain "org.apache.commons.math.linear.InvalidMatrixException" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(0)"
contain "org.apache.commons.math.linear.InvalidMatrixException" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(1)"
contain "org.apache.commons.math.linear.InvalidMatrixException" "org.apache.commons.math.linear.InvalidMatrixException.serialVersionUID"
reference "org.apache.commons.math.linear.BigMatrixImpl" "double[][]"
reference "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.MatrixIndexException"
reference "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.InvalidMatrixException"
reference "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrix"
reference "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.MatrixUtils"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(0)" "org.apache.commons.math.linear.BigMatrixImpl.data"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(0)" "org.apache.commons.math.linear.BigMatrixImpl.lu"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(0)" "org.apache.commons.math.linear.BigMatrixImpl.permutation"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(0)" "org.apache.commons.math.linear.BigMatrixImpl.parity"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(0)" "org.apache.commons.math.linear.BigMatrixImpl.roundingMode"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(0)" "org.apache.commons.math.linear.BigMatrixImpl.scale"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)" "org.apache.commons.math.linear.BigMatrixImpl.data"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)" "org.apache.commons.math.linear.BigMatrixImpl.lu"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)" "org.apache.commons.math.linear.BigMatrixImpl.permutation"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)" "org.apache.commons.math.linear.BigMatrixImpl.parity"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)" "org.apache.commons.math.linear.BigMatrixImpl.roundingMode"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)" "org.apache.commons.math.linear.BigMatrixImpl.scale"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.lu"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.permutation"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.parity"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.roundingMode"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.scale"
call "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.copyIn(1)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.lu"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.permutation"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.parity"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.roundingMode"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.scale"
call "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.copyIn(1)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.lu"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.permutation"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.parity"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.roundingMode"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.scale"
call "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.copyIn(1)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.lu"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.permutation"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.parity"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.roundingMode"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.scale"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.copy(0)" "org.apache.commons.math.linear.BigMatrixImpl.copyOut(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.copy(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.copy(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.add(1)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.add(1)" "org.apache.commons.math.linear.BigMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.add(1)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.add(1)" "org.apache.commons.math.linear.BigMatrix.getRowDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.add(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
call "org.apache.commons.math.linear.BigMatrixImpl.add(1)" "org.apache.commons.math.linear.BigMatrix.getEntry(2)"
call "org.apache.commons.math.linear.BigMatrixImpl.add(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.add(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.subtract(1)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.subtract(1)" "org.apache.commons.math.linear.BigMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.subtract(1)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.subtract(1)" "org.apache.commons.math.linear.BigMatrix.getRowDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.subtract(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
call "org.apache.commons.math.linear.BigMatrixImpl.subtract(1)" "org.apache.commons.math.linear.BigMatrix.getEntry(2)"
call "org.apache.commons.math.linear.BigMatrixImpl.subtract(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.subtract(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.scalarAdd(1)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.scalarAdd(1)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.scalarAdd(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
call "org.apache.commons.math.linear.BigMatrixImpl.scalarAdd(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.scalarAdd(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.scalarMultiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.scalarMultiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.scalarMultiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
call "org.apache.commons.math.linear.BigMatrixImpl.scalarMultiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.scalarMultiply(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.multiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.multiply(1)" "org.apache.commons.math.linear.BigMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.multiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.multiply(1)" "org.apache.commons.math.linear.BigMatrix.getColumnDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.multiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.ZERO"
reference "org.apache.commons.math.linear.BigMatrixImpl.multiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
call "org.apache.commons.math.linear.BigMatrixImpl.multiply(1)" "org.apache.commons.math.linear.BigMatrix.getEntry(2)"
call "org.apache.commons.math.linear.BigMatrixImpl.multiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.multiply(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.preMultiply(1)" "org.apache.commons.math.linear.BigMatrix.multiply(1)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.preMultiply(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.getData(0)" "org.apache.commons.math.linear.BigMatrixImpl.copyOut(0)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getData(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.getDataAsDoubleArray(0)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.getDataAsDoubleArray(0)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getDataAsDoubleArray(0)" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getDataAsDoubleArray(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getDataRef(0)" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getDataRef(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getRoundingMode(0)" "org.apache.commons.math.linear.BigMatrixImpl.roundingMode"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getRoundingMode(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.setRoundingMode(1)" "org.apache.commons.math.linear.BigMatrixImpl.roundingMode"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.setRoundingMode(1)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getScale(0)" "org.apache.commons.math.linear.BigMatrixImpl.scale"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getScale(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.setScale(1)" "org.apache.commons.math.linear.BigMatrixImpl.scale"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.setScale(1)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getNorm(0)" "org.apache.commons.math.linear.BigMatrixImpl.ZERO"
call "org.apache.commons.math.linear.BigMatrixImpl.getNorm(0)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.getNorm(0)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getNorm(0)" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getNorm(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getSubMatrix(4)" "org.apache.commons.math.linear.BigMatrixImpl.data"
call "org.apache.commons.math.linear.BigMatrixImpl.getSubMatrix(4)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.getSubMatrix(4)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
call "org.apache.commons.math.linear.BigMatrixImpl.getSubMatrix(4)" "org.apache.commons.math.linear.BigMatrixImpl.getDataRef(0)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getSubMatrix(4)"
call "org.apache.commons.math.linear.BigMatrixImpl.getSubMatrix(2)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.getSubMatrix(2)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
call "org.apache.commons.math.linear.BigMatrixImpl.getSubMatrix(2)" "org.apache.commons.math.linear.BigMatrixImpl.getDataRef(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getSubMatrix(2)" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getSubMatrix(2)"
call "org.apache.commons.math.linear.BigMatrixImpl.setSubMatrix(3)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(1)"
reference "org.apache.commons.math.linear.BigMatrixImpl.setSubMatrix(3)" "org.apache.commons.math.linear.BigMatrixImpl.data"
call "org.apache.commons.math.linear.BigMatrixImpl.setSubMatrix(3)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.setSubMatrix(3)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.setSubMatrix(3)" "org.apache.commons.math.linear.BigMatrixImpl.lu"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.setSubMatrix(3)"
call "org.apache.commons.math.linear.BigMatrixImpl.getRowMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.isValidCoordinate(2)"
call "org.apache.commons.math.linear.BigMatrixImpl.getRowMatrix(1)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.getRowMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getRowMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
call "org.apache.commons.math.linear.BigMatrixImpl.getRowMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getRowMatrix(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.getColumnMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.isValidCoordinate(2)"
call "org.apache.commons.math.linear.BigMatrixImpl.getColumnMatrix(1)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.getColumnMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getColumnMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
call "org.apache.commons.math.linear.BigMatrixImpl.getColumnMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getColumnMatrix(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.getRow(1)" "org.apache.commons.math.linear.BigMatrixImpl.isValidCoordinate(2)"
call "org.apache.commons.math.linear.BigMatrixImpl.getRow(1)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.getRow(1)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getRow(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getRow(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.getRowAsDoubleArray(1)" "org.apache.commons.math.linear.BigMatrixImpl.isValidCoordinate(2)"
call "org.apache.commons.math.linear.BigMatrixImpl.getRowAsDoubleArray(1)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.getRowAsDoubleArray(1)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getRowAsDoubleArray(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getRowAsDoubleArray(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.getColumn(1)" "org.apache.commons.math.linear.BigMatrixImpl.isValidCoordinate(2)"
call "org.apache.commons.math.linear.BigMatrixImpl.getColumn(1)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.getColumn(1)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getColumn(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getColumn(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.getColumnAsDoubleArray(1)" "org.apache.commons.math.linear.BigMatrixImpl.isValidCoordinate(2)"
call "org.apache.commons.math.linear.BigMatrixImpl.getColumnAsDoubleArray(1)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.getColumnAsDoubleArray(1)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getColumnAsDoubleArray(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getColumnAsDoubleArray(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.getEntry(2)" "org.apache.commons.math.linear.BigMatrixImpl.isValidCoordinate(2)"
call "org.apache.commons.math.linear.BigMatrixImpl.getEntry(2)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(1)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getEntry(2)" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getEntry(2)"
call "org.apache.commons.math.linear.BigMatrixImpl.getEntryAsDouble(2)" "org.apache.commons.math.linear.BigMatrixImpl.getEntry(2)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getEntryAsDouble(2)"
call "org.apache.commons.math.linear.BigMatrixImpl.transpose(0)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.transpose(0)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.transpose(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
call "org.apache.commons.math.linear.BigMatrixImpl.transpose(0)" "org.apache.commons.math.linear.BigMatrixImpl.getDataRef(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.transpose(0)" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.transpose(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.inverse(0)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.inverse(0)" "org.apache.commons.math.linear.MatrixUtils.createBigIdentityMatrix(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.inverse(0)" "org.apache.commons.math.linear.BigMatrixImpl.solve(1)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.inverse(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.getDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImpl.isSquare(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.getDeterminant(0)" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.getDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImpl.isSingular(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImpl.ZERO"
reference "org.apache.commons.math.linear.BigMatrixImpl.getDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImpl.parity"
reference "org.apache.commons.math.linear.BigMatrixImpl.getDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImpl.ONE"
call "org.apache.commons.math.linear.BigMatrixImpl.getDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImpl.lu"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getDeterminant(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.isSquare(0)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.isSquare(0)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.isSquare(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.isSingular(0)" "org.apache.commons.math.linear.BigMatrixImpl.lu"
call "org.apache.commons.math.linear.BigMatrixImpl.isSingular(0)" "org.apache.commons.math.linear.BigMatrixImpl.luDecompose(0)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.isSingular(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.getTrace(0)" "org.apache.commons.math.linear.BigMatrixImpl.isSquare(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getTrace(0)" "org.apache.commons.math.linear.BigMatrixImpl.data"
call "org.apache.commons.math.linear.BigMatrixImpl.getTrace(0)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getTrace(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.operate(1)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.operate(1)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.operate(1)" "org.apache.commons.math.linear.BigMatrixImpl.ZERO"
reference "org.apache.commons.math.linear.BigMatrixImpl.operate(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.operate(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.operate(1)" "org.apache.commons.math.linear.BigMatrixImpl.operate(1)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.operate(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.preMultiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.preMultiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.preMultiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.ZERO"
reference "org.apache.commons.math.linear.BigMatrixImpl.preMultiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.preMultiply(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrixImpl.solve(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrixImpl.getDataRef(0)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.solve(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrixImpl.solve(1)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.solve(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrixImpl.isSquare(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrixImpl.isSingular(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrix.getColumnDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrixImpl.permutation"
call "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrix.getEntry(2)"
reference "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrixImpl.lu"
reference "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrixImpl.scale"
reference "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrixImpl.roundingMode"
call "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.solve(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.luDecompose(0)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.luDecompose(0)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.luDecompose(0)" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.luDecompose(0)" "org.apache.commons.math.linear.BigMatrixImpl.getData(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.luDecompose(0)" "org.apache.commons.math.linear.BigMatrixImpl.lu"
reference "org.apache.commons.math.linear.BigMatrixImpl.luDecompose(0)" "org.apache.commons.math.linear.BigMatrixImpl.permutation"
reference "org.apache.commons.math.linear.BigMatrixImpl.luDecompose(0)" "org.apache.commons.math.linear.BigMatrixImpl.parity"
reference "org.apache.commons.math.linear.BigMatrixImpl.luDecompose(0)" "org.apache.commons.math.linear.BigMatrixImpl.ZERO"
reference "org.apache.commons.math.linear.BigMatrixImpl.luDecompose(0)" "org.apache.commons.math.linear.BigMatrixImpl.TOO_SMALL"
reference "org.apache.commons.math.linear.BigMatrixImpl.luDecompose(0)" "org.apache.commons.math.linear.BigMatrixImpl.scale"
reference "org.apache.commons.math.linear.BigMatrixImpl.luDecompose(0)" "org.apache.commons.math.linear.BigMatrixImpl.roundingMode"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.luDecompose(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.toString(0)" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.toString(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.equals(1)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.equals(1)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.equals(1)" "org.apache.commons.math.linear.BigMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.equals(1)" "org.apache.commons.math.linear.BigMatrix.getRowDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.equals(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
call "org.apache.commons.math.linear.BigMatrixImpl.equals(1)" "org.apache.commons.math.linear.BigMatrix.getEntry(2)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.equals(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.hashCode(0)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.hashCode(0)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.hashCode(0)" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.hashCode(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.getIdentity(1)" "org.apache.commons.math.linear.MatrixUtils.createBigIdentityMatrix(1)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getIdentity(1)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getLUMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.lu"
call "org.apache.commons.math.linear.BigMatrixImpl.getLUMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.luDecompose(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.getLUMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getLUMatrix(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getPermutation(0)" "org.apache.commons.math.linear.BigMatrixImpl.permutation"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getPermutation(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.copyOut(0)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.copyOut(0)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.copyOut(0)" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.copyOut(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.copyIn(1)" "org.apache.commons.math.linear.BigMatrixImpl.setSubMatrix(3)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.copyIn(1)"
reference "org.apache.commons.math.linear.BigMatrixImpl.copyIn(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
reference "org.apache.commons.math.linear.BigMatrixImpl.copyIn(1)" "org.apache.commons.math.linear.BigMatrixImpl.lu"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.copyIn(1)"
reference "org.apache.commons.math.linear.BigMatrixImpl.copyIn(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
reference "org.apache.commons.math.linear.BigMatrixImpl.copyIn(1)" "org.apache.commons.math.linear.BigMatrixImpl.lu"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.copyIn(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.isValidCoordinate(2)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.isValidCoordinate(2)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.isValidCoordinate(2)"
reference "org.apache.commons.math.linear.BigMatrixImpl.static {...}" "org.apache.commons.math.linear.BigMatrixImpl.TOO_SMALL"
reference "org.apache.commons.math.linear.BigMatrixImpl.static {...}" "org.apache.commons.math.linear.BigMatrixImpl.ZERO"
reference "org.apache.commons.math.linear.BigMatrixImpl.static {...}" "org.apache.commons.math.linear.BigMatrixImpl.ONE"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.static {...}"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.serialVersionUID"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.lu"
reference "org.apache.commons.math.linear.BigMatrixImpl.permutation" "int[]"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.permutation"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.parity"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.roundingMode"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.scale"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.TOO_SMALL"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.ZERO"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.ONE"
reference "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.FractionConversionException"
reference "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.util.MathUtils"
call "org.apache.commons.math.fraction.Fraction.Fraction(1)" "org.apache.commons.math.fraction.Fraction.Fraction(3)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.Fraction(1)"
reference "org.apache.commons.math.fraction.Fraction.Fraction(3)" "org.apache.commons.math.fraction.Fraction.numerator"
reference "org.apache.commons.math.fraction.Fraction.Fraction(3)" "org.apache.commons.math.fraction.Fraction.denominator"
call "org.apache.commons.math.fraction.Fraction.Fraction(3)" "org.apache.commons.math.fraction.FractionConversionException.FractionConversionException(2)"
call "org.apache.commons.math.fraction.Fraction.Fraction(3)" "org.apache.commons.math.fraction.Fraction.reduce(0)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.Fraction(3)"
reference "org.apache.commons.math.fraction.Fraction.Fraction(2)" "org.apache.commons.math.fraction.Fraction.numerator"
reference "org.apache.commons.math.fraction.Fraction.Fraction(2)" "org.apache.commons.math.fraction.Fraction.denominator"
call "org.apache.commons.math.fraction.Fraction.Fraction(2)" "org.apache.commons.math.fraction.Fraction.reduce(0)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
reference "org.apache.commons.math.fraction.Fraction.abs(0)" "org.apache.commons.math.fraction.Fraction.numerator"
call "org.apache.commons.math.fraction.Fraction.abs(0)" "org.apache.commons.math.fraction.Fraction.negate(0)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.abs(0)"
call "org.apache.commons.math.fraction.Fraction.compareTo(1)" "org.apache.commons.math.fraction.Fraction.doubleValue(0)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.compareTo(1)"
reference "org.apache.commons.math.fraction.Fraction.doubleValue(0)" "org.apache.commons.math.fraction.Fraction.numerator"
reference "org.apache.commons.math.fraction.Fraction.doubleValue(0)" "org.apache.commons.math.fraction.Fraction.denominator"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.doubleValue(0)"
reference "org.apache.commons.math.fraction.Fraction.equals(1)" "org.apache.commons.math.fraction.Fraction.numerator"
reference "org.apache.commons.math.fraction.Fraction.equals(1)" "org.apache.commons.math.fraction.Fraction.denominator"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.equals(1)"
call "org.apache.commons.math.fraction.Fraction.floatValue(0)" "org.apache.commons.math.fraction.Fraction.doubleValue(0)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.floatValue(0)"
reference "org.apache.commons.math.fraction.Fraction.getDenominator(0)" "org.apache.commons.math.fraction.Fraction.denominator"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
reference "org.apache.commons.math.fraction.Fraction.getNumerator(0)" "org.apache.commons.math.fraction.Fraction.numerator"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.Fraction.hashCode(0)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.Fraction.hashCode(0)" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.hashCode(0)"
call "org.apache.commons.math.fraction.Fraction.intValue(0)" "org.apache.commons.math.fraction.Fraction.doubleValue(0)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.intValue(0)"
call "org.apache.commons.math.fraction.Fraction.longValue(0)" "org.apache.commons.math.fraction.Fraction.doubleValue(0)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.longValue(0)"
reference "org.apache.commons.math.fraction.Fraction.negate(0)" "org.apache.commons.math.fraction.Fraction.numerator"
reference "org.apache.commons.math.fraction.Fraction.negate(0)" "org.apache.commons.math.fraction.Fraction.denominator"
call "org.apache.commons.math.fraction.Fraction.negate(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.negate(0)"
reference "org.apache.commons.math.fraction.Fraction.reciprocal(0)" "org.apache.commons.math.fraction.Fraction.denominator"
reference "org.apache.commons.math.fraction.Fraction.reciprocal(0)" "org.apache.commons.math.fraction.Fraction.numerator"
call "org.apache.commons.math.fraction.Fraction.reciprocal(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.reciprocal(0)"
call "org.apache.commons.math.fraction.Fraction.add(1)" "org.apache.commons.math.fraction.Fraction.addSub(2)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.add(1)"
call "org.apache.commons.math.fraction.Fraction.subtract(1)" "org.apache.commons.math.fraction.Fraction.addSub(2)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.subtract(1)"
reference "org.apache.commons.math.fraction.Fraction.addSub(2)" "org.apache.commons.math.fraction.Fraction.numerator"
call "org.apache.commons.math.fraction.Fraction.addSub(2)" "org.apache.commons.math.fraction.Fraction.negate(0)"
reference "org.apache.commons.math.fraction.Fraction.addSub(2)" "org.apache.commons.math.fraction.Fraction.denominator"
call "org.apache.commons.math.fraction.Fraction.addSub(2)" "org.apache.commons.math.util.MathUtils.gcd(2)"
call "org.apache.commons.math.fraction.Fraction.addSub(2)" "org.apache.commons.math.util.MathUtils.mulAndCheck(2)"
call "org.apache.commons.math.fraction.Fraction.addSub(2)" "org.apache.commons.math.util.MathUtils.addAndCheck(2)"
call "org.apache.commons.math.fraction.Fraction.addSub(2)" "org.apache.commons.math.util.MathUtils.subAndCheck(2)"
call "org.apache.commons.math.fraction.Fraction.addSub(2)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.addSub(2)"
reference "org.apache.commons.math.fraction.Fraction.multiply(1)" "org.apache.commons.math.fraction.Fraction.numerator"
reference "org.apache.commons.math.fraction.Fraction.multiply(1)" "org.apache.commons.math.fraction.Fraction.ZERO"
reference "org.apache.commons.math.fraction.Fraction.multiply(1)" "org.apache.commons.math.fraction.Fraction.denominator"
call "org.apache.commons.math.fraction.Fraction.multiply(1)" "org.apache.commons.math.util.MathUtils.gcd(2)"
call "org.apache.commons.math.fraction.Fraction.multiply(1)" "org.apache.commons.math.util.MathUtils.mulAndCheck(2)"
call "org.apache.commons.math.fraction.Fraction.multiply(1)" "org.apache.commons.math.fraction.Fraction.getReducedFraction(2)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.multiply(1)"
reference "org.apache.commons.math.fraction.Fraction.divide(1)" "org.apache.commons.math.fraction.Fraction.numerator"
call "org.apache.commons.math.fraction.Fraction.divide(1)" "org.apache.commons.math.fraction.Fraction.reciprocal(0)"
call "org.apache.commons.math.fraction.Fraction.divide(1)" "org.apache.commons.math.fraction.Fraction.multiply(1)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.divide(1)"
reference "org.apache.commons.math.fraction.Fraction.getReducedFraction(2)" "org.apache.commons.math.fraction.Fraction.ZERO"
call "org.apache.commons.math.fraction.Fraction.getReducedFraction(2)" "org.apache.commons.math.util.MathUtils.gcd(2)"
call "org.apache.commons.math.fraction.Fraction.getReducedFraction(2)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.getReducedFraction(2)"
reference "org.apache.commons.math.fraction.Fraction.reduce(0)" "org.apache.commons.math.fraction.Fraction.numerator"
reference "org.apache.commons.math.fraction.Fraction.reduce(0)" "org.apache.commons.math.fraction.Fraction.denominator"
call "org.apache.commons.math.fraction.Fraction.reduce(0)" "org.apache.commons.math.util.MathUtils.gcd(2)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.reduce(0)"
call "org.apache.commons.math.fraction.Fraction.static {...}" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
reference "org.apache.commons.math.fraction.Fraction.static {...}" "org.apache.commons.math.fraction.Fraction.ONE"
reference "org.apache.commons.math.fraction.Fraction.static {...}" "org.apache.commons.math.fraction.Fraction.ZERO"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.static {...}"
reference "org.apache.commons.math.fraction.Fraction.ONE" "org.apache.commons.math.fraction.Fraction"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.ONE"
reference "org.apache.commons.math.fraction.Fraction.ZERO" "org.apache.commons.math.fraction.Fraction"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.ZERO"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.serialVersionUID"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.denominator"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.numerator"
reference "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.distribution.TDistributionImpl"
reference "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.distribution.TDistribution"
call "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(0)" "org.apache.commons.math.distribution.TDistributionImpl.TDistributionImpl(1)"
call "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(0)" "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(1)" "org.apache.commons.math.stat.regression.SimpleRegression.sumX"
reference "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(1)" "org.apache.commons.math.stat.regression.SimpleRegression.sumXX"
reference "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(1)" "org.apache.commons.math.stat.regression.SimpleRegression.sumY"
reference "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(1)" "org.apache.commons.math.stat.regression.SimpleRegression.sumYY"
reference "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(1)" "org.apache.commons.math.stat.regression.SimpleRegression.sumXY"
reference "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(1)" "org.apache.commons.math.stat.regression.SimpleRegression.n"
reference "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(1)" "org.apache.commons.math.stat.regression.SimpleRegression.xbar"
reference "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(1)" "org.apache.commons.math.stat.regression.SimpleRegression.ybar"
call "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(1)" "org.apache.commons.math.stat.regression.SimpleRegression.setDistribution(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(1)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)" "org.apache.commons.math.stat.regression.SimpleRegression.n"
reference "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)" "org.apache.commons.math.stat.regression.SimpleRegression.xbar"
reference "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)" "org.apache.commons.math.stat.regression.SimpleRegression.ybar"
reference "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)" "org.apache.commons.math.stat.regression.SimpleRegression.sumXX"
reference "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)" "org.apache.commons.math.stat.regression.SimpleRegression.sumYY"
reference "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)" "org.apache.commons.math.stat.regression.SimpleRegression.sumXY"
reference "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)" "org.apache.commons.math.stat.regression.SimpleRegression.sumX"
reference "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)" "org.apache.commons.math.stat.regression.SimpleRegression.sumY"
reference "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)" "org.apache.commons.math.stat.regression.SimpleRegression.distribution"
call "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)" "org.apache.commons.math.distribution.TDistribution.setDegreesOfFreedom(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)"
call "org.apache.commons.math.stat.regression.SimpleRegression.addData(1)" "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.addData(1)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.clear(0)" "org.apache.commons.math.stat.regression.SimpleRegression.sumX"
reference "org.apache.commons.math.stat.regression.SimpleRegression.clear(0)" "org.apache.commons.math.stat.regression.SimpleRegression.sumXX"
reference "org.apache.commons.math.stat.regression.SimpleRegression.clear(0)" "org.apache.commons.math.stat.regression.SimpleRegression.sumY"
reference "org.apache.commons.math.stat.regression.SimpleRegression.clear(0)" "org.apache.commons.math.stat.regression.SimpleRegression.sumYY"
reference "org.apache.commons.math.stat.regression.SimpleRegression.clear(0)" "org.apache.commons.math.stat.regression.SimpleRegression.sumXY"
reference "org.apache.commons.math.stat.regression.SimpleRegression.clear(0)" "org.apache.commons.math.stat.regression.SimpleRegression.n"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.clear(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getN(0)" "org.apache.commons.math.stat.regression.SimpleRegression.n"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getN(0)"
call "org.apache.commons.math.stat.regression.SimpleRegression.predict(1)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlope(0)"
call "org.apache.commons.math.stat.regression.SimpleRegression.predict(1)" "org.apache.commons.math.stat.regression.SimpleRegression.getIntercept(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.predict(1)"
call "org.apache.commons.math.stat.regression.SimpleRegression.getIntercept(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlope(0)"
call "org.apache.commons.math.stat.regression.SimpleRegression.getIntercept(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getIntercept(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getIntercept(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getSlope(0)" "org.apache.commons.math.stat.regression.SimpleRegression.n"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getSlope(0)" "org.apache.commons.math.stat.regression.SimpleRegression.sumXX"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getSlope(0)" "org.apache.commons.math.stat.regression.SimpleRegression.sumXY"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getSlope(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getSumSquaredErrors(0)" "org.apache.commons.math.stat.regression.SimpleRegression.sumYY"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getSumSquaredErrors(0)" "org.apache.commons.math.stat.regression.SimpleRegression.sumXY"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getSumSquaredErrors(0)" "org.apache.commons.math.stat.regression.SimpleRegression.sumXX"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getSumSquaredErrors(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getTotalSumSquares(0)" "org.apache.commons.math.stat.regression.SimpleRegression.n"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getTotalSumSquares(0)" "org.apache.commons.math.stat.regression.SimpleRegression.sumYY"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getTotalSumSquares(0)"
call "org.apache.commons.math.stat.regression.SimpleRegression.getRegressionSumSquares(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlope(0)"
call "org.apache.commons.math.stat.regression.SimpleRegression.getRegressionSumSquares(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getRegressionSumSquares(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getRegressionSumSquares(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getMeanSquareError(0)" "org.apache.commons.math.stat.regression.SimpleRegression.n"
call "org.apache.commons.math.stat.regression.SimpleRegression.getMeanSquareError(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSumSquaredErrors(0)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getMeanSquareError(0)"
call "org.apache.commons.math.stat.regression.SimpleRegression.getR(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlope(0)"
call "org.apache.commons.math.stat.regression.SimpleRegression.getR(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getRSquare(0)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getR(0)"
call "org.apache.commons.math.stat.regression.SimpleRegression.getRSquare(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getTotalSumSquares(0)"
call "org.apache.commons.math.stat.regression.SimpleRegression.getRSquare(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSumSquaredErrors(0)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getRSquare(0)"
call "org.apache.commons.math.stat.regression.SimpleRegression.getInterceptStdErr(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getMeanSquareError(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getInterceptStdErr(0)" "org.apache.commons.math.stat.regression.SimpleRegression.n"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getInterceptStdErr(0)" "org.apache.commons.math.stat.regression.SimpleRegression.xbar"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getInterceptStdErr(0)" "org.apache.commons.math.stat.regression.SimpleRegression.sumXX"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getInterceptStdErr(0)"
call "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeStdErr(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getMeanSquareError(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeStdErr(0)" "org.apache.commons.math.stat.regression.SimpleRegression.sumXX"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeStdErr(0)"
call "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeConfidenceInterval(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeConfidenceInterval(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeConfidenceInterval(0)"
call "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeConfidenceInterval(1)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeStdErr(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeConfidenceInterval(1)" "org.apache.commons.math.stat.regression.SimpleRegression.distribution"
call "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeConfidenceInterval(1)" "org.apache.commons.math.distribution.TDistribution.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeConfidenceInterval(1)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getSignificance(0)" "org.apache.commons.math.stat.regression.SimpleRegression.distribution"
call "org.apache.commons.math.stat.regression.SimpleRegression.getSignificance(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlope(0)"
call "org.apache.commons.math.stat.regression.SimpleRegression.getSignificance(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeStdErr(0)"
call "org.apache.commons.math.stat.regression.SimpleRegression.getSignificance(0)" "org.apache.commons.math.distribution.TDistribution.cumulativeProbability(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getSignificance(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getIntercept(1)" "org.apache.commons.math.stat.regression.SimpleRegression.sumY"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getIntercept(1)" "org.apache.commons.math.stat.regression.SimpleRegression.sumX"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getIntercept(1)" "org.apache.commons.math.stat.regression.SimpleRegression.n"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getIntercept(1)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getRegressionSumSquares(1)" "org.apache.commons.math.stat.regression.SimpleRegression.sumXX"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getRegressionSumSquares(1)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.setDistribution(1)" "org.apache.commons.math.stat.regression.SimpleRegression.distribution"
reference "org.apache.commons.math.stat.regression.SimpleRegression.setDistribution(1)" "org.apache.commons.math.stat.regression.SimpleRegression.n"
call "org.apache.commons.math.stat.regression.SimpleRegression.setDistribution(1)" "org.apache.commons.math.distribution.TDistribution.setDegreesOfFreedom(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.setDistribution(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.serialVersionUID"
reference "org.apache.commons.math.stat.regression.SimpleRegression.distribution" "org.apache.commons.math.distribution.TDistribution"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.distribution"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.sumX"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.sumXX"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.sumY"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.sumYY"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.sumXY"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.n"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.xbar"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.ybar"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactory" "org.apache.commons.discovery.tools.DiscoverClass"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactory" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactory" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.UnivariateRealSolverFactory(0)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newInstance(0)" "org.apache.commons.discovery.tools.DiscoverClass.DiscoverClass(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newInstance(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.class$org$apache$commons$math$analysis$UnivariateRealSolverFactory"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newInstance(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.class$(1)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newInstance(0)" "org.apache.commons.discovery.tools.DiscoverClass.newInstance(2)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newInstance(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl.UnivariateRealSolverFactoryImpl(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactory" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newInstance(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactory" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newDefaultSolver(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactory" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newBisectionSolver(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactory" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newBrentSolver(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactory" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newNewtonSolver(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactory" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newSecantSolver(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactory" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.class$(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactory" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.class$org$apache$commons$math$analysis$UnivariateRealSolverFactory"
reference "org.apache.commons.math.ode.ThreeEighthesIntegrator" "org.apache.commons.math.ode.ThreeEighthesStepInterpolator"
reference "org.apache.commons.math.ode.ThreeEighthesIntegrator" "double[]"
reference "org.apache.commons.math.ode.ThreeEighthesIntegrator" "org.apache.commons.math.ode.RungeKuttaIntegrator"
reference "org.apache.commons.math.ode.ThreeEighthesIntegrator.ThreeEighthesIntegrator(1)" "org.apache.commons.math.ode.ThreeEighthesIntegrator.c"
reference "org.apache.commons.math.ode.ThreeEighthesIntegrator.ThreeEighthesIntegrator(1)" "org.apache.commons.math.ode.ThreeEighthesIntegrator.a"
reference "org.apache.commons.math.ode.ThreeEighthesIntegrator.ThreeEighthesIntegrator(1)" "org.apache.commons.math.ode.ThreeEighthesIntegrator.b"
call "org.apache.commons.math.ode.ThreeEighthesIntegrator.ThreeEighthesIntegrator(1)" "org.apache.commons.math.ode.ThreeEighthesStepInterpolator.ThreeEighthesStepInterpolator(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegrator.ThreeEighthesIntegrator(1)" "org.apache.commons.math.ode.RungeKuttaIntegrator.RungeKuttaIntegrator(6)"
contain "org.apache.commons.math.ode.ThreeEighthesIntegrator" "org.apache.commons.math.ode.ThreeEighthesIntegrator.ThreeEighthesIntegrator(1)"
contain "org.apache.commons.math.ode.ThreeEighthesIntegrator" "org.apache.commons.math.ode.ThreeEighthesIntegrator.getName(0)"
reference "org.apache.commons.math.ode.ThreeEighthesIntegrator.static {...}" "org.apache.commons.math.ode.ThreeEighthesIntegrator.c"
reference "org.apache.commons.math.ode.ThreeEighthesIntegrator.static {...}" "org.apache.commons.math.ode.ThreeEighthesIntegrator.a"
reference "org.apache.commons.math.ode.ThreeEighthesIntegrator.static {...}" "org.apache.commons.math.ode.ThreeEighthesIntegrator.b"
contain "org.apache.commons.math.ode.ThreeEighthesIntegrator" "org.apache.commons.math.ode.ThreeEighthesIntegrator.static {...}"
contain "org.apache.commons.math.ode.ThreeEighthesIntegrator" "org.apache.commons.math.ode.ThreeEighthesIntegrator.methodName"
reference "org.apache.commons.math.ode.ThreeEighthesIntegrator.c" "double[]"
contain "org.apache.commons.math.ode.ThreeEighthesIntegrator" "org.apache.commons.math.ode.ThreeEighthesIntegrator.c"
reference "org.apache.commons.math.ode.ThreeEighthesIntegrator.a" "double[][]"
contain "org.apache.commons.math.ode.ThreeEighthesIntegrator" "org.apache.commons.math.ode.ThreeEighthesIntegrator.a"
reference "org.apache.commons.math.ode.ThreeEighthesIntegrator.b" "double[]"
contain "org.apache.commons.math.ode.ThreeEighthesIntegrator" "org.apache.commons.math.ode.ThreeEighthesIntegrator.b"
reference "org.apache.commons.math.util.DefaultTransformer" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.util.DefaultTransformer" "org.apache.commons.math.util.NumberTransformer"
contain "org.apache.commons.math.util.DefaultTransformer" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
call "org.apache.commons.math.util.DefaultTransformer.transform(1)" "org.apache.commons.math.MathException.MathException(2)"
call "org.apache.commons.math.util.DefaultTransformer.transform(1)" "org.apache.commons.math.MathException.MathException(3)"
contain "org.apache.commons.math.util.DefaultTransformer" "org.apache.commons.math.util.DefaultTransformer.transform(1)"
contain "org.apache.commons.math.util.DefaultTransformer" "org.apache.commons.math.util.DefaultTransformer.serialVersionUID"
reference "org.apache.commons.math.analysis.MullerSolver" "org.apache.commons.math.MaxIterationsExceededException"
reference "org.apache.commons.math.analysis.MullerSolver" "org.apache.commons.math.analysis.UnivariateRealSolverImpl"
reference "org.apache.commons.math.analysis.MullerSolver" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.MullerSolver" "org.apache.commons.math.analysis.UnivariateRealFunction"
reference "org.apache.commons.math.analysis.MullerSolver" "org.apache.commons.math.util.MathUtils"
call "org.apache.commons.math.analysis.MullerSolver.MullerSolver(1)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)"
contain "org.apache.commons.math.analysis.MullerSolver" "org.apache.commons.math.analysis.MullerSolver.MullerSolver(1)"
reference "org.apache.commons.math.analysis.MullerSolver.solve(3)" "org.apache.commons.math.analysis.MullerSolver.f"
call "org.apache.commons.math.analysis.MullerSolver.solve(3)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.MullerSolver.solve(3)" "org.apache.commons.math.analysis.MullerSolver.verifyBracketing(3)"
call "org.apache.commons.math.analysis.MullerSolver.solve(3)" "org.apache.commons.math.analysis.MullerSolver.verifySequence(3)"
call "org.apache.commons.math.analysis.MullerSolver.solve(3)" "org.apache.commons.math.analysis.MullerSolver.isBracketing(3)"
call "org.apache.commons.math.analysis.MullerSolver.solve(3)" "org.apache.commons.math.analysis.MullerSolver.solve(2)"
contain "org.apache.commons.math.analysis.MullerSolver" "org.apache.commons.math.analysis.MullerSolver.solve(3)"
reference "org.apache.commons.math.analysis.MullerSolver.solve(2)" "org.apache.commons.math.analysis.MullerSolver.f"
call "org.apache.commons.math.analysis.MullerSolver.solve(2)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.MullerSolver.solve(2)" "org.apache.commons.math.analysis.MullerSolver.verifyBracketing(3)"
reference "org.apache.commons.math.analysis.MullerSolver.solve(2)" "org.apache.commons.math.analysis.MullerSolver.maximalIterationCount"
call "org.apache.commons.math.analysis.MullerSolver.solve(2)" "org.apache.commons.math.analysis.MullerSolver.isSequence(3)"
reference "org.apache.commons.math.analysis.MullerSolver.solve(2)" "org.apache.commons.math.analysis.MullerSolver.relativeAccuracy"
reference "org.apache.commons.math.analysis.MullerSolver.solve(2)" "org.apache.commons.math.analysis.MullerSolver.absoluteAccuracy"
call "org.apache.commons.math.analysis.MullerSolver.solve(2)" "org.apache.commons.math.analysis.MullerSolver.setResult(2)"
reference "org.apache.commons.math.analysis.MullerSolver.solve(2)" "org.apache.commons.math.analysis.MullerSolver.result"
reference "org.apache.commons.math.analysis.MullerSolver.solve(2)" "org.apache.commons.math.analysis.MullerSolver.functionValueAccuracy"
call "org.apache.commons.math.analysis.MullerSolver.solve(2)" "org.apache.commons.math.util.MathUtils.sign(1)"
call "org.apache.commons.math.analysis.MullerSolver.solve(2)" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)"
contain "org.apache.commons.math.analysis.MullerSolver" "org.apache.commons.math.analysis.MullerSolver.solve(2)"
reference "org.apache.commons.math.analysis.MullerSolver.solve2(2)" "org.apache.commons.math.analysis.MullerSolver.f"
call "org.apache.commons.math.analysis.MullerSolver.solve2(2)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.MullerSolver.solve2(2)" "org.apache.commons.math.analysis.MullerSolver.verifyBracketing(3)"
reference "org.apache.commons.math.analysis.MullerSolver.solve2(2)" "org.apache.commons.math.analysis.MullerSolver.maximalIterationCount"
reference "org.apache.commons.math.analysis.MullerSolver.solve2(2)" "org.apache.commons.math.analysis.MullerSolver.absoluteAccuracy"
reference "org.apache.commons.math.analysis.MullerSolver.solve2(2)" "org.apache.commons.math.analysis.MullerSolver.relativeAccuracy"
call "org.apache.commons.math.analysis.MullerSolver.solve2(2)" "org.apache.commons.math.analysis.MullerSolver.setResult(2)"
reference "org.apache.commons.math.analysis.MullerSolver.solve2(2)" "org.apache.commons.math.analysis.MullerSolver.result"
reference "org.apache.commons.math.analysis.MullerSolver.solve2(2)" "org.apache.commons.math.analysis.MullerSolver.functionValueAccuracy"
call "org.apache.commons.math.analysis.MullerSolver.solve2(2)" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)"
contain "org.apache.commons.math.analysis.MullerSolver" "org.apache.commons.math.analysis.MullerSolver.solve2(2)"
contain "org.apache.commons.math.analysis.MullerSolver" "org.apache.commons.math.analysis.MullerSolver.serialVersionUID"
reference "org.apache.commons.math.distribution.IntegerDistribution" "org.apache.commons.math.distribution.DiscreteDistribution"
reference "org.apache.commons.math.distribution.IntegerDistribution" "org.apache.commons.math.MathException"
contain "org.apache.commons.math.distribution.IntegerDistribution" "org.apache.commons.math.distribution.IntegerDistribution.probability(1)"
contain "org.apache.commons.math.distribution.IntegerDistribution" "org.apache.commons.math.distribution.IntegerDistribution.cumulativeProbability(1)"
contain "org.apache.commons.math.distribution.IntegerDistribution" "org.apache.commons.math.distribution.IntegerDistribution.cumulativeProbability(2)"
contain "org.apache.commons.math.distribution.IntegerDistribution" "org.apache.commons.math.distribution.IntegerDistribution.inverseCumulativeProbability(1)"
reference "org.apache.commons.math.ConvergenceException" "org.apache.commons.math.MathException"
call "org.apache.commons.math.ConvergenceException.ConvergenceException(0)" "org.apache.commons.math.MathException.MathException(2)"
contain "org.apache.commons.math.ConvergenceException" "org.apache.commons.math.ConvergenceException.ConvergenceException(0)"
call "org.apache.commons.math.ConvergenceException.ConvergenceException(2)" "org.apache.commons.math.MathException.MathException(2)"
contain "org.apache.commons.math.ConvergenceException" "org.apache.commons.math.ConvergenceException.ConvergenceException(2)"
call "org.apache.commons.math.ConvergenceException.ConvergenceException(1)" "org.apache.commons.math.MathException.MathException(1)"
contain "org.apache.commons.math.ConvergenceException" "org.apache.commons.math.ConvergenceException.ConvergenceException(1)"
call "org.apache.commons.math.ConvergenceException.ConvergenceException(3)" "org.apache.commons.math.MathException.MathException(3)"
contain "org.apache.commons.math.ConvergenceException" "org.apache.commons.math.ConvergenceException.ConvergenceException(3)"
call "org.apache.commons.math.ConvergenceException.ConvergenceException(2)" "org.apache.commons.math.MathException.MathException(2)"
contain "org.apache.commons.math.ConvergenceException" "org.apache.commons.math.ConvergenceException.ConvergenceException(2)"
call "org.apache.commons.math.ConvergenceException.ConvergenceException(1)" "org.apache.commons.math.MathException.MathException(1)"
contain "org.apache.commons.math.ConvergenceException" "org.apache.commons.math.ConvergenceException.ConvergenceException(1)"
contain "org.apache.commons.math.ConvergenceException" "org.apache.commons.math.ConvergenceException.serialVersionUID"
reference "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.descriptive.summary.Sum"
reference "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares"
reference "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.descriptive.summary.Product"
reference "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs"
reference "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.descriptive.rank.Min"
reference "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.descriptive.rank.Max"
reference "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.descriptive.moment.Mean"
reference "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.descriptive.moment.Variance"
reference "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.descriptive.rank.Percentile"
reference "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.descriptive.moment.GeometricMean"
reference "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.StatUtils(0)"
reference "org.apache.commons.math.stat.StatUtils.sum(1)" "org.apache.commons.math.stat.StatUtils.sum"
call "org.apache.commons.math.stat.StatUtils.sum(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(1)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.sum(1)"
reference "org.apache.commons.math.stat.StatUtils.sum(3)" "org.apache.commons.math.stat.StatUtils.sum"
call "org.apache.commons.math.stat.StatUtils.sum(3)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(3)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.sum(3)"
reference "org.apache.commons.math.stat.StatUtils.sumSq(1)" "org.apache.commons.math.stat.StatUtils.sumSq"
call "org.apache.commons.math.stat.StatUtils.sumSq(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(1)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.sumSq(1)"
reference "org.apache.commons.math.stat.StatUtils.sumSq(3)" "org.apache.commons.math.stat.StatUtils.sumSq"
call "org.apache.commons.math.stat.StatUtils.sumSq(3)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(3)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.sumSq(3)"
reference "org.apache.commons.math.stat.StatUtils.product(1)" "org.apache.commons.math.stat.StatUtils.prod"
call "org.apache.commons.math.stat.StatUtils.product(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(1)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.product(1)"
reference "org.apache.commons.math.stat.StatUtils.product(3)" "org.apache.commons.math.stat.StatUtils.prod"
call "org.apache.commons.math.stat.StatUtils.product(3)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(3)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.product(3)"
reference "org.apache.commons.math.stat.StatUtils.sumLog(1)" "org.apache.commons.math.stat.StatUtils.sumLog"
call "org.apache.commons.math.stat.StatUtils.sumLog(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(1)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.sumLog(1)"
reference "org.apache.commons.math.stat.StatUtils.sumLog(3)" "org.apache.commons.math.stat.StatUtils.sumLog"
call "org.apache.commons.math.stat.StatUtils.sumLog(3)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(3)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.sumLog(3)"
reference "org.apache.commons.math.stat.StatUtils.mean(1)" "org.apache.commons.math.stat.StatUtils.mean"
call "org.apache.commons.math.stat.StatUtils.mean(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(1)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.mean(1)"
reference "org.apache.commons.math.stat.StatUtils.mean(3)" "org.apache.commons.math.stat.StatUtils.mean"
call "org.apache.commons.math.stat.StatUtils.mean(3)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(3)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.mean(3)"
reference "org.apache.commons.math.stat.StatUtils.geometricMean(1)" "org.apache.commons.math.stat.StatUtils.geometricMean"
call "org.apache.commons.math.stat.StatUtils.geometricMean(1)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.evaluate(1)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.geometricMean(1)"
reference "org.apache.commons.math.stat.StatUtils.geometricMean(3)" "org.apache.commons.math.stat.StatUtils.geometricMean"
call "org.apache.commons.math.stat.StatUtils.geometricMean(3)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.evaluate(3)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.geometricMean(3)"
reference "org.apache.commons.math.stat.StatUtils.variance(1)" "org.apache.commons.math.stat.StatUtils.variance"
call "org.apache.commons.math.stat.StatUtils.variance(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(1)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.variance(1)"
reference "org.apache.commons.math.stat.StatUtils.variance(3)" "org.apache.commons.math.stat.StatUtils.variance"
call "org.apache.commons.math.stat.StatUtils.variance(3)" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(3)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.variance(3)"
reference "org.apache.commons.math.stat.StatUtils.variance(4)" "org.apache.commons.math.stat.StatUtils.variance"
call "org.apache.commons.math.stat.StatUtils.variance(4)" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(4)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.variance(4)"
reference "org.apache.commons.math.stat.StatUtils.variance(2)" "org.apache.commons.math.stat.StatUtils.variance"
call "org.apache.commons.math.stat.StatUtils.variance(2)" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(2)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.variance(2)"
reference "org.apache.commons.math.stat.StatUtils.max(1)" "org.apache.commons.math.stat.StatUtils.max"
call "org.apache.commons.math.stat.StatUtils.max(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(1)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.max(1)"
reference "org.apache.commons.math.stat.StatUtils.max(3)" "org.apache.commons.math.stat.StatUtils.max"
call "org.apache.commons.math.stat.StatUtils.max(3)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(3)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.max(3)"
reference "org.apache.commons.math.stat.StatUtils.min(1)" "org.apache.commons.math.stat.StatUtils.min"
call "org.apache.commons.math.stat.StatUtils.min(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(1)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.min(1)"
reference "org.apache.commons.math.stat.StatUtils.min(3)" "org.apache.commons.math.stat.StatUtils.min"
call "org.apache.commons.math.stat.StatUtils.min(3)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(3)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.min(3)"
reference "org.apache.commons.math.stat.StatUtils.percentile(2)" "org.apache.commons.math.stat.StatUtils.percentile"
call "org.apache.commons.math.stat.StatUtils.percentile(2)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(2)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.percentile(2)"
reference "org.apache.commons.math.stat.StatUtils.percentile(4)" "org.apache.commons.math.stat.StatUtils.percentile"
call "org.apache.commons.math.stat.StatUtils.percentile(4)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(4)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.percentile(4)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.sumDifference(2)"
call "org.apache.commons.math.stat.StatUtils.meanDifference(2)" "org.apache.commons.math.stat.StatUtils.sumDifference(2)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.meanDifference(2)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.varianceDifference(3)"
call "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(0)"
reference "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.StatUtils.sum"
call "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.SumOfSquares(0)"
reference "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.StatUtils.sumSq"
call "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.descriptive.summary.Product.Product(0)"
reference "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.StatUtils.prod"
call "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.SumOfLogs(0)"
reference "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.StatUtils.sumLog"
call "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.descriptive.rank.Min.Min(0)"
reference "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.StatUtils.min"
call "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.descriptive.rank.Max.Max(0)"
reference "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.StatUtils.max"
call "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)"
reference "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.StatUtils.mean"
call "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(0)"
reference "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.StatUtils.variance"
call "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(0)"
reference "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.StatUtils.percentile"
call "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.GeometricMean(0)"
reference "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.StatUtils.geometricMean"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.static {...}"
reference "org.apache.commons.math.stat.StatUtils.sum" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.sum"
reference "org.apache.commons.math.stat.StatUtils.sumSq" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.sumSq"
reference "org.apache.commons.math.stat.StatUtils.prod" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.prod"
reference "org.apache.commons.math.stat.StatUtils.sumLog" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.sumLog"
reference "org.apache.commons.math.stat.StatUtils.min" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.min"
reference "org.apache.commons.math.stat.StatUtils.max" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.max"
reference "org.apache.commons.math.stat.StatUtils.mean" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.mean"
reference "org.apache.commons.math.stat.StatUtils.variance" "org.apache.commons.math.stat.descriptive.moment.Variance"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.variance"
reference "org.apache.commons.math.stat.StatUtils.percentile" "org.apache.commons.math.stat.descriptive.rank.Percentile"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.percentile"
reference "org.apache.commons.math.stat.StatUtils.geometricMean" "org.apache.commons.math.stat.descriptive.moment.GeometricMean"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.geometricMean"
reference "org.apache.commons.math.ode.MidpointIntegrator" "org.apache.commons.math.ode.MidpointStepInterpolator"
reference "org.apache.commons.math.ode.MidpointIntegrator" "double[]"
reference "org.apache.commons.math.ode.MidpointIntegrator" "org.apache.commons.math.ode.RungeKuttaIntegrator"
reference "org.apache.commons.math.ode.MidpointIntegrator.MidpointIntegrator(1)" "org.apache.commons.math.ode.MidpointIntegrator.c"
reference "org.apache.commons.math.ode.MidpointIntegrator.MidpointIntegrator(1)" "org.apache.commons.math.ode.MidpointIntegrator.a"
reference "org.apache.commons.math.ode.MidpointIntegrator.MidpointIntegrator(1)" "org.apache.commons.math.ode.MidpointIntegrator.b"
call "org.apache.commons.math.ode.MidpointIntegrator.MidpointIntegrator(1)" "org.apache.commons.math.ode.MidpointStepInterpolator.MidpointStepInterpolator(0)"
call "org.apache.commons.math.ode.MidpointIntegrator.MidpointIntegrator(1)" "org.apache.commons.math.ode.RungeKuttaIntegrator.RungeKuttaIntegrator(6)"
contain "org.apache.commons.math.ode.MidpointIntegrator" "org.apache.commons.math.ode.MidpointIntegrator.MidpointIntegrator(1)"
contain "org.apache.commons.math.ode.MidpointIntegrator" "org.apache.commons.math.ode.MidpointIntegrator.getName(0)"
reference "org.apache.commons.math.ode.MidpointIntegrator.static {...}" "org.apache.commons.math.ode.MidpointIntegrator.c"
reference "org.apache.commons.math.ode.MidpointIntegrator.static {...}" "org.apache.commons.math.ode.MidpointIntegrator.a"
reference "org.apache.commons.math.ode.MidpointIntegrator.static {...}" "org.apache.commons.math.ode.MidpointIntegrator.b"
contain "org.apache.commons.math.ode.MidpointIntegrator" "org.apache.commons.math.ode.MidpointIntegrator.static {...}"
contain "org.apache.commons.math.ode.MidpointIntegrator" "org.apache.commons.math.ode.MidpointIntegrator.methodName"
reference "org.apache.commons.math.ode.MidpointIntegrator.c" "double[]"
contain "org.apache.commons.math.ode.MidpointIntegrator" "org.apache.commons.math.ode.MidpointIntegrator.c"
reference "org.apache.commons.math.ode.MidpointIntegrator.a" "double[][]"
contain "org.apache.commons.math.ode.MidpointIntegrator" "org.apache.commons.math.ode.MidpointIntegrator.a"
reference "org.apache.commons.math.ode.MidpointIntegrator.b" "double[]"
contain "org.apache.commons.math.ode.MidpointIntegrator" "org.apache.commons.math.ode.MidpointIntegrator.b"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummary" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getMean(0)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummary" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getVariance(0)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummary" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getStandardDeviation(0)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummary" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getMax(0)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummary" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getMin(0)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummary" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getN(0)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummary" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getSum(0)"
reference "org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction" "org.apache.commons.math.analysis.UnivariateRealFunction"
contain "org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction" "org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction.derivative(0)"
reference "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.DoubleArray"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(0)" "org.apache.commons.math.util.ResizableDoubleArray.contractionCriteria"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(0)" "org.apache.commons.math.util.ResizableDoubleArray.expansionFactor"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(0)" "org.apache.commons.math.util.ResizableDoubleArray.expansionMode"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(0)" "org.apache.commons.math.util.ResizableDoubleArray.initialCapacity"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(0)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(0)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(0)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(0)"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)" "org.apache.commons.math.util.ResizableDoubleArray.contractionCriteria"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)" "org.apache.commons.math.util.ResizableDoubleArray.expansionFactor"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)" "org.apache.commons.math.util.ResizableDoubleArray.expansionMode"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)" "org.apache.commons.math.util.ResizableDoubleArray.initialCapacity"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
call "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)" "org.apache.commons.math.util.ResizableDoubleArray.setInitialCapacity(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(2)" "org.apache.commons.math.util.ResizableDoubleArray.contractionCriteria"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(2)" "org.apache.commons.math.util.ResizableDoubleArray.expansionFactor"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(2)" "org.apache.commons.math.util.ResizableDoubleArray.expansionMode"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(2)" "org.apache.commons.math.util.ResizableDoubleArray.initialCapacity"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(2)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(2)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
call "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(2)" "org.apache.commons.math.util.ResizableDoubleArray.setInitialCapacity(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(2)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
call "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(2)" "org.apache.commons.math.util.ResizableDoubleArray.setContractionCriteria(1)"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(2)"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(3)" "org.apache.commons.math.util.ResizableDoubleArray.contractionCriteria"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(3)" "org.apache.commons.math.util.ResizableDoubleArray.expansionFactor"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(3)" "org.apache.commons.math.util.ResizableDoubleArray.expansionMode"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(3)" "org.apache.commons.math.util.ResizableDoubleArray.initialCapacity"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(3)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(3)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
call "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(3)" "org.apache.commons.math.util.ResizableDoubleArray.setContractionCriteria(1)"
call "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(3)" "org.apache.commons.math.util.ResizableDoubleArray.setInitialCapacity(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(3)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(3)"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(4)" "org.apache.commons.math.util.ResizableDoubleArray.contractionCriteria"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(4)" "org.apache.commons.math.util.ResizableDoubleArray.expansionFactor"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(4)" "org.apache.commons.math.util.ResizableDoubleArray.expansionMode"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(4)" "org.apache.commons.math.util.ResizableDoubleArray.initialCapacity"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(4)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(4)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
call "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(4)" "org.apache.commons.math.util.ResizableDoubleArray.setContractionCriteria(1)"
call "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(4)" "org.apache.commons.math.util.ResizableDoubleArray.setInitialCapacity(1)"
call "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(4)" "org.apache.commons.math.util.ResizableDoubleArray.setExpansionMode(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(4)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(4)"
reference "org.apache.commons.math.util.ResizableDoubleArray.addElement(1)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
reference "org.apache.commons.math.util.ResizableDoubleArray.addElement(1)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
reference "org.apache.commons.math.util.ResizableDoubleArray.addElement(1)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
call "org.apache.commons.math.util.ResizableDoubleArray.addElement(1)" "org.apache.commons.math.util.ResizableDoubleArray.expand(0)"
call "org.apache.commons.math.util.ResizableDoubleArray.addElement(1)" "org.apache.commons.math.util.ResizableDoubleArray.shouldContract(0)"
call "org.apache.commons.math.util.ResizableDoubleArray.addElement(1)" "org.apache.commons.math.util.ResizableDoubleArray.contract(0)"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.addElement(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.addElementRolling(1)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
reference "org.apache.commons.math.util.ResizableDoubleArray.addElementRolling(1)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
reference "org.apache.commons.math.util.ResizableDoubleArray.addElementRolling(1)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
call "org.apache.commons.math.util.ResizableDoubleArray.addElementRolling(1)" "org.apache.commons.math.util.ResizableDoubleArray.expand(0)"
call "org.apache.commons.math.util.ResizableDoubleArray.addElementRolling(1)" "org.apache.commons.math.util.ResizableDoubleArray.shouldContract(0)"
call "org.apache.commons.math.util.ResizableDoubleArray.addElementRolling(1)" "org.apache.commons.math.util.ResizableDoubleArray.contract(0)"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.addElementRolling(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.checkContractExpand(2)" "org.apache.commons.math.util.ResizableDoubleArray.contractionCriteria"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.checkContractExpand(2)"
reference "org.apache.commons.math.util.ResizableDoubleArray.clear(0)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
reference "org.apache.commons.math.util.ResizableDoubleArray.clear(0)" "org.apache.commons.math.util.ResizableDoubleArray.initialCapacity"
reference "org.apache.commons.math.util.ResizableDoubleArray.clear(0)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.clear(0)"
reference "org.apache.commons.math.util.ResizableDoubleArray.contract(0)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
reference "org.apache.commons.math.util.ResizableDoubleArray.contract(0)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
reference "org.apache.commons.math.util.ResizableDoubleArray.contract(0)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.contract(0)"
reference "org.apache.commons.math.util.ResizableDoubleArray.discardFrontElements(1)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
reference "org.apache.commons.math.util.ResizableDoubleArray.discardFrontElements(1)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
call "org.apache.commons.math.util.ResizableDoubleArray.discardFrontElements(1)" "org.apache.commons.math.util.ResizableDoubleArray.shouldContract(0)"
call "org.apache.commons.math.util.ResizableDoubleArray.discardFrontElements(1)" "org.apache.commons.math.util.ResizableDoubleArray.contract(0)"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.discardFrontElements(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.expand(0)" "org.apache.commons.math.util.ResizableDoubleArray.expansionMode"
reference "org.apache.commons.math.util.ResizableDoubleArray.expand(0)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
reference "org.apache.commons.math.util.ResizableDoubleArray.expand(0)" "org.apache.commons.math.util.ResizableDoubleArray.expansionFactor"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.expand(0)"
reference "org.apache.commons.math.util.ResizableDoubleArray.expandTo(1)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.expandTo(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.getContractionCriteria(0)" "org.apache.commons.math.util.ResizableDoubleArray.contractionCriteria"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.getContractionCriteria(0)"
reference "org.apache.commons.math.util.ResizableDoubleArray.getElement(1)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
reference "org.apache.commons.math.util.ResizableDoubleArray.getElement(1)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
reference "org.apache.commons.math.util.ResizableDoubleArray.getElement(1)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.getElement(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.getElements(0)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
reference "org.apache.commons.math.util.ResizableDoubleArray.getElements(0)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
reference "org.apache.commons.math.util.ResizableDoubleArray.getElements(0)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.getElements(0)"
reference "org.apache.commons.math.util.ResizableDoubleArray.getExpansionFactor(0)" "org.apache.commons.math.util.ResizableDoubleArray.expansionFactor"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.getExpansionFactor(0)"
reference "org.apache.commons.math.util.ResizableDoubleArray.getExpansionMode(0)" "org.apache.commons.math.util.ResizableDoubleArray.expansionMode"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.getExpansionMode(0)"
reference "org.apache.commons.math.util.ResizableDoubleArray.getInternalLength(0)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.getInternalLength(0)"
reference "org.apache.commons.math.util.ResizableDoubleArray.getNumElements(0)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.getNumElements(0)"
reference "org.apache.commons.math.util.ResizableDoubleArray.getValues(0)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.getValues(0)"
call "org.apache.commons.math.util.ResizableDoubleArray.setContractionCriteria(1)" "org.apache.commons.math.util.ResizableDoubleArray.getExpansionFactor(0)"
call "org.apache.commons.math.util.ResizableDoubleArray.setContractionCriteria(1)" "org.apache.commons.math.util.ResizableDoubleArray.checkContractExpand(2)"
reference "org.apache.commons.math.util.ResizableDoubleArray.setContractionCriteria(1)" "org.apache.commons.math.util.ResizableDoubleArray.contractionCriteria"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.setContractionCriteria(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.setElement(2)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
reference "org.apache.commons.math.util.ResizableDoubleArray.setElement(2)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
reference "org.apache.commons.math.util.ResizableDoubleArray.setElement(2)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
call "org.apache.commons.math.util.ResizableDoubleArray.setElement(2)" "org.apache.commons.math.util.ResizableDoubleArray.expandTo(1)"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.setElement(2)"
call "org.apache.commons.math.util.ResizableDoubleArray.setExpansionFactor(1)" "org.apache.commons.math.util.ResizableDoubleArray.getContractionCriteria(0)"
call "org.apache.commons.math.util.ResizableDoubleArray.setExpansionFactor(1)" "org.apache.commons.math.util.ResizableDoubleArray.checkContractExpand(2)"
reference "org.apache.commons.math.util.ResizableDoubleArray.setExpansionFactor(1)" "org.apache.commons.math.util.ResizableDoubleArray.expansionFactor"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.setExpansionFactor(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.setExpansionMode(1)" "org.apache.commons.math.util.ResizableDoubleArray.expansionMode"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.setExpansionMode(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.setInitialCapacity(1)" "org.apache.commons.math.util.ResizableDoubleArray.initialCapacity"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.setInitialCapacity(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.setNumElements(1)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
reference "org.apache.commons.math.util.ResizableDoubleArray.setNumElements(1)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
call "org.apache.commons.math.util.ResizableDoubleArray.setNumElements(1)" "org.apache.commons.math.util.ResizableDoubleArray.expandTo(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.setNumElements(1)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.setNumElements(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.shouldContract(0)" "org.apache.commons.math.util.ResizableDoubleArray.expansionMode"
reference "org.apache.commons.math.util.ResizableDoubleArray.shouldContract(0)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
reference "org.apache.commons.math.util.ResizableDoubleArray.shouldContract(0)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
reference "org.apache.commons.math.util.ResizableDoubleArray.shouldContract(0)" "org.apache.commons.math.util.ResizableDoubleArray.contractionCriteria"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.shouldContract(0)"
reference "org.apache.commons.math.util.ResizableDoubleArray.start(0)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.start(0)"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.serialVersionUID"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.ADDITIVE_MODE"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.MULTIPLICATIVE_MODE"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.contractionCriteria"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.expansionFactor"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.expansionMode"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.initialCapacity"
reference "org.apache.commons.math.util.ResizableDoubleArray.internalArray" "double[]"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
reference "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.StepInterpolator"
reference "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.AbstractStepInterpolator"
reference "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.StepHandler"
reference "org.apache.commons.math.ode.ContinuousOutputModel.ContinuousOutputModel(0)" "org.apache.commons.math.ode.ContinuousOutputModel.steps"
call "org.apache.commons.math.ode.ContinuousOutputModel.ContinuousOutputModel(0)" "org.apache.commons.math.ode.ContinuousOutputModel.reset(0)"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.ContinuousOutputModel(0)"
reference "org.apache.commons.math.ode.ContinuousOutputModel.append(1)" "org.apache.commons.math.ode.ContinuousOutputModel.steps"
reference "org.apache.commons.math.ode.ContinuousOutputModel.append(1)" "org.apache.commons.math.ode.ContinuousOutputModel.initialTime"
reference "org.apache.commons.math.ode.ContinuousOutputModel.append(1)" "org.apache.commons.math.ode.ContinuousOutputModel.forward"
call "org.apache.commons.math.ode.ContinuousOutputModel.append(1)" "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState(0)"
reference "org.apache.commons.math.ode.ContinuousOutputModel.append(1)" "org.apache.commons.math.ode.ContinuousOutputModel.index"
call "org.apache.commons.math.ode.ContinuousOutputModel.append(1)" "org.apache.commons.math.ode.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.ContinuousOutputModel.append(1)" "org.apache.commons.math.ode.StepInterpolator.getPreviousTime(0)"
call "org.apache.commons.math.ode.ContinuousOutputModel.append(1)" "org.apache.commons.math.ode.ContinuousOutputModel.getInitialTime(0)"
call "org.apache.commons.math.ode.ContinuousOutputModel.append(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.clone(0)"
reference "org.apache.commons.math.ode.ContinuousOutputModel.append(1)" "org.apache.commons.math.ode.ContinuousOutputModel.finalTime"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.append(1)"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.ContinuousOutputModel.reset(0)" "org.apache.commons.math.ode.ContinuousOutputModel.initialTime"
reference "org.apache.commons.math.ode.ContinuousOutputModel.reset(0)" "org.apache.commons.math.ode.ContinuousOutputModel.finalTime"
reference "org.apache.commons.math.ode.ContinuousOutputModel.reset(0)" "org.apache.commons.math.ode.ContinuousOutputModel.forward"
reference "org.apache.commons.math.ode.ContinuousOutputModel.reset(0)" "org.apache.commons.math.ode.ContinuousOutputModel.index"
reference "org.apache.commons.math.ode.ContinuousOutputModel.reset(0)" "org.apache.commons.math.ode.ContinuousOutputModel.steps"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.reset(0)"
reference "org.apache.commons.math.ode.ContinuousOutputModel.handleStep(2)" "org.apache.commons.math.ode.ContinuousOutputModel.steps"
call "org.apache.commons.math.ode.ContinuousOutputModel.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getPreviousTime(0)"
reference "org.apache.commons.math.ode.ContinuousOutputModel.handleStep(2)" "org.apache.commons.math.ode.ContinuousOutputModel.initialTime"
call "org.apache.commons.math.ode.ContinuousOutputModel.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.isForward(0)"
reference "org.apache.commons.math.ode.ContinuousOutputModel.handleStep(2)" "org.apache.commons.math.ode.ContinuousOutputModel.forward"
call "org.apache.commons.math.ode.ContinuousOutputModel.handleStep(2)" "org.apache.commons.math.ode.AbstractStepInterpolator.finalizeStep(0)"
call "org.apache.commons.math.ode.ContinuousOutputModel.handleStep(2)" "org.apache.commons.math.ode.AbstractStepInterpolator.clone(0)"
call "org.apache.commons.math.ode.ContinuousOutputModel.handleStep(2)" "org.apache.commons.math.ode.AbstractStepInterpolator.getCurrentTime(0)"
reference "org.apache.commons.math.ode.ContinuousOutputModel.handleStep(2)" "org.apache.commons.math.ode.ContinuousOutputModel.finalTime"
reference "org.apache.commons.math.ode.ContinuousOutputModel.handleStep(2)" "org.apache.commons.math.ode.ContinuousOutputModel.index"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.handleStep(2)"
reference "org.apache.commons.math.ode.ContinuousOutputModel.getInitialTime(0)" "org.apache.commons.math.ode.ContinuousOutputModel.initialTime"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.getInitialTime(0)"
reference "org.apache.commons.math.ode.ContinuousOutputModel.getFinalTime(0)" "org.apache.commons.math.ode.ContinuousOutputModel.finalTime"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.getFinalTime(0)"
reference "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedTime(0)" "org.apache.commons.math.ode.ContinuousOutputModel.steps"
reference "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedTime(0)" "org.apache.commons.math.ode.ContinuousOutputModel.index"
call "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedTime(0)" "org.apache.commons.math.ode.StepInterpolator.getInterpolatedTime(0)"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedTime(0)"
reference "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)" "org.apache.commons.math.ode.ContinuousOutputModel.steps"
call "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)" "org.apache.commons.math.ode.StepInterpolator.getPreviousTime(0)"
call "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)" "org.apache.commons.math.ode.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)" "org.apache.commons.math.ode.ContinuousOutputModel.locatePoint(2)"
reference "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)" "org.apache.commons.math.ode.ContinuousOutputModel.index"
call "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)" "org.apache.commons.math.ode.StepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)" "org.apache.commons.math.ode.DerivativeException.getMessage(0)"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)"
reference "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState(0)" "org.apache.commons.math.ode.ContinuousOutputModel.steps"
reference "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState(0)" "org.apache.commons.math.ode.ContinuousOutputModel.index"
call "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState(0)" "org.apache.commons.math.ode.StepInterpolator.getInterpolatedState(0)"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState(0)"
reference "org.apache.commons.math.ode.ContinuousOutputModel.locatePoint(2)" "org.apache.commons.math.ode.ContinuousOutputModel.forward"
call "org.apache.commons.math.ode.ContinuousOutputModel.locatePoint(2)" "org.apache.commons.math.ode.StepInterpolator.getPreviousTime(0)"
call "org.apache.commons.math.ode.ContinuousOutputModel.locatePoint(2)" "org.apache.commons.math.ode.StepInterpolator.getCurrentTime(0)"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.locatePoint(2)"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.initialTime"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.finalTime"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.forward"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.index"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.steps"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.serialVersionUID"
reference "org.apache.commons.math.distribution.GammaDistribution" "org.apache.commons.math.distribution.ContinuousDistribution"
contain "org.apache.commons.math.distribution.GammaDistribution" "org.apache.commons.math.distribution.GammaDistribution.setAlpha(1)"
contain "org.apache.commons.math.distribution.GammaDistribution" "org.apache.commons.math.distribution.GammaDistribution.getAlpha(0)"
contain "org.apache.commons.math.distribution.GammaDistribution" "org.apache.commons.math.distribution.GammaDistribution.setBeta(1)"
contain "org.apache.commons.math.distribution.GammaDistribution" "org.apache.commons.math.distribution.GammaDistribution.getBeta(0)"
reference "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.MathException"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.pairedT(2)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.pairedTTest(2)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.pairedTTest(3)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.t(2)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.t(2)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.homoscedasticT(2)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.t(2)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.t(2)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.homoscedasticT(2)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.tTest(2)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.tTest(3)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.tTest(2)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.tTest(3)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.tTest(2)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.homoscedasticTTest(2)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.tTest(3)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.homoscedasticTTest(3)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.tTest(2)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.homoscedasticTTest(2)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.tTest(3)"
reference "org.apache.commons.math.analysis.UnivariateRealInterpolator" "org.apache.commons.math.MathException"
contain "org.apache.commons.math.analysis.UnivariateRealInterpolator" "org.apache.commons.math.analysis.UnivariateRealInterpolator.interpolate(2)"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator" "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator" "double[]"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator" "org.apache.commons.math.ode.RungeKuttaIntegrator"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(1)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.c"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(1)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.a"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(1)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.b"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(1)" "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator.ClassicalRungeKuttaStepInterpolator(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(1)" "org.apache.commons.math.ode.RungeKuttaIntegrator.RungeKuttaIntegrator(6)"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(1)"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.getName(0)"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.static {...}" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.c"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.static {...}" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.a"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.static {...}" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.b"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.static {...}"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.methodName"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.c" "double[]"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.c"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.a" "double[][]"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.a"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.b" "double[]"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.b"
reference "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.ProperFractionFormat"
reference "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.Fraction"
reference "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.ConvergenceException"
call "org.apache.commons.math.fraction.FractionFormat.FractionFormat(0)" "org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(0)"
call "org.apache.commons.math.fraction.FractionFormat.FractionFormat(0)" "org.apache.commons.math.fraction.FractionFormat.FractionFormat(1)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.FractionFormat(0)"
call "org.apache.commons.math.fraction.FractionFormat.FractionFormat(1)" "org.apache.commons.math.fraction.FractionFormat.FractionFormat(2)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.FractionFormat(1)"
reference "org.apache.commons.math.fraction.FractionFormat.FractionFormat(2)" "org.apache.commons.math.fraction.FractionFormat.numeratorFormat"
reference "org.apache.commons.math.fraction.FractionFormat.FractionFormat(2)" "org.apache.commons.math.fraction.FractionFormat.denominatorFormat"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.FractionFormat(2)"
call "org.apache.commons.math.fraction.FractionFormat.formatFraction(1)" "org.apache.commons.math.fraction.FractionFormat.getImproperInstance(0)"
call "org.apache.commons.math.fraction.FractionFormat.formatFraction(1)" "org.apache.commons.math.fraction.FractionFormat.format(1)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.formatFraction(1)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.getAvailableLocales(0)"
call "org.apache.commons.math.fraction.FractionFormat.getImproperInstance(0)" "org.apache.commons.math.fraction.FractionFormat.getImproperInstance(1)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.getImproperInstance(0)"
call "org.apache.commons.math.fraction.FractionFormat.getImproperInstance(1)" "org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(1)"
call "org.apache.commons.math.fraction.FractionFormat.getImproperInstance(1)" "org.apache.commons.math.fraction.FractionFormat.FractionFormat(1)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.getImproperInstance(1)"
call "org.apache.commons.math.fraction.FractionFormat.getProperInstance(0)" "org.apache.commons.math.fraction.FractionFormat.getProperInstance(1)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.getProperInstance(0)"
call "org.apache.commons.math.fraction.FractionFormat.getProperInstance(1)" "org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(1)"
call "org.apache.commons.math.fraction.FractionFormat.getProperInstance(1)" "org.apache.commons.math.fraction.ProperFractionFormat.ProperFractionFormat(1)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.getProperInstance(1)"
call "org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(0)" "org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(1)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(0)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(1)"
call "org.apache.commons.math.fraction.FractionFormat.format(3)" "org.apache.commons.math.fraction.FractionFormat.getNumeratorFormat(0)"
call "org.apache.commons.math.fraction.FractionFormat.format(3)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.FractionFormat.format(3)" "org.apache.commons.math.fraction.FractionFormat.getDenominatorFormat(0)"
call "org.apache.commons.math.fraction.FractionFormat.format(3)" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.format(3)"
call "org.apache.commons.math.fraction.FractionFormat.format(3)" "org.apache.commons.math.fraction.FractionFormat.format(3)"
call "org.apache.commons.math.fraction.FractionFormat.format(3)" "org.apache.commons.math.fraction.Fraction.Fraction(1)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.format(3)"
reference "org.apache.commons.math.fraction.FractionFormat.getDenominatorFormat(0)" "org.apache.commons.math.fraction.FractionFormat.denominatorFormat"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.getDenominatorFormat(0)"
reference "org.apache.commons.math.fraction.FractionFormat.getNumeratorFormat(0)" "org.apache.commons.math.fraction.FractionFormat.numeratorFormat"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.getNumeratorFormat(0)"
call "org.apache.commons.math.fraction.FractionFormat.parse(1)" "org.apache.commons.math.fraction.FractionFormat.parse(2)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.parse(1)"
call "org.apache.commons.math.fraction.FractionFormat.parse(2)" "org.apache.commons.math.fraction.FractionFormat.parseAndIgnoreWhitespace(2)"
call "org.apache.commons.math.fraction.FractionFormat.parse(2)" "org.apache.commons.math.fraction.FractionFormat.getNumeratorFormat(0)"
call "org.apache.commons.math.fraction.FractionFormat.parse(2)" "org.apache.commons.math.fraction.FractionFormat.parseNextCharacter(2)"
call "org.apache.commons.math.fraction.FractionFormat.parse(2)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionFormat.parse(2)" "org.apache.commons.math.fraction.FractionFormat.getDenominatorFormat(0)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.parse(2)"
call "org.apache.commons.math.fraction.FractionFormat.parseObject(2)" "org.apache.commons.math.fraction.FractionFormat.parse(2)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.parseObject(2)"
reference "org.apache.commons.math.fraction.FractionFormat.setDenominatorFormat(1)" "org.apache.commons.math.fraction.FractionFormat.denominatorFormat"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.setDenominatorFormat(1)"
reference "org.apache.commons.math.fraction.FractionFormat.setNumeratorFormat(1)" "org.apache.commons.math.fraction.FractionFormat.numeratorFormat"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.setNumeratorFormat(1)"
call "org.apache.commons.math.fraction.FractionFormat.parseAndIgnoreWhitespace(2)" "org.apache.commons.math.fraction.FractionFormat.parseNextCharacter(2)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.parseAndIgnoreWhitespace(2)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.parseNextCharacter(2)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.serialVersionUID"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.denominatorFormat"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.numeratorFormat"
reference "org.apache.commons.math.analysis.PolynomialFunction" "org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction"
reference "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)" "org.apache.commons.math.analysis.PolynomialFunction.coefficients"
contain "org.apache.commons.math.analysis.PolynomialFunction" "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)"
reference "org.apache.commons.math.analysis.PolynomialFunction.value(1)" "org.apache.commons.math.analysis.PolynomialFunction.coefficients"
call "org.apache.commons.math.analysis.PolynomialFunction.value(1)" "org.apache.commons.math.analysis.PolynomialFunction.evaluate(2)"
contain "org.apache.commons.math.analysis.PolynomialFunction" "org.apache.commons.math.analysis.PolynomialFunction.value(1)"
reference "org.apache.commons.math.analysis.PolynomialFunction.degree(0)" "org.apache.commons.math.analysis.PolynomialFunction.coefficients"
contain "org.apache.commons.math.analysis.PolynomialFunction" "org.apache.commons.math.analysis.PolynomialFunction.degree(0)"
reference "org.apache.commons.math.analysis.PolynomialFunction.getCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunction.coefficients"
contain "org.apache.commons.math.analysis.PolynomialFunction" "org.apache.commons.math.analysis.PolynomialFunction.getCoefficients(0)"
contain "org.apache.commons.math.analysis.PolynomialFunction" "org.apache.commons.math.analysis.PolynomialFunction.evaluate(2)"
contain "org.apache.commons.math.analysis.PolynomialFunction" "org.apache.commons.math.analysis.PolynomialFunction.differentiate(1)"
reference "org.apache.commons.math.analysis.PolynomialFunction.polynomialDerivative(0)" "org.apache.commons.math.analysis.PolynomialFunction.coefficients"
call "org.apache.commons.math.analysis.PolynomialFunction.polynomialDerivative(0)" "org.apache.commons.math.analysis.PolynomialFunction.differentiate(1)"
call "org.apache.commons.math.analysis.PolynomialFunction.polynomialDerivative(0)" "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)"
contain "org.apache.commons.math.analysis.PolynomialFunction" "org.apache.commons.math.analysis.PolynomialFunction.polynomialDerivative(0)"
call "org.apache.commons.math.analysis.PolynomialFunction.derivative(0)" "org.apache.commons.math.analysis.PolynomialFunction.polynomialDerivative(0)"
contain "org.apache.commons.math.analysis.PolynomialFunction" "org.apache.commons.math.analysis.PolynomialFunction.derivative(0)"
contain "org.apache.commons.math.analysis.PolynomialFunction" "org.apache.commons.math.analysis.PolynomialFunction.serialVersionUID"
reference "org.apache.commons.math.analysis.PolynomialFunction.coefficients" "double[]"
contain "org.apache.commons.math.analysis.PolynomialFunction" "org.apache.commons.math.analysis.PolynomialFunction.coefficients"
reference "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.AbstractIntegerDistribution"
reference "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistribution"
reference "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.util.MathUtils"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.HypergeometricDistributionImpl(3)" "org.apache.commons.math.distribution.AbstractIntegerDistribution.AbstractIntegerDistribution(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.HypergeometricDistributionImpl(3)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.setPopulationSize(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.HypergeometricDistributionImpl(3)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.setSampleSize(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.HypergeometricDistributionImpl(3)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.setNumberOfSuccesses(1)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.HypergeometricDistributionImpl(3)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getPopulationSize(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getNumberOfSuccesses(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getSampleSize(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomain(3)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.innerCumulativeProbability(6)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomain(3)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getLowerDomain(3)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomain(3)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getUpperDomain(2)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomain(3)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomainLowerBound(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getPopulationSize(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomainLowerBound(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getNumberOfSuccesses(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomainLowerBound(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getSampleSize(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomainLowerBound(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getLowerDomain(3)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomainLowerBound(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomainUpperBound(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getSampleSize(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomainUpperBound(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getNumberOfSuccesses(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomainUpperBound(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getUpperDomain(2)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomainUpperBound(1)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getLowerDomain(3)"
reference "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getNumberOfSuccesses(0)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.numberOfSuccesses"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getNumberOfSuccesses(0)"
reference "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getPopulationSize(0)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.populationSize"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getPopulationSize(0)"
reference "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getSampleSize(0)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.sampleSize"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getSampleSize(0)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getUpperDomain(2)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.probability(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getPopulationSize(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.probability(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getNumberOfSuccesses(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.probability(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getSampleSize(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.probability(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomain(3)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.probability(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.probability(4)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.probability(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.probability(4)" "org.apache.commons.math.util.MathUtils.binomialCoefficientLog(2)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.probability(4)"
reference "org.apache.commons.math.distribution.HypergeometricDistributionImpl.setNumberOfSuccesses(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.numberOfSuccesses"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.setNumberOfSuccesses(1)"
reference "org.apache.commons.math.distribution.HypergeometricDistributionImpl.setPopulationSize(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.populationSize"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.setPopulationSize(1)"
reference "org.apache.commons.math.distribution.HypergeometricDistributionImpl.setSampleSize(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.sampleSize"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.setSampleSize(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.upperCumulativeProbability(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getPopulationSize(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.upperCumulativeProbability(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getNumberOfSuccesses(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.upperCumulativeProbability(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getSampleSize(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.upperCumulativeProbability(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomain(3)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.upperCumulativeProbability(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.innerCumulativeProbability(6)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.upperCumulativeProbability(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.innerCumulativeProbability(6)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.probability(4)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.innerCumulativeProbability(6)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.serialVersionUID"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.numberOfSuccesses"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.populationSize"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.sampleSize"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfLogs" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic"
call "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.SumOfLogs(0)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.SumOfLogs(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.value"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.SumOfLogs(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.n"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfLogs" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.SumOfLogs(0)"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.increment(1)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.value"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.increment(1)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.n"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfLogs" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.increment(1)"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.getResult(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.n"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.getResult(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.value"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfLogs" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.getN(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.n"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfLogs" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.getN(0)"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.clear(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.value"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.clear(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.n"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfLogs" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.clear(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.evaluate(3)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.test(3)"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfLogs" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfLogs" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfLogs" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.n"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfLogs" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.value"
reference "org.apache.commons.math.DimensionMismatchException" "org.apache.commons.math.MathException"
call "org.apache.commons.math.DimensionMismatchException.DimensionMismatchException(2)" "org.apache.commons.math.MathException.MathException(2)"
reference "org.apache.commons.math.DimensionMismatchException.DimensionMismatchException(2)" "org.apache.commons.math.DimensionMismatchException.dimension1"
reference "org.apache.commons.math.DimensionMismatchException.DimensionMismatchException(2)" "org.apache.commons.math.DimensionMismatchException.dimension2"
contain "org.apache.commons.math.DimensionMismatchException" "org.apache.commons.math.DimensionMismatchException.DimensionMismatchException(2)"
reference "org.apache.commons.math.DimensionMismatchException.getDimension1(0)" "org.apache.commons.math.DimensionMismatchException.dimension1"
contain "org.apache.commons.math.DimensionMismatchException" "org.apache.commons.math.DimensionMismatchException.getDimension1(0)"
reference "org.apache.commons.math.DimensionMismatchException.getDimension2(0)" "org.apache.commons.math.DimensionMismatchException.dimension2"
contain "org.apache.commons.math.DimensionMismatchException" "org.apache.commons.math.DimensionMismatchException.getDimension2(0)"
contain "org.apache.commons.math.DimensionMismatchException" "org.apache.commons.math.DimensionMismatchException.serialVersionUID"
contain "org.apache.commons.math.DimensionMismatchException" "org.apache.commons.math.DimensionMismatchException.dimension1"
contain "org.apache.commons.math.DimensionMismatchException" "org.apache.commons.math.DimensionMismatchException.dimension2"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator" "double[][]"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator" "double[]"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.AbstractStepInterpolator"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.resetTables(1)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.polynoms"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.resetTables(1)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.errfac"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.resetTables(1)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.currentDegree"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.resetTables(1)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.currentState"
contain "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.resetTables(1)"
call "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(0)" "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(0)"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(0)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.y0Dot"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(0)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.y1"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(0)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.y1Dot"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(0)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.yMidDots"
call "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(0)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.resetTables(1)"
contain "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(6)" "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(2)"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(6)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.y0Dot"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(6)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.y1"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(6)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.y1Dot"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(6)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.yMidDots"
call "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(6)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.resetTables(1)"
contain "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(6)"
call "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(1)" "org.apache.commons.math.ode.AbstractStepInterpolator.AbstractStepInterpolator(1)"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(1)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.currentState"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(1)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.y0Dot"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(1)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.y1"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(1)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.y1Dot"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(1)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.yMidDots"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(1)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.polynoms"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(1)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.currentDegree"
call "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(1)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.resetTables(1)"
contain "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(1)"
call "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.clone(0)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(1)"
contain "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.clone(0)"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.computeCoefficients(2)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.polynoms"
call "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.computeCoefficients(2)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.resetTables(1)"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.computeCoefficients(2)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.currentDegree"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.computeCoefficients(2)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.currentState"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.computeCoefficients(2)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.y0Dot"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.computeCoefficients(2)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.y1Dot"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.computeCoefficients(2)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.y1"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.computeCoefficients(2)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.yMidDots"
contain "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.computeCoefficients(2)"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.estimateError(1)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.currentDegree"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.estimateError(1)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.currentState"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.estimateError(1)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.polynoms"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.estimateError(1)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.errfac"
contain "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.estimateError(1)"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.currentState"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.interpolatedState"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.polynoms"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.currentDegree"
contain "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.computeInterpolatedState(2)"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.currentState"
call "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.writeBaseExternal(1)"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.currentDegree"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.polynoms"
contain "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.writeExternal(1)"
call "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.readBaseExternal(1)"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.currentState"
call "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.resetTables(1)"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.currentDegree"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.polynoms"
call "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.DerivativeException.getMessage(0)"
contain "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.readExternal(1)"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.y0Dot" "double[]"
contain "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.y0Dot"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.y1" "double[]"
contain "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.y1"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.y1Dot" "double[]"
contain "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.y1Dot"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.yMidDots" "double[][]"
contain "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.yMidDots"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.polynoms" "double[][]"
contain "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.polynoms"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.errfac" "double[]"
contain "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.errfac"
contain "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.currentDegree"
contain "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.serialVersionUID"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.1" "org.apache.commons.math.optimization.PointCostPair"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer.1" "org.apache.commons.math.optimization.DirectSearchOptimizer.1.{...}"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.1.compare(2)" "org.apache.commons.math.optimization.PointCostPair.cost"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer.1" "org.apache.commons.math.optimization.DirectSearchOptimizer.1.compare(2)"
reference "org.apache.commons.math.ode.FirstOrderIntegratorFactory" "org.apache.commons.discovery.tools.DiscoverClass"
reference "org.apache.commons.math.ode.FirstOrderIntegratorFactory" "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactory" "org.apache.commons.math.ode.FirstOrderIntegratorFactory.FirstOrderIntegratorFactory(0)"
call "org.apache.commons.math.ode.FirstOrderIntegratorFactory.newInstance(0)" "org.apache.commons.discovery.tools.DiscoverClass.DiscoverClass(0)"
reference "org.apache.commons.math.ode.FirstOrderIntegratorFactory.newInstance(0)" "org.apache.commons.math.ode.FirstOrderIntegratorFactory.class$org$apache$commons$math$ode$FirstOrderIntegratorFactory"
call "org.apache.commons.math.ode.FirstOrderIntegratorFactory.newInstance(0)" "org.apache.commons.math.ode.FirstOrderIntegratorFactory.class$(1)"
call "org.apache.commons.math.ode.FirstOrderIntegratorFactory.newInstance(0)" "org.apache.commons.discovery.tools.DiscoverClass.newInstance(2)"
call "org.apache.commons.math.ode.FirstOrderIntegratorFactory.newInstance(0)" "org.apache.commons.math.ode.FirstOrderIntegratorFactoryImpl.FirstOrderIntegratorFactoryImpl(0)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactory" "org.apache.commons.math.ode.FirstOrderIntegratorFactory.newInstance(0)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactory" "org.apache.commons.math.ode.FirstOrderIntegratorFactory.newDefaultFixedStepsizeIntegrator(1)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactory" "org.apache.commons.math.ode.FirstOrderIntegratorFactory.newDefaultAdaptiveStepsizeIntegrator(4)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactory" "org.apache.commons.math.ode.FirstOrderIntegratorFactory.newDefaultAdaptiveStepsizeIntegrator(4)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactory" "org.apache.commons.math.ode.FirstOrderIntegratorFactory.newEulerIntegrator(1)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactory" "org.apache.commons.math.ode.FirstOrderIntegratorFactory.newMidpointIntegrator(1)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactory" "org.apache.commons.math.ode.FirstOrderIntegratorFactory.newClassicalRungeKuttaIntegrator(1)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactory" "org.apache.commons.math.ode.FirstOrderIntegratorFactory.newGillIntegrator(1)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactory" "org.apache.commons.math.ode.FirstOrderIntegratorFactory.newThreeEighthesIntegrator(1)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactory" "org.apache.commons.math.ode.FirstOrderIntegratorFactory.newHighamHall54Integrator(4)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactory" "org.apache.commons.math.ode.FirstOrderIntegratorFactory.newHighamHall54Integrator(4)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactory" "org.apache.commons.math.ode.FirstOrderIntegratorFactory.newDormandPrince54Integrator(4)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactory" "org.apache.commons.math.ode.FirstOrderIntegratorFactory.newDormandPrince54Integrator(4)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactory" "org.apache.commons.math.ode.FirstOrderIntegratorFactory.newDormandPrince853Integrator(4)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactory" "org.apache.commons.math.ode.FirstOrderIntegratorFactory.newDormandPrince853Integrator(4)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactory" "org.apache.commons.math.ode.FirstOrderIntegratorFactory.newGraggBulirschStoerIntegrator(4)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactory" "org.apache.commons.math.ode.FirstOrderIntegratorFactory.newGraggBulirschStoerIntegrator(4)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactory" "org.apache.commons.math.ode.FirstOrderIntegratorFactory.class$(1)"
contain "org.apache.commons.math.ode.FirstOrderIntegratorFactory" "org.apache.commons.math.ode.FirstOrderIntegratorFactory.class$org$apache$commons$math$ode$FirstOrderIntegratorFactory"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "double[]"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "double[][]"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.DummyStepInterpolator"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.StepHandler"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.SwitchingFunctionsHandler"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.FirstOrderDifferentialEquations"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.AbstractStepInterpolator"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(4)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.handler"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.StepHandler.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.switchesHandler"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.isEmpty(0)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.denseOutput"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setStabilityCheck(4)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setStepsizeControl(4)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setOrderControl(3)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setInterpolationControl(2)"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(4)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.handler"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.StepHandler.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.switchesHandler"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.isEmpty(0)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.denseOutput"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setStabilityCheck(4)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setStepsizeControl(4)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setOrderControl(3)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setInterpolationControl(2)"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setStabilityCheck(4)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.performTest"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setStabilityCheck(4)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.maxIter"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setStabilityCheck(4)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.maxChecks"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setStabilityCheck(4)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.stabilityReduction"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setStabilityCheck(4)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setStepsizeControl(4)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.stepControl1"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setStepsizeControl(4)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.stepControl2"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setStepsizeControl(4)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.stepControl3"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setStepsizeControl(4)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.stepControl4"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setStepsizeControl(4)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setOrderControl(3)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.maxOrder"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setOrderControl(3)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.orderControl1"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setOrderControl(3)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.orderControl2"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setOrderControl(3)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.initializeArrays(0)"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setOrderControl(3)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setStepHandler(1)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setStepHandler(1)" "org.apache.commons.math.ode.StepHandler.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setStepHandler(1)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.switchesHandler"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setStepHandler(1)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.isEmpty(0)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setStepHandler(1)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.denseOutput"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setStepHandler(1)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.initializeArrays(0)"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.addSwitchingFunction(3)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.addSwitchingFunction(3)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.addSwitchingFunction(3)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.handler"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.addSwitchingFunction(3)" "org.apache.commons.math.ode.StepHandler.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.addSwitchingFunction(3)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.switchesHandler"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.addSwitchingFunction(3)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.isEmpty(0)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.addSwitchingFunction(3)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.denseOutput"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.addSwitchingFunction(3)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.initializeArrays(0)"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.addSwitchingFunction(3)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.initializeArrays(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.maxOrder"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.initializeArrays(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.sequence"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.initializeArrays(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.costPerStep"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.initializeArrays(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.coeff"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.initializeArrays(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.costPerTimeUnit"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.initializeArrays(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.optimalStep"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.initializeArrays(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.denseOutput"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.initializeArrays(0)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setInterpolationControl(2)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.useInterpolationError"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setInterpolationControl(2)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.mudif"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setInterpolationControl(2)"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.getName(0)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.rescale(3)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.vecAbsoluteTolerance"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.rescale(3)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.scalAbsoluteTolerance"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.rescale(3)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.scalRelativeTolerance"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.rescale(3)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.vecRelativeTolerance"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.rescale(3)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.tryStep(10)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.sequence"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.tryStep(10)" "org.apache.commons.math.ode.FirstOrderDifferentialEquations.computeDerivatives(3)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.tryStep(10)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.performTest"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.tryStep(10)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.maxChecks"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.tryStep(10)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.maxIter"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.tryStep(10)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.extrapolate(4)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.coeff"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.extrapolate(4)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.FirstOrderDifferentialEquations.getDimension(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.IntegratorException.IntegratorException(2)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.sequence"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.denseOutput"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.rescale(3)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.vecRelativeTolerance"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.scalRelativeTolerance"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.switchesHandler"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.isEmpty(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(6)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.DummyStepInterpolator.DummyStepInterpolator(2)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.AbstractStepInterpolator.storeTime(1)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.handler"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.StepHandler.reset(0)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.costPerTimeUnit"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.AbstractStepInterpolator.shift(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.FirstOrderDifferentialEquations.computeDerivatives(3)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.initializeStep(9)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.tryStep(10)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.stabilityReduction"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.filterStep(2)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.extrapolate(4)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.stepControl2"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.stepControl1"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.stepControl3"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.stepControl4"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.optimalStep"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.costPerStep"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.orderControl1"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.getMaxStep(0)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.mudif"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.computeCoefficients(2)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.useInterpolationError"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator.estimateError(1)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.evaluateStep(1)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.getEventTime(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.stepAccepted(2)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.stop(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.StepHandler.handleStep(2)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.SwitchingFunctionsHandler.reset(2)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.orderControl2"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.methodName"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.maxOrder"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.sequence" "int[]"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.sequence"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.costPerStep" "int[]"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.costPerStep"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.costPerTimeUnit" "double[]"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.costPerTimeUnit"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.optimalStep" "double[]"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.optimalStep"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.coeff" "double[][]"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.coeff"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.performTest"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.maxChecks"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.maxIter"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.stabilityReduction"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.stepControl1"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.stepControl2"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.stepControl3"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.stepControl4"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.orderControl1"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.orderControl2"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.denseOutput"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.useInterpolationError"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.mudif"
contain "org.apache.commons.math.linear.QRDecomposition" "org.apache.commons.math.linear.QRDecomposition.getR(0)"
contain "org.apache.commons.math.linear.QRDecomposition" "org.apache.commons.math.linear.QRDecomposition.getQ(0)"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator" "double[]"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator" "org.apache.commons.math.random.RandomVectorGenerator"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator" "org.apache.commons.math.random.NormalizedRandomGenerator"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.UncorrelatedRandomVectorGenerator(3)" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.mean"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.UncorrelatedRandomVectorGenerator(3)" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.standardDeviation"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.UncorrelatedRandomVectorGenerator(3)" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.generator"
contain "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.UncorrelatedRandomVectorGenerator(3)"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.UncorrelatedRandomVectorGenerator(2)" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.mean"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.UncorrelatedRandomVectorGenerator(2)" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.standardDeviation"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.UncorrelatedRandomVectorGenerator(2)" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.generator"
contain "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.UncorrelatedRandomVectorGenerator(2)"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.nextVector(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.mean"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.nextVector(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.standardDeviation"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.nextVector(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.generator"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.nextVector(0)" "org.apache.commons.math.random.NormalizedRandomGenerator.nextNormalizedDouble(0)"
contain "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.nextVector(0)"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.mean" "double[]"
contain "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.mean"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.standardDeviation" "double[]"
contain "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.standardDeviation"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.generator" "org.apache.commons.math.random.NormalizedRandomGenerator"
contain "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.generator"
reference "org.apache.commons.math.distribution.ExponentialDistribution" "org.apache.commons.math.distribution.ContinuousDistribution"
contain "org.apache.commons.math.distribution.ExponentialDistribution" "org.apache.commons.math.distribution.ExponentialDistribution.setMean(1)"
contain "org.apache.commons.math.distribution.ExponentialDistribution" "org.apache.commons.math.distribution.ExponentialDistribution.getMean(0)"
reference "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl"
reference "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTest"
reference "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.distribution.ChiSquaredDistribution"
reference "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.distribution.DistributionFactory"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.ChiSquareTestImpl(0)" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.ChiSquaredDistributionImpl(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.ChiSquareTestImpl(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.ChiSquareTestImpl(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.ChiSquareTestImpl(0)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.ChiSquareTestImpl(1)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.setDistribution(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.ChiSquareTestImpl(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.isPositive(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.isNonNegative(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)"
reference "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(2)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.distribution"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(2)" "org.apache.commons.math.distribution.ChiSquaredDistribution.setDegreesOfFreedom(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(2)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(2)" "org.apache.commons.math.distribution.ChiSquaredDistribution.cumulativeProbability(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(3)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(2)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(3)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(1)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.checkArray(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(1)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.checkArray(1)"
reference "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(1)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.distribution"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(1)" "org.apache.commons.math.distribution.ChiSquaredDistribution.setDegreesOfFreedom(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(1)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(1)" "org.apache.commons.math.distribution.ChiSquaredDistribution.cumulativeProbability(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(2)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareDataSetsComparison(2)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.isNonNegative(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareDataSetsComparison(2)"
reference "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTestDataSetsComparison(2)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.distribution"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTestDataSetsComparison(2)" "org.apache.commons.math.distribution.ChiSquaredDistribution.setDegreesOfFreedom(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTestDataSetsComparison(2)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareDataSetsComparison(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTestDataSetsComparison(2)" "org.apache.commons.math.distribution.ChiSquaredDistribution.cumulativeProbability(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTestDataSetsComparison(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTestDataSetsComparison(3)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTestDataSetsComparison(2)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTestDataSetsComparison(3)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.checkArray(1)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.isRectangular(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.checkArray(1)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.isNonNegative(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.checkArray(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.getDistributionFactory(0)" "org.apache.commons.math.distribution.DistributionFactory.newInstance(0)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.getDistributionFactory(0)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.isRectangular(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.isPositive(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.isNonNegative(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.isNonNegative(1)"
reference "org.apache.commons.math.stat.inference.ChiSquareTestImpl.setDistribution(1)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.distribution"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.setDistribution(1)"
reference "org.apache.commons.math.stat.inference.ChiSquareTestImpl.distribution" "org.apache.commons.math.distribution.ChiSquaredDistribution"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.distribution"
reference "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.AbstractContinuousDistribution"
reference "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.GammaDistribution"
reference "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.special.Gamma"
call "org.apache.commons.math.distribution.GammaDistributionImpl.GammaDistributionImpl(2)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.AbstractContinuousDistribution(0)"
call "org.apache.commons.math.distribution.GammaDistributionImpl.GammaDistributionImpl(2)" "org.apache.commons.math.distribution.GammaDistributionImpl.setAlpha(1)"
call "org.apache.commons.math.distribution.GammaDistributionImpl.GammaDistributionImpl(2)" "org.apache.commons.math.distribution.GammaDistributionImpl.setBeta(1)"
contain "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.GammaDistributionImpl.GammaDistributionImpl(2)"
call "org.apache.commons.math.distribution.GammaDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.GammaDistributionImpl.getAlpha(0)"
call "org.apache.commons.math.distribution.GammaDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.GammaDistributionImpl.getBeta(0)"
call "org.apache.commons.math.distribution.GammaDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.special.Gamma.regularizedGammaP(2)"
contain "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.GammaDistributionImpl.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.GammaDistributionImpl.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.GammaDistributionImpl.inverseCumulativeProbability(1)"
reference "org.apache.commons.math.distribution.GammaDistributionImpl.setAlpha(1)" "org.apache.commons.math.distribution.GammaDistributionImpl.alpha"
contain "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.GammaDistributionImpl.setAlpha(1)"
reference "org.apache.commons.math.distribution.GammaDistributionImpl.getAlpha(0)" "org.apache.commons.math.distribution.GammaDistributionImpl.alpha"
contain "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.GammaDistributionImpl.getAlpha(0)"
reference "org.apache.commons.math.distribution.GammaDistributionImpl.setBeta(1)" "org.apache.commons.math.distribution.GammaDistributionImpl.beta"
contain "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.GammaDistributionImpl.setBeta(1)"
reference "org.apache.commons.math.distribution.GammaDistributionImpl.getBeta(0)" "org.apache.commons.math.distribution.GammaDistributionImpl.beta"
contain "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.GammaDistributionImpl.getBeta(0)"
contain "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.GammaDistributionImpl.getDomainLowerBound(1)"
call "org.apache.commons.math.distribution.GammaDistributionImpl.getDomainUpperBound(1)" "org.apache.commons.math.distribution.GammaDistributionImpl.getAlpha(0)"
call "org.apache.commons.math.distribution.GammaDistributionImpl.getDomainUpperBound(1)" "org.apache.commons.math.distribution.GammaDistributionImpl.getBeta(0)"
contain "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.GammaDistributionImpl.getDomainUpperBound(1)"
call "org.apache.commons.math.distribution.GammaDistributionImpl.getInitialDomain(1)" "org.apache.commons.math.distribution.GammaDistributionImpl.getAlpha(0)"
call "org.apache.commons.math.distribution.GammaDistributionImpl.getInitialDomain(1)" "org.apache.commons.math.distribution.GammaDistributionImpl.getBeta(0)"
contain "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.GammaDistributionImpl.getInitialDomain(1)"
contain "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.GammaDistributionImpl.serialVersionUID"
contain "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.GammaDistributionImpl.alpha"
contain "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.GammaDistributionImpl.beta"
contain "org.apache.commons.math.random.RandomData" "org.apache.commons.math.random.RandomData.nextHexString(1)"
contain "org.apache.commons.math.random.RandomData" "org.apache.commons.math.random.RandomData.nextInt(2)"
contain "org.apache.commons.math.random.RandomData" "org.apache.commons.math.random.RandomData.nextLong(2)"
contain "org.apache.commons.math.random.RandomData" "org.apache.commons.math.random.RandomData.nextSecureHexString(1)"
contain "org.apache.commons.math.random.RandomData" "org.apache.commons.math.random.RandomData.nextSecureInt(2)"
contain "org.apache.commons.math.random.RandomData" "org.apache.commons.math.random.RandomData.nextSecureLong(2)"
contain "org.apache.commons.math.random.RandomData" "org.apache.commons.math.random.RandomData.nextPoisson(1)"
contain "org.apache.commons.math.random.RandomData" "org.apache.commons.math.random.RandomData.nextGaussian(2)"
contain "org.apache.commons.math.random.RandomData" "org.apache.commons.math.random.RandomData.nextExponential(1)"
contain "org.apache.commons.math.random.RandomData" "org.apache.commons.math.random.RandomData.nextUniform(2)"
contain "org.apache.commons.math.random.RandomData" "org.apache.commons.math.random.RandomData.nextPermutation(2)"
contain "org.apache.commons.math.random.RandomData" "org.apache.commons.math.random.RandomData.nextSample(2)"
reference "org.apache.commons.math.estimation.EstimationException" "org.apache.commons.math.MathException"
call "org.apache.commons.math.estimation.EstimationException.EstimationException(2)" "org.apache.commons.math.MathException.MathException(2)"
contain "org.apache.commons.math.estimation.EstimationException" "org.apache.commons.math.estimation.EstimationException.EstimationException(2)"
call "org.apache.commons.math.estimation.EstimationException.EstimationException(1)" "org.apache.commons.math.MathException.MathException(1)"
contain "org.apache.commons.math.estimation.EstimationException" "org.apache.commons.math.estimation.EstimationException.EstimationException(1)"
contain "org.apache.commons.math.estimation.EstimationException" "org.apache.commons.math.estimation.EstimationException.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.summary.Sum"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.rank.Min"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.rank.Max"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.moment.GeometricMean"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.moment.SecondMoment"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.moment.Mean"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.moment.Variance"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.SummaryStatisticsImpl(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.SummaryStatisticsImpl(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.n"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.SummaryStatisticsImpl(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.secondMoment"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.SummaryStatisticsImpl(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.sum"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.SummaryStatisticsImpl(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.sumsq"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.SummaryStatisticsImpl(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.min"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.SummaryStatisticsImpl(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.max"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.SummaryStatisticsImpl(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.sumLog"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.SummaryStatisticsImpl(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.geoMean"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.SummaryStatisticsImpl(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.mean"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.SummaryStatisticsImpl(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.variance"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.SummaryStatisticsImpl(0)" "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.SummaryStatisticsImpl(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.SumOfSquares(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.SummaryStatisticsImpl(0)" "org.apache.commons.math.stat.descriptive.rank.Min.Min(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.SummaryStatisticsImpl(0)" "org.apache.commons.math.stat.descriptive.rank.Max.Max(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.SummaryStatisticsImpl(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.SumOfLogs(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.SummaryStatisticsImpl(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.GeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.SummaryStatisticsImpl(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.SecondMoment(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.SummaryStatisticsImpl(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.addValue(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.sum"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.addValue(1)" "org.apache.commons.math.stat.descriptive.summary.Sum.increment(1)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.addValue(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.sumsq"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.addValue(1)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.increment(1)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.addValue(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.min"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.addValue(1)" "org.apache.commons.math.stat.descriptive.rank.Min.increment(1)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.addValue(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.max"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.addValue(1)" "org.apache.commons.math.stat.descriptive.rank.Max.increment(1)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.addValue(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.sumLog"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.addValue(1)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.increment(1)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.addValue(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.geoMean"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.addValue(1)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.increment(1)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.addValue(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.secondMoment"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.addValue(1)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.increment(1)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.addValue(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.n"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.addValue(1)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getN(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.n"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getN(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getSum(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.sum"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getSum(0)" "org.apache.commons.math.stat.descriptive.summary.Sum.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getSum(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getSumsq(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.sumsq"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getSumsq(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getSumsq(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getMean(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.secondMoment"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getMean(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getMean(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getStandardDeviation(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getN(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getStandardDeviation(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getVariance(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getStandardDeviation(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getVariance(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.secondMoment"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getVariance(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getVariance(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getVariance(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getMax(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.max"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getMax(0)" "org.apache.commons.math.stat.descriptive.rank.Max.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getMax(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getMin(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.min"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getMin(0)" "org.apache.commons.math.stat.descriptive.rank.Min.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getMin(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getGeometricMean(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.geoMean"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getGeometricMean(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getGeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.toString(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getN(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.toString(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getMin(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.toString(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getMax(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.toString(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.toString(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getGeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.toString(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getVariance(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.toString(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getSumsq(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.toString(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.getStandardDeviation(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.toString(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.clear(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.n"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.clear(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.min"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.clear(0)" "org.apache.commons.math.stat.descriptive.rank.Min.clear(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.clear(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.max"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.clear(0)" "org.apache.commons.math.stat.descriptive.rank.Max.clear(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.clear(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.sum"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.clear(0)" "org.apache.commons.math.stat.descriptive.summary.Sum.clear(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.clear(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.sumLog"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.clear(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.clear(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.clear(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.sumsq"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.clear(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.clear(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.clear(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.geoMean"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.clear(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.clear(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.clear(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.secondMoment"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.clear(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.clear(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.clear(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.n"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.secondMoment" "org.apache.commons.math.stat.descriptive.moment.SecondMoment"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.secondMoment"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.sum" "org.apache.commons.math.stat.descriptive.summary.Sum"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.sum"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.sumsq" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.sumsq"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.min" "org.apache.commons.math.stat.descriptive.rank.Min"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.min"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.max" "org.apache.commons.math.stat.descriptive.rank.Max"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.max"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.sumLog" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.sumLog"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.geoMean" "org.apache.commons.math.stat.descriptive.moment.GeometricMean"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.geoMean"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.mean" "org.apache.commons.math.stat.descriptive.moment.Mean"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.mean"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.variance" "org.apache.commons.math.stat.descriptive.moment.Variance"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.variance"
reference "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.JDKRandomGenerator"
reference "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomData"
reference "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomGenerator"
reference "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(0)" "org.apache.commons.math.random.RandomDataImpl.rand"
reference "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(0)" "org.apache.commons.math.random.RandomDataImpl.secRand"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(0)"
reference "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(1)" "org.apache.commons.math.random.RandomDataImpl.rand"
reference "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(1)" "org.apache.commons.math.random.RandomDataImpl.secRand"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(1)"
call "org.apache.commons.math.random.RandomDataImpl.nextHexString(1)" "org.apache.commons.math.random.RandomDataImpl.getRan(0)"
call "org.apache.commons.math.random.RandomDataImpl.nextHexString(1)" "org.apache.commons.math.random.RandomGenerator.nextBytes(1)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.nextHexString(1)"
call "org.apache.commons.math.random.RandomDataImpl.nextInt(2)" "org.apache.commons.math.random.RandomDataImpl.getRan(0)"
call "org.apache.commons.math.random.RandomDataImpl.nextInt(2)" "org.apache.commons.math.random.RandomGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.nextInt(2)"
call "org.apache.commons.math.random.RandomDataImpl.nextLong(2)" "org.apache.commons.math.random.RandomDataImpl.getRan(0)"
call "org.apache.commons.math.random.RandomDataImpl.nextLong(2)" "org.apache.commons.math.random.RandomGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.nextLong(2)"
call "org.apache.commons.math.random.RandomDataImpl.nextSecureHexString(1)" "org.apache.commons.math.random.RandomDataImpl.getSecRan(0)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.nextSecureHexString(1)"
call "org.apache.commons.math.random.RandomDataImpl.nextSecureInt(2)" "org.apache.commons.math.random.RandomDataImpl.getSecRan(0)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.nextSecureInt(2)"
call "org.apache.commons.math.random.RandomDataImpl.nextSecureLong(2)" "org.apache.commons.math.random.RandomDataImpl.getSecRan(0)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.nextSecureLong(2)"
call "org.apache.commons.math.random.RandomDataImpl.nextPoisson(1)" "org.apache.commons.math.random.RandomDataImpl.getRan(0)"
call "org.apache.commons.math.random.RandomDataImpl.nextPoisson(1)" "org.apache.commons.math.random.RandomGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.nextPoisson(1)"
call "org.apache.commons.math.random.RandomDataImpl.nextGaussian(2)" "org.apache.commons.math.random.RandomDataImpl.getRan(0)"
call "org.apache.commons.math.random.RandomDataImpl.nextGaussian(2)" "org.apache.commons.math.random.RandomGenerator.nextGaussian(0)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.nextGaussian(2)"
call "org.apache.commons.math.random.RandomDataImpl.nextExponential(1)" "org.apache.commons.math.random.RandomDataImpl.getRan(0)"
call "org.apache.commons.math.random.RandomDataImpl.nextExponential(1)" "org.apache.commons.math.random.RandomGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.nextExponential(1)"
call "org.apache.commons.math.random.RandomDataImpl.nextUniform(2)" "org.apache.commons.math.random.RandomDataImpl.getRan(0)"
call "org.apache.commons.math.random.RandomDataImpl.nextUniform(2)" "org.apache.commons.math.random.RandomGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.nextUniform(2)"
reference "org.apache.commons.math.random.RandomDataImpl.getRan(0)" "org.apache.commons.math.random.RandomDataImpl.rand"
call "org.apache.commons.math.random.RandomDataImpl.getRan(0)" "org.apache.commons.math.random.JDKRandomGenerator.JDKRandomGenerator(0)"
call "org.apache.commons.math.random.RandomDataImpl.getRan(0)" "org.apache.commons.math.random.RandomGenerator.setSeed(1)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.getRan(0)"
reference "org.apache.commons.math.random.RandomDataImpl.getSecRan(0)" "org.apache.commons.math.random.RandomDataImpl.secRand"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.getSecRan(0)"
reference "org.apache.commons.math.random.RandomDataImpl.reSeed(1)" "org.apache.commons.math.random.RandomDataImpl.rand"
call "org.apache.commons.math.random.RandomDataImpl.reSeed(1)" "org.apache.commons.math.random.JDKRandomGenerator.JDKRandomGenerator(0)"
call "org.apache.commons.math.random.RandomDataImpl.reSeed(1)" "org.apache.commons.math.random.RandomGenerator.setSeed(1)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.reSeed(1)"
reference "org.apache.commons.math.random.RandomDataImpl.reSeedSecure(0)" "org.apache.commons.math.random.RandomDataImpl.secRand"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.reSeedSecure(0)"
reference "org.apache.commons.math.random.RandomDataImpl.reSeedSecure(1)" "org.apache.commons.math.random.RandomDataImpl.secRand"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.reSeedSecure(1)"
reference "org.apache.commons.math.random.RandomDataImpl.reSeed(0)" "org.apache.commons.math.random.RandomDataImpl.rand"
call "org.apache.commons.math.random.RandomDataImpl.reSeed(0)" "org.apache.commons.math.random.JDKRandomGenerator.JDKRandomGenerator(0)"
call "org.apache.commons.math.random.RandomDataImpl.reSeed(0)" "org.apache.commons.math.random.RandomGenerator.setSeed(1)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.reSeed(0)"
reference "org.apache.commons.math.random.RandomDataImpl.setSecureAlgorithm(2)" "org.apache.commons.math.random.RandomDataImpl.secRand"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.setSecureAlgorithm(2)"
call "org.apache.commons.math.random.RandomDataImpl.nextPermutation(2)" "org.apache.commons.math.random.RandomDataImpl.getNatural(1)"
call "org.apache.commons.math.random.RandomDataImpl.nextPermutation(2)" "org.apache.commons.math.random.RandomDataImpl.shuffle(2)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.nextPermutation(2)"
call "org.apache.commons.math.random.RandomDataImpl.nextSample(2)" "org.apache.commons.math.random.RandomDataImpl.nextPermutation(2)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.nextSample(2)"
call "org.apache.commons.math.random.RandomDataImpl.shuffle(2)" "org.apache.commons.math.random.RandomDataImpl.nextInt(2)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.shuffle(2)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.getNatural(1)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.serialVersionUID"
reference "org.apache.commons.math.random.RandomDataImpl.rand" "org.apache.commons.math.random.RandomGenerator"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.rand"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.secRand"
reference "org.apache.commons.math.special.Beta.1" "org.apache.commons.math.util.ContinuedFraction"
call "org.apache.commons.math.special.Beta.1.{...}" "org.apache.commons.math.util.ContinuedFraction.ContinuedFraction(0)"
reference "org.apache.commons.math.special.Beta.1.{...}" "org.apache.commons.math.special.Beta.1.val$b"
reference "org.apache.commons.math.special.Beta.1.{...}" "org.apache.commons.math.special.Beta.1.val$a"
contain "org.apache.commons.math.special.Beta.1" "org.apache.commons.math.special.Beta.1.{...}"
reference "org.apache.commons.math.special.Beta.1.getB(2)" "org.apache.commons.math.special.Beta.1.val$b"
reference "org.apache.commons.math.special.Beta.1.getB(2)" "org.apache.commons.math.special.Beta.1.val$a"
contain "org.apache.commons.math.special.Beta.1" "org.apache.commons.math.special.Beta.1.getB(2)"
contain "org.apache.commons.math.special.Beta.1" "org.apache.commons.math.special.Beta.1.getA(2)"
contain "org.apache.commons.math.special.Beta.1" "org.apache.commons.math.special.Beta.1.serialVersionUID"
contain "org.apache.commons.math.special.Beta.1" "org.apache.commons.math.special.Beta.1.val$b"
contain "org.apache.commons.math.special.Beta.1" "org.apache.commons.math.special.Beta.1.val$a"
reference "org.apache.commons.math.special.Gamma.1" "org.apache.commons.math.util.ContinuedFraction"
call "org.apache.commons.math.special.Gamma.1.{...}" "org.apache.commons.math.util.ContinuedFraction.ContinuedFraction(0)"
reference "org.apache.commons.math.special.Gamma.1.{...}" "org.apache.commons.math.special.Gamma.1.val$a"
contain "org.apache.commons.math.special.Gamma.1" "org.apache.commons.math.special.Gamma.1.{...}"
reference "org.apache.commons.math.special.Gamma.1.getA(2)" "org.apache.commons.math.special.Gamma.1.val$a"
contain "org.apache.commons.math.special.Gamma.1" "org.apache.commons.math.special.Gamma.1.getA(2)"
reference "org.apache.commons.math.special.Gamma.1.getB(2)" "org.apache.commons.math.special.Gamma.1.val$a"
contain "org.apache.commons.math.special.Gamma.1" "org.apache.commons.math.special.Gamma.1.getB(2)"
contain "org.apache.commons.math.special.Gamma.1" "org.apache.commons.math.special.Gamma.1.serialVersionUID"
contain "org.apache.commons.math.special.Gamma.1" "org.apache.commons.math.special.Gamma.1.val$a"
reference "org.apache.commons.math.estimation.Estimator" "org.apache.commons.math.estimation.EstimationException"
contain "org.apache.commons.math.estimation.Estimator" "org.apache.commons.math.estimation.Estimator.estimate(1)"
contain "org.apache.commons.math.estimation.Estimator" "org.apache.commons.math.estimation.Estimator.getRMS(1)"
reference "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.util.DefaultTransformer"
reference "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.util.NumberTransformer"
reference "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.util.TransformerMap.TransformerMap(0)" "org.apache.commons.math.util.TransformerMap.defaultTransformer"
reference "org.apache.commons.math.util.TransformerMap.TransformerMap(0)" "org.apache.commons.math.util.TransformerMap.map"
call "org.apache.commons.math.util.TransformerMap.TransformerMap(0)" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
contain "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.util.TransformerMap.TransformerMap(0)"
reference "org.apache.commons.math.util.TransformerMap.containsClass(1)" "org.apache.commons.math.util.TransformerMap.map"
contain "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.util.TransformerMap.containsClass(1)"
reference "org.apache.commons.math.util.TransformerMap.containsTransformer(1)" "org.apache.commons.math.util.TransformerMap.map"
contain "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.util.TransformerMap.containsTransformer(1)"
reference "org.apache.commons.math.util.TransformerMap.getTransformer(1)" "org.apache.commons.math.util.TransformerMap.map"
contain "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.util.TransformerMap.getTransformer(1)"
reference "org.apache.commons.math.util.TransformerMap.putTransformer(2)" "org.apache.commons.math.util.TransformerMap.map"
contain "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.util.TransformerMap.putTransformer(2)"
reference "org.apache.commons.math.util.TransformerMap.removeTransformer(1)" "org.apache.commons.math.util.TransformerMap.map"
contain "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.util.TransformerMap.removeTransformer(1)"
reference "org.apache.commons.math.util.TransformerMap.clear(0)" "org.apache.commons.math.util.TransformerMap.map"
contain "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.util.TransformerMap.clear(0)"
reference "org.apache.commons.math.util.TransformerMap.classes(0)" "org.apache.commons.math.util.TransformerMap.map"
contain "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.util.TransformerMap.classes(0)"
reference "org.apache.commons.math.util.TransformerMap.transformers(0)" "org.apache.commons.math.util.TransformerMap.map"
contain "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.util.TransformerMap.transformers(0)"
reference "org.apache.commons.math.util.TransformerMap.transform(1)" "org.apache.commons.math.util.TransformerMap.defaultTransformer"
call "org.apache.commons.math.util.TransformerMap.transform(1)" "org.apache.commons.math.util.NumberTransformer.transform(1)"
call "org.apache.commons.math.util.TransformerMap.transform(1)" "org.apache.commons.math.util.TransformerMap.getTransformer(1)"
contain "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.util.TransformerMap.transform(1)"
contain "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.util.TransformerMap.serialVersionUID"
reference "org.apache.commons.math.util.TransformerMap.defaultTransformer" "org.apache.commons.math.util.NumberTransformer"
contain "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.util.TransformerMap.defaultTransformer"
contain "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.util.TransformerMap.map"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl" "org.apache.commons.math.analysis.BisectionSolver"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl" "org.apache.commons.math.analysis.BrentSolver"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl" "org.apache.commons.math.analysis.NewtonSolver"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl" "org.apache.commons.math.analysis.SecantSolver"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl" "org.apache.commons.math.analysis.UnivariateRealSolverFactory"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl.UnivariateRealSolverFactoryImpl(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.UnivariateRealSolverFactory(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl.UnivariateRealSolverFactoryImpl(0)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl.newDefaultSolver(1)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl.newBrentSolver(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl.newDefaultSolver(1)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl.newBisectionSolver(1)" "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl.newBisectionSolver(1)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl.newBrentSolver(1)" "org.apache.commons.math.analysis.BrentSolver.BrentSolver(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl.newBrentSolver(1)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl.newNewtonSolver(1)" "org.apache.commons.math.analysis.NewtonSolver.NewtonSolver(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl.newNewtonSolver(1)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl.newSecantSolver(1)" "org.apache.commons.math.analysis.SecantSolver.SecantSolver(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl.newSecantSolver(1)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMean" "org.apache.commons.math.stat.descriptive.moment.Mean"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMean" "org.apache.commons.math.DimensionMismatchException"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMean.VectorialMean(1)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.means"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMean.VectorialMean(1)" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialMean" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.VectorialMean(1)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMean.increment(1)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.means"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMean.increment(1)" "org.apache.commons.math.DimensionMismatchException.DimensionMismatchException(2)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMean.increment(1)" "org.apache.commons.math.stat.descriptive.moment.Mean.increment(1)"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialMean" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.increment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMean.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.means"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMean.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialMean" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMean.getN(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.means"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMean.getN(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.getN(0)"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialMean" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.getN(0)"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialMean" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMean.means" "org.apache.commons.math.stat.descriptive.moment.Mean[]"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialMean" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.means"
reference "org.apache.commons.math.analysis.UnivariateRealIntegrator" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.analysis.UnivariateRealIntegrator" "org.apache.commons.math.FunctionEvaluationException"
contain "org.apache.commons.math.analysis.UnivariateRealIntegrator" "org.apache.commons.math.analysis.UnivariateRealIntegrator.setMaximalIterationCount(1)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegrator" "org.apache.commons.math.analysis.UnivariateRealIntegrator.getMaximalIterationCount(0)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegrator" "org.apache.commons.math.analysis.UnivariateRealIntegrator.resetMaximalIterationCount(0)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegrator" "org.apache.commons.math.analysis.UnivariateRealIntegrator.setMinimalIterationCount(1)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegrator" "org.apache.commons.math.analysis.UnivariateRealIntegrator.getMinimalIterationCount(0)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegrator" "org.apache.commons.math.analysis.UnivariateRealIntegrator.resetMinimalIterationCount(0)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegrator" "org.apache.commons.math.analysis.UnivariateRealIntegrator.setRelativeAccuracy(1)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegrator" "org.apache.commons.math.analysis.UnivariateRealIntegrator.getRelativeAccuracy(0)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegrator" "org.apache.commons.math.analysis.UnivariateRealIntegrator.resetRelativeAccuracy(0)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegrator" "org.apache.commons.math.analysis.UnivariateRealIntegrator.integrate(2)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegrator" "org.apache.commons.math.analysis.UnivariateRealIntegrator.getResult(0)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegrator" "org.apache.commons.math.analysis.UnivariateRealIntegrator.getIterationCount(0)"
reference "org.apache.commons.math.ode.SwitchState" "org.apache.commons.math.ode.SwitchingFunction"
reference "org.apache.commons.math.ode.SwitchState" "org.apache.commons.math.analysis.BrentSolver"
reference "org.apache.commons.math.ode.SwitchState" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.ode.SwitchState" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.SwitchState" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.ode.SwitchState" "org.apache.commons.math.ode.StepInterpolator"
reference "org.apache.commons.math.ode.SwitchState" "org.apache.commons.math.analysis.UnivariateRealSolver"
reference "org.apache.commons.math.ode.SwitchState.SwitchState(3)" "org.apache.commons.math.ode.SwitchState.function"
reference "org.apache.commons.math.ode.SwitchState.SwitchState(3)" "org.apache.commons.math.ode.SwitchState.maxCheckInterval"
reference "org.apache.commons.math.ode.SwitchState.SwitchState(3)" "org.apache.commons.math.ode.SwitchState.convergence"
reference "org.apache.commons.math.ode.SwitchState.SwitchState(3)" "org.apache.commons.math.ode.SwitchState.t0"
reference "org.apache.commons.math.ode.SwitchState.SwitchState(3)" "org.apache.commons.math.ode.SwitchState.g0"
reference "org.apache.commons.math.ode.SwitchState.SwitchState(3)" "org.apache.commons.math.ode.SwitchState.g0Positive"
reference "org.apache.commons.math.ode.SwitchState.SwitchState(3)" "org.apache.commons.math.ode.SwitchState.pendingEvent"
reference "org.apache.commons.math.ode.SwitchState.SwitchState(3)" "org.apache.commons.math.ode.SwitchState.pendingEventTime"
reference "org.apache.commons.math.ode.SwitchState.SwitchState(3)" "org.apache.commons.math.ode.SwitchState.previousEventTime"
reference "org.apache.commons.math.ode.SwitchState.SwitchState(3)" "org.apache.commons.math.ode.SwitchState.increasing"
reference "org.apache.commons.math.ode.SwitchState.SwitchState(3)" "org.apache.commons.math.ode.SwitchState.nextAction"
contain "org.apache.commons.math.ode.SwitchState" "org.apache.commons.math.ode.SwitchState.SwitchState(3)"
reference "org.apache.commons.math.ode.SwitchState.reinitializeBegin(2)" "org.apache.commons.math.ode.SwitchState.t0"
reference "org.apache.commons.math.ode.SwitchState.reinitializeBegin(2)" "org.apache.commons.math.ode.SwitchState.function"
call "org.apache.commons.math.ode.SwitchState.reinitializeBegin(2)" "org.apache.commons.math.ode.SwitchingFunction.g(2)"
reference "org.apache.commons.math.ode.SwitchState.reinitializeBegin(2)" "org.apache.commons.math.ode.SwitchState.g0"
reference "org.apache.commons.math.ode.SwitchState.reinitializeBegin(2)" "org.apache.commons.math.ode.SwitchState.g0Positive"
contain "org.apache.commons.math.ode.SwitchState" "org.apache.commons.math.ode.SwitchState.reinitializeBegin(2)"
call "org.apache.commons.math.ode.SwitchState.evaluateStep(1)" "org.apache.commons.math.ode.StepInterpolator.getCurrentTime(0)"
reference "org.apache.commons.math.ode.SwitchState.evaluateStep(1)" "org.apache.commons.math.ode.SwitchState.t0"
reference "org.apache.commons.math.ode.SwitchState.evaluateStep(1)" "org.apache.commons.math.ode.SwitchState.maxCheckInterval"
reference "org.apache.commons.math.ode.SwitchState.evaluateStep(1)" "org.apache.commons.math.ode.SwitchState.g0"
reference "org.apache.commons.math.ode.SwitchState.evaluateStep(1)" "org.apache.commons.math.ode.SwitchState.convergence"
call "org.apache.commons.math.ode.SwitchState.evaluateStep(1)" "org.apache.commons.math.ode.StepInterpolator.setInterpolatedTime(1)"
reference "org.apache.commons.math.ode.SwitchState.evaluateStep(1)" "org.apache.commons.math.ode.SwitchState.function"
call "org.apache.commons.math.ode.SwitchState.evaluateStep(1)" "org.apache.commons.math.ode.StepInterpolator.getInterpolatedState(0)"
call "org.apache.commons.math.ode.SwitchState.evaluateStep(1)" "org.apache.commons.math.ode.SwitchingFunction.g(2)"
reference "org.apache.commons.math.ode.SwitchState.evaluateStep(1)" "org.apache.commons.math.ode.SwitchState.g0Positive"
reference "org.apache.commons.math.ode.SwitchState.evaluateStep(1)" "org.apache.commons.math.ode.SwitchState.increasing"
call "org.apache.commons.math.ode.SwitchState.evaluateStep(1)" "org.apache.commons.math.ode.SwitchState.1.{...}"
call "org.apache.commons.math.ode.SwitchState.evaluateStep(1)" "org.apache.commons.math.analysis.BrentSolver.BrentSolver(1)"
call "org.apache.commons.math.ode.SwitchState.evaluateStep(1)" "org.apache.commons.math.analysis.UnivariateRealSolver.setAbsoluteAccuracy(1)"
call "org.apache.commons.math.ode.SwitchState.evaluateStep(1)" "org.apache.commons.math.analysis.UnivariateRealSolver.setMaximalIterationCount(1)"
call "org.apache.commons.math.ode.SwitchState.evaluateStep(1)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
reference "org.apache.commons.math.ode.SwitchState.evaluateStep(1)" "org.apache.commons.math.ode.SwitchState.previousEventTime"
reference "org.apache.commons.math.ode.SwitchState.evaluateStep(1)" "org.apache.commons.math.ode.SwitchState.pendingEventTime"
reference "org.apache.commons.math.ode.SwitchState.evaluateStep(1)" "org.apache.commons.math.ode.SwitchState.pendingEvent"
call "org.apache.commons.math.ode.SwitchState.evaluateStep(1)" "org.apache.commons.math.ode.DerivativeException.getMessage(0)"
call "org.apache.commons.math.ode.SwitchState.evaluateStep(1)" "org.apache.commons.math.FunctionEvaluationException.getMessage(0)"
contain "org.apache.commons.math.ode.SwitchState" "org.apache.commons.math.ode.SwitchState.evaluateStep(1)"
reference "org.apache.commons.math.ode.SwitchState.getEventTime(0)" "org.apache.commons.math.ode.SwitchState.pendingEventTime"
contain "org.apache.commons.math.ode.SwitchState" "org.apache.commons.math.ode.SwitchState.getEventTime(0)"
reference "org.apache.commons.math.ode.SwitchState.stepAccepted(2)" "org.apache.commons.math.ode.SwitchState.t0"
reference "org.apache.commons.math.ode.SwitchState.stepAccepted(2)" "org.apache.commons.math.ode.SwitchState.function"
call "org.apache.commons.math.ode.SwitchState.stepAccepted(2)" "org.apache.commons.math.ode.SwitchingFunction.g(2)"
reference "org.apache.commons.math.ode.SwitchState.stepAccepted(2)" "org.apache.commons.math.ode.SwitchState.g0"
reference "org.apache.commons.math.ode.SwitchState.stepAccepted(2)" "org.apache.commons.math.ode.SwitchState.pendingEvent"
reference "org.apache.commons.math.ode.SwitchState.stepAccepted(2)" "org.apache.commons.math.ode.SwitchState.previousEventTime"
reference "org.apache.commons.math.ode.SwitchState.stepAccepted(2)" "org.apache.commons.math.ode.SwitchState.increasing"
reference "org.apache.commons.math.ode.SwitchState.stepAccepted(2)" "org.apache.commons.math.ode.SwitchState.g0Positive"
call "org.apache.commons.math.ode.SwitchState.stepAccepted(2)" "org.apache.commons.math.ode.SwitchingFunction.eventOccurred(2)"
reference "org.apache.commons.math.ode.SwitchState.stepAccepted(2)" "org.apache.commons.math.ode.SwitchState.nextAction"
contain "org.apache.commons.math.ode.SwitchState" "org.apache.commons.math.ode.SwitchState.stepAccepted(2)"
reference "org.apache.commons.math.ode.SwitchState.stop(0)" "org.apache.commons.math.ode.SwitchState.nextAction"
contain "org.apache.commons.math.ode.SwitchState" "org.apache.commons.math.ode.SwitchState.stop(0)"
reference "org.apache.commons.math.ode.SwitchState.reset(2)" "org.apache.commons.math.ode.SwitchState.pendingEvent"
reference "org.apache.commons.math.ode.SwitchState.reset(2)" "org.apache.commons.math.ode.SwitchState.nextAction"
reference "org.apache.commons.math.ode.SwitchState.reset(2)" "org.apache.commons.math.ode.SwitchState.function"
call "org.apache.commons.math.ode.SwitchState.reset(2)" "org.apache.commons.math.ode.SwitchingFunction.resetState(2)"
reference "org.apache.commons.math.ode.SwitchState.reset(2)" "org.apache.commons.math.ode.SwitchState.pendingEventTime"
contain "org.apache.commons.math.ode.SwitchState" "org.apache.commons.math.ode.SwitchState.reset(2)"
reference "org.apache.commons.math.ode.SwitchState.access$000(1)" "org.apache.commons.math.ode.SwitchState.function"
contain "org.apache.commons.math.ode.SwitchState" "org.apache.commons.math.ode.SwitchState.access$000(1)"
contain "org.apache.commons.math.ode.SwitchState" "org.apache.commons.math.ode.SwitchState.serialVersionUID"
reference "org.apache.commons.math.ode.SwitchState.function" "org.apache.commons.math.ode.SwitchingFunction"
contain "org.apache.commons.math.ode.SwitchState" "org.apache.commons.math.ode.SwitchState.function"
contain "org.apache.commons.math.ode.SwitchState" "org.apache.commons.math.ode.SwitchState.maxCheckInterval"
contain "org.apache.commons.math.ode.SwitchState" "org.apache.commons.math.ode.SwitchState.convergence"
contain "org.apache.commons.math.ode.SwitchState" "org.apache.commons.math.ode.SwitchState.t0"
contain "org.apache.commons.math.ode.SwitchState" "org.apache.commons.math.ode.SwitchState.g0"
contain "org.apache.commons.math.ode.SwitchState" "org.apache.commons.math.ode.SwitchState.g0Positive"
contain "org.apache.commons.math.ode.SwitchState" "org.apache.commons.math.ode.SwitchState.pendingEvent"
contain "org.apache.commons.math.ode.SwitchState" "org.apache.commons.math.ode.SwitchState.pendingEventTime"
contain "org.apache.commons.math.ode.SwitchState" "org.apache.commons.math.ode.SwitchState.previousEventTime"
contain "org.apache.commons.math.ode.SwitchState" "org.apache.commons.math.ode.SwitchState.increasing"
contain "org.apache.commons.math.ode.SwitchState" "org.apache.commons.math.ode.SwitchState.nextAction"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance" "org.apache.commons.math.DimensionMismatchException"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance" "org.apache.commons.math.linear.RealMatrixImpl"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.VectorialCovariance(1)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.sums"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.VectorialCovariance(1)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.productsSums"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.VectorialCovariance(1)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.n"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.VectorialCovariance(1)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.increment(1)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.sums"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.increment(1)" "org.apache.commons.math.DimensionMismatchException.DimensionMismatchException(2)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.increment(1)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.productsSums"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.increment(1)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.n"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.increment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.sums"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.getResult(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.n"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.getResult(0)" "org.apache.commons.math.linear.RealMatrixImpl.getDataRef(0)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.productsSums"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.getN(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.n"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.getN(0)"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.sums" "double[]"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.sums"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.productsSums" "double[]"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.productsSums"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.n"
reference "org.apache.commons.math.transform.FastCosineTransformer" "org.apache.commons.math.transform.FastFourierTransformer"
reference "org.apache.commons.math.transform.FastCosineTransformer" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.transform.FastCosineTransformer" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.transform.FastCosineTransformer" "org.apache.commons.math.transform.FastCosineTransformer.FastCosineTransformer(0)"
call "org.apache.commons.math.transform.FastCosineTransformer.transform(1)" "org.apache.commons.math.transform.FastCosineTransformer.fct(1)"
contain "org.apache.commons.math.transform.FastCosineTransformer" "org.apache.commons.math.transform.FastCosineTransformer.transform(1)"
call "org.apache.commons.math.transform.FastCosineTransformer.transform(4)" "org.apache.commons.math.transform.FastFourierTransformer.sample(4)"
call "org.apache.commons.math.transform.FastCosineTransformer.transform(4)" "org.apache.commons.math.transform.FastCosineTransformer.fct(1)"
contain "org.apache.commons.math.transform.FastCosineTransformer" "org.apache.commons.math.transform.FastCosineTransformer.transform(4)"
call "org.apache.commons.math.transform.FastCosineTransformer.transform2(1)" "org.apache.commons.math.transform.FastCosineTransformer.fct(1)"
call "org.apache.commons.math.transform.FastCosineTransformer.transform2(1)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastCosineTransformer" "org.apache.commons.math.transform.FastCosineTransformer.transform2(1)"
call "org.apache.commons.math.transform.FastCosineTransformer.transform2(4)" "org.apache.commons.math.transform.FastFourierTransformer.sample(4)"
call "org.apache.commons.math.transform.FastCosineTransformer.transform2(4)" "org.apache.commons.math.transform.FastCosineTransformer.fct(1)"
call "org.apache.commons.math.transform.FastCosineTransformer.transform2(4)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastCosineTransformer" "org.apache.commons.math.transform.FastCosineTransformer.transform2(4)"
call "org.apache.commons.math.transform.FastCosineTransformer.inversetransform(1)" "org.apache.commons.math.transform.FastCosineTransformer.fct(1)"
call "org.apache.commons.math.transform.FastCosineTransformer.inversetransform(1)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastCosineTransformer" "org.apache.commons.math.transform.FastCosineTransformer.inversetransform(1)"
call "org.apache.commons.math.transform.FastCosineTransformer.inversetransform(4)" "org.apache.commons.math.transform.FastFourierTransformer.sample(4)"
call "org.apache.commons.math.transform.FastCosineTransformer.inversetransform(4)" "org.apache.commons.math.transform.FastCosineTransformer.fct(1)"
call "org.apache.commons.math.transform.FastCosineTransformer.inversetransform(4)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastCosineTransformer" "org.apache.commons.math.transform.FastCosineTransformer.inversetransform(4)"
call "org.apache.commons.math.transform.FastCosineTransformer.inversetransform2(1)" "org.apache.commons.math.transform.FastCosineTransformer.transform2(1)"
contain "org.apache.commons.math.transform.FastCosineTransformer" "org.apache.commons.math.transform.FastCosineTransformer.inversetransform2(1)"
call "org.apache.commons.math.transform.FastCosineTransformer.inversetransform2(4)" "org.apache.commons.math.transform.FastCosineTransformer.transform2(4)"
contain "org.apache.commons.math.transform.FastCosineTransformer" "org.apache.commons.math.transform.FastCosineTransformer.inversetransform2(4)"
call "org.apache.commons.math.transform.FastCosineTransformer.fct(1)" "org.apache.commons.math.transform.FastFourierTransformer.isPowerOf2(1)"
call "org.apache.commons.math.transform.FastCosineTransformer.fct(1)" "org.apache.commons.math.transform.FastFourierTransformer.FastFourierTransformer(0)"
call "org.apache.commons.math.transform.FastCosineTransformer.fct(1)" "org.apache.commons.math.transform.FastFourierTransformer.transform(1)"
call "org.apache.commons.math.transform.FastCosineTransformer.fct(1)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.transform.FastCosineTransformer.fct(1)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
contain "org.apache.commons.math.transform.FastCosineTransformer" "org.apache.commons.math.transform.FastCosineTransformer.fct(1)"
contain "org.apache.commons.math.transform.FastCosineTransformer" "org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID"
reference "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.FunctionEvaluationException"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.setMaximalIterationCount(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.getMaximalIterationCount(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.resetMaximalIterationCount(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.setAbsoluteAccuracy(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.resetAbsoluteAccuracy(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.setRelativeAccuracy(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.getRelativeAccuracy(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.resetRelativeAccuracy(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.setFunctionValueAccuracy(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.getFunctionValueAccuracy(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.resetFunctionValueAccuracy(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(3)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.getResult(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.getIterationCount(0)"
reference "org.apache.commons.math.estimation.WeightedMeasurement.WeightedMeasurement(2)" "org.apache.commons.math.estimation.WeightedMeasurement.weight"
reference "org.apache.commons.math.estimation.WeightedMeasurement.WeightedMeasurement(2)" "org.apache.commons.math.estimation.WeightedMeasurement.measuredValue"
reference "org.apache.commons.math.estimation.WeightedMeasurement.WeightedMeasurement(2)" "org.apache.commons.math.estimation.WeightedMeasurement.ignored"
contain "org.apache.commons.math.estimation.WeightedMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement.WeightedMeasurement(2)"
reference "org.apache.commons.math.estimation.WeightedMeasurement.WeightedMeasurement(3)" "org.apache.commons.math.estimation.WeightedMeasurement.weight"
reference "org.apache.commons.math.estimation.WeightedMeasurement.WeightedMeasurement(3)" "org.apache.commons.math.estimation.WeightedMeasurement.measuredValue"
reference "org.apache.commons.math.estimation.WeightedMeasurement.WeightedMeasurement(3)" "org.apache.commons.math.estimation.WeightedMeasurement.ignored"
contain "org.apache.commons.math.estimation.WeightedMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement.WeightedMeasurement(3)"
reference "org.apache.commons.math.estimation.WeightedMeasurement.getWeight(0)" "org.apache.commons.math.estimation.WeightedMeasurement.weight"
contain "org.apache.commons.math.estimation.WeightedMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement.getWeight(0)"
reference "org.apache.commons.math.estimation.WeightedMeasurement.getMeasuredValue(0)" "org.apache.commons.math.estimation.WeightedMeasurement.measuredValue"
contain "org.apache.commons.math.estimation.WeightedMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement.getMeasuredValue(0)"
reference "org.apache.commons.math.estimation.WeightedMeasurement.getResidual(0)" "org.apache.commons.math.estimation.WeightedMeasurement.measuredValue"
call "org.apache.commons.math.estimation.WeightedMeasurement.getResidual(0)" "org.apache.commons.math.estimation.WeightedMeasurement.getTheoreticalValue(0)"
contain "org.apache.commons.math.estimation.WeightedMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement.getResidual(0)"
contain "org.apache.commons.math.estimation.WeightedMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement.getTheoreticalValue(0)"
contain "org.apache.commons.math.estimation.WeightedMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement.getPartial(1)"
reference "org.apache.commons.math.estimation.WeightedMeasurement.setIgnored(1)" "org.apache.commons.math.estimation.WeightedMeasurement.ignored"
contain "org.apache.commons.math.estimation.WeightedMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement.setIgnored(1)"
reference "org.apache.commons.math.estimation.WeightedMeasurement.isIgnored(0)" "org.apache.commons.math.estimation.WeightedMeasurement.ignored"
contain "org.apache.commons.math.estimation.WeightedMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement.isIgnored(0)"
contain "org.apache.commons.math.estimation.WeightedMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement.weight"
contain "org.apache.commons.math.estimation.WeightedMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement.measuredValue"
contain "org.apache.commons.math.estimation.WeightedMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement.ignored"
reference "org.apache.commons.math.distribution.DiscreteDistribution" "org.apache.commons.math.distribution.Distribution"
contain "org.apache.commons.math.distribution.DiscreteDistribution" "org.apache.commons.math.distribution.DiscreteDistribution.probability(1)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolver"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealFunction"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resultComputed"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.f"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.defaultAbsoluteAccuracy"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.defaultRelativeAccuracy"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.defaultFunctionValueAccuracy"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.absoluteAccuracy"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.relativeAccuracy"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.functionValueAccuracy"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.defaultMaximalIterationCount"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.maximalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.getResult(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resultComputed"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.getResult(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.result"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.getResult(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.getIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resultComputed"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.getIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.iterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.getIterationCount(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.setResult(2)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.result"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.setResult(2)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.iterationCount"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.setResult(2)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resultComputed"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.setResult(2)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.clearResult(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resultComputed"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.clearResult(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.setAbsoluteAccuracy(1)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.absoluteAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.setAbsoluteAccuracy(1)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.getAbsoluteAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.absoluteAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.getAbsoluteAccuracy(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resetAbsoluteAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.defaultAbsoluteAccuracy"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resetAbsoluteAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.absoluteAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resetAbsoluteAccuracy(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.setMaximalIterationCount(1)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.maximalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.setMaximalIterationCount(1)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.getMaximalIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.maximalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.getMaximalIterationCount(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resetMaximalIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.defaultMaximalIterationCount"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resetMaximalIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.maximalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resetMaximalIterationCount(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.setRelativeAccuracy(1)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.relativeAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.setRelativeAccuracy(1)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.getRelativeAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.relativeAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.getRelativeAccuracy(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resetRelativeAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.defaultRelativeAccuracy"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resetRelativeAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.relativeAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resetRelativeAccuracy(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.setFunctionValueAccuracy(1)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.functionValueAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.setFunctionValueAccuracy(1)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.getFunctionValueAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.functionValueAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.getFunctionValueAccuracy(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resetFunctionValueAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.defaultFunctionValueAccuracy"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resetFunctionValueAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.functionValueAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resetFunctionValueAccuracy(0)"
call "org.apache.commons.math.analysis.UnivariateRealSolverImpl.isBracketing(3)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.isBracketing(3)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.isSequence(3)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.verifyInterval(2)"
call "org.apache.commons.math.analysis.UnivariateRealSolverImpl.verifySequence(3)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.isSequence(3)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.verifySequence(3)"
call "org.apache.commons.math.analysis.UnivariateRealSolverImpl.verifyBracketing(3)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.verifyInterval(2)"
call "org.apache.commons.math.analysis.UnivariateRealSolverImpl.verifyBracketing(3)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.isBracketing(3)"
call "org.apache.commons.math.analysis.UnivariateRealSolverImpl.verifyBracketing(3)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.verifyBracketing(3)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.serialVersionUID"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.absoluteAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.relativeAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.functionValueAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.maximalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.defaultAbsoluteAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.defaultRelativeAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.defaultFunctionValueAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.defaultMaximalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resultComputed"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.result"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.iterationCount"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.f" "org.apache.commons.math.analysis.UnivariateRealFunction"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.f"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.discovery.tools.DiscoverClass"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.moment.Mean"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.moment.GeometricMean"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.moment.Variance"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.moment.Skewness"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.moment.Kurtosis"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.rank.Max"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.rank.Min"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.summary.Sum"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.rank.Percentile"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.StatisticalSummary"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance(0)" "org.apache.commons.discovery.tools.DiscoverClass.DiscoverClass(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.class$org$apache$commons$math$stat$descriptive$DescriptiveStatistics"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.class$(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance(0)" "org.apache.commons.discovery.tools.DiscoverClass.newInstance(2)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl.DescriptiveStatisticsImpl(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.apply(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getGeometricMean(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.GeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getGeometricMean(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.apply(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getGeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVariance(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVariance(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.apply(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVariance(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getStandardDeviation(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getN(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getStandardDeviation(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVariance(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getStandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSkewness(0)" "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSkewness(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.apply(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSkewness(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getKurtosis(0)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getKurtosis(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.apply(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getKurtosis(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMax(0)" "org.apache.commons.math.stat.descriptive.rank.Max.Max(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMax(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.apply(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMax(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMin(0)" "org.apache.commons.math.stat.descriptive.rank.Min.Min(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMin(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.apply(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMin(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getN(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSum(0)" "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSum(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.apply(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSum(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSumsq(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.SumOfSquares(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSumsq(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.apply(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSumsq(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.clear(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getWindowSize(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setWindowSize(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getValues(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSortedValues(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getValues(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSortedValues(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getElement(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getPercentile(1)" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getPercentile(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.apply(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getPercentile(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getN(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMin(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMax(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getStandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getPercentile(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSkewness(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getKurtosis(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.toString(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.apply(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.class$(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.INFINITE_WINDOW"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.class$org$apache$commons$math$stat$descriptive$DescriptiveStatistics"
reference "org.apache.commons.math.ode.StepInterpolator" "org.apache.commons.math.ode.DerivativeException"
contain "org.apache.commons.math.ode.StepInterpolator" "org.apache.commons.math.ode.StepInterpolator.getPreviousTime(0)"
contain "org.apache.commons.math.ode.StepInterpolator" "org.apache.commons.math.ode.StepInterpolator.getCurrentTime(0)"
contain "org.apache.commons.math.ode.StepInterpolator" "org.apache.commons.math.ode.StepInterpolator.getInterpolatedTime(0)"
contain "org.apache.commons.math.ode.StepInterpolator" "org.apache.commons.math.ode.StepInterpolator.setInterpolatedTime(1)"
contain "org.apache.commons.math.ode.StepInterpolator" "org.apache.commons.math.ode.StepInterpolator.getInterpolatedState(0)"
contain "org.apache.commons.math.ode.StepInterpolator" "org.apache.commons.math.ode.StepInterpolator.isForward(0)"
reference "org.apache.commons.math.analysis.BrentSolver" "org.apache.commons.math.MaxIterationsExceededException"
reference "org.apache.commons.math.analysis.BrentSolver" "org.apache.commons.math.analysis.UnivariateRealSolverImpl"
reference "org.apache.commons.math.analysis.BrentSolver" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.BrentSolver" "org.apache.commons.math.analysis.UnivariateRealFunction"
call "org.apache.commons.math.analysis.BrentSolver.BrentSolver(1)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)"
contain "org.apache.commons.math.analysis.BrentSolver" "org.apache.commons.math.analysis.BrentSolver.BrentSolver(1)"
reference "org.apache.commons.math.analysis.BrentSolver.solve(3)" "org.apache.commons.math.analysis.BrentSolver.f"
call "org.apache.commons.math.analysis.BrentSolver.solve(3)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
reference "org.apache.commons.math.analysis.BrentSolver.solve(3)" "org.apache.commons.math.analysis.BrentSolver.functionValueAccuracy"
call "org.apache.commons.math.analysis.BrentSolver.solve(3)" "org.apache.commons.math.analysis.BrentSolver.setResult(2)"
reference "org.apache.commons.math.analysis.BrentSolver.solve(3)" "org.apache.commons.math.analysis.BrentSolver.result"
call "org.apache.commons.math.analysis.BrentSolver.solve(3)" "org.apache.commons.math.analysis.BrentSolver.solve(6)"
contain "org.apache.commons.math.analysis.BrentSolver" "org.apache.commons.math.analysis.BrentSolver.solve(3)"
call "org.apache.commons.math.analysis.BrentSolver.solve(2)" "org.apache.commons.math.analysis.BrentSolver.clearResult(0)"
call "org.apache.commons.math.analysis.BrentSolver.solve(2)" "org.apache.commons.math.analysis.BrentSolver.verifyInterval(2)"
reference "org.apache.commons.math.analysis.BrentSolver.solve(2)" "org.apache.commons.math.analysis.BrentSolver.f"
call "org.apache.commons.math.analysis.BrentSolver.solve(2)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.BrentSolver.solve(2)" "org.apache.commons.math.analysis.BrentSolver.solve(6)"
contain "org.apache.commons.math.analysis.BrentSolver" "org.apache.commons.math.analysis.BrentSolver.solve(2)"
reference "org.apache.commons.math.analysis.BrentSolver.solve(6)" "org.apache.commons.math.analysis.BrentSolver.maximalIterationCount"
reference "org.apache.commons.math.analysis.BrentSolver.solve(6)" "org.apache.commons.math.analysis.BrentSolver.functionValueAccuracy"
call "org.apache.commons.math.analysis.BrentSolver.solve(6)" "org.apache.commons.math.analysis.BrentSolver.setResult(2)"
reference "org.apache.commons.math.analysis.BrentSolver.solve(6)" "org.apache.commons.math.analysis.BrentSolver.result"
reference "org.apache.commons.math.analysis.BrentSolver.solve(6)" "org.apache.commons.math.analysis.BrentSolver.relativeAccuracy"
reference "org.apache.commons.math.analysis.BrentSolver.solve(6)" "org.apache.commons.math.analysis.BrentSolver.absoluteAccuracy"
reference "org.apache.commons.math.analysis.BrentSolver.solve(6)" "org.apache.commons.math.analysis.BrentSolver.f"
call "org.apache.commons.math.analysis.BrentSolver.solve(6)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.BrentSolver.solve(6)" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)"
contain "org.apache.commons.math.analysis.BrentSolver" "org.apache.commons.math.analysis.BrentSolver.solve(6)"
contain "org.apache.commons.math.analysis.BrentSolver" "org.apache.commons.math.analysis.BrentSolver.serialVersionUID"
reference "org.apache.commons.math.ode.IntegratorException" "org.apache.commons.math.MathException"
call "org.apache.commons.math.ode.IntegratorException.IntegratorException(2)" "org.apache.commons.math.MathException.MathException(2)"
contain "org.apache.commons.math.ode.IntegratorException" "org.apache.commons.math.ode.IntegratorException.IntegratorException(2)"
contain "org.apache.commons.math.ode.IntegratorException" "org.apache.commons.math.ode.IntegratorException.serialVersionUID"
reference "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TTest"
reference "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.ChiSquareTest"
reference "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestFactory"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.TestUtils(0)"
reference "org.apache.commons.math.stat.inference.TestUtils.getTTest(0)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.getTTest(0)"
reference "org.apache.commons.math.stat.inference.TestUtils.getChiSquareTest(0)" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.getChiSquareTest(0)"
reference "org.apache.commons.math.stat.inference.TestUtils.homoscedasticT(2)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.homoscedasticT(2)" "org.apache.commons.math.stat.inference.TTest.homoscedasticT(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.homoscedasticT(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.homoscedasticT(2)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.homoscedasticT(2)" "org.apache.commons.math.stat.inference.TTest.homoscedasticT(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.homoscedasticT(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.homoscedasticTTest(3)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.homoscedasticTTest(3)" "org.apache.commons.math.stat.inference.TTest.homoscedasticTTest(3)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.homoscedasticTTest(3)"
reference "org.apache.commons.math.stat.inference.TestUtils.homoscedasticTTest(2)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.homoscedasticTTest(2)" "org.apache.commons.math.stat.inference.TTest.homoscedasticTTest(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.homoscedasticTTest(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.homoscedasticTTest(2)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.homoscedasticTTest(2)" "org.apache.commons.math.stat.inference.TTest.homoscedasticTTest(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.homoscedasticTTest(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.pairedT(2)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.pairedT(2)" "org.apache.commons.math.stat.inference.TTest.pairedT(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.pairedT(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.pairedTTest(3)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.pairedTTest(3)" "org.apache.commons.math.stat.inference.TTest.pairedTTest(3)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.pairedTTest(3)"
reference "org.apache.commons.math.stat.inference.TestUtils.pairedTTest(2)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.pairedTTest(2)" "org.apache.commons.math.stat.inference.TTest.pairedTTest(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.pairedTTest(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.t(2)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.t(2)" "org.apache.commons.math.stat.inference.TTest.t(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.t(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.t(2)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.t(2)" "org.apache.commons.math.stat.inference.TTest.t(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.t(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.t(2)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.t(2)" "org.apache.commons.math.stat.inference.TTest.t(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.t(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.t(2)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.t(2)" "org.apache.commons.math.stat.inference.TTest.t(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.t(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.tTest(3)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.tTest(3)" "org.apache.commons.math.stat.inference.TTest.tTest(3)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.tTest(3)"
reference "org.apache.commons.math.stat.inference.TestUtils.tTest(2)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.tTest(2)" "org.apache.commons.math.stat.inference.TTest.tTest(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.tTest(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.tTest(3)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.tTest(3)" "org.apache.commons.math.stat.inference.TTest.tTest(3)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.tTest(3)"
reference "org.apache.commons.math.stat.inference.TestUtils.tTest(2)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.tTest(2)" "org.apache.commons.math.stat.inference.TTest.tTest(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.tTest(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.tTest(3)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.tTest(3)" "org.apache.commons.math.stat.inference.TTest.tTest(3)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.tTest(3)"
reference "org.apache.commons.math.stat.inference.TestUtils.tTest(2)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.tTest(2)" "org.apache.commons.math.stat.inference.TTest.tTest(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.tTest(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.tTest(3)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.tTest(3)" "org.apache.commons.math.stat.inference.TTest.tTest(3)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.tTest(3)"
reference "org.apache.commons.math.stat.inference.TestUtils.tTest(2)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.tTest(2)" "org.apache.commons.math.stat.inference.TTest.tTest(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.tTest(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.chiSquare(2)" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest"
call "org.apache.commons.math.stat.inference.TestUtils.chiSquare(2)" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquare(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.chiSquare(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.chiSquare(1)" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest"
call "org.apache.commons.math.stat.inference.TestUtils.chiSquare(1)" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquare(1)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.chiSquare(1)"
reference "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(3)" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest"
call "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(3)" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareTest(3)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(3)"
reference "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(2)" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest"
call "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(2)" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareTest(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(2)" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest"
call "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(2)" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareTest(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(1)" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest"
call "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(1)" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareTest(1)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(1)"
reference "org.apache.commons.math.stat.inference.TestUtils.chiSquareDataSetsComparison(2)" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest"
call "org.apache.commons.math.stat.inference.TestUtils.chiSquareDataSetsComparison(2)" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareDataSetsComparison(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.chiSquareDataSetsComparison(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.chiSquareTestDataSetsComparison(2)" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest"
call "org.apache.commons.math.stat.inference.TestUtils.chiSquareTestDataSetsComparison(2)" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareTestDataSetsComparison(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTestDataSetsComparison(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.chiSquareTestDataSetsComparison(3)" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest"
call "org.apache.commons.math.stat.inference.TestUtils.chiSquareTestDataSetsComparison(3)" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareTestDataSetsComparison(3)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTestDataSetsComparison(3)"
call "org.apache.commons.math.stat.inference.TestUtils.static {...}" "org.apache.commons.math.stat.inference.TestFactory.newInstance(0)"
call "org.apache.commons.math.stat.inference.TestUtils.static {...}" "org.apache.commons.math.stat.inference.TestFactory.createTTest(0)"
reference "org.apache.commons.math.stat.inference.TestUtils.static {...}" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.static {...}" "org.apache.commons.math.stat.inference.TestFactory.createChiSquareTest(0)"
reference "org.apache.commons.math.stat.inference.TestUtils.static {...}" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.static {...}"
reference "org.apache.commons.math.stat.inference.TestUtils.tTest" "org.apache.commons.math.stat.inference.TTest"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.tTest"
reference "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest" "org.apache.commons.math.stat.inference.ChiSquareTest"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest"
reference "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.complex.Complex"
reference "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.analysis.UnivariateRealFunction"
reference "org.apache.commons.math.transform.FastFourierTransformer.FastFourierTransformer(0)" "org.apache.commons.math.transform.FastFourierTransformer.omega"
reference "org.apache.commons.math.transform.FastFourierTransformer.FastFourierTransformer(0)" "org.apache.commons.math.transform.FastFourierTransformer.omegaCount"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.FastFourierTransformer(0)"
call "org.apache.commons.math.transform.FastFourierTransformer.transform(1)" "org.apache.commons.math.transform.FastFourierTransformer.fft(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.transform(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.transform(4)" "org.apache.commons.math.transform.FastFourierTransformer.sample(4)"
call "org.apache.commons.math.transform.FastFourierTransformer.transform(4)" "org.apache.commons.math.transform.FastFourierTransformer.fft(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.transform(4)"
call "org.apache.commons.math.transform.FastFourierTransformer.transform(1)" "org.apache.commons.math.transform.FastFourierTransformer.computeOmega(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.transform(1)" "org.apache.commons.math.transform.FastFourierTransformer.fft(1)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.transform(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.transform2(1)" "org.apache.commons.math.transform.FastFourierTransformer.fft(2)"
call "org.apache.commons.math.transform.FastFourierTransformer.transform2(1)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.transform2(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.transform2(4)" "org.apache.commons.math.transform.FastFourierTransformer.sample(4)"
call "org.apache.commons.math.transform.FastFourierTransformer.transform2(4)" "org.apache.commons.math.transform.FastFourierTransformer.fft(2)"
call "org.apache.commons.math.transform.FastFourierTransformer.transform2(4)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.transform2(4)"
call "org.apache.commons.math.transform.FastFourierTransformer.transform2(1)" "org.apache.commons.math.transform.FastFourierTransformer.computeOmega(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.transform2(1)" "org.apache.commons.math.transform.FastFourierTransformer.fft(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.transform2(1)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.transform2(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform(1)" "org.apache.commons.math.transform.FastFourierTransformer.fft(2)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform(1)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.inversetransform(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform(4)" "org.apache.commons.math.transform.FastFourierTransformer.sample(4)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform(4)" "org.apache.commons.math.transform.FastFourierTransformer.fft(2)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform(4)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.inversetransform(4)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform(1)" "org.apache.commons.math.transform.FastFourierTransformer.computeOmega(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform(1)" "org.apache.commons.math.transform.FastFourierTransformer.fft(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform(1)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.inversetransform(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform2(1)" "org.apache.commons.math.transform.FastFourierTransformer.fft(2)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform2(1)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.inversetransform2(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform2(4)" "org.apache.commons.math.transform.FastFourierTransformer.sample(4)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform2(4)" "org.apache.commons.math.transform.FastFourierTransformer.fft(2)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform2(4)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.inversetransform2(4)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform2(1)" "org.apache.commons.math.transform.FastFourierTransformer.computeOmega(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform2(1)" "org.apache.commons.math.transform.FastFourierTransformer.fft(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform2(1)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.inversetransform2(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.fft(2)" "org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.fft(2)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.transform.FastFourierTransformer.fft(2)" "org.apache.commons.math.transform.FastFourierTransformer.computeOmega(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.fft(2)" "org.apache.commons.math.transform.FastFourierTransformer.fft(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.fft(2)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.transform.FastFourierTransformer.fft(2)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
call "org.apache.commons.math.transform.FastFourierTransformer.fft(2)" "org.apache.commons.math.complex.Complex.conjugate(0)"
call "org.apache.commons.math.transform.FastFourierTransformer.fft(2)" "org.apache.commons.math.complex.Complex.add(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.fft(2)" "org.apache.commons.math.complex.Complex.subtract(1)"
reference "org.apache.commons.math.transform.FastFourierTransformer.fft(2)" "org.apache.commons.math.transform.FastFourierTransformer.omega"
reference "org.apache.commons.math.transform.FastFourierTransformer.fft(2)" "org.apache.commons.math.complex.Complex.I"
call "org.apache.commons.math.transform.FastFourierTransformer.fft(2)" "org.apache.commons.math.complex.Complex.multiply(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.fft(2)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.fft(2)"
call "org.apache.commons.math.transform.FastFourierTransformer.fft(1)" "org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.fft(1)" "org.apache.commons.math.complex.Complex.add(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.fft(1)" "org.apache.commons.math.complex.Complex.subtract(1)"
reference "org.apache.commons.math.transform.FastFourierTransformer.fft(1)" "org.apache.commons.math.complex.Complex.I"
call "org.apache.commons.math.transform.FastFourierTransformer.fft(1)" "org.apache.commons.math.complex.Complex.multiply(1)"
reference "org.apache.commons.math.transform.FastFourierTransformer.fft(1)" "org.apache.commons.math.transform.FastFourierTransformer.omegaCount"
reference "org.apache.commons.math.transform.FastFourierTransformer.fft(1)" "org.apache.commons.math.transform.FastFourierTransformer.omega"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.fft(1)"
reference "org.apache.commons.math.transform.FastFourierTransformer.computeOmega(1)" "org.apache.commons.math.transform.FastFourierTransformer.omegaCount"
reference "org.apache.commons.math.transform.FastFourierTransformer.computeOmega(1)" "org.apache.commons.math.transform.FastFourierTransformer.omega"
call "org.apache.commons.math.transform.FastFourierTransformer.computeOmega(1)" "org.apache.commons.math.complex.Complex.conjugate(0)"
call "org.apache.commons.math.transform.FastFourierTransformer.computeOmega(1)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.transform.FastFourierTransformer.computeOmega(1)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.transform.FastFourierTransformer.computeOmega(1)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.computeOmega(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.sample(4)" "org.apache.commons.math.transform.FastFourierTransformer.verifyInterval(2)"
call "org.apache.commons.math.transform.FastFourierTransformer.sample(4)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.sample(4)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
call "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
call "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)" "org.apache.commons.math.complex.Complex.Complex(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.isPowerOf2(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(1)" "org.apache.commons.math.transform.FastFourierTransformer.isPowerOf2(1)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(1)" "org.apache.commons.math.transform.FastFourierTransformer.isPowerOf2(1)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(1)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.verifyInterval(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.serialVersionUID"
reference "org.apache.commons.math.transform.FastFourierTransformer.omega" "org.apache.commons.math.complex.Complex[]"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.omega"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.omegaCount"
contain "org.apache.commons.math.ode.SwitchingFunction" "org.apache.commons.math.ode.SwitchingFunction.g(2)"
contain "org.apache.commons.math.ode.SwitchingFunction" "org.apache.commons.math.ode.SwitchingFunction.eventOccurred(2)"
contain "org.apache.commons.math.ode.SwitchingFunction" "org.apache.commons.math.ode.SwitchingFunction.resetState(2)"
contain "org.apache.commons.math.ode.SwitchingFunction" "org.apache.commons.math.ode.SwitchingFunction.STOP"
contain "org.apache.commons.math.ode.SwitchingFunction" "org.apache.commons.math.ode.SwitchingFunction.RESET_STATE"
contain "org.apache.commons.math.ode.SwitchingFunction" "org.apache.commons.math.ode.SwitchingFunction.RESET_DERIVATIVES"
contain "org.apache.commons.math.ode.SwitchingFunction" "org.apache.commons.math.ode.SwitchingFunction.CONTINUE"
reference "org.apache.commons.math.stat.data.LotteryTest" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest"
call "org.apache.commons.math.stat.data.LotteryTest.LotteryTest(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.CertifiedDataAbstractTest(0)"
contain "org.apache.commons.math.stat.data.LotteryTest" "org.apache.commons.math.stat.data.LotteryTest.LotteryTest(0)"
contain "org.apache.commons.math.stat.data.LotteryTest" "org.apache.commons.math.stat.data.LotteryTest.getResourceName(0)"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler" "org.apache.commons.math.ode.StepHandler"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler" "org.apache.commons.math.ode.StepInterpolator"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler" "junit.framework.Assert"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler" "org.apache.commons.math.ode.DormandPrince54IntegratorTest"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler.DP54SmallLastHandler(1)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler.lastSeen"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler.DP54SmallLastHandler(1)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler.minStep"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler.DP54SmallLastHandler(1)"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler.requiresDenseOutput(0)"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler.reset(0)"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler.handleStep(2)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler.lastSeen"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getPreviousTime(0)"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler.handleStep(2)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler.minStep"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler.handleStep(2)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler.handleStep(2)"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler.wasLastSeen(0)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler.lastSeen"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler.wasLastSeen(0)"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler.lastSeen"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler.minStep"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.TestProblem1"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.TestProblemHandler"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.TestProblem4"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.TestProblem3"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.StepProblem"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.FirstOrderIntegratorFactory"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.FirstOrderIntegrator"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.GraggBulirschStoerIntegratorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.GraggBulirschStoerIntegratorTest(1)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.FirstOrderIntegratorFactory.newInstance(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.FirstOrderIntegratorFactory.newGraggBulirschStoerIntegrator(4)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.integrate(5)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testDimensionCheck(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testNullIntervalCheck(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testNullIntervalCheck(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testNullIntervalCheck(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testNullIntervalCheck(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testNullIntervalCheck(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testNullIntervalCheck(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.TestProblemHandler.TestProblemHandler(1)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testMinStep(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblemHandler.TestProblemHandler(1)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblemHandler.getMaximalError(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblem1.getCalls(0)"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testIncreasingTolerance(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblem4.TestProblem4(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblem4.getFinalTime(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblem4.getInitialTime(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblemHandler.TestProblemHandler(1)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblem4.getSwitchingFunctions(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addSwitchingFunction(3)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblem4.getInitialState(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblem4.getDimension(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblemHandler.getMaximalError(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblemHandler.getLastTime(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testSwitchingFunctions(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler.KeplerStepHandler(1)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.getCalls(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.assertTrue(1)"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testKepler(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler.VariableStepHandler(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testVariableSteps(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testUnstableDerivative(0)" "org.apache.commons.math.ode.StepProblem.StepProblem(3)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testUnstableDerivative(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testUnstableDerivative(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addSwitchingFunction(3)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testUnstableDerivative(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testUnstableDerivative(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.testUnstableDerivative(0)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.suite(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.class$org$apache$commons$math$ode$GraggBulirschStoerIntegratorTest"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.suite(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.class$(1)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.suite(0)"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.class$(1)"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.class$org$apache$commons$math$ode$GraggBulirschStoerIntegratorTest"
reference "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest" "org.apache.commons.math.ode.TestProblem3"
reference "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest" "org.apache.commons.math.ode.ThreeEighthesIntegrator"
reference "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest" "org.apache.commons.math.ode.ContinuousOutputModel"
reference "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest" "org.apache.commons.math.ode.IntegratorException"
call "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest.ThreeEighthesStepInterpolatorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest" "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest.ThreeEighthesStepInterpolatorTest(1)"
call "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ThreeEighthesIntegrator.ThreeEighthesIntegrator(1)"
call "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.ContinuousOutputModel(0)"
call "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ThreeEighthesIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ThreeEighthesIntegrator.integrate(5)"
call "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ThreeEighthesIntegrator.getStepHandler(0)"
call "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest.assertTrue(1)"
call "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState(0)"
call "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.computeTheoreticalState(1)"
contain "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest" "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest.testSerialization(0)"
reference "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest.suite(0)" "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest.class$org$apache$commons$math$ode$ThreeEighthesStepInterpolatorTest"
call "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest.suite(0)" "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest.class$(1)"
call "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest" "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest.suite(0)"
contain "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest" "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest.class$(1)"
contain "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest" "org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest.class$org$apache$commons$math$ode$ThreeEighthesStepInterpolatorTest"
reference "org.apache.commons.math.ode.StepNormalizerTest.1" "org.apache.commons.math.ode.FixedStepHandler"
reference "org.apache.commons.math.ode.StepNormalizerTest.1" "org.apache.commons.math.ode.StepNormalizerTest"
reference "org.apache.commons.math.ode.StepNormalizerTest.1" "org.apache.commons.math.ode.TestProblem3"
reference "org.apache.commons.math.ode.StepNormalizerTest.1.{...}" "org.apache.commons.math.ode.StepNormalizerTest.1.this$0"
reference "org.apache.commons.math.ode.StepNormalizerTest.1.{...}" "org.apache.commons.math.ode.StepNormalizerTest.1.firstCall"
contain "org.apache.commons.math.ode.StepNormalizerTest.1" "org.apache.commons.math.ode.StepNormalizerTest.1.{...}"
reference "org.apache.commons.math.ode.StepNormalizerTest.1.handleStep(3)" "org.apache.commons.math.ode.StepNormalizerTest.1.firstCall"
reference "org.apache.commons.math.ode.StepNormalizerTest.1.handleStep(3)" "org.apache.commons.math.ode.StepNormalizerTest.1.this$0"
reference "org.apache.commons.math.ode.StepNormalizerTest.1.handleStep(3)" "org.apache.commons.math.ode.StepNormalizerTest.pb"
call "org.apache.commons.math.ode.StepNormalizerTest.1.handleStep(3)" "org.apache.commons.math.ode.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.StepNormalizerTest.1.handleStep(3)" "org.apache.commons.math.ode.StepNormalizerTest.checkValue(2)"
call "org.apache.commons.math.ode.StepNormalizerTest.1.handleStep(3)" "org.apache.commons.math.ode.StepNormalizerTest.setLastSeen(1)"
call "org.apache.commons.math.ode.StepNormalizerTest.1.handleStep(3)" "org.apache.commons.math.ode.TestProblem3.getFinalTime(0)"
contain "org.apache.commons.math.ode.StepNormalizerTest.1" "org.apache.commons.math.ode.StepNormalizerTest.1.handleStep(3)"
contain "org.apache.commons.math.ode.StepNormalizerTest.1" "org.apache.commons.math.ode.StepNormalizerTest.1.firstCall"
reference "org.apache.commons.math.ode.StepNormalizerTest.1.this$0" "org.apache.commons.math.ode.StepNormalizerTest"
contain "org.apache.commons.math.ode.StepNormalizerTest.1" "org.apache.commons.math.ode.StepNormalizerTest.1.this$0"
reference "org.apache.commons.math.ode.StepNormalizerTest.2" "org.apache.commons.math.ode.FixedStepHandler"
reference "org.apache.commons.math.ode.StepNormalizerTest.2" "org.apache.commons.math.ode.StepNormalizerTest"
reference "org.apache.commons.math.ode.StepNormalizerTest.2" "org.apache.commons.math.ode.TestProblem3"
reference "org.apache.commons.math.ode.StepNormalizerTest.2.{...}" "org.apache.commons.math.ode.StepNormalizerTest.2.this$0"
reference "org.apache.commons.math.ode.StepNormalizerTest.2.{...}" "org.apache.commons.math.ode.StepNormalizerTest.2.val$range"
contain "org.apache.commons.math.ode.StepNormalizerTest.2" "org.apache.commons.math.ode.StepNormalizerTest.2.{...}"
reference "org.apache.commons.math.ode.StepNormalizerTest.2.handleStep(3)" "org.apache.commons.math.ode.StepNormalizerTest.2.this$0"
call "org.apache.commons.math.ode.StepNormalizerTest.2.handleStep(3)" "org.apache.commons.math.ode.StepNormalizerTest.setLastSeen(1)"
reference "org.apache.commons.math.ode.StepNormalizerTest.2.handleStep(3)" "org.apache.commons.math.ode.StepNormalizerTest.pb"
call "org.apache.commons.math.ode.StepNormalizerTest.2.handleStep(3)" "org.apache.commons.math.ode.TestProblem3.getFinalTime(0)"
reference "org.apache.commons.math.ode.StepNormalizerTest.2.handleStep(3)" "org.apache.commons.math.ode.StepNormalizerTest.2.val$range"
call "org.apache.commons.math.ode.StepNormalizerTest.2.handleStep(3)" "org.apache.commons.math.ode.StepNormalizerTest.checkValue(2)"
contain "org.apache.commons.math.ode.StepNormalizerTest.2" "org.apache.commons.math.ode.StepNormalizerTest.2.handleStep(3)"
contain "org.apache.commons.math.ode.StepNormalizerTest.2" "org.apache.commons.math.ode.StepNormalizerTest.2.val$range"
reference "org.apache.commons.math.ode.StepNormalizerTest.2.this$0" "org.apache.commons.math.ode.StepNormalizerTest"
contain "org.apache.commons.math.ode.StepNormalizerTest.2" "org.apache.commons.math.ode.StepNormalizerTest.2.this$0"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.MinpackMeasurement(2)" "org.apache.commons.math.estimation.WeightedMeasurement.WeightedMeasurement(2)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.MinpackMeasurement(2)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.this$0"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.MinpackMeasurement(2)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.index"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.MinpackMeasurement(2)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.getTheoreticalValue(0)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.this$0"
call "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.getTheoreticalValue(0)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.getResiduals(0)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.getTheoreticalValue(0)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.index"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.getTheoreticalValue(0)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.getPartial(1)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.this$0"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.getPartial(1)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.n"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.getPartial(1)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.getPartial(1)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.getPartial(1)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.index"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.getPartial(1)"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.index"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.serialVersionUID"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.this$0" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.this$0"
reference "org.apache.commons.math.estimation.EstimatedParameterTest" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.EstimatedParameterTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.estimation.EstimatedParameterTest" "junit.framework.TestCase"
call "org.apache.commons.math.estimation.EstimatedParameterTest.EstimatedParameterTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.estimation.EstimatedParameterTest" "org.apache.commons.math.estimation.EstimatedParameterTest.EstimatedParameterTest(1)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.testConstruction(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.testConstruction(0)" "org.apache.commons.math.estimation.EstimatedParameter.getName(0)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.testConstruction(0)" "org.apache.commons.math.estimation.EstimatedParameterTest.assertTrue(1)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.testConstruction(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.testConstruction(0)" "org.apache.commons.math.estimation.EstimatedParameterTest.checkValue(2)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.testConstruction(0)" "org.apache.commons.math.estimation.EstimatedParameter.isBound(0)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.testConstruction(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(3)"
contain "org.apache.commons.math.estimation.EstimatedParameterTest" "org.apache.commons.math.estimation.EstimatedParameterTest.testConstruction(0)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.testBound(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.testBound(0)" "org.apache.commons.math.estimation.EstimatedParameter.isBound(0)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.testBound(0)" "org.apache.commons.math.estimation.EstimatedParameterTest.assertTrue(1)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.testBound(0)" "org.apache.commons.math.estimation.EstimatedParameter.setBound(1)"
contain "org.apache.commons.math.estimation.EstimatedParameterTest" "org.apache.commons.math.estimation.EstimatedParameterTest.testBound(0)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.testEstimate(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.testEstimate(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.testEstimate(0)" "org.apache.commons.math.estimation.EstimatedParameterTest.checkValue(2)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.testEstimate(0)" "org.apache.commons.math.estimation.EstimatedParameter.setEstimate(1)"
contain "org.apache.commons.math.estimation.EstimatedParameterTest" "org.apache.commons.math.estimation.EstimatedParameterTest.testEstimate(0)"
reference "org.apache.commons.math.estimation.EstimatedParameterTest.suite(0)" "org.apache.commons.math.estimation.EstimatedParameterTest.class$org$apache$commons$math$estimation$EstimatedParameterTest"
call "org.apache.commons.math.estimation.EstimatedParameterTest.suite(0)" "org.apache.commons.math.estimation.EstimatedParameterTest.class$(1)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.estimation.EstimatedParameterTest" "org.apache.commons.math.estimation.EstimatedParameterTest.suite(0)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.checkValue(2)" "org.apache.commons.math.estimation.EstimatedParameterTest.assertTrue(1)"
contain "org.apache.commons.math.estimation.EstimatedParameterTest" "org.apache.commons.math.estimation.EstimatedParameterTest.checkValue(2)"
contain "org.apache.commons.math.estimation.EstimatedParameterTest" "org.apache.commons.math.estimation.EstimatedParameterTest.class$(1)"
contain "org.apache.commons.math.estimation.EstimatedParameterTest" "org.apache.commons.math.estimation.EstimatedParameterTest.class$org$apache$commons$math$estimation$EstimatedParameterTest"
reference "org.apache.commons.math.analysis.SinFunction.1" "org.apache.commons.math.analysis.UnivariateRealFunction"
reference "org.apache.commons.math.analysis.SinFunction.1" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.SinFunction.1.{...}" "org.apache.commons.math.analysis.SinFunction.1.this$0"
contain "org.apache.commons.math.analysis.SinFunction.1" "org.apache.commons.math.analysis.SinFunction.1.{...}"
contain "org.apache.commons.math.analysis.SinFunction.1" "org.apache.commons.math.analysis.SinFunction.1.value(1)"
reference "org.apache.commons.math.analysis.SinFunction.1.this$0" "org.apache.commons.math.analysis.SinFunction"
contain "org.apache.commons.math.analysis.SinFunction.1" "org.apache.commons.math.analysis.SinFunction.1.this$0"
reference "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator" "org.apache.commons.math.random.RandomGenerator"
reference "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator" "org.apache.commons.math.random.RandomAdaptorTest"
reference "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator.ConstantGenerator(0)" "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator.this$0"
contain "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator" "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator.ConstantGenerator(0)"
contain "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator" "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator.nextBoolean(0)"
contain "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator" "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator.nextBytes(1)"
contain "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator" "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator" "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator.nextFloat(0)"
contain "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator" "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator.nextGaussian(0)"
contain "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator" "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator.nextInt(0)"
contain "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator" "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator.nextInt(1)"
contain "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator" "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator.nextLong(0)"
contain "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator" "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator.setSeed(1)"
call "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator.ConstantGenerator(1)" "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator.ConstantGenerator(0)"
contain "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator" "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator.ConstantGenerator(1)"
reference "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator.this$0" "org.apache.commons.math.random.RandomAdaptorTest"
contain "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator" "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator.this$0"
reference "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.BrownAlmostLinearFunction(5)" "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.buildArray(2)"
call "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.BrownAlmostLinearFunction(5)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction" "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.BrownAlmostLinearFunction(5)"
reference "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.m"
reference "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.n"
reference "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.getJacobian(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction" "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.m"
reference "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.n"
reference "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction" "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.getResiduals(0)"
reference "org.apache.commons.math.util.TestBean.TestBean(0)" "org.apache.commons.math.util.TestBean.x"
reference "org.apache.commons.math.util.TestBean.TestBean(0)" "org.apache.commons.math.util.TestBean.y"
reference "org.apache.commons.math.util.TestBean.TestBean(0)" "org.apache.commons.math.util.TestBean.z"
contain "org.apache.commons.math.util.TestBean" "org.apache.commons.math.util.TestBean.TestBean(0)"
reference "org.apache.commons.math.util.TestBean.getX(0)" "org.apache.commons.math.util.TestBean.x"
contain "org.apache.commons.math.util.TestBean" "org.apache.commons.math.util.TestBean.getX(0)"
reference "org.apache.commons.math.util.TestBean.getY(0)" "org.apache.commons.math.util.TestBean.y"
contain "org.apache.commons.math.util.TestBean" "org.apache.commons.math.util.TestBean.getY(0)"
reference "org.apache.commons.math.util.TestBean.setX(1)" "org.apache.commons.math.util.TestBean.x"
contain "org.apache.commons.math.util.TestBean" "org.apache.commons.math.util.TestBean.setX(1)"
reference "org.apache.commons.math.util.TestBean.setY(1)" "org.apache.commons.math.util.TestBean.y"
contain "org.apache.commons.math.util.TestBean" "org.apache.commons.math.util.TestBean.setY(1)"
contain "org.apache.commons.math.util.TestBean" "org.apache.commons.math.util.TestBean.getZ(0)"
reference "org.apache.commons.math.util.TestBean.setZ(1)" "org.apache.commons.math.util.TestBean.z"
contain "org.apache.commons.math.util.TestBean" "org.apache.commons.math.util.TestBean.setZ(1)"
contain "org.apache.commons.math.util.TestBean" "org.apache.commons.math.util.TestBean.x"
contain "org.apache.commons.math.util.TestBean" "org.apache.commons.math.util.TestBean.y"
contain "org.apache.commons.math.util.TestBean" "org.apache.commons.math.util.TestBean.z"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler" "org.apache.commons.math.ode.StepHandler"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler" "org.apache.commons.math.ode.StepInterpolator"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler" "junit.framework.Assert"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler" "org.apache.commons.math.ode.DormandPrince853IntegratorTest"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler.VariableHandler(0)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler.firstTime"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler.VariableHandler(0)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler.minStep"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler.VariableHandler(0)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler.maxStep"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler.VariableHandler(0)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler.reset(0)"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler.VariableHandler(0)"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler.reset(0)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler.firstTime"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler.reset(0)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler.minStep"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler.reset(0)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler.maxStep"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler.reset(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getPreviousTime(0)"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler.handleStep(2)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler.firstTime"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler.handleStep(2)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler.minStep"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler.handleStep(2)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler.maxStep"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler.handleStep(2)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler.handleStep(2)"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler.firstTime"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler.minStep"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler.maxStep"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest" "org.apache.commons.math.MathException"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.PolynomialFunctionNewtonFormTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest" "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.PolynomialFunctionNewtonFormTest(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testLinearFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.PolynomialFunctionNewtonForm(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testLinearFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.value(1)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testLinearFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.assertEquals(3)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testLinearFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.degree(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testLinearFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.assertEquals(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testLinearFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.getCoefficients(0)"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest" "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testLinearFunction(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.PolynomialFunctionNewtonForm(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.value(1)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.assertEquals(3)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.degree(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.assertEquals(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.getCoefficients(0)"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest" "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testQuadraticFunction(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.PolynomialFunctionNewtonForm(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.value(1)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.assertEquals(3)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.degree(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.assertEquals(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.getCoefficients(0)"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest" "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testQuinticFunction(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testParameters(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.PolynomialFunctionNewtonForm(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testParameters(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.fail(1)"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest" "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testParameters(0)"
reference "org.apache.commons.math.random.RandomAdaptorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.random.RandomAdaptorTest" "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator"
reference "org.apache.commons.math.random.RandomAdaptorTest" "org.apache.commons.math.random.RandomAdaptor"
reference "org.apache.commons.math.random.RandomAdaptorTest" "org.apache.commons.math.random.RandomDataTest"
call "org.apache.commons.math.random.RandomAdaptorTest.RandomAdaptorTest(1)" "org.apache.commons.math.random.RandomDataTest.RandomDataTest(1)"
contain "org.apache.commons.math.random.RandomAdaptorTest" "org.apache.commons.math.random.RandomAdaptorTest.RandomAdaptorTest(1)"
reference "org.apache.commons.math.random.RandomAdaptorTest.suite(0)" "org.apache.commons.math.random.RandomAdaptorTest.class$org$apache$commons$math$random$RandomAdaptorTest"
call "org.apache.commons.math.random.RandomAdaptorTest.suite(0)" "org.apache.commons.math.random.RandomAdaptorTest.class$(1)"
call "org.apache.commons.math.random.RandomAdaptorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.random.RandomAdaptorTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.random.RandomAdaptorTest" "org.apache.commons.math.random.RandomAdaptorTest.suite(0)"
call "org.apache.commons.math.random.RandomAdaptorTest.testAdaptor(0)" "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator.ConstantGenerator(1)"
call "org.apache.commons.math.random.RandomAdaptorTest.testAdaptor(0)" "org.apache.commons.math.random.RandomAdaptor.createAdaptor(1)"
call "org.apache.commons.math.random.RandomAdaptorTest.testAdaptor(0)" "org.apache.commons.math.random.RandomAdaptorTest.checkConstant(1)"
call "org.apache.commons.math.random.RandomAdaptorTest.testAdaptor(0)" "org.apache.commons.math.random.RandomAdaptor.RandomAdaptor(1)"
contain "org.apache.commons.math.random.RandomAdaptorTest" "org.apache.commons.math.random.RandomAdaptorTest.testAdaptor(0)"
call "org.apache.commons.math.random.RandomAdaptorTest.checkConstant(1)" "org.apache.commons.math.random.RandomAdaptorTest.assertEquals(2)"
call "org.apache.commons.math.random.RandomAdaptorTest.checkConstant(1)" "org.apache.commons.math.random.RandomAdaptorTest.assertEquals(2)"
call "org.apache.commons.math.random.RandomAdaptorTest.checkConstant(1)" "org.apache.commons.math.random.RandomAdaptorTest.assertEquals(3)"
call "org.apache.commons.math.random.RandomAdaptorTest.checkConstant(1)" "org.apache.commons.math.random.RandomAdaptorTest.assertEquals(3)"
call "org.apache.commons.math.random.RandomAdaptorTest.checkConstant(1)" "org.apache.commons.math.random.RandomAdaptorTest.assertEquals(2)"
contain "org.apache.commons.math.random.RandomAdaptorTest" "org.apache.commons.math.random.RandomAdaptorTest.checkConstant(1)"
contain "org.apache.commons.math.random.RandomAdaptorTest" "org.apache.commons.math.random.RandomAdaptorTest.class$(1)"
contain "org.apache.commons.math.random.RandomAdaptorTest" "org.apache.commons.math.random.RandomAdaptorTest.class$org$apache$commons$math$random$RandomAdaptorTest"
reference "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionImpl"
reference "org.apache.commons.math.distribution.HypergeometricDistributionTest" "double[]"
reference "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest"
reference "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistribution"
reference "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.HypergeometricDistributionTest(1)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.IntegerDistributionAbstractTest(1)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionTest.HypergeometricDistributionTest(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.makeDistribution(0)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.HypergeometricDistributionImpl(3)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionTest.makeDistribution(0)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionTest.makeDensityTestPoints(0)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionTest.makeDensityTestValues(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.makeCumulativeTestPoints(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.makeDensityTestPoints(0)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionTest.makeCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionTest.makeCumulativeTestValues(0)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionTest.makeInverseCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionTest.makeInverseCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoFailures(0)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.HypergeometricDistributionImpl(3)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoFailures(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setDistribution(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoFailures(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoFailures(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoFailures(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setDensityTestPoints(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoFailures(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setDensityTestValues(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoFailures(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setInverseCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoFailures(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoFailures(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.verifyDensities(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoFailures(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.verifyCumulativeProbabilities(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoFailures(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoFailures(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoSuccesses(0)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.HypergeometricDistributionImpl(3)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoSuccesses(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setDistribution(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoSuccesses(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoSuccesses(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoSuccesses(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setDensityTestPoints(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoSuccesses(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setDensityTestValues(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoSuccesses(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setInverseCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoSuccesses(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoSuccesses(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.verifyDensities(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoSuccesses(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.verifyCumulativeProbabilities(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoSuccesses(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoSuccesses(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateFullSample(0)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.HypergeometricDistributionImpl(3)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateFullSample(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setDistribution(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateFullSample(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateFullSample(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateFullSample(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setDensityTestPoints(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateFullSample(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setDensityTestValues(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateFullSample(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setInverseCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateFullSample(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateFullSample(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.verifyDensities(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateFullSample(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.verifyCumulativeProbabilities(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateFullSample(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateFullSample(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testPopulationSize(0)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.HypergeometricDistributionImpl(3)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testPopulationSize(0)" "org.apache.commons.math.distribution.HypergeometricDistribution.setPopulationSize(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testPopulationSize(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.fail(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testPopulationSize(0)" "org.apache.commons.math.distribution.HypergeometricDistribution.getPopulationSize(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testPopulationSize(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.assertEquals(2)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionTest.testPopulationSize(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testLargeValues(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.testHypergeometricDistributionProbabilities(4)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionTest.testLargeValues(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testHypergeometricDistributionProbabilities(4)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.HypergeometricDistributionImpl(3)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testHypergeometricDistributionProbabilities(4)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.probability(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testHypergeometricDistributionProbabilities(4)" "org.apache.commons.math.TestUtils.assertRelativelyEquals(3)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testHypergeometricDistributionProbabilities(4)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testHypergeometricDistributionProbabilities(4)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.upperCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionTest.testHypergeometricDistributionProbabilities(4)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testMoreLargeValues(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.testHypergeometricDistributionProbabilities(4)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionTest.testMoreLargeValues(0)"
reference "org.apache.commons.math.ode.FirstOrderConverterTest" "org.apache.commons.math.ode.FirstOrderConverterTest.Equations"
reference "org.apache.commons.math.ode.FirstOrderConverterTest" "org.apache.commons.math.ode.FirstOrderConverter"
reference "org.apache.commons.math.ode.FirstOrderConverterTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.FirstOrderConverterTest" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator"
reference "org.apache.commons.math.ode.FirstOrderConverterTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.FirstOrderConverterTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.FirstOrderConverterTest" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.FirstOrderConverterTest" "org.apache.commons.math.ode.SecondOrderDifferentialEquations"
call "org.apache.commons.math.ode.FirstOrderConverterTest.FirstOrderConverterTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.FirstOrderConverterTest" "org.apache.commons.math.ode.FirstOrderConverterTest.FirstOrderConverterTest(1)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.testDoubleDimension(0)" "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.Equations(2)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.testDoubleDimension(0)" "org.apache.commons.math.ode.FirstOrderConverter.FirstOrderConverter(1)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.testDoubleDimension(0)" "org.apache.commons.math.ode.FirstOrderConverter.getDimension(0)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.testDoubleDimension(0)" "org.apache.commons.math.ode.SecondOrderDifferentialEquations.getDimension(0)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.testDoubleDimension(0)" "org.apache.commons.math.ode.FirstOrderConverterTest.assertTrue(1)"
contain "org.apache.commons.math.ode.FirstOrderConverterTest" "org.apache.commons.math.ode.FirstOrderConverterTest.testDoubleDimension(0)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderConverterTest.integrateWithSpecifiedStep(4)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderConverterTest.assertTrue(1)"
contain "org.apache.commons.math.ode.FirstOrderConverterTest" "org.apache.commons.math.ode.FirstOrderConverterTest.testDecreasingSteps(0)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderConverterTest.integrateWithSpecifiedStep(4)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderConverterTest.assertTrue(1)"
contain "org.apache.commons.math.ode.FirstOrderConverterTest" "org.apache.commons.math.ode.FirstOrderConverterTest.testSmallStep(0)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.testBigStep(0)" "org.apache.commons.math.ode.FirstOrderConverterTest.integrateWithSpecifiedStep(4)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.testBigStep(0)" "org.apache.commons.math.ode.FirstOrderConverterTest.assertTrue(1)"
contain "org.apache.commons.math.ode.FirstOrderConverterTest" "org.apache.commons.math.ode.FirstOrderConverterTest.testBigStep(0)"
reference "org.apache.commons.math.ode.FirstOrderConverterTest.suite(0)" "org.apache.commons.math.ode.FirstOrderConverterTest.class$org$apache$commons$math$ode$FirstOrderConverterTest"
call "org.apache.commons.math.ode.FirstOrderConverterTest.suite(0)" "org.apache.commons.math.ode.FirstOrderConverterTest.class$(1)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.FirstOrderConverterTest" "org.apache.commons.math.ode.FirstOrderConverterTest.suite(0)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.integrateWithSpecifiedStep(4)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(1)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.integrateWithSpecifiedStep(4)" "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.Equations(2)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.integrateWithSpecifiedStep(4)" "org.apache.commons.math.ode.FirstOrderConverter.FirstOrderConverter(1)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.integrateWithSpecifiedStep(4)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.integrate(5)"
contain "org.apache.commons.math.ode.FirstOrderConverterTest" "org.apache.commons.math.ode.FirstOrderConverterTest.integrateWithSpecifiedStep(4)"
contain "org.apache.commons.math.ode.FirstOrderConverterTest" "org.apache.commons.math.ode.FirstOrderConverterTest.class$(1)"
contain "org.apache.commons.math.ode.FirstOrderConverterTest" "org.apache.commons.math.ode.FirstOrderConverterTest.class$org$apache$commons$math$ode$FirstOrderConverterTest"
reference "org.apache.commons.math.stat.inference.TestUtilsTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.inference.TestUtilsTest" "long[]"
reference "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.ChiSquareTestImpl"
reference "org.apache.commons.math.stat.inference.TestUtilsTest" "junit.framework.TestCase"
reference "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
reference "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtils"
call "org.apache.commons.math.stat.inference.TestUtilsTest.TestUtilsTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.TestUtilsTest(1)" "org.apache.commons.math.stat.inference.TestUtilsTest.tooShortObs"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.TestUtilsTest(1)" "org.apache.commons.math.stat.inference.TestUtilsTest.nullObserved"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.TestUtilsTest(1)" "org.apache.commons.math.stat.inference.TestUtilsTest.emptyObs"
call "org.apache.commons.math.stat.inference.TestUtilsTest.TestUtilsTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance(0)"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.TestUtilsTest(1)" "org.apache.commons.math.stat.inference.TestUtilsTest.emptyStats"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.TestUtilsTest(1)" "org.apache.commons.math.stat.inference.TestUtilsTest.nullStats"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.TestUtilsTest(1)" "org.apache.commons.math.stat.inference.TestUtilsTest.tooShortStats"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.TestUtilsTest(1)"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.setUp(0)"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.suite(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.class$org$apache$commons$math$stat$inference$TestUtilsTest"
call "org.apache.commons.math.stat.inference.TestUtilsTest.suite(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.class$(1)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.suite(0)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquare(0)" "org.apache.commons.math.stat.inference.TestUtils.chiSquare(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquare(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquare(0)" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquare(0)" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(3)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquare(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertTrue(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquare(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.fail(1)"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquare(0)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareIndependence(0)" "org.apache.commons.math.stat.inference.TestUtils.chiSquare(1)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareIndependence(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareIndependence(0)" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(1)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareIndependence(0)" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareIndependence(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertTrue(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareIndependence(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.fail(1)"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareIndependence(0)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareLargeTestStatistic(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.ChiSquareTestImpl(0)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareLargeTestStatistic(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareLargeTestStatistic(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareLargeTestStatistic(0)" "org.apache.commons.math.stat.inference.TestUtils.chiSquare(2)"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareLargeTestStatistic(0)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareZeroCount(0)" "org.apache.commons.math.stat.inference.TestUtils.chiSquare(1)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareZeroCount(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareZeroCount(0)" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(1)"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareZeroCount(0)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleT(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance(0)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleT(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TestUtils.t(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TestUtils.t(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TestUtils.tTest(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TestUtils.tTest(2)"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.nullObserved"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.fail(1)"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.nullStats"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.emptyObs"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.emptyStats"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.tooShortObs"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.tooShortStats"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleT(0)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance(0)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TestUtils.t(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TestUtils.t(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TestUtils.tTest(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TestUtils.tTest(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TestUtils.tTest(3)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertTrue(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TestUtils.tTest(3)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.fail(1)"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleTTest(0)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance(0)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TestUtils.t(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TestUtils.t(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TestUtils.tTest(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TestUtils.tTest(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TestUtils.tTest(3)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertTrue(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TestUtils.tTest(3)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.fail(1)"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.tooShortObs"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.tooShortStats"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHeterscedastic(0)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHomoscedastic(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance(0)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHomoscedastic(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHomoscedastic(0)" "org.apache.commons.math.stat.inference.TestUtils.homoscedasticT(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHomoscedastic(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHomoscedastic(0)" "org.apache.commons.math.stat.inference.TestUtils.homoscedasticTTest(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHomoscedastic(0)" "org.apache.commons.math.stat.inference.TestUtils.homoscedasticTTest(3)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHomoscedastic(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertTrue(2)"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHomoscedastic(0)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testSmallSamples(0)" "org.apache.commons.math.stat.inference.TestUtils.t(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testSmallSamples(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertEquals(3)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testSmallSamples(0)" "org.apache.commons.math.stat.inference.TestUtils.tTest(2)"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.testSmallSamples(0)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testPaired(0)" "org.apache.commons.math.stat.inference.TestUtils.pairedT(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testPaired(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertEquals(3)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testPaired(0)" "org.apache.commons.math.stat.inference.TestUtils.pairedTTest(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testPaired(0)" "org.apache.commons.math.stat.inference.TestUtils.pairedTTest(3)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testPaired(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertFalse(1)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testPaired(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertTrue(1)"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.testPaired(0)"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.class$(1)"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.tooShortObs" "double[]"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.tooShortObs"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.nullObserved" "double[]"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.nullObserved"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.emptyObs" "double[]"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.emptyObs"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.emptyStats" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.emptyStats"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.nullStats" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.nullStats"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.tooShortStats" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.tooShortStats"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.class$org$apache$commons$math$stat$inference$TestUtilsTest"
reference "org.apache.commons.math.stat.data.LewTest" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest"
call "org.apache.commons.math.stat.data.LewTest.LewTest(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.CertifiedDataAbstractTest(0)"
contain "org.apache.commons.math.stat.data.LewTest" "org.apache.commons.math.stat.data.LewTest.LewTest(0)"
contain "org.apache.commons.math.stat.data.LewTest" "org.apache.commons.math.stat.data.LewTest.getResourceName(0)"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.2" "org.apache.commons.math.optimization.CostFunction"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.2" "org.apache.commons.math.optimization.MultiDirectionalTest"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.2.{...}" "org.apache.commons.math.optimization.MultiDirectionalTest.2.this$0"
contain "org.apache.commons.math.optimization.MultiDirectionalTest.2" "org.apache.commons.math.optimization.MultiDirectionalTest.2.{...}"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.2.cost(1)" "org.apache.commons.math.optimization.MultiDirectionalTest.2.this$0"
call "org.apache.commons.math.optimization.MultiDirectionalTest.2.cost(1)" "org.apache.commons.math.optimization.MultiDirectionalTest.access$004(1)"
contain "org.apache.commons.math.optimization.MultiDirectionalTest.2" "org.apache.commons.math.optimization.MultiDirectionalTest.2.cost(1)"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.2.this$0" "org.apache.commons.math.optimization.MultiDirectionalTest"
contain "org.apache.commons.math.optimization.MultiDirectionalTest.2" "org.apache.commons.math.optimization.MultiDirectionalTest.2.this$0"
reference "org.apache.commons.math.estimation.MinpackTest.WatsonFunction" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.WatsonFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.WatsonFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.WatsonFunction" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.WatsonFunction(5)" "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.buildArray(2)"
call "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.WatsonFunction(5)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.WatsonFunction" "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.WatsonFunction(5)"
reference "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.m"
reference "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.n"
reference "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.getJacobian(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.MinpackTest.WatsonFunction" "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.m"
reference "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.n"
reference "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.MinpackTest.WatsonFunction" "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.getResiduals(0)"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.1" "org.apache.commons.math.optimization.CostFunction"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.1" "org.apache.commons.math.optimization.MultiDirectionalTest"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.1.{...}" "org.apache.commons.math.optimization.MultiDirectionalTest.1.this$0"
contain "org.apache.commons.math.optimization.MultiDirectionalTest.1" "org.apache.commons.math.optimization.MultiDirectionalTest.1.{...}"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.1.cost(1)" "org.apache.commons.math.optimization.MultiDirectionalTest.1.this$0"
call "org.apache.commons.math.optimization.MultiDirectionalTest.1.cost(1)" "org.apache.commons.math.optimization.MultiDirectionalTest.access$004(1)"
contain "org.apache.commons.math.optimization.MultiDirectionalTest.1" "org.apache.commons.math.optimization.MultiDirectionalTest.1.cost(1)"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.1.this$0" "org.apache.commons.math.optimization.MultiDirectionalTest"
contain "org.apache.commons.math.optimization.MultiDirectionalTest.1" "org.apache.commons.math.optimization.MultiDirectionalTest.1.this$0"
reference "org.apache.commons.math.distribution.GammaDistributionTest" "org.apache.commons.math.distribution.GammaDistributionImpl"
reference "org.apache.commons.math.distribution.GammaDistributionTest" "org.apache.commons.math.distribution.GammaDistribution"
reference "org.apache.commons.math.distribution.GammaDistributionTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest"
call "org.apache.commons.math.distribution.GammaDistributionTest.GammaDistributionTest(1)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.ContinuousDistributionAbstractTest(1)"
contain "org.apache.commons.math.distribution.GammaDistributionTest" "org.apache.commons.math.distribution.GammaDistributionTest.GammaDistributionTest(1)"
call "org.apache.commons.math.distribution.GammaDistributionTest.makeDistribution(0)" "org.apache.commons.math.distribution.GammaDistributionImpl.GammaDistributionImpl(2)"
contain "org.apache.commons.math.distribution.GammaDistributionTest" "org.apache.commons.math.distribution.GammaDistributionTest.makeDistribution(0)"
contain "org.apache.commons.math.distribution.GammaDistributionTest" "org.apache.commons.math.distribution.GammaDistributionTest.makeCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.GammaDistributionTest" "org.apache.commons.math.distribution.GammaDistributionTest.makeCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.GammaDistributionTest.setup(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)"
call "org.apache.commons.math.distribution.GammaDistributionTest.setup(0)" "org.apache.commons.math.distribution.GammaDistributionTest.setTolerance(1)"
contain "org.apache.commons.math.distribution.GammaDistributionTest" "org.apache.commons.math.distribution.GammaDistributionTest.setup(0)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testParameterAccessors(0)" "org.apache.commons.math.distribution.GammaDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testParameterAccessors(0)" "org.apache.commons.math.distribution.GammaDistribution.getAlpha(0)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testParameterAccessors(0)" "org.apache.commons.math.distribution.GammaDistributionTest.assertEquals(3)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testParameterAccessors(0)" "org.apache.commons.math.distribution.GammaDistribution.setAlpha(1)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testParameterAccessors(0)" "org.apache.commons.math.distribution.GammaDistribution.getBeta(0)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testParameterAccessors(0)" "org.apache.commons.math.distribution.GammaDistribution.setBeta(1)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testParameterAccessors(0)" "org.apache.commons.math.distribution.GammaDistributionTest.fail(1)"
contain "org.apache.commons.math.distribution.GammaDistributionTest" "org.apache.commons.math.distribution.GammaDistributionTest.testParameterAccessors(0)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testProbabilities(0)" "org.apache.commons.math.distribution.GammaDistributionTest.testProbability(4)"
contain "org.apache.commons.math.distribution.GammaDistributionTest" "org.apache.commons.math.distribution.GammaDistributionTest.testProbabilities(0)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testValues(0)" "org.apache.commons.math.distribution.GammaDistributionTest.testValue(4)"
contain "org.apache.commons.math.distribution.GammaDistributionTest" "org.apache.commons.math.distribution.GammaDistributionTest.testValues(0)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testProbability(4)" "org.apache.commons.math.distribution.GammaDistributionImpl.GammaDistributionImpl(2)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testProbability(4)" "org.apache.commons.math.distribution.GammaDistribution.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testProbability(4)" "org.apache.commons.math.distribution.GammaDistributionTest.assertEquals(4)"
contain "org.apache.commons.math.distribution.GammaDistributionTest" "org.apache.commons.math.distribution.GammaDistributionTest.testProbability(4)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testValue(4)" "org.apache.commons.math.distribution.GammaDistributionImpl.GammaDistributionImpl(2)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testValue(4)" "org.apache.commons.math.distribution.GammaDistribution.inverseCumulativeProbability(1)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testValue(4)" "org.apache.commons.math.distribution.GammaDistributionTest.assertEquals(4)"
contain "org.apache.commons.math.distribution.GammaDistributionTest" "org.apache.commons.math.distribution.GammaDistributionTest.testValue(4)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.GammaDistributionTest.setInverseCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.GammaDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.GammaDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.GammaDistributionTest" "org.apache.commons.math.distribution.GammaDistributionTest.testInverseCumulativeProbabilityExtremes(0)"
reference "org.apache.commons.math.stat.descriptive.rank.MedianTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.rank.MedianTest" "org.apache.commons.math.stat.descriptive.rank.Median"
reference "org.apache.commons.math.stat.descriptive.rank.MedianTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.rank.MedianTest.MedianTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.rank.MedianTest" "org.apache.commons.math.stat.descriptive.rank.MedianTest.MedianTest(1)"
reference "org.apache.commons.math.stat.descriptive.rank.MedianTest.suite(0)" "org.apache.commons.math.stat.descriptive.rank.MedianTest.class$org$apache$commons$math$stat$descriptive$rank$MedianTest"
call "org.apache.commons.math.stat.descriptive.rank.MedianTest.suite(0)" "org.apache.commons.math.stat.descriptive.rank.MedianTest.class$(1)"
call "org.apache.commons.math.stat.descriptive.rank.MedianTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.rank.MedianTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.rank.MedianTest" "org.apache.commons.math.stat.descriptive.rank.MedianTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.rank.MedianTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.rank.Median.Median(0)"
contain "org.apache.commons.math.stat.descriptive.rank.MedianTest" "org.apache.commons.math.stat.descriptive.rank.MedianTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.rank.MedianTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.rank.MedianTest.median"
contain "org.apache.commons.math.stat.descriptive.rank.MedianTest" "org.apache.commons.math.stat.descriptive.rank.MedianTest.expectedValue(0)"
contain "org.apache.commons.math.stat.descriptive.rank.MedianTest" "org.apache.commons.math.stat.descriptive.rank.MedianTest.class$(1)"
reference "org.apache.commons.math.stat.descriptive.rank.MedianTest.stat" "org.apache.commons.math.stat.descriptive.rank.Median"
contain "org.apache.commons.math.stat.descriptive.rank.MedianTest" "org.apache.commons.math.stat.descriptive.rank.MedianTest.stat"
contain "org.apache.commons.math.stat.descriptive.rank.MedianTest" "org.apache.commons.math.stat.descriptive.rank.MedianTest.class$org$apache$commons$math$stat$descriptive$rank$MedianTest"
reference "org.apache.commons.math.ode.HighamHall54IntegratorTest" "org.apache.commons.math.ode.TestProblem1"
reference "org.apache.commons.math.ode.HighamHall54IntegratorTest" "org.apache.commons.math.ode.HighamHall54Integrator"
reference "org.apache.commons.math.ode.HighamHall54IntegratorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.HighamHall54IntegratorTest" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.HighamHall54IntegratorTest" "org.apache.commons.math.ode.TestProblemHandler"
reference "org.apache.commons.math.ode.HighamHall54IntegratorTest" "org.apache.commons.math.ode.TestProblem4"
reference "org.apache.commons.math.ode.HighamHall54IntegratorTest" "org.apache.commons.math.ode.TestProblem3"
reference "org.apache.commons.math.ode.HighamHall54IntegratorTest" "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler"
reference "org.apache.commons.math.ode.HighamHall54IntegratorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.HighamHall54IntegratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.HighamHall54IntegratorTest" "org.apache.commons.math.ode.FirstOrderIntegrator"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.HighamHall54IntegratorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.HighamHall54IntegratorTest" "org.apache.commons.math.ode.HighamHall54IntegratorTest.HighamHall54IntegratorTest(1)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.HighamHall54Integrator.HighamHall54Integrator(4)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.HighamHall54Integrator.integrate(5)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.HighamHall54IntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.HighamHall54IntegratorTest" "org.apache.commons.math.ode.HighamHall54IntegratorTest.testDimensionCheck(0)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.HighamHall54Integrator.HighamHall54Integrator(4)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.TestProblemHandler.TestProblemHandler(1)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.HighamHall54IntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.HighamHall54IntegratorTest" "org.apache.commons.math.ode.HighamHall54IntegratorTest.testMinStep(0)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.HighamHall54Integrator.HighamHall54Integrator(4)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblemHandler.TestProblemHandler(1)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblemHandler.getMaximalError(0)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.HighamHall54IntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblem1.getCalls(0)"
contain "org.apache.commons.math.ode.HighamHall54IntegratorTest" "org.apache.commons.math.ode.HighamHall54IntegratorTest.testIncreasingTolerance(0)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblem4.TestProblem4(0)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblem4.getFinalTime(0)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblem4.getInitialTime(0)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.HighamHall54Integrator.HighamHall54Integrator(4)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblemHandler.TestProblemHandler(1)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblem4.getSwitchingFunctions(0)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addSwitchingFunction(3)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblem4.getInitialState(0)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblem4.getDimension(0)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblemHandler.getMaximalError(0)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.HighamHall54IntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblemHandler.getLastTime(0)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.HighamHall54IntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.ode.HighamHall54IntegratorTest" "org.apache.commons.math.ode.HighamHall54IntegratorTest.testSwitchingFunctions(0)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.HighamHall54Integrator.HighamHall54Integrator(4)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler.KeplerHandler(1)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
contain "org.apache.commons.math.ode.HighamHall54IntegratorTest" "org.apache.commons.math.ode.HighamHall54IntegratorTest.testKepler(0)"
reference "org.apache.commons.math.ode.HighamHall54IntegratorTest.suite(0)" "org.apache.commons.math.ode.HighamHall54IntegratorTest.class$org$apache$commons$math$ode$HighamHall54IntegratorTest"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.suite(0)" "org.apache.commons.math.ode.HighamHall54IntegratorTest.class$(1)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.HighamHall54IntegratorTest" "org.apache.commons.math.ode.HighamHall54IntegratorTest.suite(0)"
contain "org.apache.commons.math.ode.HighamHall54IntegratorTest" "org.apache.commons.math.ode.HighamHall54IntegratorTest.class$(1)"
contain "org.apache.commons.math.ode.HighamHall54IntegratorTest" "org.apache.commons.math.ode.HighamHall54IntegratorTest.class$org$apache$commons$math$ode$HighamHall54IntegratorTest"
reference "org.apache.commons.math.stat.CertifiedDataTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.CertifiedDataTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics"
reference "org.apache.commons.math.stat.CertifiedDataTest" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
reference "org.apache.commons.math.stat.CertifiedDataTest" "junit.framework.TestCase"
call "org.apache.commons.math.stat.CertifiedDataTest.CertifiedDataTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.stat.CertifiedDataTest.CertifiedDataTest(1)" "org.apache.commons.math.stat.CertifiedDataTest.mean"
reference "org.apache.commons.math.stat.CertifiedDataTest.CertifiedDataTest(1)" "org.apache.commons.math.stat.CertifiedDataTest.std"
contain "org.apache.commons.math.stat.CertifiedDataTest" "org.apache.commons.math.stat.CertifiedDataTest.CertifiedDataTest(1)"
contain "org.apache.commons.math.stat.CertifiedDataTest" "org.apache.commons.math.stat.CertifiedDataTest.setUp(0)"
reference "org.apache.commons.math.stat.CertifiedDataTest.suite(0)" "org.apache.commons.math.stat.CertifiedDataTest.class$org$apache$commons$math$stat$CertifiedDataTest"
call "org.apache.commons.math.stat.CertifiedDataTest.suite(0)" "org.apache.commons.math.stat.CertifiedDataTest.class$(1)"
call "org.apache.commons.math.stat.CertifiedDataTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.CertifiedDataTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.CertifiedDataTest" "org.apache.commons.math.stat.CertifiedDataTest.suite(0)"
reference "org.apache.commons.math.stat.CertifiedDataTest.testUnivariateImpl(0)" "org.apache.commons.math.stat.CertifiedDataTest.class$org$apache$commons$math$stat$descriptive$SummaryStatisticsImpl"
call "org.apache.commons.math.stat.CertifiedDataTest.testUnivariateImpl(0)" "org.apache.commons.math.stat.CertifiedDataTest.class$(1)"
call "org.apache.commons.math.stat.CertifiedDataTest.testUnivariateImpl(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance(1)"
call "org.apache.commons.math.stat.CertifiedDataTest.testUnivariateImpl(0)" "org.apache.commons.math.stat.CertifiedDataTest.loadStats(2)"
reference "org.apache.commons.math.stat.CertifiedDataTest.testUnivariateImpl(0)" "org.apache.commons.math.stat.CertifiedDataTest.std"
call "org.apache.commons.math.stat.CertifiedDataTest.testUnivariateImpl(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getStandardDeviation(0)"
call "org.apache.commons.math.stat.CertifiedDataTest.testUnivariateImpl(0)" "org.apache.commons.math.stat.CertifiedDataTest.assertEquals(4)"
reference "org.apache.commons.math.stat.CertifiedDataTest.testUnivariateImpl(0)" "org.apache.commons.math.stat.CertifiedDataTest.mean"
call "org.apache.commons.math.stat.CertifiedDataTest.testUnivariateImpl(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)"
contain "org.apache.commons.math.stat.CertifiedDataTest" "org.apache.commons.math.stat.CertifiedDataTest.testUnivariateImpl(0)"
call "org.apache.commons.math.stat.CertifiedDataTest.testStoredUnivariateImpl(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance(0)"
call "org.apache.commons.math.stat.CertifiedDataTest.testStoredUnivariateImpl(0)" "org.apache.commons.math.stat.CertifiedDataTest.loadStats(2)"
reference "org.apache.commons.math.stat.CertifiedDataTest.testStoredUnivariateImpl(0)" "org.apache.commons.math.stat.CertifiedDataTest.std"
call "org.apache.commons.math.stat.CertifiedDataTest.testStoredUnivariateImpl(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getStandardDeviation(0)"
call "org.apache.commons.math.stat.CertifiedDataTest.testStoredUnivariateImpl(0)" "org.apache.commons.math.stat.CertifiedDataTest.assertEquals(4)"
reference "org.apache.commons.math.stat.CertifiedDataTest.testStoredUnivariateImpl(0)" "org.apache.commons.math.stat.CertifiedDataTest.mean"
call "org.apache.commons.math.stat.CertifiedDataTest.testStoredUnivariateImpl(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)"
contain "org.apache.commons.math.stat.CertifiedDataTest" "org.apache.commons.math.stat.CertifiedDataTest.testStoredUnivariateImpl(0)"
reference "org.apache.commons.math.stat.CertifiedDataTest.loadStats(2)" "org.apache.commons.math.stat.CertifiedDataTest.mean"
reference "org.apache.commons.math.stat.CertifiedDataTest.loadStats(2)" "org.apache.commons.math.stat.CertifiedDataTest.std"
call "org.apache.commons.math.stat.CertifiedDataTest.loadStats(2)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
call "org.apache.commons.math.stat.CertifiedDataTest.loadStats(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
contain "org.apache.commons.math.stat.CertifiedDataTest" "org.apache.commons.math.stat.CertifiedDataTest.loadStats(2)"
contain "org.apache.commons.math.stat.CertifiedDataTest" "org.apache.commons.math.stat.CertifiedDataTest.class$(1)"
contain "org.apache.commons.math.stat.CertifiedDataTest" "org.apache.commons.math.stat.CertifiedDataTest.mean"
contain "org.apache.commons.math.stat.CertifiedDataTest" "org.apache.commons.math.stat.CertifiedDataTest.std"
contain "org.apache.commons.math.stat.CertifiedDataTest" "org.apache.commons.math.stat.CertifiedDataTest.class$org$apache$commons$math$stat$CertifiedDataTest"
contain "org.apache.commons.math.stat.CertifiedDataTest" "org.apache.commons.math.stat.CertifiedDataTest.class$org$apache$commons$math$stat$descriptive$SummaryStatisticsImpl"
reference "org.apache.commons.math.complex.FrenchComplexFormatTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest"
call "org.apache.commons.math.complex.FrenchComplexFormatTest.FrenchComplexFormatTest(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.ComplexFormatAbstractTest(0)"
contain "org.apache.commons.math.complex.FrenchComplexFormatTest" "org.apache.commons.math.complex.FrenchComplexFormatTest.FrenchComplexFormatTest(0)"
contain "org.apache.commons.math.complex.FrenchComplexFormatTest" "org.apache.commons.math.complex.FrenchComplexFormatTest.getDecimalCharacter(0)"
contain "org.apache.commons.math.complex.FrenchComplexFormatTest" "org.apache.commons.math.complex.FrenchComplexFormatTest.getLocale(0)"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne2Function" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne2Function" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne2Function" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne2Function" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.Osborne2Function(4)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.Osborne2Function" "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.Osborne2Function(4)"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.parameters"
call "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.getJacobian(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.m"
contain "org.apache.commons.math.estimation.MinpackTest.Osborne2Function" "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.parameters"
call "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.m"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.y"
contain "org.apache.commons.math.estimation.MinpackTest.Osborne2Function" "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.getResiduals(0)"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.static {...}" "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.y"
contain "org.apache.commons.math.estimation.MinpackTest.Osborne2Function" "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.static {...}"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.y" "double[]"
contain "org.apache.commons.math.estimation.MinpackTest.Osborne2Function" "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.y"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.util.DefaultTransformer"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.util.NumberTransformer"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(1)"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(1)" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(2)"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(1)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(2)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(2)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.windowSize"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(2)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.list"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(2)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.transformer"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(2)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getValues(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.list"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getValues(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.windowSize"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getValues(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getElement(1)"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getValues(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getElement(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.windowSize"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getElement(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.list"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getElement(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.transformer"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getElement(1)" "org.apache.commons.math.util.NumberTransformer.transform(1)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getElement(1)" "org.apache.commons.math.MathException.printStackTrace(0)"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getElement(1)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getN(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.windowSize"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getN(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.list"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getN(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.addValue(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.list"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.addValue(1)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.addObject(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.list"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.addObject(1)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.clear(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.list"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.clear(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.apply(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getValues(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.apply(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.apply(1)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getTransformer(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.transformer"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getTransformer(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.setTransformer(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.transformer"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.setTransformer(1)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.setWindowSize(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.windowSize"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.setWindowSize(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.list"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.setWindowSize(1)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getWindowSize(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.windowSize"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getWindowSize(0)"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.list"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.transformer" "org.apache.commons.math.util.NumberTransformer"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.transformer"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.windowSize"
reference "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.BisectionSolver"
reference "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.QuinticFunction"
reference "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.UnivariateRealFunction"
reference "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.UnivariateRealSolver"
reference "org.apache.commons.math.analysis.BisectionSolverTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.analysis.BisectionSolverTest.BisectionSolverTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.BisectionSolverTest.BisectionSolverTest(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.BisectionSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.BisectionSolverTest.testSinZero(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.BisectionSolverTest.assertEquals(3)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getResult(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getIterationCount(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.BisectionSolverTest.assertTrue(1)"
contain "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.BisectionSolverTest.testQuinticZero(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetFunctionValueAccuracy(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetFunctionValueAccuracy(0)" "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetFunctionValueAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.setFunctionValueAccuracy(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetFunctionValueAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getFunctionValueAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetFunctionValueAccuracy(0)" "org.apache.commons.math.analysis.BisectionSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.BisectionSolverTest.testSetFunctionValueAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetFunctionValueAccuracy(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetFunctionValueAccuracy(0)" "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetFunctionValueAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getFunctionValueAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetFunctionValueAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.setFunctionValueAccuracy(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetFunctionValueAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.resetFunctionValueAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetFunctionValueAccuracy(0)" "org.apache.commons.math.analysis.BisectionSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.BisectionSolverTest.testResetFunctionValueAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetAbsoluteAccuracy(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetAbsoluteAccuracy(0)" "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetAbsoluteAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.setAbsoluteAccuracy(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetAbsoluteAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetAbsoluteAccuracy(0)" "org.apache.commons.math.analysis.BisectionSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.BisectionSolverTest.testSetAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetAbsoluteAccuracy(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetAbsoluteAccuracy(0)" "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetAbsoluteAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetAbsoluteAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.setAbsoluteAccuracy(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetAbsoluteAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.resetAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetAbsoluteAccuracy(0)" "org.apache.commons.math.analysis.BisectionSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.BisectionSolverTest.testResetAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetMaximalIterationCount(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetMaximalIterationCount(0)" "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetMaximalIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.setMaximalIterationCount(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetMaximalIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getMaximalIterationCount(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetMaximalIterationCount(0)" "org.apache.commons.math.analysis.BisectionSolverTest.assertEquals(2)"
contain "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.BisectionSolverTest.testSetMaximalIterationCount(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetMaximalIterationCount(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetMaximalIterationCount(0)" "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetMaximalIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getMaximalIterationCount(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetMaximalIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.setMaximalIterationCount(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetMaximalIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.resetMaximalIterationCount(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetMaximalIterationCount(0)" "org.apache.commons.math.analysis.BisectionSolverTest.assertEquals(2)"
contain "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.BisectionSolverTest.testResetMaximalIterationCount(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetRelativeAccuracy(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetRelativeAccuracy(0)" "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetRelativeAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.setRelativeAccuracy(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetRelativeAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetRelativeAccuracy(0)" "org.apache.commons.math.analysis.BisectionSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.BisectionSolverTest.testSetRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetRelativeAccuracy(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetRelativeAccuracy(0)" "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetRelativeAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetRelativeAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.setRelativeAccuracy(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetRelativeAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.resetRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetRelativeAccuracy(0)" "org.apache.commons.math.analysis.BisectionSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.BisectionSolverTest.testResetRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSerialization(0)" "org.apache.commons.math.TestUtils.serializeAndRecover(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.BisectionSolver.solve(2)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.BisectionSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.BisectionSolverTest.assertEquals(3)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.BisectionSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.BisectionSolver.setRelativeAccuracy(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.BisectionSolver.resetRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.setRelativeAccuracy(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.resetRelativeAccuracy(0)"
contain "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.BisectionSolverTest.testSerialization(0)"
reference "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest" "org.apache.commons.math.DuplicateSampleAbscissaException"
reference "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest" "junit.framework.TestCase"
call "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.DuplicateSampleAbscissaExceptionTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest" "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.DuplicateSampleAbscissaExceptionTest(0)"
call "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.testConstructor(0)" "org.apache.commons.math.DuplicateSampleAbscissaException.DuplicateSampleAbscissaException(3)"
call "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.testConstructor(0)" "org.apache.commons.math.DuplicateSampleAbscissaException.getCause(0)"
call "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.testConstructor(0)" "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.assertNull(1)"
call "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.testConstructor(0)" "org.apache.commons.math.DuplicateSampleAbscissaException.getMessage(0)"
call "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.testConstructor(0)" "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.assertNotNull(1)"
call "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.testConstructor(0)" "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.assertTrue(1)"
call "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.testConstructor(0)" "org.apache.commons.math.DuplicateSampleAbscissaException.getDuplicateAbscissa(0)"
call "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.testConstructor(0)" "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.assertEquals(3)"
call "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.testConstructor(0)" "org.apache.commons.math.DuplicateSampleAbscissaException.getMessage(1)"
call "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.testConstructor(0)" "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.assertFalse(1)"
contain "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest" "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.testConstructor(0)"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.BardFunction"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.MeyerFunction"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.WatsonFunction"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.Osborne1Function"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.Osborne2Function"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.EstimationException"
reference "org.apache.commons.math.estimation.MinpackTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.estimation.MinpackTest" "junit.framework.TestCase"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
call "org.apache.commons.math.estimation.MinpackTest.MinpackTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.MinpackTest(1)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackLinearFullRank(0)" "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.LinearFullRankFunction(5)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackLinearFullRank(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackLinearFullRank(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackLinearRank1(0)" "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.LinearRank1Function(5)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackLinearRank1(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackLinearRank1(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackLinearRank1ZeroColsAndRows(0)" "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.LinearRank1ZeroColsAndRowsFunction(3)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackLinearRank1ZeroColsAndRows(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackLinearRank1ZeroColsAndRows(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackRosenbrok(0)" "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction.RosenbrockFunction(2)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackRosenbrok(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackRosenbrok(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackHelicalValley(0)" "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction.HelicalValleyFunction(2)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackHelicalValley(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackHelicalValley(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackPowellSingular(0)" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.PowellSingularFunction(2)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackPowellSingular(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackPowellSingular(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackFreudensteinRoth(0)" "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction.FreudensteinRothFunction(4)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackFreudensteinRoth(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackFreudensteinRoth(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackBard(0)" "org.apache.commons.math.estimation.MinpackTest.BardFunction.BardFunction(4)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackBard(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackBard(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackKowalikOsborne(0)" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.KowalikOsborneFunction(4)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackKowalikOsborne(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackKowalikOsborne(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackMeyer(0)" "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.MeyerFunction(4)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackMeyer(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackMeyer(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackWatson(0)" "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.WatsonFunction(5)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackWatson(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackWatson(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackBox3Dimensional(0)" "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction.Box3DimensionalFunction(3)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackBox3Dimensional(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackBox3Dimensional(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackJennrichSampson(0)" "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction.JennrichSampsonFunction(5)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackJennrichSampson(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackJennrichSampson(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackBrownDennis(0)" "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction.BrownDennisFunction(5)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackBrownDennis(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackBrownDennis(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackChebyquad(0)" "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.ChebyquadFunction(6)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackChebyquad(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackChebyquad(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackBrownAlmostLinear(0)" "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.BrownAlmostLinearFunction(5)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackBrownAlmostLinear(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackBrownAlmostLinear(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackOsborne1(0)" "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.Osborne1Function(4)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackOsborne1(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackOsborne1(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackOsborne2(0)" "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.Osborne2Function(4)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackOsborne2(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackOsborne2(0)"
call "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
call "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.getN(0)"
call "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setMaxCostEval(1)"
call "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setCostRelativeTolerance(1)"
call "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setParRelativeTolerance(1)"
call "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setOrthoTolerance(1)"
call "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalStartCost(1)"
call "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)" "org.apache.commons.math.estimation.MinpackTest.assertTrue(1)"
call "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
call "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)" "org.apache.commons.math.estimation.MinpackTest.assertFalse(1)"
call "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalMinCost(1)"
call "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalMinParams(0)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
reference "org.apache.commons.math.estimation.MinpackTest.suite(0)" "org.apache.commons.math.estimation.MinpackTest.class$org$apache$commons$math$estimation$MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.suite(0)" "org.apache.commons.math.estimation.MinpackTest.class$(1)"
call "org.apache.commons.math.estimation.MinpackTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.suite(0)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.class$(1)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.class$org$apache$commons$math$estimation$MinpackTest"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.1" "org.apache.commons.math.ode.DormandPrince853IntegratorTest"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker" "org.apache.commons.math.optimization.ConvergenceChecker"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker" "org.apache.commons.math.optimization.PointCostPair"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker" "org.apache.commons.math.optimization.MultiDirectionalTest"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker.ValueChecker(1)" "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker.threshold"
contain "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker" "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker.ValueChecker(1)"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker.converged(1)" "org.apache.commons.math.optimization.PointCostPair.cost"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker.converged(1)" "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker.threshold"
contain "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker" "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker.converged(1)"
contain "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker" "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker.threshold"
reference "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.stat.inference.ChiSquareTestImpl"
reference "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataImpl"
reference "org.apache.commons.math.random.RandomDataTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.stat.Frequency"
reference "org.apache.commons.math.random.RandomDataTest" "int[]"
reference "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.RetryTestCase"
reference "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
call "org.apache.commons.math.random.RandomDataTest.RandomDataTest(1)" "org.apache.commons.math.RetryTestCase.RetryTestCase(1)"
reference "org.apache.commons.math.random.RandomDataTest.RandomDataTest(1)" "org.apache.commons.math.random.RandomDataTest.smallSampleSize"
reference "org.apache.commons.math.random.RandomDataTest.RandomDataTest(1)" "org.apache.commons.math.random.RandomDataTest.expected"
reference "org.apache.commons.math.random.RandomDataTest.RandomDataTest(1)" "org.apache.commons.math.random.RandomDataTest.largeSampleSize"
reference "org.apache.commons.math.random.RandomDataTest.RandomDataTest(1)" "org.apache.commons.math.random.RandomDataTest.tolerance"
reference "org.apache.commons.math.random.RandomDataTest.RandomDataTest(1)" "org.apache.commons.math.random.RandomDataTest.hex"
reference "org.apache.commons.math.random.RandomDataTest.RandomDataTest(1)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.RandomDataTest(1)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.ChiSquareTestImpl(0)"
reference "org.apache.commons.math.random.RandomDataTest.RandomDataTest(1)" "org.apache.commons.math.random.RandomDataTest.testStatistic"
call "org.apache.commons.math.random.RandomDataTest.RandomDataTest(1)" "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(0)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.RandomDataTest(1)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.setUp(0)"
reference "org.apache.commons.math.random.RandomDataTest.suite(0)" "org.apache.commons.math.random.RandomDataTest.class$org$apache$commons$math$random$RandomDataTest"
call "org.apache.commons.math.random.RandomDataTest.suite(0)" "org.apache.commons.math.random.RandomDataTest.class$(1)"
call "org.apache.commons.math.random.RandomDataTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.random.RandomDataTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.suite(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextIntExtremeValues(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testNextIntExtremeValues(0)" "org.apache.commons.math.random.RandomDataImpl.nextInt(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextIntExtremeValues(0)" "org.apache.commons.math.random.RandomDataTest.assertFalse(1)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testNextIntExtremeValues(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextLongExtremeValues(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testNextLongExtremeValues(0)" "org.apache.commons.math.random.RandomDataImpl.nextLong(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextLongExtremeValues(0)" "org.apache.commons.math.random.RandomDataTest.assertFalse(1)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testNextLongExtremeValues(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextInt(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testNextInt(0)" "org.apache.commons.math.random.RandomDataImpl.nextInt(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextInt(0)" "org.apache.commons.math.random.RandomDataTest.fail(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextInt(0)" "org.apache.commons.math.stat.Frequency.Frequency(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextInt(0)" "org.apache.commons.math.random.RandomDataTest.smallSampleSize"
call "org.apache.commons.math.random.RandomDataTest.testNextInt(0)" "org.apache.commons.math.random.RandomDataTest.assertTrue(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextInt(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextInt(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
reference "org.apache.commons.math.random.RandomDataTest.testNextInt(0)" "org.apache.commons.math.random.RandomDataTest.testStatistic"
reference "org.apache.commons.math.random.RandomDataTest.testNextInt(0)" "org.apache.commons.math.random.RandomDataTest.expected"
call "org.apache.commons.math.random.RandomDataTest.testNextInt(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testNextInt(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextLong(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testNextLong(0)" "org.apache.commons.math.random.RandomDataImpl.nextLong(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextLong(0)" "org.apache.commons.math.random.RandomDataTest.fail(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextLong(0)" "org.apache.commons.math.stat.Frequency.Frequency(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextLong(0)" "org.apache.commons.math.random.RandomDataTest.smallSampleSize"
call "org.apache.commons.math.random.RandomDataTest.testNextLong(0)" "org.apache.commons.math.random.RandomDataTest.assertTrue(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextLong(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextLong(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
reference "org.apache.commons.math.random.RandomDataTest.testNextLong(0)" "org.apache.commons.math.random.RandomDataTest.testStatistic"
reference "org.apache.commons.math.random.RandomDataTest.testNextLong(0)" "org.apache.commons.math.random.RandomDataTest.expected"
call "org.apache.commons.math.random.RandomDataTest.testNextLong(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testNextLong(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextSecureLong(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureLong(0)" "org.apache.commons.math.random.RandomDataImpl.nextSecureLong(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureLong(0)" "org.apache.commons.math.random.RandomDataTest.fail(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureLong(0)" "org.apache.commons.math.stat.Frequency.Frequency(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextSecureLong(0)" "org.apache.commons.math.random.RandomDataTest.smallSampleSize"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureLong(0)" "org.apache.commons.math.random.RandomDataTest.assertTrue(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureLong(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureLong(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
reference "org.apache.commons.math.random.RandomDataTest.testNextSecureLong(0)" "org.apache.commons.math.random.RandomDataTest.testStatistic"
reference "org.apache.commons.math.random.RandomDataTest.testNextSecureLong(0)" "org.apache.commons.math.random.RandomDataTest.expected"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureLong(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testNextSecureLong(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextSecureInt(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureInt(0)" "org.apache.commons.math.random.RandomDataImpl.nextSecureInt(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureInt(0)" "org.apache.commons.math.random.RandomDataTest.fail(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureInt(0)" "org.apache.commons.math.stat.Frequency.Frequency(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextSecureInt(0)" "org.apache.commons.math.random.RandomDataTest.smallSampleSize"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureInt(0)" "org.apache.commons.math.random.RandomDataTest.assertTrue(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureInt(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureInt(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
reference "org.apache.commons.math.random.RandomDataTest.testNextSecureInt(0)" "org.apache.commons.math.random.RandomDataTest.testStatistic"
reference "org.apache.commons.math.random.RandomDataTest.testNextSecureInt(0)" "org.apache.commons.math.random.RandomDataTest.expected"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureInt(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testNextSecureInt(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextPoisson(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testNextPoisson(0)" "org.apache.commons.math.random.RandomDataImpl.nextPoisson(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextPoisson(0)" "org.apache.commons.math.random.RandomDataTest.fail(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextPoisson(0)" "org.apache.commons.math.stat.Frequency.Frequency(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextPoisson(0)" "org.apache.commons.math.random.RandomDataTest.largeSampleSize"
call "org.apache.commons.math.random.RandomDataTest.testNextPoisson(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextPoisson(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextPoisson(0)" "org.apache.commons.math.stat.Frequency.getSumFreq(0)"
call "org.apache.commons.math.random.RandomDataTest.testNextPoisson(0)" "org.apache.commons.math.random.RandomDataTest.assertEquals(4)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testNextPoisson(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextHex(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testNextHex(0)" "org.apache.commons.math.random.RandomDataImpl.nextHexString(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextHex(0)" "org.apache.commons.math.random.RandomDataTest.fail(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextHex(0)" "org.apache.commons.math.stat.Frequency.Frequency(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextHex(0)" "org.apache.commons.math.random.RandomDataTest.smallSampleSize"
call "org.apache.commons.math.random.RandomDataTest.testNextHex(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
reference "org.apache.commons.math.random.RandomDataTest.testNextHex(0)" "org.apache.commons.math.random.RandomDataTest.hex"
call "org.apache.commons.math.random.RandomDataTest.testNextHex(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
reference "org.apache.commons.math.random.RandomDataTest.testNextHex(0)" "org.apache.commons.math.random.RandomDataTest.testStatistic"
call "org.apache.commons.math.random.RandomDataTest.testNextHex(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextHex(0)" "org.apache.commons.math.random.RandomDataTest.assertTrue(2)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testNextHex(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextSecureHex(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureHex(0)" "org.apache.commons.math.random.RandomDataImpl.nextSecureHexString(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureHex(0)" "org.apache.commons.math.random.RandomDataTest.fail(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureHex(0)" "org.apache.commons.math.stat.Frequency.Frequency(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextSecureHex(0)" "org.apache.commons.math.random.RandomDataTest.smallSampleSize"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureHex(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
reference "org.apache.commons.math.random.RandomDataTest.testNextSecureHex(0)" "org.apache.commons.math.random.RandomDataTest.hex"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureHex(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
reference "org.apache.commons.math.random.RandomDataTest.testNextSecureHex(0)" "org.apache.commons.math.random.RandomDataTest.testStatistic"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureHex(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureHex(0)" "org.apache.commons.math.random.RandomDataTest.assertTrue(2)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testNextSecureHex(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextUniform(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testNextUniform(0)" "org.apache.commons.math.random.RandomDataImpl.nextUniform(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextUniform(0)" "org.apache.commons.math.random.RandomDataTest.fail(1)"
reference "org.apache.commons.math.random.RandomDataTest.testNextUniform(0)" "org.apache.commons.math.random.RandomDataTest.testStatistic"
call "org.apache.commons.math.random.RandomDataTest.testNextUniform(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextUniform(0)" "org.apache.commons.math.random.RandomDataTest.assertTrue(2)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testNextUniform(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextUniformExclusiveEndpoints(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testNextUniformExclusiveEndpoints(0)" "org.apache.commons.math.random.RandomDataImpl.nextUniform(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextUniformExclusiveEndpoints(0)" "org.apache.commons.math.random.RandomDataTest.assertTrue(1)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testNextUniformExclusiveEndpoints(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextGaussian(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testNextGaussian(0)" "org.apache.commons.math.random.RandomDataImpl.nextGaussian(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextGaussian(0)" "org.apache.commons.math.random.RandomDataTest.fail(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextGaussian(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextGaussian(0)" "org.apache.commons.math.random.RandomDataTest.largeSampleSize"
call "org.apache.commons.math.random.RandomDataTest.testNextGaussian(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextGaussian(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)"
call "org.apache.commons.math.random.RandomDataTest.testNextGaussian(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getStandardDeviation(0)"
call "org.apache.commons.math.random.RandomDataTest.testNextGaussian(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getN(0)"
call "org.apache.commons.math.random.RandomDataTest.testNextGaussian(0)" "org.apache.commons.math.random.RandomDataTest.assertTrue(1)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testNextGaussian(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextExponential(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testNextExponential(0)" "org.apache.commons.math.random.RandomDataImpl.nextExponential(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextExponential(0)" "org.apache.commons.math.random.RandomDataTest.fail(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextExponential(0)" "org.apache.commons.math.random.RandomDataTest.assertEquals(4)"
reference "org.apache.commons.math.random.RandomDataTest.testNextExponential(0)" "org.apache.commons.math.random.RandomDataTest.largeSampleSize"
call "org.apache.commons.math.random.RandomDataTest.testNextExponential(0)" "org.apache.commons.math.random.RandomDataTest.assertTrue(2)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testNextExponential(0)"
reference "org.apache.commons.math.random.RandomDataTest.testConfig(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testConfig(0)" "org.apache.commons.math.random.RandomDataImpl.reSeed(1)"
call "org.apache.commons.math.random.RandomDataTest.testConfig(0)" "org.apache.commons.math.random.RandomDataImpl.nextUniform(2)"
call "org.apache.commons.math.random.RandomDataTest.testConfig(0)" "org.apache.commons.math.random.RandomDataImpl.reSeed(0)"
call "org.apache.commons.math.random.RandomDataTest.testConfig(0)" "org.apache.commons.math.random.RandomDataTest.assertTrue(2)"
call "org.apache.commons.math.random.RandomDataTest.testConfig(0)" "org.apache.commons.math.random.RandomDataTest.assertEquals(4)"
call "org.apache.commons.math.random.RandomDataTest.testConfig(0)" "org.apache.commons.math.random.RandomDataImpl.reSeedSecure(1)"
call "org.apache.commons.math.random.RandomDataTest.testConfig(0)" "org.apache.commons.math.random.RandomDataImpl.nextSecureHexString(1)"
call "org.apache.commons.math.random.RandomDataTest.testConfig(0)" "org.apache.commons.math.random.RandomDataImpl.reSeedSecure(0)"
call "org.apache.commons.math.random.RandomDataTest.testConfig(0)" "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(0)"
call "org.apache.commons.math.random.RandomDataTest.testConfig(0)" "org.apache.commons.math.random.RandomDataImpl.nextLong(2)"
call "org.apache.commons.math.random.RandomDataTest.testConfig(0)" "org.apache.commons.math.random.RandomDataImpl.nextSecureLong(2)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testConfig(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextSample(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testNextSample(0)" "org.apache.commons.math.random.RandomDataImpl.nextSample(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextSample(0)" "org.apache.commons.math.random.RandomDataTest.findSample(2)"
reference "org.apache.commons.math.random.RandomDataTest.testNextSample(0)" "org.apache.commons.math.random.RandomDataTest.testStatistic"
call "org.apache.commons.math.random.RandomDataTest.testNextSample(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextSample(0)" "org.apache.commons.math.random.RandomDataTest.assertTrue(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextSample(0)" "org.apache.commons.math.random.RandomDataTest.fail(1)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testNextSample(0)"
call "org.apache.commons.math.random.RandomDataTest.findSample(2)" "org.apache.commons.math.random.RandomDataTest.fail(1)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.findSample(2)"
reference "org.apache.commons.math.random.RandomDataTest.testNextPermutation(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testNextPermutation(0)" "org.apache.commons.math.random.RandomDataImpl.nextPermutation(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextPermutation(0)" "org.apache.commons.math.random.RandomDataTest.findPerm(2)"
reference "org.apache.commons.math.random.RandomDataTest.testNextPermutation(0)" "org.apache.commons.math.random.RandomDataTest.testStatistic"
call "org.apache.commons.math.random.RandomDataTest.testNextPermutation(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextPermutation(0)" "org.apache.commons.math.random.RandomDataTest.assertTrue(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextPermutation(0)" "org.apache.commons.math.random.RandomDataTest.fail(1)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testNextPermutation(0)"
call "org.apache.commons.math.random.RandomDataTest.findPerm(2)" "org.apache.commons.math.random.RandomDataTest.fail(1)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.findPerm(2)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.class$(1)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.smallSampleSize"
reference "org.apache.commons.math.random.RandomDataTest.expected" "double[]"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.expected"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.largeSampleSize"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.tolerance"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.hex"
reference "org.apache.commons.math.random.RandomDataTest.randomData" "org.apache.commons.math.random.RandomDataImpl"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.randomData"
reference "org.apache.commons.math.random.RandomDataTest.testStatistic" "org.apache.commons.math.stat.inference.ChiSquareTestImpl"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testStatistic"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.class$org$apache$commons$math$random$RandomDataTest"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.util.TransformerMap"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Foo"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Bar"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "junit.framework.TestCase"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.one"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.two"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.three"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.mean"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.sumSq"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.sum"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.var"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.std"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.n"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.min"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.max"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.skewness"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.kurtosis"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.tolerance"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.util.TransformerMap.TransformerMap(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.transformers"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.class$org$apache$commons$math$stat$descriptive$MixedListUnivariateImplTest$Foo"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.class$(1)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.1.{...}"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.util.TransformerMap.putTransformer(2)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.class$org$apache$commons$math$stat$descriptive$MixedListUnivariateImplTest$Bar"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.2.{...}"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.setUp(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.suite(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.class$org$apache$commons$math$stat$descriptive$MixedListUnivariateImplTest"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.suite(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.class$(1)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.suite(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.transformers"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(2)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getN(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.tolerance"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.assertEquals(4)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.one"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.two"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.three"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.n"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.sum"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSum(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.sumSq"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSumsq(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.var"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVariance(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.std"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getStandardDeviation(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.mean"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.min"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMin(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.max"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMax(0)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.clear(0)"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.transformers"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(2)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.assertTrue(2)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getStandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVariance(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.one"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testN0andN1Conditions(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.transformers"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(2)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.addObject(1)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Foo.Foo(0)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Bar.Bar(0)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getMean(0)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.assertEquals(4)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getVariance(0)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getSkewness(0)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getKurtosis(0)"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testSkewAndKurtosis(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.transformers"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(2)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.setWindowSize(1)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.addValue(1)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getGeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.assertEquals(4)"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testProductAndGeometricMean(0)"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.class$(1)"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.one"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.two"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.three"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.mean"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.sumSq"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.sum"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.var"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.std"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.n"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.min"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.max"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.skewness"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.kurtosis"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.tolerance"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.transformers" "org.apache.commons.math.util.TransformerMap"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.transformers"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.class$org$apache$commons$math$stat$descriptive$MixedListUnivariateImplTest$Foo"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.class$org$apache$commons$math$stat$descriptive$MixedListUnivariateImplTest$Bar"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.class$org$apache$commons$math$stat$descriptive$MixedListUnivariateImplTest"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Foo" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Foo.Foo(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Foo.this$0"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Foo" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Foo.Foo(0)"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Foo" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Foo.heresFoo(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Foo.this$0" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Foo" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Foo.this$0"
reference "org.apache.commons.math.distribution.FDistributionTest" "org.apache.commons.math.distribution.FDistributionImpl"
reference "org.apache.commons.math.distribution.FDistributionTest" "org.apache.commons.math.distribution.FDistribution"
reference "org.apache.commons.math.distribution.FDistributionTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest"
call "org.apache.commons.math.distribution.FDistributionTest.FDistributionTest(1)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.ContinuousDistributionAbstractTest(1)"
contain "org.apache.commons.math.distribution.FDistributionTest" "org.apache.commons.math.distribution.FDistributionTest.FDistributionTest(1)"
call "org.apache.commons.math.distribution.FDistributionTest.makeDistribution(0)" "org.apache.commons.math.distribution.FDistributionImpl.FDistributionImpl(2)"
contain "org.apache.commons.math.distribution.FDistributionTest" "org.apache.commons.math.distribution.FDistributionTest.makeDistribution(0)"
contain "org.apache.commons.math.distribution.FDistributionTest" "org.apache.commons.math.distribution.FDistributionTest.makeCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.FDistributionTest" "org.apache.commons.math.distribution.FDistributionTest.makeCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.FDistributionTest.setup(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)"
call "org.apache.commons.math.distribution.FDistributionTest.setup(0)" "org.apache.commons.math.distribution.FDistributionTest.setTolerance(1)"
contain "org.apache.commons.math.distribution.FDistributionTest" "org.apache.commons.math.distribution.FDistributionTest.setup(0)"
call "org.apache.commons.math.distribution.FDistributionTest.testCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.FDistributionTest.setCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.FDistributionTest.testCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.FDistributionTest.setCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.FDistributionTest.testCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.FDistributionTest.verifyCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.FDistributionTest" "org.apache.commons.math.distribution.FDistributionTest.testCumulativeProbabilityExtremes(0)"
call "org.apache.commons.math.distribution.FDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.FDistributionTest.setInverseCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.FDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.FDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.FDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.FDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.FDistributionTest" "org.apache.commons.math.distribution.FDistributionTest.testInverseCumulativeProbabilityExtremes(0)"
call "org.apache.commons.math.distribution.FDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.FDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.FDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.FDistribution.getNumeratorDegreesOfFreedom(0)"
call "org.apache.commons.math.distribution.FDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.FDistributionTest.assertEquals(3)"
call "org.apache.commons.math.distribution.FDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.FDistribution.setNumeratorDegreesOfFreedom(1)"
call "org.apache.commons.math.distribution.FDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.FDistribution.getDenominatorDegreesOfFreedom(0)"
call "org.apache.commons.math.distribution.FDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.FDistribution.setDenominatorDegreesOfFreedom(1)"
call "org.apache.commons.math.distribution.FDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.FDistributionTest.fail(1)"
contain "org.apache.commons.math.distribution.FDistributionTest" "org.apache.commons.math.distribution.FDistributionTest.testDfAccessors(0)"
call "org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(0)" "org.apache.commons.math.distribution.FDistributionImpl.FDistributionImpl(2)"
call "org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(0)" "org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(0)" "org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(1)"
call "org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(0)" "org.apache.commons.math.distribution.FDistributionTest.assertEquals(3)"
contain "org.apache.commons.math.distribution.FDistributionTest" "org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.analysis.UnivariateRealSolverUtils"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.analysis.UnivariateRealFunction"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.UnivariateRealSolverUtilsTest(0)" "junit.framework.TestCase.TestCase(0)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.UnivariateRealSolverUtilsTest(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.UnivariateRealSolverUtilsTest(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.sin"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.UnivariateRealSolverUtilsTest(0)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveNull(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(3)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveNull(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.fail(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveNull(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveBadParameters(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.sin"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveBadParameters(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(4)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveBadParameters(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveSin(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.sin"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveSin(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(3)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveSin(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveSin(0)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveAccuracyNull(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(4)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveAccuracyNull(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.fail(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveAccuracyNull(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveAccuracySin(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.sin"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveAccuracySin(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(4)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveAccuracySin(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveAccuracySin(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveNoRoot(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.sin"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveNoRoot(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(3)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveNoRoot(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.fail(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveNoRoot(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testBracketSin(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.sin"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testBracketSin(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket(4)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testBracketSin(0)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testBracketSin(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.assertTrue(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testBracketSin(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testBracketCornerSolution(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.sin"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testBracketCornerSolution(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket(4)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testBracketCornerSolution(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.fail(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testBracketCornerSolution(0)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testBadParameters(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket(4)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testBadParameters(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.fail(1)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testBadParameters(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.sin"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testBadParameters(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket(5)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testBadParameters(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.sin" "org.apache.commons.math.analysis.UnivariateRealFunction"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.sin"
reference "org.apache.commons.math.FunctionEvaluationExceptionTest" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.FunctionEvaluationExceptionTest" "junit.framework.TestCase"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.FunctionEvaluationExceptionTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.FunctionEvaluationExceptionTest" "org.apache.commons.math.FunctionEvaluationExceptionTest.FunctionEvaluationExceptionTest(0)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructor(0)" "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(1)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructor(0)" "org.apache.commons.math.FunctionEvaluationException.getCause(0)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructor(0)" "org.apache.commons.math.FunctionEvaluationExceptionTest.assertNull(1)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructor(0)" "org.apache.commons.math.FunctionEvaluationException.getMessage(0)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructor(0)" "org.apache.commons.math.FunctionEvaluationExceptionTest.assertNotNull(1)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructor(0)" "org.apache.commons.math.FunctionEvaluationExceptionTest.assertTrue(1)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructor(0)" "org.apache.commons.math.FunctionEvaluationException.getArgument(0)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructor(0)" "org.apache.commons.math.FunctionEvaluationExceptionTest.assertEquals(3)"
contain "org.apache.commons.math.FunctionEvaluationExceptionTest" "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructor(0)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(3)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.FunctionEvaluationException.getCause(0)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.FunctionEvaluationExceptionTest.assertNull(1)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.FunctionEvaluationException.getPattern(0)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.FunctionEvaluationExceptionTest.assertEquals(2)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.FunctionEvaluationException.getArguments(0)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.FunctionEvaluationExceptionTest.assertEquals(2)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.FunctionEvaluationExceptionTest.assertEquals(2)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.FunctionEvaluationException.getMessage(0)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.FunctionEvaluationExceptionTest.assertFalse(1)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.FunctionEvaluationException.getMessage(1)"
contain "org.apache.commons.math.FunctionEvaluationExceptionTest" "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArguments(0)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(4)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.FunctionEvaluationException.getCause(0)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.FunctionEvaluationExceptionTest.assertEquals(2)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.FunctionEvaluationException.getPattern(0)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.FunctionEvaluationExceptionTest.assertEquals(2)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.FunctionEvaluationException.getArguments(0)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.FunctionEvaluationExceptionTest.assertEquals(2)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.FunctionEvaluationException.getMessage(0)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.FunctionEvaluationExceptionTest.assertFalse(1)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.FunctionEvaluationException.getMessage(1)"
contain "org.apache.commons.math.FunctionEvaluationExceptionTest" "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArgumentsCause(0)"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.LinearRank1ZeroColsAndRowsFunction(3)" "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.buildArray(2)"
call "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.LinearRank1ZeroColsAndRowsFunction(3)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction" "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.LinearRank1ZeroColsAndRowsFunction(3)"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.m"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.n"
contain "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction" "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.m"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.n"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction" "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.getResiduals(0)"
reference "org.apache.commons.math.stat.inference.TTestFactoryTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.inference.TTestFactoryTest" "org.apache.commons.math.stat.inference.TTestTest"
reference "org.apache.commons.math.stat.inference.TTestFactoryTest" "org.apache.commons.math.stat.inference.TestUtils"
call "org.apache.commons.math.stat.inference.TTestFactoryTest.TTestFactoryTest(1)" "org.apache.commons.math.stat.inference.TTestTest.TTestTest(1)"
contain "org.apache.commons.math.stat.inference.TTestFactoryTest" "org.apache.commons.math.stat.inference.TTestFactoryTest.TTestFactoryTest(1)"
call "org.apache.commons.math.stat.inference.TTestFactoryTest.setUp(0)" "org.apache.commons.math.stat.inference.TestUtils.getTTest(0)"
reference "org.apache.commons.math.stat.inference.TTestFactoryTest.setUp(0)" "org.apache.commons.math.stat.inference.TTestFactoryTest.testStatistic"
contain "org.apache.commons.math.stat.inference.TTestFactoryTest" "org.apache.commons.math.stat.inference.TTestFactoryTest.setUp(0)"
reference "org.apache.commons.math.stat.inference.TTestFactoryTest.suite(0)" "org.apache.commons.math.stat.inference.TTestFactoryTest.class$org$apache$commons$math$stat$inference$TTestFactoryTest"
call "org.apache.commons.math.stat.inference.TTestFactoryTest.suite(0)" "org.apache.commons.math.stat.inference.TTestFactoryTest.class$(1)"
call "org.apache.commons.math.stat.inference.TTestFactoryTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.inference.TTestFactoryTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.inference.TTestFactoryTest" "org.apache.commons.math.stat.inference.TTestFactoryTest.suite(0)"
contain "org.apache.commons.math.stat.inference.TTestFactoryTest" "org.apache.commons.math.stat.inference.TTestFactoryTest.class$(1)"
contain "org.apache.commons.math.stat.inference.TTestFactoryTest" "org.apache.commons.math.stat.inference.TTestFactoryTest.class$org$apache$commons$math$stat$inference$TTestFactoryTest"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest" "org.apache.commons.math.random.RandomDataImpl"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest" "junit.framework.TestCase"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest" "org.apache.commons.math.random.RandomData"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.DescriptiveStatisticsImplTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.DescriptiveStatisticsImplTest(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.one"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.DescriptiveStatisticsImplTest(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.two"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.DescriptiveStatisticsImplTest(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.three"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.DescriptiveStatisticsImplTest(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.mean"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.DescriptiveStatisticsImplTest(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.sumSq"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.DescriptiveStatisticsImplTest(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.sum"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.DescriptiveStatisticsImplTest(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.var"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.DescriptiveStatisticsImplTest(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.std"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.DescriptiveStatisticsImplTest(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.n"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.DescriptiveStatisticsImplTest(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.min"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.DescriptiveStatisticsImplTest(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.max"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.DescriptiveStatisticsImplTest(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.skewness"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.DescriptiveStatisticsImplTest(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.kurtosis"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.DescriptiveStatisticsImplTest(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.tolerance"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.DescriptiveStatisticsImplTest(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.setUp(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.suite(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.class$org$apache$commons$math$stat$descriptive$DescriptiveStatisticsImplTest"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.suite(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.class$(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getN(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.tolerance"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.assertEquals(4)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.one"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.two"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.three"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.n"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.sum"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSum(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.sumSq"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSumsq(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.var"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVariance(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.std"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getStandardDeviation(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.mean"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.min"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMin(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.max"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMax(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.clear(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testStats(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.assertTrue(2)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getStandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVariance(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.one"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testN0andN1Conditions(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.assertEquals(4)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVariance(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSkewness(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getKurtosis(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testSkewAndKurtosis(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setWindowSize(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getGeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.assertEquals(4)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testProductAndGeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testGetSortedValues(0)" "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testGetSortedValues(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.tstGetSortedValues(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testGetSortedValues(0)" "org.apache.commons.math.random.RandomData.nextPermutation(2)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testGetSortedValues(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.tstGetSortedValues(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.tstGetSortedValues(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.tstGetSortedValues(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSortedValues(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.tstGetSortedValues(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.fail(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.tstGetSortedValues(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testPercentiles(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testPercentiles(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testPercentiles(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getPercentile(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testPercentiles(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.assertEquals(4)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testPercentiles(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.fail(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testPercentiles(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.clear(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testPercentiles(0)" "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testPercentiles(0)" "org.apache.commons.math.random.RandomData.nextPermutation(2)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testPercentiles(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.assertTrue(2)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.testPercentiles(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.class$(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.one"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.two"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.three"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.mean"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.sumSq"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.sum"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.var"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.std"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.n"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.min"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.max"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.skewness"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.kurtosis"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.tolerance"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest.class$org$apache$commons$math$stat$descriptive$DescriptiveStatisticsImplTest"
reference "org.apache.commons.math.stat.descriptive.moment.SkewnessTest" "org.apache.commons.math.stat.descriptive.moment.Skewness"
reference "org.apache.commons.math.stat.descriptive.moment.SkewnessTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.moment.SkewnessTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.SkewnessTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.moment.SkewnessTest" "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.SkewnessTest(1)"
call "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(0)"
contain "org.apache.commons.math.stat.descriptive.moment.SkewnessTest" "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.suite(0)" "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.class$org$apache$commons$math$stat$descriptive$moment$SkewnessTest"
call "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.suite(0)" "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.class$(1)"
call "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.moment.SkewnessTest" "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.suite(0)"
reference "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.skew"
contain "org.apache.commons.math.stat.descriptive.moment.SkewnessTest" "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(0)"
call "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.Skewness.getResult(0)"
call "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.Skewness.increment(1)"
call "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.assertFalse(1)"
contain "org.apache.commons.math.stat.descriptive.moment.SkewnessTest" "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.testNaN(0)"
contain "org.apache.commons.math.stat.descriptive.moment.SkewnessTest" "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.class$(1)"
reference "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.stat" "org.apache.commons.math.stat.descriptive.moment.Skewness"
contain "org.apache.commons.math.stat.descriptive.moment.SkewnessTest" "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.stat"
contain "org.apache.commons.math.stat.descriptive.moment.SkewnessTest" "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.class$org$apache$commons$math$stat$descriptive$moment$SkewnessTest"
reference "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.special.GammaTest" "junit.framework.TestCase"
reference "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.special.Gamma"
reference "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.special.GammaTest.GammaTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.special.GammaTest.GammaTest(1)"
call "org.apache.commons.math.special.GammaTest.testRegularizedGamma(3)" "org.apache.commons.math.special.Gamma.regularizedGammaP(2)"
call "org.apache.commons.math.special.GammaTest.testRegularizedGamma(3)" "org.apache.commons.math.special.Gamma.regularizedGammaQ(2)"
call "org.apache.commons.math.special.GammaTest.testRegularizedGamma(3)" "org.apache.commons.math.TestUtils.assertEquals(3)"
call "org.apache.commons.math.special.GammaTest.testRegularizedGamma(3)" "org.apache.commons.math.MathException.getMessage(0)"
call "org.apache.commons.math.special.GammaTest.testRegularizedGamma(3)" "org.apache.commons.math.special.GammaTest.fail(1)"
contain "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.special.GammaTest.testRegularizedGamma(3)"
call "org.apache.commons.math.special.GammaTest.testLogGamma(2)" "org.apache.commons.math.special.Gamma.logGamma(1)"
call "org.apache.commons.math.special.GammaTest.testLogGamma(2)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.special.GammaTest.testLogGamma(2)"
call "org.apache.commons.math.special.GammaTest.testRegularizedGammaNanPositive(0)" "org.apache.commons.math.special.GammaTest.testRegularizedGamma(3)"
contain "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.special.GammaTest.testRegularizedGammaNanPositive(0)"
call "org.apache.commons.math.special.GammaTest.testRegularizedGammaPositiveNan(0)" "org.apache.commons.math.special.GammaTest.testRegularizedGamma(3)"
contain "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.special.GammaTest.testRegularizedGammaPositiveNan(0)"
call "org.apache.commons.math.special.GammaTest.testRegularizedGammaNegativePositive(0)" "org.apache.commons.math.special.GammaTest.testRegularizedGamma(3)"
contain "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.special.GammaTest.testRegularizedGammaNegativePositive(0)"
call "org.apache.commons.math.special.GammaTest.testRegularizedGammaPositiveNegative(0)" "org.apache.commons.math.special.GammaTest.testRegularizedGamma(3)"
contain "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.special.GammaTest.testRegularizedGammaPositiveNegative(0)"
call "org.apache.commons.math.special.GammaTest.testRegularizedGammaZeroPositive(0)" "org.apache.commons.math.special.GammaTest.testRegularizedGamma(3)"
contain "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.special.GammaTest.testRegularizedGammaZeroPositive(0)"
call "org.apache.commons.math.special.GammaTest.testRegularizedGammaPositiveZero(0)" "org.apache.commons.math.special.GammaTest.testRegularizedGamma(3)"
contain "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.special.GammaTest.testRegularizedGammaPositiveZero(0)"
call "org.apache.commons.math.special.GammaTest.testRegularizedGammaPositivePositive(0)" "org.apache.commons.math.special.GammaTest.testRegularizedGamma(3)"
contain "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.special.GammaTest.testRegularizedGammaPositivePositive(0)"
call "org.apache.commons.math.special.GammaTest.testLogGammaNan(0)" "org.apache.commons.math.special.GammaTest.testLogGamma(2)"
contain "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.special.GammaTest.testLogGammaNan(0)"
call "org.apache.commons.math.special.GammaTest.testLogGammaNegative(0)" "org.apache.commons.math.special.GammaTest.testLogGamma(2)"
contain "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.special.GammaTest.testLogGammaNegative(0)"
call "org.apache.commons.math.special.GammaTest.testLogGammaZero(0)" "org.apache.commons.math.special.GammaTest.testLogGamma(2)"
contain "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.special.GammaTest.testLogGammaZero(0)"
call "org.apache.commons.math.special.GammaTest.testLogGammaPositive(0)" "org.apache.commons.math.special.GammaTest.testLogGamma(2)"
contain "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.special.GammaTest.testLogGammaPositive(0)"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.LinearRank1Function(5)" "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.buildArray(2)"
call "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.LinearRank1Function(5)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function" "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.LinearRank1Function(5)"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.m"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.n"
contain "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function" "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.m"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.n"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.parameters"
call "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function" "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.getResiduals(0)"
reference "org.apache.commons.math.ode.StepProblem" "org.apache.commons.math.ode.SwitchingFunction"
reference "org.apache.commons.math.ode.StepProblem" "org.apache.commons.math.ode.FirstOrderDifferentialEquations"
reference "org.apache.commons.math.ode.StepProblem.StepProblem(3)" "org.apache.commons.math.ode.StepProblem.rateAfter"
reference "org.apache.commons.math.ode.StepProblem.StepProblem(3)" "org.apache.commons.math.ode.StepProblem.switchTime"
call "org.apache.commons.math.ode.StepProblem.StepProblem(3)" "org.apache.commons.math.ode.StepProblem.setRate(1)"
contain "org.apache.commons.math.ode.StepProblem" "org.apache.commons.math.ode.StepProblem.StepProblem(3)"
reference "org.apache.commons.math.ode.StepProblem.computeDerivatives(3)" "org.apache.commons.math.ode.StepProblem.rate"
contain "org.apache.commons.math.ode.StepProblem" "org.apache.commons.math.ode.StepProblem.computeDerivatives(3)"
contain "org.apache.commons.math.ode.StepProblem" "org.apache.commons.math.ode.StepProblem.getDimension(0)"
reference "org.apache.commons.math.ode.StepProblem.setRate(1)" "org.apache.commons.math.ode.StepProblem.rate"
contain "org.apache.commons.math.ode.StepProblem" "org.apache.commons.math.ode.StepProblem.setRate(1)"
reference "org.apache.commons.math.ode.StepProblem.eventOccurred(2)" "org.apache.commons.math.ode.StepProblem.rateAfter"
call "org.apache.commons.math.ode.StepProblem.eventOccurred(2)" "org.apache.commons.math.ode.StepProblem.setRate(1)"
contain "org.apache.commons.math.ode.StepProblem" "org.apache.commons.math.ode.StepProblem.eventOccurred(2)"
reference "org.apache.commons.math.ode.StepProblem.g(2)" "org.apache.commons.math.ode.StepProblem.switchTime"
contain "org.apache.commons.math.ode.StepProblem" "org.apache.commons.math.ode.StepProblem.g(2)"
contain "org.apache.commons.math.ode.StepProblem" "org.apache.commons.math.ode.StepProblem.resetState(2)"
contain "org.apache.commons.math.ode.StepProblem" "org.apache.commons.math.ode.StepProblem.rate"
contain "org.apache.commons.math.ode.StepProblem" "org.apache.commons.math.ode.StepProblem.rateAfter"
contain "org.apache.commons.math.ode.StepProblem" "org.apache.commons.math.ode.StepProblem.switchTime"
contain "org.apache.commons.math.ode.StepProblem" "org.apache.commons.math.ode.StepProblem.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMomentTest" "org.apache.commons.math.stat.descriptive.moment.FirstMoment"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMomentTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.moment.FirstMomentTest.FirstMomentTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.moment.FirstMomentTest" "org.apache.commons.math.stat.descriptive.moment.FirstMomentTest.FirstMomentTest(1)"
call "org.apache.commons.math.stat.descriptive.moment.FirstMomentTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.FirstMoment(0)"
contain "org.apache.commons.math.stat.descriptive.moment.FirstMomentTest" "org.apache.commons.math.stat.descriptive.moment.FirstMomentTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMomentTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMomentTest.mean"
contain "org.apache.commons.math.stat.descriptive.moment.FirstMomentTest" "org.apache.commons.math.stat.descriptive.moment.FirstMomentTest.expectedValue(0)"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMomentTest.stat" "org.apache.commons.math.stat.descriptive.moment.FirstMoment"
contain "org.apache.commons.math.stat.descriptive.moment.FirstMomentTest" "org.apache.commons.math.stat.descriptive.moment.FirstMomentTest.stat"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest" "org.apache.commons.math.stat.descriptive.moment.SecondMoment"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest" "org.apache.commons.math.stat.descriptive.moment.Mean"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.StandardDeviationTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest" "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.StandardDeviationTest(1)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(0)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest" "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.suite(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.class$org$apache$commons$math$stat$descriptive$moment$StandardDeviationTest"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.suite(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.class$(1)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest" "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.suite(0)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.std"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest" "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.getResult(0)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.increment(1)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest" "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testNaN(0)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.populationStandardDeviation(1)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.SecondMoment(0)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.setBiasCorrected(1)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.incrementAll(1)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.getResult(0)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(2)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(1)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest" "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testPopulation(0)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.populationStandardDeviation(1)" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.populationStandardDeviation(1)" "org.apache.commons.math.stat.descriptive.moment.Mean.evaluate(1)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest" "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.populationStandardDeviation(1)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest" "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.class$(1)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.stat" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest" "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.stat"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest" "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.class$org$apache$commons$math$stat$descriptive$moment$StandardDeviationTest"
reference "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.Complex"
reference "org.apache.commons.math.complex.ComplexTest" "junit.framework.TestCase"
call "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "junit.framework.TestCase.TestCase(0)"
reference "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.ComplexTest.inf"
reference "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.ComplexTest.neginf"
reference "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.ComplexTest.nan"
call "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.ComplexTest.oneInf"
reference "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.ComplexTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.ComplexTest.infOne"
reference "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.ComplexTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.ComplexTest.negInfNegInf"
reference "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.ComplexTest.oneNaN"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)"
call "org.apache.commons.math.complex.ComplexTest.testConstructor(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testConstructor(0)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexTest.testConstructor(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
call "org.apache.commons.math.complex.ComplexTest.testConstructor(0)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testConstructor(0)"
call "org.apache.commons.math.complex.ComplexTest.testConstructorNaN(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testConstructorNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testConstructorNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
reference "org.apache.commons.math.complex.ComplexTest.testConstructorNaN(0)" "org.apache.commons.math.complex.ComplexTest.nan"
call "org.apache.commons.math.complex.ComplexTest.testConstructorNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertFalse(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testConstructorNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testAbs(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testAbs(0)" "org.apache.commons.math.complex.Complex.abs(0)"
call "org.apache.commons.math.complex.ComplexTest.testAbs(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testAbs(0)"
reference "org.apache.commons.math.complex.ComplexTest.testAbsNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testAbsNaN(0)" "org.apache.commons.math.complex.Complex.abs(0)"
call "org.apache.commons.math.complex.ComplexTest.testAbsNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
reference "org.apache.commons.math.complex.ComplexTest.testAbsNaN(0)" "org.apache.commons.math.complex.ComplexTest.inf"
reference "org.apache.commons.math.complex.ComplexTest.testAbsNaN(0)" "org.apache.commons.math.complex.ComplexTest.nan"
call "org.apache.commons.math.complex.ComplexTest.testAbsNaN(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testAbsNaN(0)"
reference "org.apache.commons.math.complex.ComplexTest.testAbsInfinite(0)" "org.apache.commons.math.complex.ComplexTest.inf"
call "org.apache.commons.math.complex.ComplexTest.testAbsInfinite(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testAbsInfinite(0)" "org.apache.commons.math.complex.Complex.abs(0)"
call "org.apache.commons.math.complex.ComplexTest.testAbsInfinite(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
reference "org.apache.commons.math.complex.ComplexTest.testAbsInfinite(0)" "org.apache.commons.math.complex.ComplexTest.neginf"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testAbsInfinite(0)"
call "org.apache.commons.math.complex.ComplexTest.testAdd(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testAdd(0)" "org.apache.commons.math.complex.Complex.add(1)"
call "org.apache.commons.math.complex.ComplexTest.testAdd(0)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexTest.testAdd(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
call "org.apache.commons.math.complex.ComplexTest.testAdd(0)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testAdd(0)"
call "org.apache.commons.math.complex.ComplexTest.testAddNaN(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexTest.testAddNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testAddNaN(0)" "org.apache.commons.math.complex.Complex.add(1)"
call "org.apache.commons.math.complex.ComplexTest.testAddNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testAddNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
reference "org.apache.commons.math.complex.ComplexTest.testAddNaN(0)" "org.apache.commons.math.complex.ComplexTest.nan"
reference "org.apache.commons.math.complex.ComplexTest.testAddNaN(0)" "org.apache.commons.math.complex.Complex.real"
call "org.apache.commons.math.complex.ComplexTest.testAddNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
reference "org.apache.commons.math.complex.ComplexTest.testAddNaN(0)" "org.apache.commons.math.complex.Complex.imaginary"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testAddNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testAddInfinite(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexTest.testAddInfinite(0)" "org.apache.commons.math.complex.ComplexTest.inf"
call "org.apache.commons.math.complex.ComplexTest.testAddInfinite(0)" "org.apache.commons.math.complex.Complex.add(1)"
reference "org.apache.commons.math.complex.ComplexTest.testAddInfinite(0)" "org.apache.commons.math.complex.Complex.imaginary"
call "org.apache.commons.math.complex.ComplexTest.testAddInfinite(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
reference "org.apache.commons.math.complex.ComplexTest.testAddInfinite(0)" "org.apache.commons.math.complex.Complex.real"
reference "org.apache.commons.math.complex.ComplexTest.testAddInfinite(0)" "org.apache.commons.math.complex.ComplexTest.neginf"
call "org.apache.commons.math.complex.ComplexTest.testAddInfinite(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testAddInfinite(0)"
call "org.apache.commons.math.complex.ComplexTest.testConjugate(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testConjugate(0)" "org.apache.commons.math.complex.Complex.conjugate(0)"
call "org.apache.commons.math.complex.ComplexTest.testConjugate(0)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexTest.testConjugate(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
call "org.apache.commons.math.complex.ComplexTest.testConjugate(0)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testConjugate(0)"
reference "org.apache.commons.math.complex.ComplexTest.testConjugateNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testConjugateNaN(0)" "org.apache.commons.math.complex.Complex.conjugate(0)"
call "org.apache.commons.math.complex.ComplexTest.testConjugateNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testConjugateNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testConjugateNaN(0)"
reference "org.apache.commons.math.complex.ComplexTest.testConjugateInfiinite(0)" "org.apache.commons.math.complex.ComplexTest.inf"
call "org.apache.commons.math.complex.ComplexTest.testConjugateInfiinite(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexTest.testConjugateInfiinite(0)" "org.apache.commons.math.complex.ComplexTest.neginf"
call "org.apache.commons.math.complex.ComplexTest.testConjugateInfiinite(0)" "org.apache.commons.math.complex.Complex.conjugate(0)"
reference "org.apache.commons.math.complex.ComplexTest.testConjugateInfiinite(0)" "org.apache.commons.math.complex.Complex.imaginary"
call "org.apache.commons.math.complex.ComplexTest.testConjugateInfiinite(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testConjugateInfiinite(0)"
call "org.apache.commons.math.complex.ComplexTest.testDivide(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testDivide(0)" "org.apache.commons.math.complex.Complex.divide(1)"
call "org.apache.commons.math.complex.ComplexTest.testDivide(0)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexTest.testDivide(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
call "org.apache.commons.math.complex.ComplexTest.testDivide(0)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testDivide(0)"
call "org.apache.commons.math.complex.ComplexTest.testDivideInfinite(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexTest.testDivideInfinite(0)" "org.apache.commons.math.complex.ComplexTest.neginf"
reference "org.apache.commons.math.complex.ComplexTest.testDivideInfinite(0)" "org.apache.commons.math.complex.ComplexTest.inf"
call "org.apache.commons.math.complex.ComplexTest.testDivideInfinite(0)" "org.apache.commons.math.complex.Complex.divide(1)"
reference "org.apache.commons.math.complex.ComplexTest.testDivideInfinite(0)" "org.apache.commons.math.complex.Complex.ZERO"
call "org.apache.commons.math.complex.ComplexTest.testDivideInfinite(0)" "org.apache.commons.math.complex.Complex.equals(1)"
call "org.apache.commons.math.complex.ComplexTest.testDivideInfinite(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
reference "org.apache.commons.math.complex.ComplexTest.testDivideInfinite(0)" "org.apache.commons.math.complex.Complex.real"
reference "org.apache.commons.math.complex.ComplexTest.testDivideInfinite(0)" "org.apache.commons.math.complex.Complex.imaginary"
call "org.apache.commons.math.complex.ComplexTest.testDivideInfinite(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testDivideInfinite(0)"
call "org.apache.commons.math.complex.ComplexTest.testDivideNaN(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexTest.testDivideNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testDivideNaN(0)" "org.apache.commons.math.complex.Complex.divide(1)"
call "org.apache.commons.math.complex.ComplexTest.testDivideNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testDivideNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testDivideNaN(0)"
reference "org.apache.commons.math.complex.ComplexTest.testDivideNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.oneInf"
reference "org.apache.commons.math.complex.ComplexTest.testDivideNaNInf(0)" "org.apache.commons.math.complex.Complex.ONE"
call "org.apache.commons.math.complex.ComplexTest.testDivideNaNInf(0)" "org.apache.commons.math.complex.Complex.divide(1)"
reference "org.apache.commons.math.complex.ComplexTest.testDivideNaNInf(0)" "org.apache.commons.math.complex.Complex.real"
call "org.apache.commons.math.complex.ComplexTest.testDivideNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
reference "org.apache.commons.math.complex.ComplexTest.testDivideNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.inf"
reference "org.apache.commons.math.complex.ComplexTest.testDivideNaNInf(0)" "org.apache.commons.math.complex.Complex.imaginary"
call "org.apache.commons.math.complex.ComplexTest.testDivideNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
reference "org.apache.commons.math.complex.ComplexTest.testDivideNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testDivideNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.oneNaN"
reference "org.apache.commons.math.complex.ComplexTest.testDivideNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfInf"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testDivideNaNInf(0)"
call "org.apache.commons.math.complex.ComplexTest.testMultiply(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testMultiply(0)" "org.apache.commons.math.complex.Complex.multiply(1)"
call "org.apache.commons.math.complex.ComplexTest.testMultiply(0)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexTest.testMultiply(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
call "org.apache.commons.math.complex.ComplexTest.testMultiply(0)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testMultiply(0)"
call "org.apache.commons.math.complex.ComplexTest.testMultiplyNaN(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexTest.testMultiplyNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testMultiplyNaN(0)" "org.apache.commons.math.complex.Complex.multiply(1)"
call "org.apache.commons.math.complex.ComplexTest.testMultiplyNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testMultiplyNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testMultiplyNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testMultiplyNaNInf(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexTest.testMultiplyNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.infOne"
call "org.apache.commons.math.complex.ComplexTest.testMultiplyNaNInf(0)" "org.apache.commons.math.complex.Complex.multiply(1)"
reference "org.apache.commons.math.complex.ComplexTest.testMultiplyNaNInf(0)" "org.apache.commons.math.complex.Complex.real"
reference "org.apache.commons.math.complex.ComplexTest.testMultiplyNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.inf"
call "org.apache.commons.math.complex.ComplexTest.testMultiplyNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
reference "org.apache.commons.math.complex.ComplexTest.testMultiplyNaNInf(0)" "org.apache.commons.math.complex.Complex.imaginary"
reference "org.apache.commons.math.complex.ComplexTest.testMultiplyNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.oneInf"
reference "org.apache.commons.math.complex.ComplexTest.testMultiplyNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.oneNegInf"
call "org.apache.commons.math.complex.ComplexTest.testMultiplyNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
reference "org.apache.commons.math.complex.ComplexTest.testMultiplyNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testMultiplyNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.oneNaN"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testMultiplyNaNInf(0)"
call "org.apache.commons.math.complex.ComplexTest.testNegate(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testNegate(0)" "org.apache.commons.math.complex.Complex.negate(0)"
call "org.apache.commons.math.complex.ComplexTest.testNegate(0)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexTest.testNegate(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
call "org.apache.commons.math.complex.ComplexTest.testNegate(0)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testNegate(0)"
reference "org.apache.commons.math.complex.ComplexTest.testNegateNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testNegateNaN(0)" "org.apache.commons.math.complex.Complex.negate(0)"
call "org.apache.commons.math.complex.ComplexTest.testNegateNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testNegateNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testNegateNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testSubtract(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testSubtract(0)" "org.apache.commons.math.complex.Complex.subtract(1)"
call "org.apache.commons.math.complex.ComplexTest.testSubtract(0)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexTest.testSubtract(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
call "org.apache.commons.math.complex.ComplexTest.testSubtract(0)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testSubtract(0)"
call "org.apache.commons.math.complex.ComplexTest.testSubtractNaN(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexTest.testSubtractNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testSubtractNaN(0)" "org.apache.commons.math.complex.Complex.subtract(1)"
call "org.apache.commons.math.complex.ComplexTest.testSubtractNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testSubtractNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testSubtractNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsNull(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsNull(0)" "org.apache.commons.math.complex.Complex.equals(1)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsNull(0)" "org.apache.commons.math.complex.ComplexTest.assertFalse(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testEqualsNull(0)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsClass(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsClass(0)" "org.apache.commons.math.complex.Complex.equals(1)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsClass(0)" "org.apache.commons.math.complex.ComplexTest.assertFalse(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testEqualsClass(0)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsSame(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsSame(0)" "org.apache.commons.math.complex.Complex.equals(1)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsSame(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testEqualsSame(0)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsTrue(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsTrue(0)" "org.apache.commons.math.complex.Complex.equals(1)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsTrue(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testEqualsTrue(0)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsRealDifference(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsRealDifference(0)" "org.apache.commons.math.complex.Complex.equals(1)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsRealDifference(0)" "org.apache.commons.math.complex.ComplexTest.assertFalse(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testEqualsRealDifference(0)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsImaginaryDifference(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsImaginaryDifference(0)" "org.apache.commons.math.complex.Complex.equals(1)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsImaginaryDifference(0)" "org.apache.commons.math.complex.ComplexTest.assertFalse(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testEqualsImaginaryDifference(0)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsNaN(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexTest.testEqualsNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testEqualsNaN(0)" "org.apache.commons.math.complex.Complex.equals(1)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testEqualsNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testHashCode(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testHashCode(0)" "org.apache.commons.math.complex.Complex.hashCode(0)"
call "org.apache.commons.math.complex.ComplexTest.testHashCode(0)" "org.apache.commons.math.complex.ComplexTest.assertFalse(1)"
call "org.apache.commons.math.complex.ComplexTest.testHashCode(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(2)"
reference "org.apache.commons.math.complex.ComplexTest.testHashCode(0)" "org.apache.commons.math.complex.Complex.NaN"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testHashCode(0)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.inf"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.neginf"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.nan"
reference "org.apache.commons.math.complex.ComplexTest.oneInf" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.oneInf"
reference "org.apache.commons.math.complex.ComplexTest.oneNegInf" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexTest.infOne" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.infOne"
reference "org.apache.commons.math.complex.ComplexTest.negInfInf" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexTest.negInfNegInf" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.negInfNegInf"
reference "org.apache.commons.math.complex.ComplexTest.oneNaN" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.oneNaN"
reference "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.special.BetaTest" "junit.framework.TestCase"
reference "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.Beta"
reference "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.special.BetaTest.BetaTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.BetaTest(1)"
call "org.apache.commons.math.special.BetaTest.testRegularizedBeta(4)" "org.apache.commons.math.special.Beta.regularizedBeta(3)"
call "org.apache.commons.math.special.BetaTest.testRegularizedBeta(4)" "org.apache.commons.math.TestUtils.assertEquals(3)"
call "org.apache.commons.math.special.BetaTest.testRegularizedBeta(4)" "org.apache.commons.math.MathException.getMessage(0)"
call "org.apache.commons.math.special.BetaTest.testRegularizedBeta(4)" "org.apache.commons.math.special.BetaTest.fail(1)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testRegularizedBeta(4)"
call "org.apache.commons.math.special.BetaTest.testLogBeta(3)" "org.apache.commons.math.special.Beta.logBeta(2)"
call "org.apache.commons.math.special.BetaTest.testLogBeta(3)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testLogBeta(3)"
call "org.apache.commons.math.special.BetaTest.testRegularizedBetaNanPositivePositive(0)" "org.apache.commons.math.special.BetaTest.testRegularizedBeta(4)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testRegularizedBetaNanPositivePositive(0)"
call "org.apache.commons.math.special.BetaTest.testRegularizedBetaPositiveNanPositive(0)" "org.apache.commons.math.special.BetaTest.testRegularizedBeta(4)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testRegularizedBetaPositiveNanPositive(0)"
call "org.apache.commons.math.special.BetaTest.testRegularizedBetaPositivePositiveNan(0)" "org.apache.commons.math.special.BetaTest.testRegularizedBeta(4)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testRegularizedBetaPositivePositiveNan(0)"
call "org.apache.commons.math.special.BetaTest.testRegularizedBetaNegativePositivePositive(0)" "org.apache.commons.math.special.BetaTest.testRegularizedBeta(4)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testRegularizedBetaNegativePositivePositive(0)"
call "org.apache.commons.math.special.BetaTest.testRegularizedBetaPositiveNegativePositive(0)" "org.apache.commons.math.special.BetaTest.testRegularizedBeta(4)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testRegularizedBetaPositiveNegativePositive(0)"
call "org.apache.commons.math.special.BetaTest.testRegularizedBetaPositivePositiveNegative(0)" "org.apache.commons.math.special.BetaTest.testRegularizedBeta(4)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testRegularizedBetaPositivePositiveNegative(0)"
call "org.apache.commons.math.special.BetaTest.testRegularizedBetaZeroPositivePositive(0)" "org.apache.commons.math.special.BetaTest.testRegularizedBeta(4)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testRegularizedBetaZeroPositivePositive(0)"
call "org.apache.commons.math.special.BetaTest.testRegularizedBetaPositiveZeroPositive(0)" "org.apache.commons.math.special.BetaTest.testRegularizedBeta(4)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testRegularizedBetaPositiveZeroPositive(0)"
call "org.apache.commons.math.special.BetaTest.testRegularizedBetaPositivePositiveZero(0)" "org.apache.commons.math.special.BetaTest.testRegularizedBeta(4)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testRegularizedBetaPositivePositiveZero(0)"
call "org.apache.commons.math.special.BetaTest.testRegularizedBetaPositivePositivePositive(0)" "org.apache.commons.math.special.BetaTest.testRegularizedBeta(4)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testRegularizedBetaPositivePositivePositive(0)"
call "org.apache.commons.math.special.BetaTest.testLogBetaNanPositive(0)" "org.apache.commons.math.special.BetaTest.testLogBeta(3)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testLogBetaNanPositive(0)"
call "org.apache.commons.math.special.BetaTest.testLogBetaPositiveNan(0)" "org.apache.commons.math.special.BetaTest.testLogBeta(3)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testLogBetaPositiveNan(0)"
call "org.apache.commons.math.special.BetaTest.testLogBetaNegativePositive(0)" "org.apache.commons.math.special.BetaTest.testLogBeta(3)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testLogBetaNegativePositive(0)"
call "org.apache.commons.math.special.BetaTest.testLogBetaPositiveNegative(0)" "org.apache.commons.math.special.BetaTest.testLogBeta(3)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testLogBetaPositiveNegative(0)"
call "org.apache.commons.math.special.BetaTest.testLogBetaZeroPositive(0)" "org.apache.commons.math.special.BetaTest.testLogBeta(3)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testLogBetaZeroPositive(0)"
call "org.apache.commons.math.special.BetaTest.testLogBetaPositiveZero(0)" "org.apache.commons.math.special.BetaTest.testLogBeta(3)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testLogBetaPositiveZero(0)"
call "org.apache.commons.math.special.BetaTest.testLogBetaPositivePositive(0)" "org.apache.commons.math.special.BetaTest.testLogBeta(3)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testLogBetaPositivePositive(0)"
reference "org.apache.commons.math.special.ErfTest" "junit.framework.TestCase"
reference "org.apache.commons.math.special.ErfTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.special.ErfTest" "org.apache.commons.math.special.Erf"
call "org.apache.commons.math.special.ErfTest.ErfTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.special.ErfTest" "org.apache.commons.math.special.ErfTest.ErfTest(0)"
call "org.apache.commons.math.special.ErfTest.testErf0(0)" "org.apache.commons.math.special.Erf.erf(1)"
call "org.apache.commons.math.special.ErfTest.testErf0(0)" "org.apache.commons.math.special.ErfTest.assertEquals(3)"
contain "org.apache.commons.math.special.ErfTest" "org.apache.commons.math.special.ErfTest.testErf0(0)"
call "org.apache.commons.math.special.ErfTest.testErf1960(0)" "org.apache.commons.math.special.Erf.erf(1)"
call "org.apache.commons.math.special.ErfTest.testErf1960(0)" "org.apache.commons.math.special.ErfTest.assertEquals(3)"
contain "org.apache.commons.math.special.ErfTest" "org.apache.commons.math.special.ErfTest.testErf1960(0)"
call "org.apache.commons.math.special.ErfTest.testErf2576(0)" "org.apache.commons.math.special.Erf.erf(1)"
call "org.apache.commons.math.special.ErfTest.testErf2576(0)" "org.apache.commons.math.special.ErfTest.assertEquals(3)"
contain "org.apache.commons.math.special.ErfTest" "org.apache.commons.math.special.ErfTest.testErf2576(0)"
call "org.apache.commons.math.special.ErfTest.testErf2807(0)" "org.apache.commons.math.special.Erf.erf(1)"
call "org.apache.commons.math.special.ErfTest.testErf2807(0)" "org.apache.commons.math.special.ErfTest.assertEquals(3)"
contain "org.apache.commons.math.special.ErfTest" "org.apache.commons.math.special.ErfTest.testErf2807(0)"
call "org.apache.commons.math.special.ErfTest.testErf3291(0)" "org.apache.commons.math.special.Erf.erf(1)"
call "org.apache.commons.math.special.ErfTest.testErf3291(0)" "org.apache.commons.math.special.ErfTest.assertEquals(3)"
contain "org.apache.commons.math.special.ErfTest" "org.apache.commons.math.special.ErfTest.testErf3291(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.BisectionSolver"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.NewtonSolver"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.BrentSolver"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.SecantSolver"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.UnivariateRealSolverFactory"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.UnivariateRealSolverFactoryImplTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.UnivariateRealSolverFactoryImplTest(0)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.setUp(0)" "junit.framework.TestCase.setUp(0)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.setUp(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl.UnivariateRealSolverFactoryImpl(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.setUp(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.factory"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.setUp(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.setUp(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.function"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.setUp(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.tearDown(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.factory"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.tearDown(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.function"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.tearDown(0)" "junit.framework.TestCase.tearDown(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.tearDown(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewBisectionSolverNull(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.factory"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewBisectionSolverNull(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newBisectionSolver(1)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewBisectionSolverNull(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.fail(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewBisectionSolverNull(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewBisectionSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.factory"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewBisectionSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.function"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewBisectionSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newBisectionSolver(1)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewBisectionSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.assertNotNull(1)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewBisectionSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.assertTrue(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewBisectionSolverValid(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewNewtonSolverNull(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.factory"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewNewtonSolverNull(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newNewtonSolver(1)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewNewtonSolverNull(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.fail(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewNewtonSolverNull(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewNewtonSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.factory"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewNewtonSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.function"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewNewtonSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newNewtonSolver(1)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewNewtonSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.assertNotNull(1)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewNewtonSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.assertTrue(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewNewtonSolverValid(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewBrentSolverNull(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.factory"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewBrentSolverNull(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newBrentSolver(1)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewBrentSolverNull(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.fail(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewBrentSolverNull(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewBrentSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.factory"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewBrentSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.function"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewBrentSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newBrentSolver(1)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewBrentSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.assertNotNull(1)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewBrentSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.assertTrue(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewBrentSolverValid(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewSecantSolverNull(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.factory"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewSecantSolverNull(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newSecantSolver(1)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewSecantSolverNull(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.fail(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewSecantSolverNull(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewSecantSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.factory"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewSecantSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.function"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewSecantSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newSecantSolver(1)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewSecantSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.assertNotNull(1)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewSecantSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.assertTrue(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewSecantSolverValid(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.factory" "org.apache.commons.math.analysis.UnivariateRealSolverFactory"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.factory"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.function" "org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.function"
reference "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionImpl"
reference "org.apache.commons.math.random.EmpiricalDistributionTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistribution"
reference "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.RetryTestCase"
reference "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.stat.descriptive.StatisticalSummary"
reference "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.TestUtils"
reference "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
call "org.apache.commons.math.random.EmpiricalDistributionTest.EmpiricalDistributionTest(1)" "org.apache.commons.math.RetryTestCase.RetryTestCase(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.EmpiricalDistributionTest(1)" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.EmpiricalDistributionTest(1)" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution2"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.EmpiricalDistributionTest(1)" "org.apache.commons.math.random.EmpiricalDistributionTest.file"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.EmpiricalDistributionTest(1)" "org.apache.commons.math.random.EmpiricalDistributionTest.url"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.EmpiricalDistributionTest(1)" "org.apache.commons.math.random.EmpiricalDistributionTest.dataArray"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.EmpiricalDistributionTest(1)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.setUp(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.setUp(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.setUp(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.url"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.setUp(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution2"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.setUp(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.dataArray"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.setUp(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.suite(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.class$org$apache$commons$math$random$EmpiricalDistributionTest"
call "org.apache.commons.math.random.EmpiricalDistributionTest.suite(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.class$(1)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.suite(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.testLoad(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.testLoad(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.url"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testLoad(0)" "org.apache.commons.math.random.EmpiricalDistribution.load(1)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testLoad(0)" "org.apache.commons.math.random.EmpiricalDistribution.getSampleStats(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testLoad(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getN(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testLoad(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.assertEquals(3)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testLoad(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getMean(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testLoad(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getStandardDeviation(0)"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.testLoad(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.testDoubleLoad(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution2"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.testDoubleLoad(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.dataArray"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testDoubleLoad(0)" "org.apache.commons.math.random.EmpiricalDistribution.load(1)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testDoubleLoad(0)" "org.apache.commons.math.random.EmpiricalDistribution.getSampleStats(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testDoubleLoad(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getN(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testDoubleLoad(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.assertEquals(3)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testDoubleLoad(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getMean(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testDoubleLoad(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getStandardDeviation(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testDoubleLoad(0)" "org.apache.commons.math.random.EmpiricalDistribution.getUpperBounds(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testDoubleLoad(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.assertEquals(2)"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.testDoubleLoad(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testNext(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.tstGen(1)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testNext(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.tstDoubleGen(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.testNext(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.testNexFail(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testNexFail(0)" "org.apache.commons.math.random.EmpiricalDistribution.getNextValue(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.testNexFail(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution2"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testNexFail(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.fail(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.testNexFail(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testGridTooFine(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.testGridTooFine(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testGridTooFine(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.tstGen(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.testGridTooFine(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution2"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testGridTooFine(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.tstDoubleGen(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.testGridTooFine(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testGridTooFat(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.testGridTooFat(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testGridTooFat(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.tstGen(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.testGridTooFat(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution2"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testGridTooFat(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.tstDoubleGen(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.testGridTooFat(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testBinIndexOverflow(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testBinIndexOverflow(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.testBinIndexOverflow(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testSerialization(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testSerialization(0)" "org.apache.commons.math.TestUtils.serializeAndRecover(1)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testSerialization(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.verifySame(2)"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.testSerialization(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution2"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.testSerialization(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.dataArray"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testSerialization(0)" "org.apache.commons.math.random.EmpiricalDistribution.load(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.testSerialization(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.verifySame(2)" "org.apache.commons.math.random.EmpiricalDistribution.isLoaded(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.verifySame(2)" "org.apache.commons.math.random.EmpiricalDistributionTest.assertEquals(2)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.verifySame(2)" "org.apache.commons.math.random.EmpiricalDistribution.getBinCount(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.verifySame(2)" "org.apache.commons.math.random.EmpiricalDistributionTest.assertEquals(2)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.verifySame(2)" "org.apache.commons.math.random.EmpiricalDistribution.getSampleStats(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.verifySame(2)" "org.apache.commons.math.random.EmpiricalDistributionTest.assertEquals(2)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.verifySame(2)" "org.apache.commons.math.random.EmpiricalDistribution.getUpperBounds(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.verifySame(2)" "org.apache.commons.math.random.EmpiricalDistributionTest.assertEquals(3)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.verifySame(2)" "org.apache.commons.math.random.EmpiricalDistribution.getBinStats(0)"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.verifySame(2)"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.tstGen(1)" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.tstGen(1)" "org.apache.commons.math.random.EmpiricalDistributionTest.url"
call "org.apache.commons.math.random.EmpiricalDistributionTest.tstGen(1)" "org.apache.commons.math.random.EmpiricalDistribution.load(1)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.tstGen(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.tstGen(1)" "org.apache.commons.math.random.EmpiricalDistribution.getNextValue(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.tstGen(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.tstGen(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.tstGen(1)" "org.apache.commons.math.random.EmpiricalDistributionTest.assertEquals(4)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.tstGen(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getStandardDeviation(0)"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.tstGen(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.tstDoubleGen(1)" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution2"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.tstDoubleGen(1)" "org.apache.commons.math.random.EmpiricalDistributionTest.dataArray"
call "org.apache.commons.math.random.EmpiricalDistributionTest.tstDoubleGen(1)" "org.apache.commons.math.random.EmpiricalDistribution.load(1)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.tstDoubleGen(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.tstDoubleGen(1)" "org.apache.commons.math.random.EmpiricalDistribution.getNextValue(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.tstDoubleGen(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.tstDoubleGen(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.tstDoubleGen(1)" "org.apache.commons.math.random.EmpiricalDistributionTest.assertEquals(4)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.tstDoubleGen(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getStandardDeviation(0)"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.tstDoubleGen(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.class$(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution" "org.apache.commons.math.random.EmpiricalDistribution"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution2" "org.apache.commons.math.random.EmpiricalDistribution"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution2"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.file"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.url"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.dataArray" "double[]"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.dataArray"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.class$org$apache$commons$math$random$EmpiricalDistributionTest"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest" "junit.framework.TestCase"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.StatisticalSummaryValuesTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.StatisticalSummaryValuesTest(1)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.setUp(0)"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.suite(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.class$org$apache$commons$math$stat$descriptive$StatisticalSummaryValuesTest"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.suite(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.class$(1)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.StatisticalSummaryValues(6)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.testSerialization(0)" "org.apache.commons.math.TestUtils.checkSerializedEquality(1)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.testSerialization(0)" "org.apache.commons.math.TestUtils.serializeAndRecover(1)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.verifyEquality(2)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.testSerialization(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.StatisticalSummaryValues(6)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.hashCode(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.equals(1)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.assertTrue(2)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.assertFalse(2)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.testEqualsAndHashCode(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.verifyEquality(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getN(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.verifyEquality(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.verifyEquality(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getSum(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.verifyEquality(2)" "org.apache.commons.math.TestUtils.assertEquals(4)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.verifyEquality(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getVariance(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.verifyEquality(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getStandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.verifyEquality(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getMean(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.verifyEquality(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getMin(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.verifyEquality(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getMax(0)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.verifyEquality(2)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.class$(1)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.class$org$apache$commons$math$stat$descriptive$StatisticalSummaryValuesTest"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "double[]"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.EstimationException"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LevenbergMarquardtEstimatorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LevenbergMarquardtEstimatorTest(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTrivial(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTrivial(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTrivial(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTrivial(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTrivial(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTrivial(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTrivial(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertEquals(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTrivial(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.getUnboundParameters(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTrivial(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTrivial(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testQRColumnsPermutation(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testQRColumnsPermutation(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testQRColumnsPermutation(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testQRColumnsPermutation(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testQRColumnsPermutation(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testQRColumnsPermutation(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testQRColumnsPermutation(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertEquals(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testQRColumnsPermutation(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testQRColumnsPermutation(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNoDependency(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNoDependency(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNoDependency(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNoDependency(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNoDependency(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNoDependency(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNoDependency(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertEquals(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNoDependency(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNoDependency(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testOneSet(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testOneSet(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testOneSet(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testOneSet(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testOneSet(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testOneSet(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testOneSet(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertEquals(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testOneSet(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testOneSet(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTwoSets(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTwoSets(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTwoSets(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTwoSets(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTwoSets(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTwoSets(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTwoSets(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertEquals(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTwoSets(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTwoSets(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNonInversible(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNonInversible(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNonInversible(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNonInversible(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNonInversible(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNonInversible(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNonInversible(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertTrue(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNonInversible(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.getResidual(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNonInversible(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.getPartial(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNonInversible(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertEquals(3)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNonInversible(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testIllConditioned(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testIllConditioned(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testIllConditioned(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testIllConditioned(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testIllConditioned(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testIllConditioned(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testIllConditioned(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertEquals(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testIllConditioned(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testIllConditioned(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersSimple(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersSimple(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersSimple(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersSimple(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersSimple(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersSimple(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersSimple(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertEquals(3)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersSimple(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersUnsorted(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersUnsorted(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersUnsorted(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersUnsorted(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersUnsorted(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersUnsorted(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersUnsorted(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertEquals(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersUnsorted(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersUnsorted(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testRedundantEquations(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testRedundantEquations(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testRedundantEquations(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testRedundantEquations(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testRedundantEquations(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testRedundantEquations(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testRedundantEquations(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertEquals(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testRedundantEquations(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testRedundantEquations(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testInconsistentEquations(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testInconsistentEquations(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testInconsistentEquations(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testInconsistentEquations(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testInconsistentEquations(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testInconsistentEquations(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testInconsistentEquations(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertTrue(1)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testInconsistentEquations(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.Circle(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.addPoint(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getCostEvaluations(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertTrue(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getJacobianEvaluations(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getM(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertEquals(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getRadius(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getX(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getY(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFitting(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFittingBadInit(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.Circle(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFittingBadInit(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.addPoint(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFittingBadInit(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFittingBadInit(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFittingBadInit(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getCostEvaluations(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFittingBadInit(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertTrue(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFittingBadInit(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getJacobianEvaluations(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFittingBadInit(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFittingBadInit(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertEquals(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFittingBadInit(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getRadius(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFittingBadInit(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getX(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFittingBadInit(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getY(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFittingBadInit(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.suite(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.class$org$apache$commons$math$estimation$LevenbergMarquardtEstimatorTest"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.suite(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.class$(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.suite(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.class$(1)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.class$org$apache$commons$math$estimation$LevenbergMarquardtEstimatorTest"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest" "org.apache.commons.math.ode.TestProblem3"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest" "org.apache.commons.math.ode.DormandPrince54Integrator"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest" "org.apache.commons.math.ode.ContinuousOutputModel"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest" "org.apache.commons.math.ode.IntegratorException"
call "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest.DormandPrince54StepInterpolatorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest" "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest.DormandPrince54StepInterpolatorTest(1)"
call "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.DormandPrince54Integrator.DormandPrince54Integrator(4)"
call "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.ContinuousOutputModel(0)"
call "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.DormandPrince54Integrator.setStepHandler(1)"
call "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.DormandPrince54Integrator.integrate(5)"
call "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.DormandPrince54Integrator.getStepHandler(0)"
call "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest.assertTrue(1)"
call "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState(0)"
call "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.computeTheoreticalState(1)"
contain "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest" "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest.testSerialization(0)"
reference "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest.suite(0)" "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest.class$org$apache$commons$math$ode$DormandPrince54StepInterpolatorTest"
call "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest.suite(0)" "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest.class$(1)"
call "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest" "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest.suite(0)"
contain "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest" "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest.class$(1)"
contain "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest" "org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest.class$org$apache$commons$math$ode$DormandPrince54StepInterpolatorTest"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest" "org.apache.commons.math.random.TestRandomGenerator"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest" "org.apache.commons.math.random.RandomDataImpl"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest" "org.apache.commons.math.stat.Frequency"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest" "org.apache.commons.math.random.RandomDataTest"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest" "org.apache.commons.math.stat.inference.ChiSquareTestImpl"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.AbstractRandomGeneratorTest(1)" "org.apache.commons.math.random.RandomDataTest.RandomDataTest(1)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.AbstractRandomGeneratorTest(1)" "org.apache.commons.math.random.TestRandomGenerator.TestRandomGenerator(0)"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.AbstractRandomGeneratorTest(1)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.testGenerator"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.AbstractRandomGeneratorTest(1)" "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(1)"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.AbstractRandomGeneratorTest(1)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.randomData"
contain "org.apache.commons.math.random.AbstractRandomGeneratorTest" "org.apache.commons.math.random.AbstractRandomGeneratorTest.AbstractRandomGeneratorTest(1)"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.suite(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.class$org$apache$commons$math$random$AbstractRandomGeneratorTest"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.suite(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.class$(1)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.random.AbstractRandomGeneratorTest" "org.apache.commons.math.random.AbstractRandomGeneratorTest.suite(0)"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextInt(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.testGenerator"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextInt(0)" "org.apache.commons.math.random.TestRandomGenerator.nextInt(1)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextInt(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.fail(1)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextInt(0)" "org.apache.commons.math.stat.Frequency.Frequency(0)"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextInt(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.smallSampleSize"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextInt(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.assertTrue(2)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextInt(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextInt(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextInt(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.testStatistic"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextInt(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.expected"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextInt(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)"
contain "org.apache.commons.math.random.AbstractRandomGeneratorTest" "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextInt(0)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextLong(0)" "org.apache.commons.math.stat.Frequency.Frequency(0)"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextLong(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.smallSampleSize"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextLong(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.testGenerator"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextLong(0)" "org.apache.commons.math.random.TestRandomGenerator.nextLong(0)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextLong(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextLong(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextLong(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.testStatistic"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextLong(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.expected"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextLong(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextLong(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.assertTrue(2)"
contain "org.apache.commons.math.random.AbstractRandomGeneratorTest" "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextLong(0)"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextBoolean(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.smallSampleSize"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextBoolean(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.testGenerator"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextBoolean(0)" "org.apache.commons.math.random.TestRandomGenerator.nextBoolean(0)"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextBoolean(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.testStatistic"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextBoolean(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextBoolean(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.assertTrue(2)"
contain "org.apache.commons.math.random.AbstractRandomGeneratorTest" "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextBoolean(0)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextFloat(0)" "org.apache.commons.math.stat.Frequency.Frequency(0)"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextFloat(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.smallSampleSize"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextFloat(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.testGenerator"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextFloat(0)" "org.apache.commons.math.random.TestRandomGenerator.nextFloat(0)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextFloat(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextFloat(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextFloat(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.testStatistic"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextFloat(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.expected"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextFloat(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextFloat(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.assertTrue(2)"
contain "org.apache.commons.math.random.AbstractRandomGeneratorTest" "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextFloat(0)"
contain "org.apache.commons.math.random.AbstractRandomGeneratorTest" "org.apache.commons.math.random.AbstractRandomGeneratorTest.class$(1)"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testGenerator" "org.apache.commons.math.random.TestRandomGenerator"
contain "org.apache.commons.math.random.AbstractRandomGeneratorTest" "org.apache.commons.math.random.AbstractRandomGeneratorTest.testGenerator"
contain "org.apache.commons.math.random.AbstractRandomGeneratorTest" "org.apache.commons.math.random.AbstractRandomGeneratorTest.class$org$apache$commons$math$random$AbstractRandomGeneratorTest"
reference "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction.HelicalValleyFunction(2)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction" "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction.HelicalValleyFunction(2)"
reference "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction.getJacobian(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction" "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction" "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction.getResiduals(0)"
contain "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction" "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction.twoPi"
reference "org.apache.commons.math.util.DefaultTransformerTest" "org.apache.commons.math.util.DefaultTransformer"
reference "org.apache.commons.math.util.DefaultTransformerTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.util.DefaultTransformerTest" "junit.framework.TestCase"
call "org.apache.commons.math.util.DefaultTransformerTest.DefaultTransformerTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.util.DefaultTransformerTest" "org.apache.commons.math.util.DefaultTransformerTest.DefaultTransformerTest(0)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformDouble(0)" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformDouble(0)" "org.apache.commons.math.util.DefaultTransformer.transform(1)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformDouble(0)" "org.apache.commons.math.util.DefaultTransformerTest.assertEquals(3)"
contain "org.apache.commons.math.util.DefaultTransformerTest" "org.apache.commons.math.util.DefaultTransformerTest.testTransformDouble(0)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformNull(0)" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformNull(0)" "org.apache.commons.math.util.DefaultTransformer.transform(1)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformNull(0)" "org.apache.commons.math.util.DefaultTransformerTest.fail(1)"
contain "org.apache.commons.math.util.DefaultTransformerTest" "org.apache.commons.math.util.DefaultTransformerTest.testTransformNull(0)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformInteger(0)" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformInteger(0)" "org.apache.commons.math.util.DefaultTransformer.transform(1)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformInteger(0)" "org.apache.commons.math.util.DefaultTransformerTest.assertEquals(3)"
contain "org.apache.commons.math.util.DefaultTransformerTest" "org.apache.commons.math.util.DefaultTransformerTest.testTransformInteger(0)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformBigDecimal(0)" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformBigDecimal(0)" "org.apache.commons.math.util.DefaultTransformer.transform(1)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformBigDecimal(0)" "org.apache.commons.math.util.DefaultTransformerTest.assertEquals(3)"
contain "org.apache.commons.math.util.DefaultTransformerTest" "org.apache.commons.math.util.DefaultTransformerTest.testTransformBigDecimal(0)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformString(0)" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformString(0)" "org.apache.commons.math.util.DefaultTransformer.transform(1)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformString(0)" "org.apache.commons.math.util.DefaultTransformerTest.assertEquals(3)"
contain "org.apache.commons.math.util.DefaultTransformerTest" "org.apache.commons.math.util.DefaultTransformerTest.testTransformString(0)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformObject(0)" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformObject(0)" "org.apache.commons.math.util.DefaultTransformer.transform(1)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformObject(0)" "org.apache.commons.math.util.DefaultTransformerTest.fail(1)"
contain "org.apache.commons.math.util.DefaultTransformerTest" "org.apache.commons.math.util.DefaultTransformerTest.testTransformObject(0)"
reference "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.StepHandler"
reference "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.StepInterpolator"
reference "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.TestProblem3"
reference "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler" "junit.framework.Assert"
reference "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.ThreeEighthesIntegratorTest"
reference "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler.KeplerHandler(1)" "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler.maxError"
reference "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler.KeplerHandler(1)" "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler.pb"
contain "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler.KeplerHandler(1)"
contain "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler.reset(0)" "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler.maxError"
contain "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler.reset(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getInterpolatedState(0)"
reference "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler.pb"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.TestProblem3.computeTheoreticalState(1)"
reference "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler.maxError"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler.handleStep(2)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler.handleStep(2)"
reference "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler.pb" "org.apache.commons.math.ode.TestProblem3"
contain "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler.pb"
contain "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler.maxError"
reference "org.apache.commons.math.random.ValueServerTest" "org.apache.commons.math.random.ValueServer"
reference "org.apache.commons.math.random.ValueServerTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.random.ValueServerTest" "org.apache.commons.math.RetryTestCase"
reference "org.apache.commons.math.random.ValueServerTest" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
call "org.apache.commons.math.random.ValueServerTest.ValueServerTest(1)" "org.apache.commons.math.RetryTestCase.RetryTestCase(1)"
call "org.apache.commons.math.random.ValueServerTest.ValueServerTest(1)" "org.apache.commons.math.random.ValueServer.ValueServer(0)"
reference "org.apache.commons.math.random.ValueServerTest.ValueServerTest(1)" "org.apache.commons.math.random.ValueServerTest.vs"
contain "org.apache.commons.math.random.ValueServerTest" "org.apache.commons.math.random.ValueServerTest.ValueServerTest(1)"
reference "org.apache.commons.math.random.ValueServerTest.setUp(0)" "org.apache.commons.math.random.ValueServerTest.vs"
call "org.apache.commons.math.random.ValueServerTest.setUp(0)" "org.apache.commons.math.random.ValueServer.setMode(1)"
call "org.apache.commons.math.random.ValueServerTest.setUp(0)" "org.apache.commons.math.random.ValueServer.setValuesFileURL(1)"
call "org.apache.commons.math.random.ValueServerTest.setUp(0)" "org.apache.commons.math.random.ValueServerTest.fail(1)"
contain "org.apache.commons.math.random.ValueServerTest" "org.apache.commons.math.random.ValueServerTest.setUp(0)"
reference "org.apache.commons.math.random.ValueServerTest.suite(0)" "org.apache.commons.math.random.ValueServerTest.class$org$apache$commons$math$random$ValueServerTest"
call "org.apache.commons.math.random.ValueServerTest.suite(0)" "org.apache.commons.math.random.ValueServerTest.class$(1)"
call "org.apache.commons.math.random.ValueServerTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.random.ValueServerTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.random.ValueServerTest" "org.apache.commons.math.random.ValueServerTest.suite(0)"
reference "org.apache.commons.math.random.ValueServerTest.testNextDigest(0)" "org.apache.commons.math.random.ValueServerTest.vs"
call "org.apache.commons.math.random.ValueServerTest.testNextDigest(0)" "org.apache.commons.math.random.ValueServer.computeDistribution(0)"
call "org.apache.commons.math.random.ValueServerTest.testNextDigest(0)" "org.apache.commons.math.random.ValueServer.getEmpiricalDistribution(0)"
call "org.apache.commons.math.random.ValueServerTest.testNextDigest(0)" "org.apache.commons.math.random.ValueServerTest.assertTrue(2)"
call "org.apache.commons.math.random.ValueServerTest.testNextDigest(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance(0)"
call "org.apache.commons.math.random.ValueServerTest.testNextDigest(0)" "org.apache.commons.math.random.ValueServer.getNext(0)"
call "org.apache.commons.math.random.ValueServerTest.testNextDigest(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
call "org.apache.commons.math.random.ValueServerTest.testNextDigest(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)"
call "org.apache.commons.math.random.ValueServerTest.testNextDigest(0)" "org.apache.commons.math.random.ValueServerTest.assertEquals(4)"
call "org.apache.commons.math.random.ValueServerTest.testNextDigest(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getStandardDeviation(0)"
call "org.apache.commons.math.random.ValueServerTest.testNextDigest(0)" "org.apache.commons.math.random.ValueServer.computeDistribution(1)"
contain "org.apache.commons.math.random.ValueServerTest" "org.apache.commons.math.random.ValueServerTest.testNextDigest(0)"
reference "org.apache.commons.math.random.ValueServerTest.testNextDigestFail(0)" "org.apache.commons.math.random.ValueServerTest.vs"
call "org.apache.commons.math.random.ValueServerTest.testNextDigestFail(0)" "org.apache.commons.math.random.ValueServer.getNext(0)"
call "org.apache.commons.math.random.ValueServerTest.testNextDigestFail(0)" "org.apache.commons.math.random.ValueServerTest.fail(1)"
contain "org.apache.commons.math.random.ValueServerTest" "org.apache.commons.math.random.ValueServerTest.testNextDigestFail(0)"
reference "org.apache.commons.math.random.ValueServerTest.testReplay(0)" "org.apache.commons.math.random.ValueServerTest.vs"
call "org.apache.commons.math.random.ValueServerTest.testReplay(0)" "org.apache.commons.math.random.ValueServer.setMode(1)"
call "org.apache.commons.math.random.ValueServerTest.testReplay(0)" "org.apache.commons.math.random.ValueServer.resetReplayFile(0)"
call "org.apache.commons.math.random.ValueServerTest.testReplay(0)" "org.apache.commons.math.random.ValueServer.getNext(0)"
call "org.apache.commons.math.random.ValueServerTest.testReplay(0)" "org.apache.commons.math.random.ValueServerTest.assertEquals(3)"
call "org.apache.commons.math.random.ValueServerTest.testReplay(0)" "org.apache.commons.math.random.ValueServer.closeReplayFile(0)"
contain "org.apache.commons.math.random.ValueServerTest" "org.apache.commons.math.random.ValueServerTest.testReplay(0)"
reference "org.apache.commons.math.random.ValueServerTest.testModes(0)" "org.apache.commons.math.random.ValueServerTest.vs"
call "org.apache.commons.math.random.ValueServerTest.testModes(0)" "org.apache.commons.math.random.ValueServer.setMode(1)"
call "org.apache.commons.math.random.ValueServerTest.testModes(0)" "org.apache.commons.math.random.ValueServer.setMu(1)"
call "org.apache.commons.math.random.ValueServerTest.testModes(0)" "org.apache.commons.math.random.ValueServer.getMu(0)"
call "org.apache.commons.math.random.ValueServerTest.testModes(0)" "org.apache.commons.math.random.ValueServer.getNext(0)"
call "org.apache.commons.math.random.ValueServerTest.testModes(0)" "org.apache.commons.math.random.ValueServerTest.assertEquals(4)"
call "org.apache.commons.math.random.ValueServerTest.testModes(0)" "org.apache.commons.math.random.ValueServerTest.assertTrue(1)"
call "org.apache.commons.math.random.ValueServerTest.testModes(0)" "org.apache.commons.math.random.ValueServer.setSigma(1)"
call "org.apache.commons.math.random.ValueServerTest.testModes(0)" "org.apache.commons.math.random.ValueServer.getSigma(0)"
call "org.apache.commons.math.random.ValueServerTest.testModes(0)" "org.apache.commons.math.random.ValueServerTest.assertTrue(2)"
call "org.apache.commons.math.random.ValueServerTest.testModes(0)" "org.apache.commons.math.random.ValueServerTest.fail(1)"
contain "org.apache.commons.math.random.ValueServerTest" "org.apache.commons.math.random.ValueServerTest.testModes(0)"
reference "org.apache.commons.math.random.ValueServerTest.testFill(0)" "org.apache.commons.math.random.ValueServerTest.vs"
call "org.apache.commons.math.random.ValueServerTest.testFill(0)" "org.apache.commons.math.random.ValueServer.setMode(1)"
call "org.apache.commons.math.random.ValueServerTest.testFill(0)" "org.apache.commons.math.random.ValueServer.setMu(1)"
call "org.apache.commons.math.random.ValueServerTest.testFill(0)" "org.apache.commons.math.random.ValueServer.fill(1)"
call "org.apache.commons.math.random.ValueServerTest.testFill(0)" "org.apache.commons.math.random.ValueServerTest.assertEquals(4)"
call "org.apache.commons.math.random.ValueServerTest.testFill(0)" "org.apache.commons.math.random.ValueServer.fill(1)"
contain "org.apache.commons.math.random.ValueServerTest" "org.apache.commons.math.random.ValueServerTest.testFill(0)"
reference "org.apache.commons.math.random.ValueServerTest.testProperties(0)" "org.apache.commons.math.random.ValueServerTest.vs"
call "org.apache.commons.math.random.ValueServerTest.testProperties(0)" "org.apache.commons.math.random.ValueServer.setMode(1)"
call "org.apache.commons.math.random.ValueServerTest.testProperties(0)" "org.apache.commons.math.random.ValueServer.getMode(0)"
call "org.apache.commons.math.random.ValueServerTest.testProperties(0)" "org.apache.commons.math.random.ValueServerTest.assertEquals(3)"
call "org.apache.commons.math.random.ValueServerTest.testProperties(0)" "org.apache.commons.math.random.ValueServer.setValuesFileURL(1)"
call "org.apache.commons.math.random.ValueServerTest.testProperties(0)" "org.apache.commons.math.random.ValueServer.getValuesFileURL(0)"
call "org.apache.commons.math.random.ValueServerTest.testProperties(0)" "org.apache.commons.math.random.ValueServerTest.assertEquals(3)"
contain "org.apache.commons.math.random.ValueServerTest" "org.apache.commons.math.random.ValueServerTest.testProperties(0)"
contain "org.apache.commons.math.random.ValueServerTest" "org.apache.commons.math.random.ValueServerTest.class$(1)"
reference "org.apache.commons.math.random.ValueServerTest.vs" "org.apache.commons.math.random.ValueServer"
contain "org.apache.commons.math.random.ValueServerTest" "org.apache.commons.math.random.ValueServerTest.vs"
contain "org.apache.commons.math.random.ValueServerTest" "org.apache.commons.math.random.ValueServerTest.class$org$apache$commons$math$random$ValueServerTest"
reference "org.apache.commons.math.stat.descriptive.moment.MeanTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.moment.MeanTest" "org.apache.commons.math.stat.descriptive.moment.Mean"
reference "org.apache.commons.math.stat.descriptive.moment.MeanTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.moment.MeanTest.MeanTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.moment.MeanTest" "org.apache.commons.math.stat.descriptive.moment.MeanTest.MeanTest(1)"
reference "org.apache.commons.math.stat.descriptive.moment.MeanTest.suite(0)" "org.apache.commons.math.stat.descriptive.moment.MeanTest.class$org$apache$commons$math$stat$descriptive$moment$MeanTest"
call "org.apache.commons.math.stat.descriptive.moment.MeanTest.suite(0)" "org.apache.commons.math.stat.descriptive.moment.MeanTest.class$(1)"
call "org.apache.commons.math.stat.descriptive.moment.MeanTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.moment.MeanTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.moment.MeanTest" "org.apache.commons.math.stat.descriptive.moment.MeanTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.moment.MeanTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)"
contain "org.apache.commons.math.stat.descriptive.moment.MeanTest" "org.apache.commons.math.stat.descriptive.moment.MeanTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.MeanTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.moment.MeanTest.mean"
contain "org.apache.commons.math.stat.descriptive.moment.MeanTest" "org.apache.commons.math.stat.descriptive.moment.MeanTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.moment.MeanTest.testSmallSamples(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)"
call "org.apache.commons.math.stat.descriptive.moment.MeanTest.testSmallSamples(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.getResult(0)"
call "org.apache.commons.math.stat.descriptive.moment.MeanTest.testSmallSamples(0)" "org.apache.commons.math.stat.descriptive.moment.MeanTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.moment.MeanTest.testSmallSamples(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.increment(1)"
call "org.apache.commons.math.stat.descriptive.moment.MeanTest.testSmallSamples(0)" "org.apache.commons.math.stat.descriptive.moment.MeanTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.moment.MeanTest" "org.apache.commons.math.stat.descriptive.moment.MeanTest.testSmallSamples(0)"
contain "org.apache.commons.math.stat.descriptive.moment.MeanTest" "org.apache.commons.math.stat.descriptive.moment.MeanTest.class$(1)"
reference "org.apache.commons.math.stat.descriptive.moment.MeanTest.stat" "org.apache.commons.math.stat.descriptive.moment.Mean"
contain "org.apache.commons.math.stat.descriptive.moment.MeanTest" "org.apache.commons.math.stat.descriptive.moment.MeanTest.stat"
contain "org.apache.commons.math.stat.descriptive.moment.MeanTest" "org.apache.commons.math.stat.descriptive.moment.MeanTest.class$org$apache$commons$math$stat$descriptive$moment$MeanTest"
reference "org.apache.commons.math.linear.QRDecompositionImplTest" "double[]"
reference "org.apache.commons.math.linear.QRDecompositionImplTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.RealMatrixImpl"
reference "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImpl"
reference "org.apache.commons.math.linear.QRDecompositionImplTest" "junit.framework.TestCase"
reference "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecomposition"
reference "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.MatrixUtils"
call "org.apache.commons.math.linear.QRDecompositionImplTest.QRDecompositionImplTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.QRDecompositionImplTest(1)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x3NonSingular"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.QRDecompositionImplTest(1)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x3Singular"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.QRDecompositionImplTest(1)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x4"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.QRDecompositionImplTest(1)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData4x3"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.QRDecompositionImplTest(1)" "org.apache.commons.math.linear.QRDecompositionImplTest.entryTolerance"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.QRDecompositionImplTest(1)" "org.apache.commons.math.linear.QRDecompositionImplTest.normTolerance"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.QRDecompositionImplTest(1)"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.suite(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.class$org$apache$commons$math$linear$QRDecompositionImplTest"
call "org.apache.commons.math.linear.QRDecompositionImplTest.suite(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.class$(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.suite(0)"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x3NonSingular"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.QRDecomposition.getQ(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.assertEquals(3)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.QRDecomposition.getR(0)"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData4x3"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x4"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.testDimensions(0)"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testAEqualQR(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x3NonSingular"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testAEqualQR(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testAEqualQR(0)" "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testAEqualQR(0)" "org.apache.commons.math.linear.QRDecomposition.getQ(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testAEqualQR(0)" "org.apache.commons.math.linear.QRDecomposition.getR(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testAEqualQR(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testAEqualQR(0)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testAEqualQR(0)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testAEqualQR(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.assertEquals(4)"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testAEqualQR(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x3Singular"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testAEqualQR(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x4"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testAEqualQR(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData4x3"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.testAEqualQR(0)"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testQOrthogonal(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x3NonSingular"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testQOrthogonal(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testQOrthogonal(0)" "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testQOrthogonal(0)" "org.apache.commons.math.linear.QRDecompositionImpl.getQ(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testQOrthogonal(0)" "org.apache.commons.math.linear.MatrixUtils.createRealIdentityMatrix(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testQOrthogonal(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testQOrthogonal(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testQOrthogonal(0)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testQOrthogonal(0)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testQOrthogonal(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.assertEquals(4)"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testQOrthogonal(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x3Singular"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testQOrthogonal(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x4"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testQOrthogonal(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData4x3"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.testQOrthogonal(0)"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testRUpperTriangular(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x3NonSingular"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testRUpperTriangular(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testRUpperTriangular(0)" "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testRUpperTriangular(0)" "org.apache.commons.math.linear.QRDecompositionImpl.getR(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testRUpperTriangular(0)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testRUpperTriangular(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testRUpperTriangular(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.assertEquals(4)"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testRUpperTriangular(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x4"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testRUpperTriangular(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData4x3"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.testRUpperTriangular(0)"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.class$(1)"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x3NonSingular" "double[][]"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x3NonSingular"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x3Singular" "double[][]"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x3Singular"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x4" "double[][]"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x4"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testData4x3" "double[][]"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.testData4x3"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.entryTolerance"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.normTolerance"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.class$org$apache$commons$math$linear$QRDecompositionImplTest"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.WeightedMeasurement"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.EstimationProblem"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.m"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.n"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.theoreticalStartCost"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.theoreticalMinCost"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.theoreticalMinParams"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.costAccuracy"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.paramsAccuracy"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.buildArray(2)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.setCostAccuracy(1)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.costAccuracy"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.setCostAccuracy(1)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.setParamsAccuracy(1)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.paramsAccuracy"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.setParamsAccuracy(1)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.getN(0)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.parameters"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.getN(0)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalStartCost(1)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.costAccuracy"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalStartCost(1)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.theoreticalStartCost"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalStartCost(1)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.m"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalStartCost(1)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalMinCost(1)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.costAccuracy"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalMinCost(1)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.theoreticalMinCost"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalMinCost(1)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.m"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalMinCost(1)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalMinParams(0)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.theoreticalMinParams"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalMinParams(0)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalMinParams(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalMinParams(0)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.paramsAccuracy"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalMinParams(0)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.getMeasurements(0)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.m"
call "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.getMeasurements(0)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.MinpackMeasurement(2)"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.getMeasurements(0)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.getUnboundParameters(0)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.parameters"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.getUnboundParameters(0)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.getAllParameters(0)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.parameters"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.getAllParameters(0)"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.getJacobian(0)"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.getResiduals(0)"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.n"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.m"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.parameters" "org.apache.commons.math.estimation.EstimatedParameter[]"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.parameters"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.theoreticalStartCost"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.theoreticalMinCost"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.theoreticalMinParams" "double[]"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.theoreticalMinParams"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.costAccuracy"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.paramsAccuracy"
reference "org.apache.commons.math.stat.descriptive.moment.VarianceTest" "org.apache.commons.math.stat.descriptive.moment.Variance"
reference "org.apache.commons.math.stat.descriptive.moment.VarianceTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.moment.VarianceTest" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation"
reference "org.apache.commons.math.stat.descriptive.moment.VarianceTest" "org.apache.commons.math.stat.descriptive.moment.SecondMoment"
reference "org.apache.commons.math.stat.descriptive.moment.VarianceTest" "org.apache.commons.math.stat.descriptive.moment.Mean"
reference "org.apache.commons.math.stat.descriptive.moment.VarianceTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.VarianceTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.moment.VarianceTest" "org.apache.commons.math.stat.descriptive.moment.VarianceTest.VarianceTest(1)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(0)"
contain "org.apache.commons.math.stat.descriptive.moment.VarianceTest" "org.apache.commons.math.stat.descriptive.moment.VarianceTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.VarianceTest.suite(0)" "org.apache.commons.math.stat.descriptive.moment.VarianceTest.class$org$apache$commons$math$stat$descriptive$moment$VarianceTest"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.suite(0)" "org.apache.commons.math.stat.descriptive.moment.VarianceTest.class$(1)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.moment.VarianceTest" "org.apache.commons.math.stat.descriptive.moment.VarianceTest.suite(0)"
reference "org.apache.commons.math.stat.descriptive.moment.VarianceTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.moment.VarianceTest.var"
contain "org.apache.commons.math.stat.descriptive.moment.VarianceTest" "org.apache.commons.math.stat.descriptive.moment.VarianceTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.getResult(0)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.VarianceTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.increment(1)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.VarianceTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.moment.VarianceTest" "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testNaN(0)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.SecondMoment(0)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(0)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.setBiasCorrected(1)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.VarianceTest.populationVariance(1)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.VarianceTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.incrementAll(1)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.getResult(0)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(2)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)"
contain "org.apache.commons.math.stat.descriptive.moment.VarianceTest" "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testPopulation(0)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.populationVariance(1)" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.populationVariance(1)" "org.apache.commons.math.stat.descriptive.moment.Mean.evaluate(1)"
contain "org.apache.commons.math.stat.descriptive.moment.VarianceTest" "org.apache.commons.math.stat.descriptive.moment.VarianceTest.populationVariance(1)"
contain "org.apache.commons.math.stat.descriptive.moment.VarianceTest" "org.apache.commons.math.stat.descriptive.moment.VarianceTest.class$(1)"
reference "org.apache.commons.math.stat.descriptive.moment.VarianceTest.stat" "org.apache.commons.math.stat.descriptive.moment.Variance"
contain "org.apache.commons.math.stat.descriptive.moment.VarianceTest" "org.apache.commons.math.stat.descriptive.moment.VarianceTest.stat"
contain "org.apache.commons.math.stat.descriptive.moment.VarianceTest" "org.apache.commons.math.stat.descriptive.moment.VarianceTest.class$org$apache$commons$math$stat$descriptive$moment$VarianceTest"
reference "org.apache.commons.math.analysis.RombergIntegratorTest" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.analysis.RombergIntegratorTest" "org.apache.commons.math.analysis.RombergIntegrator"
reference "org.apache.commons.math.analysis.RombergIntegratorTest" "org.apache.commons.math.analysis.QuinticFunction"
reference "org.apache.commons.math.analysis.RombergIntegratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.RombergIntegratorTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.analysis.RombergIntegratorTest" "org.apache.commons.math.analysis.UnivariateRealIntegrator"
call "org.apache.commons.math.analysis.RombergIntegratorTest.RombergIntegratorTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.analysis.RombergIntegratorTest" "org.apache.commons.math.analysis.RombergIntegratorTest.RombergIntegratorTest(0)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testSinFunction(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testSinFunction(0)" "org.apache.commons.math.analysis.RombergIntegrator.RombergIntegrator(1)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.integrate(2)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testSinFunction(0)" "org.apache.commons.math.analysis.RombergIntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.RombergIntegratorTest" "org.apache.commons.math.analysis.RombergIntegratorTest.testSinFunction(0)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.RombergIntegrator.RombergIntegrator(1)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.integrate(2)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.RombergIntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.RombergIntegratorTest" "org.apache.commons.math.analysis.RombergIntegratorTest.testQuinticFunction(0)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.RombergIntegrator.RombergIntegrator(1)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.integrate(2)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.RombergIntegratorTest.fail(1)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.setMinimalIterationCount(1)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.setMaximalIterationCount(1)"
contain "org.apache.commons.math.analysis.RombergIntegratorTest" "org.apache.commons.math.analysis.RombergIntegratorTest.testParameters(0)"
reference "org.apache.commons.math.ode.GillIntegratorTest" "org.apache.commons.math.ode.TestProblem1"
reference "org.apache.commons.math.ode.GillIntegratorTest" "org.apache.commons.math.ode.GillIntegrator"
reference "org.apache.commons.math.ode.GillIntegratorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.GillIntegratorTest" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.GillIntegratorTest" "org.apache.commons.math.ode.TestProblemAbstract"
reference "org.apache.commons.math.ode.GillIntegratorTest" "org.apache.commons.math.ode.TestProblemHandler"
reference "org.apache.commons.math.ode.GillIntegratorTest" "org.apache.commons.math.ode.TestProblem3"
reference "org.apache.commons.math.ode.GillIntegratorTest" "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler"
reference "org.apache.commons.math.ode.GillIntegratorTest" "org.apache.commons.math.ode.StepProblem"
reference "org.apache.commons.math.ode.GillIntegratorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.GillIntegratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.GillIntegratorTest" "org.apache.commons.math.ode.TestProblemFactory"
reference "org.apache.commons.math.ode.GillIntegratorTest" "org.apache.commons.math.ode.FirstOrderIntegrator"
call "org.apache.commons.math.ode.GillIntegratorTest.GillIntegratorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.GillIntegratorTest" "org.apache.commons.math.ode.GillIntegratorTest.GillIntegratorTest(1)"
call "org.apache.commons.math.ode.GillIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.GillIntegrator.GillIntegrator(1)"
call "org.apache.commons.math.ode.GillIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.GillIntegrator.integrate(5)"
call "org.apache.commons.math.ode.GillIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.GillIntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.GillIntegratorTest" "org.apache.commons.math.ode.GillIntegratorTest.testDimensionCheck(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemFactory.getProblems(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemAbstract.clone(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemAbstract.getFinalTime(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemAbstract.getInitialTime(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.GillIntegrator.GillIntegrator(1)"
call "org.apache.commons.math.ode.GillIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemHandler.TestProblemHandler(1)"
call "org.apache.commons.math.ode.GillIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.GillIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemAbstract.getSwitchingFunctions(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addSwitchingFunction(3)"
call "org.apache.commons.math.ode.GillIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemAbstract.getInitialState(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemAbstract.getDimension(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.GillIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemHandler.getMaximalError(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.GillIntegratorTest.assertTrue(1)"
contain "org.apache.commons.math.ode.GillIntegratorTest" "org.apache.commons.math.ode.GillIntegratorTest.testDecreasingSteps(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.GillIntegrator.GillIntegrator(1)"
call "org.apache.commons.math.ode.GillIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblemHandler.TestProblemHandler(1)"
call "org.apache.commons.math.ode.GillIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.GillIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.GillIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.GillIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.GillIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblemHandler.getMaximalError(0)"
contain "org.apache.commons.math.ode.GillIntegratorTest" "org.apache.commons.math.ode.GillIntegratorTest.testSmallStep(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.GillIntegrator.GillIntegrator(1)"
call "org.apache.commons.math.ode.GillIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblemHandler.TestProblemHandler(1)"
call "org.apache.commons.math.ode.GillIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.GillIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.GillIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.GillIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.GillIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblemHandler.getMaximalError(0)"
contain "org.apache.commons.math.ode.GillIntegratorTest" "org.apache.commons.math.ode.GillIntegratorTest.testBigStep(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.GillIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.GillIntegrator.GillIntegrator(1)"
call "org.apache.commons.math.ode.GillIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler.KeplerStepHandler(1)"
call "org.apache.commons.math.ode.GillIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.GillIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
contain "org.apache.commons.math.ode.GillIntegratorTest" "org.apache.commons.math.ode.GillIntegratorTest.testKepler(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.testUnstableDerivative(0)" "org.apache.commons.math.ode.StepProblem.StepProblem(3)"
call "org.apache.commons.math.ode.GillIntegratorTest.testUnstableDerivative(0)" "org.apache.commons.math.ode.GillIntegrator.GillIntegrator(1)"
call "org.apache.commons.math.ode.GillIntegratorTest.testUnstableDerivative(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addSwitchingFunction(3)"
call "org.apache.commons.math.ode.GillIntegratorTest.testUnstableDerivative(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.GillIntegratorTest.testUnstableDerivative(0)" "org.apache.commons.math.ode.GillIntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.ode.GillIntegratorTest" "org.apache.commons.math.ode.GillIntegratorTest.testUnstableDerivative(0)"
reference "org.apache.commons.math.ode.GillIntegratorTest.suite(0)" "org.apache.commons.math.ode.GillIntegratorTest.class$org$apache$commons$math$ode$GillIntegratorTest"
call "org.apache.commons.math.ode.GillIntegratorTest.suite(0)" "org.apache.commons.math.ode.GillIntegratorTest.class$(1)"
call "org.apache.commons.math.ode.GillIntegratorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.GillIntegratorTest" "org.apache.commons.math.ode.GillIntegratorTest.suite(0)"
contain "org.apache.commons.math.ode.GillIntegratorTest" "org.apache.commons.math.ode.GillIntegratorTest.class$(1)"
contain "org.apache.commons.math.ode.GillIntegratorTest" "org.apache.commons.math.ode.GillIntegratorTest.class$org$apache$commons$math$ode$GillIntegratorTest"
reference "org.apache.commons.math.stat.descriptive.moment.FourthMomentTest" "org.apache.commons.math.stat.descriptive.moment.FourthMoment"
reference "org.apache.commons.math.stat.descriptive.moment.FourthMomentTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.moment.FourthMomentTest.FourthMomentTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.moment.FourthMomentTest" "org.apache.commons.math.stat.descriptive.moment.FourthMomentTest.FourthMomentTest(1)"
call "org.apache.commons.math.stat.descriptive.moment.FourthMomentTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.FourthMoment(0)"
contain "org.apache.commons.math.stat.descriptive.moment.FourthMomentTest" "org.apache.commons.math.stat.descriptive.moment.FourthMomentTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.FourthMomentTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.moment.FourthMomentTest.fourthMoment"
contain "org.apache.commons.math.stat.descriptive.moment.FourthMomentTest" "org.apache.commons.math.stat.descriptive.moment.FourthMomentTest.expectedValue(0)"
reference "org.apache.commons.math.stat.descriptive.moment.FourthMomentTest.stat" "org.apache.commons.math.stat.descriptive.moment.FourthMoment"
contain "org.apache.commons.math.stat.descriptive.moment.FourthMomentTest" "org.apache.commons.math.stat.descriptive.moment.FourthMomentTest.stat"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.StepHandler"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.StepInterpolator"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.TestProblem3"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler" "junit.framework.Assert"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.DormandPrince54IntegratorTest"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler.KeplerHandler(1)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler.pb"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler.KeplerHandler(1)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler.reset(0)"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler.KeplerHandler(1)"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler.reset(0)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler.nbSteps"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler.reset(0)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler.maxError"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler.reset(0)"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler.nbSteps"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getPreviousTime(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getInterpolatedState(0)"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler.pb"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getInterpolatedTime(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.TestProblem3.computeTheoreticalState(1)"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler.maxError"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler.handleStep(2)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler.handleStep(2)"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler.nbSteps"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler.maxError"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler.pb" "org.apache.commons.math.ode.TestProblem3"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler.pb"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest" "junit.framework.TestCase"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.CertifiedDataAbstractTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.stat.data.CertifiedDataAbstractTest" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.CertifiedDataAbstractTest(0)"
call "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.setUp(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance(0)"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.setUp(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.descriptives"
call "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.setUp(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance(0)"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.setUp(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.summaries"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.setUp(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.certifiedValues"
call "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.setUp(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.loadData(0)"
contain "org.apache.commons.math.stat.data.CertifiedDataAbstractTest" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.setUp(0)"
call "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.loadData(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.getResourceName(0)"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.loadData(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.descriptives"
call "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.loadData(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.loadData(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.summaries"
call "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.loadData(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.loadData(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.certifiedValues"
contain "org.apache.commons.math.stat.data.CertifiedDataAbstractTest" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.loadData(0)"
contain "org.apache.commons.math.stat.data.CertifiedDataAbstractTest" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.getResourceName(0)"
contain "org.apache.commons.math.stat.data.CertifiedDataAbstractTest" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.getMaximumAbsoluteError(0)"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.tearDown(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.descriptives"
call "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.tearDown(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.clear(0)"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.tearDown(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.summaries"
call "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.tearDown(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.clear(0)"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.tearDown(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.certifiedValues"
contain "org.apache.commons.math.stat.data.CertifiedDataAbstractTest" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.tearDown(0)"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.testCertifiedValues(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.certifiedValues"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.testCertifiedValues(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.summaries"
call "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.testCertifiedValues(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.getProperty(2)"
call "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.testCertifiedValues(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.getMaximumAbsoluteError(0)"
call "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.testCertifiedValues(0)" "org.apache.commons.math.TestUtils.assertEquals(4)"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.testCertifiedValues(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.descriptives"
contain "org.apache.commons.math.stat.data.CertifiedDataAbstractTest" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.testCertifiedValues(0)"
contain "org.apache.commons.math.stat.data.CertifiedDataAbstractTest" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.getProperty(2)"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.descriptives" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics"
contain "org.apache.commons.math.stat.data.CertifiedDataAbstractTest" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.descriptives"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.summaries" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
contain "org.apache.commons.math.stat.data.CertifiedDataAbstractTest" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.summaries"
contain "org.apache.commons.math.stat.data.CertifiedDataAbstractTest" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.certifiedValues"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler" "org.apache.commons.math.ode.StepHandler"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler" "org.apache.commons.math.ode.StepInterpolator"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler" "junit.framework.Assert"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler" "org.apache.commons.math.ode.DormandPrince54IntegratorTest"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler.VariableHandler(0)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler.firstTime"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler.VariableHandler(0)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler.minStep"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler.VariableHandler(0)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler.maxStep"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler.VariableHandler(0)"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler.reset(0)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler.firstTime"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler.reset(0)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler.minStep"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler.reset(0)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler.maxStep"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler.reset(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getPreviousTime(0)"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler.handleStep(2)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler.firstTime"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler.handleStep(2)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler.minStep"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler.handleStep(2)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler.maxStep"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler.handleStep(2)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler.handleStep(2)"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler.firstTime"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler.minStep"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler.maxStep"
reference "org.apache.commons.math.stat.descriptive.summary.ProductTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.summary.ProductTest" "org.apache.commons.math.stat.descriptive.summary.Product"
reference "org.apache.commons.math.stat.descriptive.summary.ProductTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.summary.ProductTest.ProductTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.summary.ProductTest" "org.apache.commons.math.stat.descriptive.summary.ProductTest.ProductTest(1)"
reference "org.apache.commons.math.stat.descriptive.summary.ProductTest.suite(0)" "org.apache.commons.math.stat.descriptive.summary.ProductTest.class$org$apache$commons$math$stat$descriptive$summary$ProductTest"
call "org.apache.commons.math.stat.descriptive.summary.ProductTest.suite(0)" "org.apache.commons.math.stat.descriptive.summary.ProductTest.class$(1)"
call "org.apache.commons.math.stat.descriptive.summary.ProductTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.summary.ProductTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.summary.ProductTest" "org.apache.commons.math.stat.descriptive.summary.ProductTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.summary.ProductTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.summary.Product.Product(0)"
contain "org.apache.commons.math.stat.descriptive.summary.ProductTest" "org.apache.commons.math.stat.descriptive.summary.ProductTest.getUnivariateStatistic(0)"
contain "org.apache.commons.math.stat.descriptive.summary.ProductTest" "org.apache.commons.math.stat.descriptive.summary.ProductTest.getTolerance(0)"
reference "org.apache.commons.math.stat.descriptive.summary.ProductTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.summary.ProductTest.product"
contain "org.apache.commons.math.stat.descriptive.summary.ProductTest" "org.apache.commons.math.stat.descriptive.summary.ProductTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.summary.ProductTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.Product.Product(0)"
call "org.apache.commons.math.stat.descriptive.summary.ProductTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.Product.getResult(0)"
call "org.apache.commons.math.stat.descriptive.summary.ProductTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.ProductTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.summary.ProductTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.Product.increment(1)"
call "org.apache.commons.math.stat.descriptive.summary.ProductTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.ProductTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.summary.ProductTest" "org.apache.commons.math.stat.descriptive.summary.ProductTest.testSpecialValues(0)"
contain "org.apache.commons.math.stat.descriptive.summary.ProductTest" "org.apache.commons.math.stat.descriptive.summary.ProductTest.class$(1)"
reference "org.apache.commons.math.stat.descriptive.summary.ProductTest.stat" "org.apache.commons.math.stat.descriptive.summary.Product"
contain "org.apache.commons.math.stat.descriptive.summary.ProductTest" "org.apache.commons.math.stat.descriptive.summary.ProductTest.stat"
contain "org.apache.commons.math.stat.descriptive.summary.ProductTest" "org.apache.commons.math.stat.descriptive.summary.ProductTest.class$org$apache$commons$math$stat$descriptive$summary$ProductTest"
reference "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.Fraction"
reference "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.fraction.FractionTest" "junit.framework.TestCase"
call "org.apache.commons.math.fraction.FractionTest.FractionTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.FractionTest(0)"
call "org.apache.commons.math.fraction.FractionTest.assertFraction(3)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.FractionTest.assertFraction(3)" "org.apache.commons.math.fraction.FractionTest.assertEquals(2)"
call "org.apache.commons.math.fraction.FractionTest.assertFraction(3)" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.assertFraction(3)"
call "org.apache.commons.math.fraction.FractionTest.testConstructor(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testConstructor(0)" "org.apache.commons.math.fraction.FractionTest.assertFraction(3)"
call "org.apache.commons.math.fraction.FractionTest.testConstructor(0)" "org.apache.commons.math.fraction.FractionTest.fail(0)"
call "org.apache.commons.math.fraction.FractionTest.testConstructor(0)" "org.apache.commons.math.fraction.Fraction.Fraction(1)"
call "org.apache.commons.math.fraction.FractionTest.testConstructor(0)" "org.apache.commons.math.ConvergenceException.getMessage(0)"
call "org.apache.commons.math.fraction.FractionTest.testConstructor(0)" "org.apache.commons.math.fraction.FractionTest.fail(1)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testConstructor(0)"
call "org.apache.commons.math.fraction.FractionTest.testCompareTo(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testCompareTo(0)" "org.apache.commons.math.fraction.Fraction.compareTo(1)"
call "org.apache.commons.math.fraction.FractionTest.testCompareTo(0)" "org.apache.commons.math.fraction.FractionTest.assertEquals(2)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testCompareTo(0)"
call "org.apache.commons.math.fraction.FractionTest.testDoubleValue(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testDoubleValue(0)" "org.apache.commons.math.fraction.Fraction.doubleValue(0)"
call "org.apache.commons.math.fraction.FractionTest.testDoubleValue(0)" "org.apache.commons.math.fraction.FractionTest.assertEquals(3)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testDoubleValue(0)"
call "org.apache.commons.math.fraction.FractionTest.testFloatValue(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testFloatValue(0)" "org.apache.commons.math.fraction.Fraction.floatValue(0)"
call "org.apache.commons.math.fraction.FractionTest.testFloatValue(0)" "org.apache.commons.math.fraction.FractionTest.assertEquals(3)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testFloatValue(0)"
call "org.apache.commons.math.fraction.FractionTest.testIntValue(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testIntValue(0)" "org.apache.commons.math.fraction.Fraction.intValue(0)"
call "org.apache.commons.math.fraction.FractionTest.testIntValue(0)" "org.apache.commons.math.fraction.FractionTest.assertEquals(2)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testIntValue(0)"
call "org.apache.commons.math.fraction.FractionTest.testLongValue(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testLongValue(0)" "org.apache.commons.math.fraction.Fraction.longValue(0)"
call "org.apache.commons.math.fraction.FractionTest.testLongValue(0)" "org.apache.commons.math.fraction.FractionTest.assertEquals(2)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testLongValue(0)"
call "org.apache.commons.math.fraction.FractionTest.testConstructorDouble(0)" "org.apache.commons.math.fraction.Fraction.Fraction(1)"
call "org.apache.commons.math.fraction.FractionTest.testConstructorDouble(0)" "org.apache.commons.math.fraction.FractionTest.assertFraction(3)"
call "org.apache.commons.math.fraction.FractionTest.testConstructorDouble(0)" "org.apache.commons.math.ConvergenceException.getMessage(0)"
call "org.apache.commons.math.fraction.FractionTest.testConstructorDouble(0)" "org.apache.commons.math.fraction.FractionTest.fail(1)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testConstructorDouble(0)"
call "org.apache.commons.math.fraction.FractionTest.testAbs(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testAbs(0)" "org.apache.commons.math.fraction.Fraction.abs(0)"
call "org.apache.commons.math.fraction.FractionTest.testAbs(0)" "org.apache.commons.math.fraction.FractionTest.assertFraction(3)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testAbs(0)"
call "org.apache.commons.math.fraction.FractionTest.testReciprocal(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testReciprocal(0)" "org.apache.commons.math.fraction.Fraction.reciprocal(0)"
call "org.apache.commons.math.fraction.FractionTest.testReciprocal(0)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.FractionTest.testReciprocal(0)" "org.apache.commons.math.fraction.FractionTest.assertEquals(2)"
call "org.apache.commons.math.fraction.FractionTest.testReciprocal(0)" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
call "org.apache.commons.math.fraction.FractionTest.testReciprocal(0)" "org.apache.commons.math.fraction.FractionTest.fail(1)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testReciprocal(0)"
call "org.apache.commons.math.fraction.FractionTest.testNegate(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testNegate(0)" "org.apache.commons.math.fraction.Fraction.negate(0)"
call "org.apache.commons.math.fraction.FractionTest.testNegate(0)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.FractionTest.testNegate(0)" "org.apache.commons.math.fraction.FractionTest.assertEquals(2)"
call "org.apache.commons.math.fraction.FractionTest.testNegate(0)" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
call "org.apache.commons.math.fraction.FractionTest.testNegate(0)" "org.apache.commons.math.fraction.FractionTest.fail(1)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testNegate(0)"
call "org.apache.commons.math.fraction.FractionTest.testAdd(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testAdd(0)" "org.apache.commons.math.fraction.Fraction.add(1)"
call "org.apache.commons.math.fraction.FractionTest.testAdd(0)" "org.apache.commons.math.fraction.FractionTest.assertFraction(3)"
reference "org.apache.commons.math.fraction.FractionTest.testAdd(0)" "org.apache.commons.math.fraction.Fraction.ONE"
call "org.apache.commons.math.fraction.FractionTest.testAdd(0)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.FractionTest.testAdd(0)" "org.apache.commons.math.fraction.FractionTest.assertEquals(2)"
call "org.apache.commons.math.fraction.FractionTest.testAdd(0)" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
call "org.apache.commons.math.fraction.FractionTest.testAdd(0)" "org.apache.commons.math.fraction.FractionTest.fail(1)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testAdd(0)"
call "org.apache.commons.math.fraction.FractionTest.testDivide(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testDivide(0)" "org.apache.commons.math.fraction.Fraction.divide(1)"
call "org.apache.commons.math.fraction.FractionTest.testDivide(0)" "org.apache.commons.math.fraction.FractionTest.assertFraction(3)"
reference "org.apache.commons.math.fraction.FractionTest.testDivide(0)" "org.apache.commons.math.fraction.Fraction.ZERO"
call "org.apache.commons.math.fraction.FractionTest.testDivide(0)" "org.apache.commons.math.fraction.FractionTest.fail(1)"
call "org.apache.commons.math.fraction.FractionTest.testDivide(0)" "org.apache.commons.math.fraction.FractionTest.assertSame(2)"
reference "org.apache.commons.math.fraction.FractionTest.testDivide(0)" "org.apache.commons.math.fraction.Fraction.ONE"
call "org.apache.commons.math.fraction.FractionTest.testDivide(0)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.FractionTest.testDivide(0)" "org.apache.commons.math.fraction.FractionTest.assertEquals(2)"
call "org.apache.commons.math.fraction.FractionTest.testDivide(0)" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
call "org.apache.commons.math.fraction.FractionTest.testDivide(0)" "org.apache.commons.math.fraction.Fraction.reciprocal(0)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testDivide(0)"
call "org.apache.commons.math.fraction.FractionTest.testMultiply(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testMultiply(0)" "org.apache.commons.math.fraction.Fraction.multiply(1)"
call "org.apache.commons.math.fraction.FractionTest.testMultiply(0)" "org.apache.commons.math.fraction.FractionTest.assertFraction(3)"
call "org.apache.commons.math.fraction.FractionTest.testMultiply(0)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.FractionTest.testMultiply(0)" "org.apache.commons.math.fraction.FractionTest.assertEquals(2)"
call "org.apache.commons.math.fraction.FractionTest.testMultiply(0)" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
call "org.apache.commons.math.fraction.FractionTest.testMultiply(0)" "org.apache.commons.math.fraction.FractionTest.fail(1)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testMultiply(0)"
call "org.apache.commons.math.fraction.FractionTest.testSubtract(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testSubtract(0)" "org.apache.commons.math.fraction.Fraction.subtract(1)"
call "org.apache.commons.math.fraction.FractionTest.testSubtract(0)" "org.apache.commons.math.fraction.FractionTest.assertFraction(3)"
call "org.apache.commons.math.fraction.FractionTest.testSubtract(0)" "org.apache.commons.math.fraction.FractionTest.fail(1)"
call "org.apache.commons.math.fraction.FractionTest.testSubtract(0)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.FractionTest.testSubtract(0)" "org.apache.commons.math.fraction.FractionTest.assertEquals(2)"
call "org.apache.commons.math.fraction.FractionTest.testSubtract(0)" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
call "org.apache.commons.math.fraction.FractionTest.testSubtract(0)" "org.apache.commons.math.fraction.Fraction.negate(0)"
reference "org.apache.commons.math.fraction.FractionTest.testSubtract(0)" "org.apache.commons.math.fraction.Fraction.ONE"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testSubtract(0)"
call "org.apache.commons.math.fraction.FractionTest.testEqualsAndHashCode(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testEqualsAndHashCode(0)" "org.apache.commons.math.fraction.Fraction.hashCode(0)"
call "org.apache.commons.math.fraction.FractionTest.testEqualsAndHashCode(0)" "org.apache.commons.math.fraction.Fraction.equals(1)"
call "org.apache.commons.math.fraction.FractionTest.testEqualsAndHashCode(0)" "org.apache.commons.math.fraction.FractionTest.assertTrue(1)"
call "org.apache.commons.math.fraction.FractionTest.testEqualsAndHashCode(0)" "org.apache.commons.math.fraction.FractionTest.assertFalse(1)"
call "org.apache.commons.math.fraction.FractionTest.testEqualsAndHashCode(0)" "org.apache.commons.math.fraction.FractionTest.assertEquals(2)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testEqualsAndHashCode(0)"
call "org.apache.commons.math.fraction.FractionTest.testGetReducedFraction(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testGetReducedFraction(0)" "org.apache.commons.math.fraction.Fraction.getReducedFraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testGetReducedFraction(0)" "org.apache.commons.math.fraction.Fraction.equals(1)"
call "org.apache.commons.math.fraction.FractionTest.testGetReducedFraction(0)" "org.apache.commons.math.fraction.FractionTest.assertTrue(1)"
reference "org.apache.commons.math.fraction.FractionTest.testGetReducedFraction(0)" "org.apache.commons.math.fraction.Fraction.ZERO"
call "org.apache.commons.math.fraction.FractionTest.testGetReducedFraction(0)" "org.apache.commons.math.fraction.FractionTest.fail(1)"
call "org.apache.commons.math.fraction.FractionTest.testGetReducedFraction(0)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.FractionTest.testGetReducedFraction(0)" "org.apache.commons.math.fraction.FractionTest.assertEquals(2)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testGetReducedFraction(0)"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest" "org.apache.commons.math.ode.TestProblem3"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest" "org.apache.commons.math.ode.ContinuousOutputModel"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest" "org.apache.commons.math.ode.IntegratorException"
call "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest.ClassicalRungeKuttaStepInterpolatorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest" "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest.ClassicalRungeKuttaStepInterpolatorTest(1)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(1)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.ContinuousOutputModel(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.integrate(5)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.getStepHandler(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest.assertTrue(1)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.computeTheoreticalState(1)"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest" "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest.testSerialization(0)"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest.suite(0)" "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest.class$org$apache$commons$math$ode$ClassicalRungeKuttaStepInterpolatorTest"
call "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest.suite(0)" "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest.class$(1)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest" "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest.suite(0)"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest" "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest.class$(1)"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest" "org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest.class$org$apache$commons$math$ode$ClassicalRungeKuttaStepInterpolatorTest"
reference "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction.Box3DimensionalFunction(3)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction" "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction.Box3DimensionalFunction(3)"
reference "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction.getJacobian(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction.m"
contain "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction" "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction.m"
contain "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction" "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction.getResiduals(0)"
reference "org.apache.commons.math.optimization.NelderMeadTest" "org.apache.commons.math.optimization.NelderMead"
reference "org.apache.commons.math.optimization.NelderMeadTest" "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker"
reference "org.apache.commons.math.optimization.NelderMeadTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.optimization.NelderMeadTest" "junit.framework.TestCase"
reference "org.apache.commons.math.optimization.NelderMeadTest" "org.apache.commons.math.optimization.CostException"
reference "org.apache.commons.math.optimization.NelderMeadTest" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.optimization.NelderMeadTest" "org.apache.commons.math.optimization.PointCostPair"
call "org.apache.commons.math.optimization.NelderMeadTest.NelderMeadTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.optimization.NelderMeadTest" "org.apache.commons.math.optimization.NelderMeadTest.NelderMeadTest(1)"
call "org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock(0)" "org.apache.commons.math.optimization.NelderMeadTest.1.{...}"
reference "org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock(0)" "org.apache.commons.math.optimization.NelderMeadTest.count"
call "org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock(0)" "org.apache.commons.math.optimization.NelderMead.NelderMead(0)"
call "org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock(0)" "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker.ValueChecker(1)"
call "org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock(0)" "org.apache.commons.math.optimization.NelderMead.minimizes(5)"
call "org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock(0)" "org.apache.commons.math.optimization.NelderMeadTest.assertTrue(1)"
reference "org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock(0)" "org.apache.commons.math.optimization.PointCostPair.cost"
call "org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock(0)" "org.apache.commons.math.optimization.NelderMeadTest.assertEquals(3)"
reference "org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock(0)" "org.apache.commons.math.optimization.PointCostPair.point"
contain "org.apache.commons.math.optimization.NelderMeadTest" "org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock(0)"
call "org.apache.commons.math.optimization.NelderMeadTest.testPowell(0)" "org.apache.commons.math.optimization.NelderMeadTest.2.{...}"
reference "org.apache.commons.math.optimization.NelderMeadTest.testPowell(0)" "org.apache.commons.math.optimization.NelderMeadTest.count"
call "org.apache.commons.math.optimization.NelderMeadTest.testPowell(0)" "org.apache.commons.math.optimization.NelderMead.NelderMead(0)"
call "org.apache.commons.math.optimization.NelderMeadTest.testPowell(0)" "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker.ValueChecker(1)"
call "org.apache.commons.math.optimization.NelderMeadTest.testPowell(0)" "org.apache.commons.math.optimization.NelderMead.minimizes(5)"
call "org.apache.commons.math.optimization.NelderMeadTest.testPowell(0)" "org.apache.commons.math.optimization.NelderMeadTest.assertTrue(1)"
reference "org.apache.commons.math.optimization.NelderMeadTest.testPowell(0)" "org.apache.commons.math.optimization.PointCostPair.cost"
call "org.apache.commons.math.optimization.NelderMeadTest.testPowell(0)" "org.apache.commons.math.optimization.NelderMeadTest.assertEquals(3)"
reference "org.apache.commons.math.optimization.NelderMeadTest.testPowell(0)" "org.apache.commons.math.optimization.PointCostPair.point"
contain "org.apache.commons.math.optimization.NelderMeadTest" "org.apache.commons.math.optimization.NelderMeadTest.testPowell(0)"
reference "org.apache.commons.math.optimization.NelderMeadTest.suite(0)" "org.apache.commons.math.optimization.NelderMeadTest.class$org$apache$commons$math$optimization$NelderMeadTest"
call "org.apache.commons.math.optimization.NelderMeadTest.suite(0)" "org.apache.commons.math.optimization.NelderMeadTest.class$(1)"
call "org.apache.commons.math.optimization.NelderMeadTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.optimization.NelderMeadTest" "org.apache.commons.math.optimization.NelderMeadTest.suite(0)"
reference "org.apache.commons.math.optimization.NelderMeadTest.access$004(1)" "org.apache.commons.math.optimization.NelderMeadTest.count"
contain "org.apache.commons.math.optimization.NelderMeadTest" "org.apache.commons.math.optimization.NelderMeadTest.access$004(1)"
contain "org.apache.commons.math.optimization.NelderMeadTest" "org.apache.commons.math.optimization.NelderMeadTest.class$(1)"
contain "org.apache.commons.math.optimization.NelderMeadTest" "org.apache.commons.math.optimization.NelderMeadTest.count"
contain "org.apache.commons.math.optimization.NelderMeadTest" "org.apache.commons.math.optimization.NelderMeadTest.class$org$apache$commons$math$optimization$NelderMeadTest"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest" "org.apache.commons.math.analysis.PolynomialFunction"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest" "org.apache.commons.math.analysis.PolynomialSplineFunction"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest" "org.apache.commons.math.analysis.UnivariateRealFunction"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.PolynomialSplineFunctionTest(0)" "junit.framework.TestCase.TestCase(0)"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.PolynomialSplineFunctionTest(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.tolerance"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.PolynomialSplineFunctionTest(0)" "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.PolynomialSplineFunctionTest(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.polynomials"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.PolynomialSplineFunctionTest(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.knots"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.PolynomialSplineFunctionTest(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.dp"
contain "org.apache.commons.math.analysis.PolynomialSplineFunctionTest" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.PolynomialSplineFunctionTest(0)"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testConstructor(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.knots"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testConstructor(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.polynomials"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testConstructor(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.PolynomialSplineFunction(2)"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testConstructor(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.getKnots(0)"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testConstructor(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.assertTrue(1)"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testConstructor(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.getPolynomials(0)"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testConstructor(0)" "org.apache.commons.math.analysis.PolynomialFunction.getCoefficients(0)"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testConstructor(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.assertEquals(3)"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testConstructor(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.getN(0)"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testConstructor(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.assertEquals(2)"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testConstructor(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.fail(1)"
contain "org.apache.commons.math.analysis.PolynomialSplineFunctionTest" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testConstructor(0)"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testValues(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.knots"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testValues(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.polynomials"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testValues(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.PolynomialSplineFunction(2)"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testValues(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.derivative(0)"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testValues(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.findKnot(2)"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testValues(0)" "org.apache.commons.math.analysis.PolynomialFunction.value(1)"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testValues(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.value(1)"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testValues(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.tolerance"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testValues(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.assertEquals(4)"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testValues(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.dp"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testValues(0)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testValues(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.fail(1)"
contain "org.apache.commons.math.analysis.PolynomialSplineFunctionTest" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testValues(0)"
contain "org.apache.commons.math.analysis.PolynomialSplineFunctionTest" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.findKnot(2)"
contain "org.apache.commons.math.analysis.PolynomialSplineFunctionTest" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.tolerance"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.polynomials" "org.apache.commons.math.analysis.PolynomialFunction[]"
contain "org.apache.commons.math.analysis.PolynomialSplineFunctionTest" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.polynomials"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.knots" "double[]"
contain "org.apache.commons.math.analysis.PolynomialSplineFunctionTest" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.knots"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.dp" "org.apache.commons.math.analysis.PolynomialFunction"
contain "org.apache.commons.math.analysis.PolynomialSplineFunctionTest" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.dp"
reference "org.apache.commons.math.ode.MidpointIntegratorTest" "org.apache.commons.math.ode.TestProblem1"
reference "org.apache.commons.math.ode.MidpointIntegratorTest" "org.apache.commons.math.ode.MidpointIntegrator"
reference "org.apache.commons.math.ode.MidpointIntegratorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.MidpointIntegratorTest" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.MidpointIntegratorTest" "org.apache.commons.math.ode.TestProblemAbstract"
reference "org.apache.commons.math.ode.MidpointIntegratorTest" "org.apache.commons.math.ode.TestProblemHandler"
reference "org.apache.commons.math.ode.MidpointIntegratorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.MidpointIntegratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.MidpointIntegratorTest" "org.apache.commons.math.ode.TestProblemFactory"
reference "org.apache.commons.math.ode.MidpointIntegratorTest" "org.apache.commons.math.ode.FirstOrderIntegrator"
call "org.apache.commons.math.ode.MidpointIntegratorTest.MidpointIntegratorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.MidpointIntegratorTest" "org.apache.commons.math.ode.MidpointIntegratorTest.MidpointIntegratorTest(1)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.MidpointIntegrator.MidpointIntegrator(1)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.MidpointIntegrator.integrate(5)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.MidpointIntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.MidpointIntegratorTest" "org.apache.commons.math.ode.MidpointIntegratorTest.testDimensionCheck(0)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemFactory.getProblems(0)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemAbstract.clone(0)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemAbstract.getFinalTime(0)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemAbstract.getInitialTime(0)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.MidpointIntegrator.MidpointIntegrator(1)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemHandler.TestProblemHandler(1)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemAbstract.getSwitchingFunctions(0)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addSwitchingFunction(3)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemAbstract.getInitialState(0)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemAbstract.getDimension(0)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemHandler.getMaximalError(0)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.MidpointIntegratorTest.assertTrue(1)"
contain "org.apache.commons.math.ode.MidpointIntegratorTest" "org.apache.commons.math.ode.MidpointIntegratorTest.testDecreasingSteps(0)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.MidpointIntegrator.MidpointIntegrator(1)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblemHandler.TestProblemHandler(1)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.MidpointIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblemHandler.getMaximalError(0)"
contain "org.apache.commons.math.ode.MidpointIntegratorTest" "org.apache.commons.math.ode.MidpointIntegratorTest.testSmallStep(0)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.MidpointIntegrator.MidpointIntegrator(1)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblemHandler.TestProblemHandler(1)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.MidpointIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblemHandler.getMaximalError(0)"
contain "org.apache.commons.math.ode.MidpointIntegratorTest" "org.apache.commons.math.ode.MidpointIntegratorTest.testBigStep(0)"
reference "org.apache.commons.math.ode.MidpointIntegratorTest.suite(0)" "org.apache.commons.math.ode.MidpointIntegratorTest.class$org$apache$commons$math$ode$MidpointIntegratorTest"
call "org.apache.commons.math.ode.MidpointIntegratorTest.suite(0)" "org.apache.commons.math.ode.MidpointIntegratorTest.class$(1)"
call "org.apache.commons.math.ode.MidpointIntegratorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.MidpointIntegratorTest" "org.apache.commons.math.ode.MidpointIntegratorTest.suite(0)"
contain "org.apache.commons.math.ode.MidpointIntegratorTest" "org.apache.commons.math.ode.MidpointIntegratorTest.class$(1)"
contain "org.apache.commons.math.ode.MidpointIntegratorTest" "org.apache.commons.math.ode.MidpointIntegratorTest.class$org$apache$commons$math$ode$MidpointIntegratorTest"
reference "org.apache.commons.math.util.ContinuedFractionTest.1" "org.apache.commons.math.util.ContinuedFraction"
call "org.apache.commons.math.util.ContinuedFractionTest.1.{...}" "org.apache.commons.math.util.ContinuedFraction.ContinuedFraction(0)"
reference "org.apache.commons.math.util.ContinuedFractionTest.1.{...}" "org.apache.commons.math.util.ContinuedFractionTest.1.this$0"
contain "org.apache.commons.math.util.ContinuedFractionTest.1" "org.apache.commons.math.util.ContinuedFractionTest.1.{...}"
contain "org.apache.commons.math.util.ContinuedFractionTest.1" "org.apache.commons.math.util.ContinuedFractionTest.1.getA(2)"
contain "org.apache.commons.math.util.ContinuedFractionTest.1" "org.apache.commons.math.util.ContinuedFractionTest.1.getB(2)"
reference "org.apache.commons.math.util.ContinuedFractionTest.1.this$0" "org.apache.commons.math.util.ContinuedFractionTest"
contain "org.apache.commons.math.util.ContinuedFractionTest.1" "org.apache.commons.math.util.ContinuedFractionTest.1.this$0"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest" "org.apache.commons.math.stat.descriptive.moment.GeometricMean"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.GeometricMeanTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest" "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.GeometricMeanTest(1)"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.suite(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.class$org$apache$commons$math$stat$descriptive$moment$GeometricMeanTest"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.suite(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.class$(1)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest" "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.GeometricMean(0)"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest" "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.geoMean"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest" "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.GeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.getResult(0)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.increment(1)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.assertFalse(1)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.clear(0)"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest" "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.testSpecialValues(0)"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest" "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.class$(1)"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.stat" "org.apache.commons.math.stat.descriptive.moment.GeometricMean"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest" "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.stat"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest" "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.class$org$apache$commons$math$stat$descriptive$moment$GeometricMeanTest"
reference "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker" "org.apache.commons.math.optimization.ConvergenceChecker"
reference "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker" "org.apache.commons.math.optimization.PointCostPair"
reference "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker" "org.apache.commons.math.optimization.NelderMeadTest"
reference "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker.ValueChecker(1)" "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker.threshold"
contain "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker" "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker.ValueChecker(1)"
reference "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker.converged(1)" "org.apache.commons.math.optimization.PointCostPair.cost"
reference "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker.converged(1)" "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker.threshold"
contain "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker" "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker.converged(1)"
contain "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker" "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker.threshold"
reference "org.apache.commons.math.RetryTestCase" "junit.framework.AssertionFailedError"
reference "org.apache.commons.math.RetryTestCase" "junit.framework.TestCase"
call "org.apache.commons.math.RetryTestCase.RetryTestCase(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.RetryTestCase" "org.apache.commons.math.RetryTestCase.RetryTestCase(0)"
call "org.apache.commons.math.RetryTestCase.RetryTestCase(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.RetryTestCase" "org.apache.commons.math.RetryTestCase.RetryTestCase(1)"
call "org.apache.commons.math.RetryTestCase.runTest(0)" "junit.framework.TestCase.runTest(0)"
contain "org.apache.commons.math.RetryTestCase" "org.apache.commons.math.RetryTestCase.runTest(0)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.stat.descriptive.moment.VectorialMean"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.linear.RealMatrixImpl"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.JDKRandomGenerator"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.GaussianRandomGenerator"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.DimensionMismatchException"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.NotPositiveDefiniteMatrixException"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.RandomGenerator"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.CorrelatedRandomVectorGeneratorTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.CorrelatedRandomVectorGeneratorTest(1)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.mean"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.CorrelatedRandomVectorGeneratorTest(1)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.covariance"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.CorrelatedRandomVectorGeneratorTest(1)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.generator"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.CorrelatedRandomVectorGeneratorTest(1)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testRank(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.generator"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testRank(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.getRank(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testRank(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.assertEquals(2)"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testRank(0)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testRootMatrix(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.generator"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testRootMatrix(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.getRootMatrix(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testRootMatrix(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testRootMatrix(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testRootMatrix(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.covariance"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testRootMatrix(0)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testRootMatrix(0)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testRootMatrix(0)" "org.apache.commons.math.linear.RealMatrixImpl.getEntry(2)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testRootMatrix(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testRootMatrix(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.assertEquals(3)"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testRootMatrix(0)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMeanAndCovariance(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.mean"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMeanAndCovariance(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.VectorialMean(1)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMeanAndCovariance(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.VectorialCovariance(1)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMeanAndCovariance(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.generator"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMeanAndCovariance(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.nextVector(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMeanAndCovariance(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.increment(1)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMeanAndCovariance(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.increment(1)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMeanAndCovariance(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.getResult(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMeanAndCovariance(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.getResult(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMeanAndCovariance(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.assertEquals(3)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMeanAndCovariance(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.covariance"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMeanAndCovariance(0)" "org.apache.commons.math.linear.RealMatrixImpl.getEntry(2)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMeanAndCovariance(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMeanAndCovariance(0)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.mean"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.linear.RealMatrixImpl.getDataRef(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.linear.RealMatrixImpl.transpose(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.linear.RealMatrixImpl.multiply(1)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.covariance"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.random.JDKRandomGenerator.JDKRandomGenerator(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.random.RandomGenerator.setSeed(1)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.random.GaussianRandomGenerator.GaussianRandomGenerator(1)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.linear.RealMatrixImpl.getNorm(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(4)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.generator"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.DimensionMismatchException.getMessage(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.fail(1)"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.tearDown(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.mean"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.tearDown(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.covariance"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.tearDown(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.generator"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.tearDown(0)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.suite(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.class$org$apache$commons$math$random$CorrelatedRandomVectorGeneratorTest"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.suite(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.class$(1)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.suite(0)"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.class$(1)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.mean" "double[]"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.mean"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.covariance" "org.apache.commons.math.linear.RealMatrixImpl"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.covariance"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.generator" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.generator"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.class$org$apache$commons$math$random$CorrelatedRandomVectorGeneratorTest"
reference "org.apache.commons.math.analysis.LaguerreSolverTest" "org.apache.commons.math.analysis.PolynomialFunction"
reference "org.apache.commons.math.analysis.LaguerreSolverTest" "org.apache.commons.math.analysis.LaguerreSolver"
reference "org.apache.commons.math.analysis.LaguerreSolverTest" "org.apache.commons.math.complex.Complex"
reference "org.apache.commons.math.analysis.LaguerreSolverTest" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.analysis.LaguerreSolverTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.LaguerreSolverTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.analysis.LaguerreSolverTest" "org.apache.commons.math.analysis.UnivariateRealSolver"
reference "org.apache.commons.math.analysis.LaguerreSolverTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.analysis.LaguerreSolverTest.LaguerreSolverTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.analysis.LaguerreSolverTest" "org.apache.commons.math.analysis.LaguerreSolverTest.LaguerreSolverTest(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testLinearFunction(0)" "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testLinearFunction(0)" "org.apache.commons.math.analysis.LaguerreSolver.LaguerreSolver(1)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testLinearFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testLinearFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testLinearFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testLinearFunction(0)" "org.apache.commons.math.analysis.LaguerreSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.LaguerreSolverTest" "org.apache.commons.math.analysis.LaguerreSolverTest.testLinearFunction(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.LaguerreSolver.LaguerreSolver(1)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.LaguerreSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.LaguerreSolverTest" "org.apache.commons.math.analysis.LaguerreSolverTest.testQuadraticFunction(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.LaguerreSolver.LaguerreSolver(1)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.LaguerreSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.LaguerreSolverTest" "org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction2(0)" "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction2(0)" "org.apache.commons.math.analysis.LaguerreSolver.LaguerreSolver(1)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction2(0)" "org.apache.commons.math.analysis.LaguerreSolver.solveAll(2)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction2(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction2(0)" "org.apache.commons.math.analysis.LaguerreSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction2(0)" "org.apache.commons.math.complex.Complex.abs(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction2(0)" "org.apache.commons.math.analysis.LaguerreSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction2(0)" "org.apache.commons.math.TestUtils.assertContains(3)"
contain "org.apache.commons.math.analysis.LaguerreSolverTest" "org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction2(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testParameters(0)" "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testParameters(0)" "org.apache.commons.math.analysis.LaguerreSolver.LaguerreSolver(1)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testParameters(0)" "org.apache.commons.math.analysis.LaguerreSolverTest.fail(1)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testParameters(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
contain "org.apache.commons.math.analysis.LaguerreSolverTest" "org.apache.commons.math.analysis.LaguerreSolverTest.testParameters(0)"
reference "org.apache.commons.math.geometry.Vector3DTest" "org.apache.commons.math.geometry.Vector3D"
reference "org.apache.commons.math.geometry.Vector3DTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.geometry.Vector3DTest" "junit.framework.TestCase"
call "org.apache.commons.math.geometry.Vector3DTest.Vector3DTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.geometry.Vector3DTest" "org.apache.commons.math.geometry.Vector3DTest.Vector3DTest(1)"
call "org.apache.commons.math.geometry.Vector3DTest.testCoordinates(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.Vector3DTest.testCoordinates(0)" "org.apache.commons.math.geometry.Vector3D.getX(0)"
call "org.apache.commons.math.geometry.Vector3DTest.testCoordinates(0)" "org.apache.commons.math.geometry.Vector3DTest.assertTrue(1)"
call "org.apache.commons.math.geometry.Vector3DTest.testCoordinates(0)" "org.apache.commons.math.geometry.Vector3D.getY(0)"
call "org.apache.commons.math.geometry.Vector3DTest.testCoordinates(0)" "org.apache.commons.math.geometry.Vector3D.getZ(0)"
contain "org.apache.commons.math.geometry.Vector3DTest" "org.apache.commons.math.geometry.Vector3DTest.testCoordinates(0)"
call "org.apache.commons.math.geometry.Vector3DTest.testNorm(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(0)"
call "org.apache.commons.math.geometry.Vector3DTest.testNorm(0)" "org.apache.commons.math.geometry.Vector3D.getNorm(0)"
call "org.apache.commons.math.geometry.Vector3DTest.testNorm(0)" "org.apache.commons.math.geometry.Vector3DTest.assertTrue(1)"
call "org.apache.commons.math.geometry.Vector3DTest.testNorm(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
contain "org.apache.commons.math.geometry.Vector3DTest" "org.apache.commons.math.geometry.Vector3DTest.testNorm(0)"
call "org.apache.commons.math.geometry.Vector3DTest.testSubtract(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.Vector3DTest.testSubtract(0)" "org.apache.commons.math.geometry.Vector3D.subtract(1)"
call "org.apache.commons.math.geometry.Vector3DTest.testSubtract(0)" "org.apache.commons.math.geometry.Vector3DTest.checkVector(2)"
contain "org.apache.commons.math.geometry.Vector3DTest" "org.apache.commons.math.geometry.Vector3DTest.testSubtract(0)"
call "org.apache.commons.math.geometry.Vector3DTest.testAdd(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.Vector3DTest.testAdd(0)" "org.apache.commons.math.geometry.Vector3D.add(1)"
call "org.apache.commons.math.geometry.Vector3DTest.testAdd(0)" "org.apache.commons.math.geometry.Vector3DTest.checkVector(2)"
contain "org.apache.commons.math.geometry.Vector3DTest" "org.apache.commons.math.geometry.Vector3DTest.testAdd(0)"
call "org.apache.commons.math.geometry.Vector3DTest.testScalarProduct(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.Vector3DTest.testScalarProduct(0)" "org.apache.commons.math.geometry.Vector3D.multiply(1)"
call "org.apache.commons.math.geometry.Vector3DTest.testScalarProduct(0)" "org.apache.commons.math.geometry.Vector3DTest.checkVector(2)"
contain "org.apache.commons.math.geometry.Vector3DTest" "org.apache.commons.math.geometry.Vector3DTest.testScalarProduct(0)"
call "org.apache.commons.math.geometry.Vector3DTest.testVectorialProducts(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.Vector3DTest.testVectorialProducts(0)" "org.apache.commons.math.geometry.Vector3D.dotProduct(2)"
call "org.apache.commons.math.geometry.Vector3DTest.testVectorialProducts(0)" "org.apache.commons.math.geometry.Vector3DTest.assertTrue(1)"
call "org.apache.commons.math.geometry.Vector3DTest.testVectorialProducts(0)" "org.apache.commons.math.geometry.Vector3D.crossProduct(2)"
call "org.apache.commons.math.geometry.Vector3DTest.testVectorialProducts(0)" "org.apache.commons.math.geometry.Vector3DTest.checkVector(2)"
contain "org.apache.commons.math.geometry.Vector3DTest" "org.apache.commons.math.geometry.Vector3DTest.testVectorialProducts(0)"
reference "org.apache.commons.math.geometry.Vector3DTest.testAngular(0)" "org.apache.commons.math.geometry.Vector3D.plusI"
call "org.apache.commons.math.geometry.Vector3DTest.testAngular(0)" "org.apache.commons.math.geometry.Vector3D.getAlpha(0)"
call "org.apache.commons.math.geometry.Vector3DTest.testAngular(0)" "org.apache.commons.math.geometry.Vector3DTest.assertEquals(3)"
call "org.apache.commons.math.geometry.Vector3DTest.testAngular(0)" "org.apache.commons.math.geometry.Vector3D.getDelta(0)"
reference "org.apache.commons.math.geometry.Vector3DTest.testAngular(0)" "org.apache.commons.math.geometry.Vector3D.plusJ"
reference "org.apache.commons.math.geometry.Vector3DTest.testAngular(0)" "org.apache.commons.math.geometry.Vector3D.plusK"
call "org.apache.commons.math.geometry.Vector3DTest.testAngular(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
contain "org.apache.commons.math.geometry.Vector3DTest" "org.apache.commons.math.geometry.Vector3DTest.testAngular(0)"
call "org.apache.commons.math.geometry.Vector3DTest.testAngularSeparation(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.Vector3DTest.testAngularSeparation(0)" "org.apache.commons.math.geometry.Vector3D.normalize(0)"
call "org.apache.commons.math.geometry.Vector3DTest.testAngularSeparation(0)" "org.apache.commons.math.geometry.Vector3D.orthogonal(0)"
call "org.apache.commons.math.geometry.Vector3DTest.testAngularSeparation(0)" "org.apache.commons.math.geometry.Vector3D.multiply(1)"
call "org.apache.commons.math.geometry.Vector3DTest.testAngularSeparation(0)" "org.apache.commons.math.geometry.Vector3D.add(1)"
call "org.apache.commons.math.geometry.Vector3DTest.testAngularSeparation(0)" "org.apache.commons.math.geometry.Vector3D.angle(2)"
call "org.apache.commons.math.geometry.Vector3DTest.testAngularSeparation(0)" "org.apache.commons.math.geometry.Vector3DTest.assertTrue(1)"
contain "org.apache.commons.math.geometry.Vector3DTest" "org.apache.commons.math.geometry.Vector3DTest.testAngularSeparation(0)"
call "org.apache.commons.math.geometry.Vector3DTest.checkVector(2)" "org.apache.commons.math.geometry.Vector3D.subtract(1)"
call "org.apache.commons.math.geometry.Vector3DTest.checkVector(2)" "org.apache.commons.math.geometry.Vector3D.getNorm(0)"
call "org.apache.commons.math.geometry.Vector3DTest.checkVector(2)" "org.apache.commons.math.geometry.Vector3DTest.assertTrue(1)"
contain "org.apache.commons.math.geometry.Vector3DTest" "org.apache.commons.math.geometry.Vector3DTest.checkVector(2)"
reference "org.apache.commons.math.geometry.Vector3DTest.suite(0)" "org.apache.commons.math.geometry.Vector3DTest.class$org$apache$commons$math$geometry$Vector3DTest"
call "org.apache.commons.math.geometry.Vector3DTest.suite(0)" "org.apache.commons.math.geometry.Vector3DTest.class$(1)"
call "org.apache.commons.math.geometry.Vector3DTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.geometry.Vector3DTest" "org.apache.commons.math.geometry.Vector3DTest.suite(0)"
contain "org.apache.commons.math.geometry.Vector3DTest" "org.apache.commons.math.geometry.Vector3DTest.class$(1)"
contain "org.apache.commons.math.geometry.Vector3DTest" "org.apache.commons.math.geometry.Vector3DTest.class$org$apache$commons$math$geometry$Vector3DTest"
reference "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.StepHandler"
reference "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.StepInterpolator"
reference "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.TestProblem3"
reference "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler" "junit.framework.Assert"
reference "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.GillIntegratorTest"
reference "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler.KeplerStepHandler(1)" "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler.pb"
call "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler.KeplerStepHandler(1)" "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler.reset(0)"
contain "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler.KeplerStepHandler(1)"
contain "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler.reset(0)" "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler.maxError"
contain "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler.reset(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getInterpolatedState(0)"
reference "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler.handleStep(2)" "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler.pb"
call "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler.handleStep(2)" "org.apache.commons.math.ode.TestProblem3.computeTheoreticalState(1)"
reference "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler.handleStep(2)" "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler.maxError"
call "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler.handleStep(2)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler.handleStep(2)"
contain "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler.maxError"
reference "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler.pb" "org.apache.commons.math.ode.TestProblem3"
contain "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.GillIntegratorTest.KeplerStepHandler.pb"
reference "org.apache.commons.math.stat.descriptive.rank.MinTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.rank.MinTest" "org.apache.commons.math.stat.descriptive.rank.Min"
reference "org.apache.commons.math.stat.descriptive.rank.MinTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.rank.MinTest.MinTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.rank.MinTest" "org.apache.commons.math.stat.descriptive.rank.MinTest.MinTest(1)"
reference "org.apache.commons.math.stat.descriptive.rank.MinTest.suite(0)" "org.apache.commons.math.stat.descriptive.rank.MinTest.class$org$apache$commons$math$stat$descriptive$rank$MinTest"
call "org.apache.commons.math.stat.descriptive.rank.MinTest.suite(0)" "org.apache.commons.math.stat.descriptive.rank.MinTest.class$(1)"
call "org.apache.commons.math.stat.descriptive.rank.MinTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.rank.MinTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.rank.MinTest" "org.apache.commons.math.stat.descriptive.rank.MinTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.rank.MinTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.rank.Min.Min(0)"
contain "org.apache.commons.math.stat.descriptive.rank.MinTest" "org.apache.commons.math.stat.descriptive.rank.MinTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.rank.MinTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.rank.MinTest.min"
contain "org.apache.commons.math.stat.descriptive.rank.MinTest" "org.apache.commons.math.stat.descriptive.rank.MinTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.rank.MinTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.Min.Min(0)"
call "org.apache.commons.math.stat.descriptive.rank.MinTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.Min.getResult(0)"
call "org.apache.commons.math.stat.descriptive.rank.MinTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.MinTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.rank.MinTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.Min.increment(1)"
call "org.apache.commons.math.stat.descriptive.rank.MinTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.MinTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.rank.MinTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.Min.evaluate(1)"
contain "org.apache.commons.math.stat.descriptive.rank.MinTest" "org.apache.commons.math.stat.descriptive.rank.MinTest.testSpecialValues(0)"
call "org.apache.commons.math.stat.descriptive.rank.MinTest.testNaNs(0)" "org.apache.commons.math.stat.descriptive.rank.Min.Min(0)"
call "org.apache.commons.math.stat.descriptive.rank.MinTest.testNaNs(0)" "org.apache.commons.math.stat.descriptive.rank.Min.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.rank.MinTest.testNaNs(0)" "org.apache.commons.math.stat.descriptive.rank.MinTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.rank.MinTest.testNaNs(0)" "org.apache.commons.math.stat.descriptive.rank.MinTest.assertTrue(1)"
contain "org.apache.commons.math.stat.descriptive.rank.MinTest" "org.apache.commons.math.stat.descriptive.rank.MinTest.testNaNs(0)"
contain "org.apache.commons.math.stat.descriptive.rank.MinTest" "org.apache.commons.math.stat.descriptive.rank.MinTest.class$(1)"
reference "org.apache.commons.math.stat.descriptive.rank.MinTest.stat" "org.apache.commons.math.stat.descriptive.rank.Min"
contain "org.apache.commons.math.stat.descriptive.rank.MinTest" "org.apache.commons.math.stat.descriptive.rank.MinTest.stat"
contain "org.apache.commons.math.stat.descriptive.rank.MinTest" "org.apache.commons.math.stat.descriptive.rank.MinTest.class$org$apache$commons$math$stat$descriptive$rank$MinTest"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.TestProblem1"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.DormandPrince853Integrator"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.TestProblemHandler"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.TestProblem4"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.TestProblem3"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.InterpolatingStepHandler"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.StepProblem"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.FirstOrderIntegrator"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.DummyStepHandler"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.DormandPrince853IntegratorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.DormandPrince853IntegratorTest(1)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.DormandPrince853Integrator.DormandPrince853Integrator(4)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.DormandPrince853Integrator.integrate(5)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testDimensionCheck(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testNullIntervalCheck(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testNullIntervalCheck(0)" "org.apache.commons.math.ode.DormandPrince853Integrator.DormandPrince853Integrator(4)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testNullIntervalCheck(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testNullIntervalCheck(0)" "org.apache.commons.math.ode.DormandPrince853Integrator.integrate(5)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testNullIntervalCheck(0)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testNullIntervalCheck(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.DormandPrince853Integrator.DormandPrince853Integrator(4)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.TestProblemHandler.TestProblemHandler(1)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testMinStep(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.DormandPrince853Integrator.DormandPrince853Integrator(4)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblemHandler.TestProblemHandler(1)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblemHandler.getMaximalError(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblem1.getCalls(0)"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testIncreasingTolerance(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblem4.TestProblem4(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblem4.getFinalTime(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblem4.getInitialTime(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.DormandPrince853Integrator.DormandPrince853Integrator(4)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblemHandler.TestProblemHandler(1)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblem4.getSwitchingFunctions(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addSwitchingFunction(3)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblem4.getInitialState(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblem4.getDimension(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblemHandler.getMaximalError(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblemHandler.getLastTime(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testSwitchingFunctions(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.DormandPrince853Integrator.DormandPrince853Integrator(4)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler.KeplerHandler(1)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.getCalls(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.assertTrue(1)"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testKepler(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.DormandPrince853Integrator.DormandPrince853Integrator(4)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.VariableHandler.VariableHandler(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testVariableSteps(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testNoDenseOutput(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testNoDenseOutput(0)" "org.apache.commons.math.ode.TestProblem1.clone(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testNoDenseOutput(0)" "org.apache.commons.math.ode.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testNoDenseOutput(0)" "org.apache.commons.math.ode.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testNoDenseOutput(0)" "org.apache.commons.math.ode.DormandPrince853Integrator.DormandPrince853Integrator(4)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testNoDenseOutput(0)" "org.apache.commons.math.ode.DummyStepHandler.getInstance(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testNoDenseOutput(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testNoDenseOutput(0)" "org.apache.commons.math.ode.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testNoDenseOutput(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testNoDenseOutput(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testNoDenseOutput(0)" "org.apache.commons.math.ode.TestProblem1.getCalls(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testNoDenseOutput(0)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.InterpolatingStepHandler.InterpolatingStepHandler(1)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testNoDenseOutput(0)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.assertTrue(1)"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testNoDenseOutput(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testUnstableDerivative(0)" "org.apache.commons.math.ode.StepProblem.StepProblem(3)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testUnstableDerivative(0)" "org.apache.commons.math.ode.DormandPrince853Integrator.DormandPrince853Integrator(4)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testUnstableDerivative(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addSwitchingFunction(3)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testUnstableDerivative(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testUnstableDerivative(0)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.testUnstableDerivative(0)"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.suite(0)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.class$org$apache$commons$math$ode$DormandPrince853IntegratorTest"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.suite(0)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.class$(1)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.suite(0)"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.class$(1)"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.class$org$apache$commons$math$ode$DormandPrince853IntegratorTest"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest" "org.apache.commons.math.MathException"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.PolynomialFunctionLagrangeFormTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.PolynomialFunctionLagrangeFormTest(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testLinearFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.PolynomialFunctionLagrangeForm(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testLinearFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.value(1)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testLinearFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.assertEquals(3)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testLinearFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.degree(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testLinearFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.assertEquals(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testLinearFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.getCoefficients(0)"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testLinearFunction(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.PolynomialFunctionLagrangeForm(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.value(1)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.assertEquals(3)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.degree(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.assertEquals(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.getCoefficients(0)"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testQuadraticFunction(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.PolynomialFunctionLagrangeForm(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.value(1)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.assertEquals(3)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.degree(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.assertEquals(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.getCoefficients(0)"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testQuinticFunction(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testParameters(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.PolynomialFunctionLagrangeForm(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testParameters(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.fail(1)"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testParameters(0)"
reference "org.apache.commons.math.random.RandomAdaptorTest.1" "org.apache.commons.math.random.RandomAdaptorTest"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "double[][]"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "org.apache.commons.math.DimensionMismatchException"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "double[]"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "junit.framework.TestCase"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "org.apache.commons.math.linear.RealMatrix"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.VectorialCovarianceTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.VectorialCovarianceTest(1)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.points"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.VectorialCovarianceTest(1)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testMismatch(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.VectorialCovariance(1)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testMismatch(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.increment(1)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testMismatch(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.fail(1)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testMismatch(0)" "org.apache.commons.math.DimensionMismatchException.getDimension1(0)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testMismatch(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.assertEquals(2)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testMismatch(0)" "org.apache.commons.math.DimensionMismatchException.getDimension2(0)"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testMismatch(0)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testSimplistic(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.VectorialCovariance(1)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testSimplistic(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.increment(1)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testSimplistic(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.getResult(0)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testSimplistic(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testSimplistic(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testSimplistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testBasicStats(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.points"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testBasicStats(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.VectorialCovariance(1)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testBasicStats(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.increment(1)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testBasicStats(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.getN(0)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testBasicStats(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.assertEquals(2)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testBasicStats(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.getResult(0)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testBasicStats(0)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testBasicStats(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testBasicStats(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testBasicStats(0)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.setUp(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.points"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.setUp(0)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.tearDown(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.points"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.tearDown(0)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.suite(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.class$org$apache$commons$math$stat$descriptive$moment$VectorialCovarianceTest"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.suite(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.class$(1)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.suite(0)"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.class$(1)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.points" "double[][]"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.points"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.class$org$apache$commons$math$stat$descriptive$moment$VectorialCovarianceTest"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.InterpolatingStepHandler" "org.apache.commons.math.ode.StepHandler"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.InterpolatingStepHandler" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.InterpolatingStepHandler" "org.apache.commons.math.ode.StepInterpolator"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.InterpolatingStepHandler" "org.apache.commons.math.ode.DormandPrince853IntegratorTest"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest.InterpolatingStepHandler" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.InterpolatingStepHandler.InterpolatingStepHandler(0)"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest.InterpolatingStepHandler" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.InterpolatingStepHandler.requiresDenseOutput(0)"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest.InterpolatingStepHandler" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.InterpolatingStepHandler.reset(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.InterpolatingStepHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getPreviousTime(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.InterpolatingStepHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.InterpolatingStepHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.setInterpolatedTime(1)"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest.InterpolatingStepHandler" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.InterpolatingStepHandler.handleStep(2)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.InterpolatingStepHandler.InterpolatingStepHandler(1)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.InterpolatingStepHandler.InterpolatingStepHandler(0)"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest.InterpolatingStepHandler" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.InterpolatingStepHandler.InterpolatingStepHandler(1)"
reference "org.apache.commons.math.random.GaussianRandomGeneratorTest" "org.apache.commons.math.random.JDKRandomGenerator"
reference "org.apache.commons.math.random.GaussianRandomGeneratorTest" "org.apache.commons.math.random.GaussianRandomGenerator"
reference "org.apache.commons.math.random.GaussianRandomGeneratorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.random.GaussianRandomGeneratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.random.GaussianRandomGeneratorTest" "org.apache.commons.math.random.RandomGenerator"
reference "org.apache.commons.math.random.GaussianRandomGeneratorTest" "org.apache.commons.math.stat.StatUtils"
call "org.apache.commons.math.random.GaussianRandomGeneratorTest.GaussianRandomGeneratorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.random.GaussianRandomGeneratorTest" "org.apache.commons.math.random.GaussianRandomGeneratorTest.GaussianRandomGeneratorTest(1)"
call "org.apache.commons.math.random.GaussianRandomGeneratorTest.testMeanAndStandardDeviation(0)" "org.apache.commons.math.random.JDKRandomGenerator.JDKRandomGenerator(0)"
call "org.apache.commons.math.random.GaussianRandomGeneratorTest.testMeanAndStandardDeviation(0)" "org.apache.commons.math.random.RandomGenerator.setSeed(1)"
call "org.apache.commons.math.random.GaussianRandomGeneratorTest.testMeanAndStandardDeviation(0)" "org.apache.commons.math.random.GaussianRandomGenerator.GaussianRandomGenerator(1)"
call "org.apache.commons.math.random.GaussianRandomGeneratorTest.testMeanAndStandardDeviation(0)" "org.apache.commons.math.random.GaussianRandomGenerator.nextNormalizedDouble(0)"
call "org.apache.commons.math.random.GaussianRandomGeneratorTest.testMeanAndStandardDeviation(0)" "org.apache.commons.math.stat.StatUtils.mean(1)"
call "org.apache.commons.math.random.GaussianRandomGeneratorTest.testMeanAndStandardDeviation(0)" "org.apache.commons.math.random.GaussianRandomGeneratorTest.assertEquals(3)"
call "org.apache.commons.math.random.GaussianRandomGeneratorTest.testMeanAndStandardDeviation(0)" "org.apache.commons.math.stat.StatUtils.variance(1)"
contain "org.apache.commons.math.random.GaussianRandomGeneratorTest" "org.apache.commons.math.random.GaussianRandomGeneratorTest.testMeanAndStandardDeviation(0)"
reference "org.apache.commons.math.random.GaussianRandomGeneratorTest.suite(0)" "org.apache.commons.math.random.GaussianRandomGeneratorTest.class$org$apache$commons$math$random$GaussianRandomGeneratorTest"
call "org.apache.commons.math.random.GaussianRandomGeneratorTest.suite(0)" "org.apache.commons.math.random.GaussianRandomGeneratorTest.class$(1)"
call "org.apache.commons.math.random.GaussianRandomGeneratorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.random.GaussianRandomGeneratorTest" "org.apache.commons.math.random.GaussianRandomGeneratorTest.suite(0)"
contain "org.apache.commons.math.random.GaussianRandomGeneratorTest" "org.apache.commons.math.random.GaussianRandomGeneratorTest.class$(1)"
contain "org.apache.commons.math.random.GaussianRandomGeneratorTest" "org.apache.commons.math.random.GaussianRandomGeneratorTest.class$org$apache$commons$math$random$GaussianRandomGeneratorTest"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.StepHandler"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.StepInterpolator"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.TestProblem3"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler" "junit.framework.Assert"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler.KeplerHandler(1)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler.maxError"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler.KeplerHandler(1)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler.pb"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler.KeplerHandler(1)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler.reset(0)"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler.KeplerHandler(1)"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler.reset(0)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler.maxError"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler.reset(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getInterpolatedState(0)"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler.pb"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.TestProblem3.computeTheoreticalState(1)"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler.maxError"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler.handleStep(2)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler.handleStep(2)"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler.maxError"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler.pb" "org.apache.commons.math.ode.TestProblem3"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler.pb"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest.ThirdMomentTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest" "org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest.ThirdMomentTest(1)"
call "org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.ThirdMoment(0)"
contain "org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest" "org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest.thirdMoment"
contain "org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest" "org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest.expectedValue(0)"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest.stat" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment"
contain "org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest" "org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest.stat"
reference "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.LinearFullRankFunction(5)" "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.buildArray(2)"
call "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.LinearFullRankFunction(5)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction" "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.LinearFullRankFunction(5)"
reference "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.m"
reference "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.n"
contain "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction" "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.n"
reference "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.m"
contain "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction" "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.getResiduals(0)"
reference "org.apache.commons.math.ode.TestProblemHandler" "org.apache.commons.math.ode.StepHandler"
reference "org.apache.commons.math.ode.TestProblemHandler" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.TestProblemHandler" "org.apache.commons.math.ode.StepInterpolator"
reference "org.apache.commons.math.ode.TestProblemHandler" "org.apache.commons.math.ode.TestProblemAbstract"
reference "org.apache.commons.math.ode.TestProblemHandler.TestProblemHandler(1)" "org.apache.commons.math.ode.TestProblemHandler.problem"
call "org.apache.commons.math.ode.TestProblemHandler.TestProblemHandler(1)" "org.apache.commons.math.ode.TestProblemHandler.reset(0)"
contain "org.apache.commons.math.ode.TestProblemHandler" "org.apache.commons.math.ode.TestProblemHandler.TestProblemHandler(1)"
contain "org.apache.commons.math.ode.TestProblemHandler" "org.apache.commons.math.ode.TestProblemHandler.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.TestProblemHandler.reset(0)" "org.apache.commons.math.ode.TestProblemHandler.maxError"
reference "org.apache.commons.math.ode.TestProblemHandler.reset(0)" "org.apache.commons.math.ode.TestProblemHandler.lastError"
contain "org.apache.commons.math.ode.TestProblemHandler" "org.apache.commons.math.ode.TestProblemHandler.reset(0)"
call "org.apache.commons.math.ode.TestProblemHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getPreviousTime(0)"
call "org.apache.commons.math.ode.TestProblemHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getCurrentTime(0)"
reference "org.apache.commons.math.ode.TestProblemHandler.handleStep(2)" "org.apache.commons.math.ode.TestProblemHandler.problem"
call "org.apache.commons.math.ode.TestProblemHandler.handleStep(2)" "org.apache.commons.math.ode.TestProblemAbstract.getErrorScale(0)"
call "org.apache.commons.math.ode.TestProblemHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getInterpolatedState(0)"
call "org.apache.commons.math.ode.TestProblemHandler.handleStep(2)" "org.apache.commons.math.ode.TestProblemAbstract.computeTheoreticalState(1)"
reference "org.apache.commons.math.ode.TestProblemHandler.handleStep(2)" "org.apache.commons.math.ode.TestProblemHandler.lastError"
reference "org.apache.commons.math.ode.TestProblemHandler.handleStep(2)" "org.apache.commons.math.ode.TestProblemHandler.lastTime"
call "org.apache.commons.math.ode.TestProblemHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.TestProblemHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getInterpolatedTime(0)"
reference "org.apache.commons.math.ode.TestProblemHandler.handleStep(2)" "org.apache.commons.math.ode.TestProblemHandler.maxError"
contain "org.apache.commons.math.ode.TestProblemHandler" "org.apache.commons.math.ode.TestProblemHandler.handleStep(2)"
reference "org.apache.commons.math.ode.TestProblemHandler.getMaximalError(0)" "org.apache.commons.math.ode.TestProblemHandler.maxError"
contain "org.apache.commons.math.ode.TestProblemHandler" "org.apache.commons.math.ode.TestProblemHandler.getMaximalError(0)"
reference "org.apache.commons.math.ode.TestProblemHandler.getLastError(0)" "org.apache.commons.math.ode.TestProblemHandler.lastError"
contain "org.apache.commons.math.ode.TestProblemHandler" "org.apache.commons.math.ode.TestProblemHandler.getLastError(0)"
reference "org.apache.commons.math.ode.TestProblemHandler.getLastTime(0)" "org.apache.commons.math.ode.TestProblemHandler.lastTime"
contain "org.apache.commons.math.ode.TestProblemHandler" "org.apache.commons.math.ode.TestProblemHandler.getLastTime(0)"
reference "org.apache.commons.math.ode.TestProblemHandler.problem" "org.apache.commons.math.ode.TestProblemAbstract"
contain "org.apache.commons.math.ode.TestProblemHandler" "org.apache.commons.math.ode.TestProblemHandler.problem"
contain "org.apache.commons.math.ode.TestProblemHandler" "org.apache.commons.math.ode.TestProblemHandler.maxError"
contain "org.apache.commons.math.ode.TestProblemHandler" "org.apache.commons.math.ode.TestProblemHandler.lastError"
contain "org.apache.commons.math.ode.TestProblemHandler" "org.apache.commons.math.ode.TestProblemHandler.lastTime"
reference "org.apache.commons.math.TestUtils" "junit.framework.AssertionFailedError"
reference "org.apache.commons.math.TestUtils" "junit.framework.Assert"
reference "org.apache.commons.math.TestUtils" "org.apache.commons.math.complex.Complex"
reference "org.apache.commons.math.TestUtils" "org.apache.commons.math.complex.ComplexFormat"
contain "org.apache.commons.math.TestUtils" "org.apache.commons.math.TestUtils.TestUtils(0)"
call "org.apache.commons.math.TestUtils.assertEquals(3)" "org.apache.commons.math.TestUtils.assertEquals(4)"
contain "org.apache.commons.math.TestUtils" "org.apache.commons.math.TestUtils.assertEquals(3)"
call "org.apache.commons.math.TestUtils.assertEquals(4)" "junit.framework.Assert.assertTrue(2)"
call "org.apache.commons.math.TestUtils.assertEquals(4)" "junit.framework.Assert.assertEquals(4)"
contain "org.apache.commons.math.TestUtils" "org.apache.commons.math.TestUtils.assertEquals(4)"
call "org.apache.commons.math.TestUtils.assertSame(2)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.TestUtils" "org.apache.commons.math.TestUtils.assertSame(2)"
call "org.apache.commons.math.TestUtils.assertSame(2)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.TestUtils.assertSame(2)" "org.apache.commons.math.TestUtils.assertSame(2)"
call "org.apache.commons.math.TestUtils.assertSame(2)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
contain "org.apache.commons.math.TestUtils" "org.apache.commons.math.TestUtils.assertSame(2)"
call "org.apache.commons.math.TestUtils.assertEquals(3)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.TestUtils.assertEquals(3)" "org.apache.commons.math.TestUtils.assertEquals(3)"
call "org.apache.commons.math.TestUtils.assertEquals(3)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
contain "org.apache.commons.math.TestUtils" "org.apache.commons.math.TestUtils.assertEquals(3)"
call "org.apache.commons.math.TestUtils.assertEquals(3)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.commons.math.TestUtils.assertEquals(3)" "junit.framework.Assert.assertEquals(3)"
contain "org.apache.commons.math.TestUtils" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.TestUtils" "org.apache.commons.math.TestUtils.serializeAndRecover(1)"
call "org.apache.commons.math.TestUtils.checkSerializedEquality(1)" "org.apache.commons.math.TestUtils.serializeAndRecover(1)"
call "org.apache.commons.math.TestUtils.checkSerializedEquality(1)" "junit.framework.Assert.assertEquals(3)"
call "org.apache.commons.math.TestUtils.checkSerializedEquality(1)" "junit.framework.Assert.assertEquals(3)"
contain "org.apache.commons.math.TestUtils" "org.apache.commons.math.TestUtils.checkSerializedEquality(1)"
call "org.apache.commons.math.TestUtils.assertRelativelyEquals(3)" "org.apache.commons.math.TestUtils.assertRelativelyEquals(4)"
contain "org.apache.commons.math.TestUtils" "org.apache.commons.math.TestUtils.assertRelativelyEquals(3)"
call "org.apache.commons.math.TestUtils.assertRelativelyEquals(4)" "junit.framework.Assert.assertTrue(2)"
call "org.apache.commons.math.TestUtils.assertRelativelyEquals(4)" "junit.framework.Assert.assertEquals(3)"
call "org.apache.commons.math.TestUtils.assertRelativelyEquals(4)" "junit.framework.Assert.assertEquals(4)"
contain "org.apache.commons.math.TestUtils" "org.apache.commons.math.TestUtils.assertRelativelyEquals(4)"
call "org.apache.commons.math.TestUtils.assertContains(4)" "org.apache.commons.math.TestUtils.assertEquals(3)"
call "org.apache.commons.math.TestUtils.assertContains(4)" "org.apache.commons.math.complex.ComplexFormat.formatComplex(1)"
call "org.apache.commons.math.TestUtils.assertContains(4)" "junit.framework.Assert.fail(1)"
contain "org.apache.commons.math.TestUtils" "org.apache.commons.math.TestUtils.assertContains(4)"
call "org.apache.commons.math.TestUtils.assertContains(3)" "org.apache.commons.math.TestUtils.assertContains(4)"
contain "org.apache.commons.math.TestUtils" "org.apache.commons.math.TestUtils.assertContains(3)"
call "org.apache.commons.math.TestUtils.assertContains(4)" "org.apache.commons.math.TestUtils.assertEquals(3)"
call "org.apache.commons.math.TestUtils.assertContains(4)" "junit.framework.Assert.fail(1)"
contain "org.apache.commons.math.TestUtils" "org.apache.commons.math.TestUtils.assertContains(4)"
call "org.apache.commons.math.TestUtils.assertContains(3)" "org.apache.commons.math.TestUtils.assertContains(4)"
contain "org.apache.commons.math.TestUtils" "org.apache.commons.math.TestUtils.assertContains(3)"
reference "org.apache.commons.math.util.ContinuedFractionTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.util.ContinuedFractionTest" "junit.framework.TestCase"
reference "org.apache.commons.math.util.ContinuedFractionTest" "org.apache.commons.math.util.ContinuedFraction"
call "org.apache.commons.math.util.ContinuedFractionTest.ContinuedFractionTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.util.ContinuedFractionTest" "org.apache.commons.math.util.ContinuedFractionTest.ContinuedFractionTest(1)"
call "org.apache.commons.math.util.ContinuedFractionTest.testGoldenRation(0)" "org.apache.commons.math.util.ContinuedFractionTest.1.{...}"
call "org.apache.commons.math.util.ContinuedFractionTest.testGoldenRation(0)" "org.apache.commons.math.util.ContinuedFraction.evaluate(2)"
call "org.apache.commons.math.util.ContinuedFractionTest.testGoldenRation(0)" "org.apache.commons.math.util.ContinuedFractionTest.assertEquals(3)"
call "org.apache.commons.math.util.ContinuedFractionTest.testGoldenRation(0)" "org.apache.commons.math.MathException.getMessage(0)"
call "org.apache.commons.math.util.ContinuedFractionTest.testGoldenRation(0)" "org.apache.commons.math.util.ContinuedFractionTest.fail(1)"
contain "org.apache.commons.math.util.ContinuedFractionTest" "org.apache.commons.math.util.ContinuedFractionTest.testGoldenRation(0)"
reference "org.apache.commons.math.util.TransformerMapTest" "org.apache.commons.math.util.DefaultTransformer"
reference "org.apache.commons.math.util.TransformerMapTest" "org.apache.commons.math.util.TransformerMap"
reference "org.apache.commons.math.util.TransformerMapTest" "junit.framework.TestCase"
call "org.apache.commons.math.util.TransformerMapTest.TransformerMapTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.util.TransformerMapTest" "org.apache.commons.math.util.TransformerMapTest.TransformerMapTest(0)"
call "org.apache.commons.math.util.TransformerMapTest.testPutTransformer(0)" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
call "org.apache.commons.math.util.TransformerMapTest.testPutTransformer(0)" "org.apache.commons.math.util.TransformerMap.TransformerMap(0)"
reference "org.apache.commons.math.util.TransformerMapTest.testPutTransformer(0)" "org.apache.commons.math.util.TransformerMapTest.class$org$apache$commons$math$util$TransformerMapTest"
call "org.apache.commons.math.util.TransformerMapTest.testPutTransformer(0)" "org.apache.commons.math.util.TransformerMapTest.class$(1)"
call "org.apache.commons.math.util.TransformerMapTest.testPutTransformer(0)" "org.apache.commons.math.util.TransformerMap.putTransformer(2)"
call "org.apache.commons.math.util.TransformerMapTest.testPutTransformer(0)" "org.apache.commons.math.util.TransformerMap.getTransformer(1)"
call "org.apache.commons.math.util.TransformerMapTest.testPutTransformer(0)" "org.apache.commons.math.util.TransformerMapTest.assertEquals(2)"
contain "org.apache.commons.math.util.TransformerMapTest" "org.apache.commons.math.util.TransformerMapTest.testPutTransformer(0)"
call "org.apache.commons.math.util.TransformerMapTest.testContainsClass(0)" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
call "org.apache.commons.math.util.TransformerMapTest.testContainsClass(0)" "org.apache.commons.math.util.TransformerMap.TransformerMap(0)"
reference "org.apache.commons.math.util.TransformerMapTest.testContainsClass(0)" "org.apache.commons.math.util.TransformerMapTest.class$org$apache$commons$math$util$TransformerMapTest"
call "org.apache.commons.math.util.TransformerMapTest.testContainsClass(0)" "org.apache.commons.math.util.TransformerMapTest.class$(1)"
call "org.apache.commons.math.util.TransformerMapTest.testContainsClass(0)" "org.apache.commons.math.util.TransformerMap.putTransformer(2)"
call "org.apache.commons.math.util.TransformerMapTest.testContainsClass(0)" "org.apache.commons.math.util.TransformerMap.containsClass(1)"
call "org.apache.commons.math.util.TransformerMapTest.testContainsClass(0)" "org.apache.commons.math.util.TransformerMapTest.assertTrue(1)"
contain "org.apache.commons.math.util.TransformerMapTest" "org.apache.commons.math.util.TransformerMapTest.testContainsClass(0)"
call "org.apache.commons.math.util.TransformerMapTest.testContainsTransformer(0)" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
call "org.apache.commons.math.util.TransformerMapTest.testContainsTransformer(0)" "org.apache.commons.math.util.TransformerMap.TransformerMap(0)"
reference "org.apache.commons.math.util.TransformerMapTest.testContainsTransformer(0)" "org.apache.commons.math.util.TransformerMapTest.class$org$apache$commons$math$util$TransformerMapTest"
call "org.apache.commons.math.util.TransformerMapTest.testContainsTransformer(0)" "org.apache.commons.math.util.TransformerMapTest.class$(1)"
call "org.apache.commons.math.util.TransformerMapTest.testContainsTransformer(0)" "org.apache.commons.math.util.TransformerMap.putTransformer(2)"
call "org.apache.commons.math.util.TransformerMapTest.testContainsTransformer(0)" "org.apache.commons.math.util.TransformerMap.containsTransformer(1)"
call "org.apache.commons.math.util.TransformerMapTest.testContainsTransformer(0)" "org.apache.commons.math.util.TransformerMapTest.assertTrue(1)"
contain "org.apache.commons.math.util.TransformerMapTest" "org.apache.commons.math.util.TransformerMapTest.testContainsTransformer(0)"
call "org.apache.commons.math.util.TransformerMapTest.testRemoveTransformer(0)" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
call "org.apache.commons.math.util.TransformerMapTest.testRemoveTransformer(0)" "org.apache.commons.math.util.TransformerMap.TransformerMap(0)"
reference "org.apache.commons.math.util.TransformerMapTest.testRemoveTransformer(0)" "org.apache.commons.math.util.TransformerMapTest.class$org$apache$commons$math$util$TransformerMapTest"
call "org.apache.commons.math.util.TransformerMapTest.testRemoveTransformer(0)" "org.apache.commons.math.util.TransformerMapTest.class$(1)"
call "org.apache.commons.math.util.TransformerMapTest.testRemoveTransformer(0)" "org.apache.commons.math.util.TransformerMap.putTransformer(2)"
call "org.apache.commons.math.util.TransformerMapTest.testRemoveTransformer(0)" "org.apache.commons.math.util.TransformerMap.containsClass(1)"
call "org.apache.commons.math.util.TransformerMapTest.testRemoveTransformer(0)" "org.apache.commons.math.util.TransformerMapTest.assertTrue(1)"
call "org.apache.commons.math.util.TransformerMapTest.testRemoveTransformer(0)" "org.apache.commons.math.util.TransformerMap.containsTransformer(1)"
call "org.apache.commons.math.util.TransformerMapTest.testRemoveTransformer(0)" "org.apache.commons.math.util.TransformerMap.removeTransformer(1)"
call "org.apache.commons.math.util.TransformerMapTest.testRemoveTransformer(0)" "org.apache.commons.math.util.TransformerMapTest.assertFalse(1)"
contain "org.apache.commons.math.util.TransformerMapTest" "org.apache.commons.math.util.TransformerMapTest.testRemoveTransformer(0)"
call "org.apache.commons.math.util.TransformerMapTest.testClear(0)" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
call "org.apache.commons.math.util.TransformerMapTest.testClear(0)" "org.apache.commons.math.util.TransformerMap.TransformerMap(0)"
reference "org.apache.commons.math.util.TransformerMapTest.testClear(0)" "org.apache.commons.math.util.TransformerMapTest.class$org$apache$commons$math$util$TransformerMapTest"
call "org.apache.commons.math.util.TransformerMapTest.testClear(0)" "org.apache.commons.math.util.TransformerMapTest.class$(1)"
call "org.apache.commons.math.util.TransformerMapTest.testClear(0)" "org.apache.commons.math.util.TransformerMap.putTransformer(2)"
call "org.apache.commons.math.util.TransformerMapTest.testClear(0)" "org.apache.commons.math.util.TransformerMap.containsClass(1)"
call "org.apache.commons.math.util.TransformerMapTest.testClear(0)" "org.apache.commons.math.util.TransformerMapTest.assertTrue(1)"
call "org.apache.commons.math.util.TransformerMapTest.testClear(0)" "org.apache.commons.math.util.TransformerMap.clear(0)"
call "org.apache.commons.math.util.TransformerMapTest.testClear(0)" "org.apache.commons.math.util.TransformerMapTest.assertFalse(1)"
contain "org.apache.commons.math.util.TransformerMapTest" "org.apache.commons.math.util.TransformerMapTest.testClear(0)"
call "org.apache.commons.math.util.TransformerMapTest.testClasses(0)" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
call "org.apache.commons.math.util.TransformerMapTest.testClasses(0)" "org.apache.commons.math.util.TransformerMap.TransformerMap(0)"
reference "org.apache.commons.math.util.TransformerMapTest.testClasses(0)" "org.apache.commons.math.util.TransformerMapTest.class$org$apache$commons$math$util$TransformerMapTest"
call "org.apache.commons.math.util.TransformerMapTest.testClasses(0)" "org.apache.commons.math.util.TransformerMapTest.class$(1)"
call "org.apache.commons.math.util.TransformerMapTest.testClasses(0)" "org.apache.commons.math.util.TransformerMap.putTransformer(2)"
call "org.apache.commons.math.util.TransformerMapTest.testClasses(0)" "org.apache.commons.math.util.TransformerMap.classes(0)"
call "org.apache.commons.math.util.TransformerMapTest.testClasses(0)" "org.apache.commons.math.util.TransformerMapTest.assertTrue(1)"
contain "org.apache.commons.math.util.TransformerMapTest" "org.apache.commons.math.util.TransformerMapTest.testClasses(0)"
call "org.apache.commons.math.util.TransformerMapTest.testTransformers(0)" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
call "org.apache.commons.math.util.TransformerMapTest.testTransformers(0)" "org.apache.commons.math.util.TransformerMap.TransformerMap(0)"
reference "org.apache.commons.math.util.TransformerMapTest.testTransformers(0)" "org.apache.commons.math.util.TransformerMapTest.class$org$apache$commons$math$util$TransformerMapTest"
call "org.apache.commons.math.util.TransformerMapTest.testTransformers(0)" "org.apache.commons.math.util.TransformerMapTest.class$(1)"
call "org.apache.commons.math.util.TransformerMapTest.testTransformers(0)" "org.apache.commons.math.util.TransformerMap.putTransformer(2)"
call "org.apache.commons.math.util.TransformerMapTest.testTransformers(0)" "org.apache.commons.math.util.TransformerMap.transformers(0)"
call "org.apache.commons.math.util.TransformerMapTest.testTransformers(0)" "org.apache.commons.math.util.TransformerMapTest.assertTrue(1)"
contain "org.apache.commons.math.util.TransformerMapTest" "org.apache.commons.math.util.TransformerMapTest.testTransformers(0)"
contain "org.apache.commons.math.util.TransformerMapTest" "org.apache.commons.math.util.TransformerMapTest.class$(1)"
contain "org.apache.commons.math.util.TransformerMapTest" "org.apache.commons.math.util.TransformerMapTest.class$org$apache$commons$math$util$TransformerMapTest"
reference "org.apache.commons.math.analysis.RiddersSolverTest" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.analysis.RiddersSolverTest" "org.apache.commons.math.analysis.RiddersSolver"
reference "org.apache.commons.math.analysis.RiddersSolverTest" "org.apache.commons.math.analysis.QuinticFunction"
reference "org.apache.commons.math.analysis.RiddersSolverTest" "org.apache.commons.math.analysis.Expm1Function"
reference "org.apache.commons.math.analysis.RiddersSolverTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.RiddersSolverTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.analysis.RiddersSolverTest" "org.apache.commons.math.analysis.UnivariateRealSolver"
call "org.apache.commons.math.analysis.RiddersSolverTest.RiddersSolverTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.analysis.RiddersSolverTest" "org.apache.commons.math.analysis.RiddersSolverTest.RiddersSolverTest(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testSinFunction(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testSinFunction(0)" "org.apache.commons.math.analysis.RiddersSolver.RiddersSolver(1)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testSinFunction(0)" "org.apache.commons.math.analysis.RiddersSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.RiddersSolverTest" "org.apache.commons.math.analysis.RiddersSolverTest.testSinFunction(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.RiddersSolver.RiddersSolver(1)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.RiddersSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.RiddersSolverTest" "org.apache.commons.math.analysis.RiddersSolverTest.testQuinticFunction(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testExpm1Function(0)" "org.apache.commons.math.analysis.Expm1Function.Expm1Function(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testExpm1Function(0)" "org.apache.commons.math.analysis.RiddersSolver.RiddersSolver(1)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testExpm1Function(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testExpm1Function(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testExpm1Function(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testExpm1Function(0)" "org.apache.commons.math.analysis.RiddersSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.RiddersSolverTest" "org.apache.commons.math.analysis.RiddersSolverTest.testExpm1Function(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testParameters(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testParameters(0)" "org.apache.commons.math.analysis.RiddersSolver.RiddersSolver(1)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testParameters(0)" "org.apache.commons.math.analysis.RiddersSolverTest.fail(1)"
contain "org.apache.commons.math.analysis.RiddersSolverTest" "org.apache.commons.math.analysis.RiddersSolverTest.testParameters(0)"
reference "org.apache.commons.math.ode.EulerStepInterpolatorTest.1" "org.apache.commons.math.ode.EulerStepInterpolatorTest"
reference "org.apache.commons.math.ode.TestProblem2" "double[]"
reference "org.apache.commons.math.ode.TestProblem2" "org.apache.commons.math.ode.TestProblemAbstract"
call "org.apache.commons.math.ode.TestProblem2.TestProblem2(0)" "org.apache.commons.math.ode.TestProblemAbstract.TestProblemAbstract(0)"
call "org.apache.commons.math.ode.TestProblem2.TestProblem2(0)" "org.apache.commons.math.ode.TestProblem2.setInitialConditions(2)"
call "org.apache.commons.math.ode.TestProblem2.TestProblem2(0)" "org.apache.commons.math.ode.TestProblem2.setFinalConditions(1)"
call "org.apache.commons.math.ode.TestProblem2.TestProblem2(0)" "org.apache.commons.math.ode.TestProblem2.setErrorScale(1)"
reference "org.apache.commons.math.ode.TestProblem2.TestProblem2(0)" "org.apache.commons.math.ode.TestProblem2.y"
contain "org.apache.commons.math.ode.TestProblem2" "org.apache.commons.math.ode.TestProblem2.TestProblem2(0)"
call "org.apache.commons.math.ode.TestProblem2.TestProblem2(1)" "org.apache.commons.math.ode.TestProblemAbstract.TestProblemAbstract(1)"
reference "org.apache.commons.math.ode.TestProblem2.TestProblem2(1)" "org.apache.commons.math.ode.TestProblem2.y"
contain "org.apache.commons.math.ode.TestProblem2" "org.apache.commons.math.ode.TestProblem2.TestProblem2(1)"
call "org.apache.commons.math.ode.TestProblem2.clone(0)" "org.apache.commons.math.ode.TestProblem2.TestProblem2(1)"
contain "org.apache.commons.math.ode.TestProblem2" "org.apache.commons.math.ode.TestProblem2.clone(0)"
reference "org.apache.commons.math.ode.TestProblem2.doComputeDerivatives(3)" "org.apache.commons.math.ode.TestProblem2.n"
contain "org.apache.commons.math.ode.TestProblem2" "org.apache.commons.math.ode.TestProblem2.doComputeDerivatives(3)"
reference "org.apache.commons.math.ode.TestProblem2.computeTheoreticalState(1)" "org.apache.commons.math.ode.TestProblem2.n"
reference "org.apache.commons.math.ode.TestProblem2.computeTheoreticalState(1)" "org.apache.commons.math.ode.TestProblem2.y"
contain "org.apache.commons.math.ode.TestProblem2" "org.apache.commons.math.ode.TestProblem2.computeTheoreticalState(1)"
reference "org.apache.commons.math.ode.TestProblem2.y" "double[]"
contain "org.apache.commons.math.ode.TestProblem2" "org.apache.commons.math.ode.TestProblem2.y"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.SplineInterpolator"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.PolynomialSplineFunction"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.UnivariateRealInterpolator"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.PolynomialFunction"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.TestUtils"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.UnivariateRealFunction"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.SplineInterpolatorTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest.SplineInterpolatorTest(1)" "org.apache.commons.math.analysis.SplineInterpolatorTest.knotTolerance"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest.SplineInterpolatorTest(1)" "org.apache.commons.math.analysis.SplineInterpolatorTest.coefficientTolerance"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest.SplineInterpolatorTest(1)" "org.apache.commons.math.analysis.SplineInterpolatorTest.interpolationTolerance"
contain "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.SplineInterpolatorTest.SplineInterpolatorTest(1)"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest.suite(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.class$org$apache$commons$math$analysis$SplineInterpolatorTest"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.suite(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.class$(1)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.SplineInterpolatorTest.suite(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateTwoSegment(0)" "org.apache.commons.math.analysis.SplineInterpolator.SplineInterpolator(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateTwoSegment(0)" "org.apache.commons.math.analysis.UnivariateRealInterpolator.interpolate(2)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateTwoSegment(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyInterpolation(3)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateTwoSegment(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyConsistency(2)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateTwoSegment(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.getPolynomials(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateTwoSegment(0)" "org.apache.commons.math.analysis.PolynomialFunction.getCoefficients(0)"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateTwoSegment(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.coefficientTolerance"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateTwoSegment(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateTwoSegment(0)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateTwoSegment(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.interpolationTolerance"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateTwoSegment(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateTwoSegment(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateThreeSegment(0)" "org.apache.commons.math.analysis.SplineInterpolator.SplineInterpolator(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateThreeSegment(0)" "org.apache.commons.math.analysis.UnivariateRealInterpolator.interpolate(2)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateThreeSegment(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyInterpolation(3)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateThreeSegment(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.getPolynomials(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateThreeSegment(0)" "org.apache.commons.math.analysis.PolynomialFunction.getCoefficients(0)"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateThreeSegment(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.coefficientTolerance"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateThreeSegment(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateThreeSegment(0)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateThreeSegment(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.interpolationTolerance"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateThreeSegment(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateThreeSegment(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinear(0)" "org.apache.commons.math.analysis.SplineInterpolator.SplineInterpolator(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinear(0)" "org.apache.commons.math.analysis.UnivariateRealInterpolator.interpolate(2)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinear(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyInterpolation(3)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinear(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyConsistency(2)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinear(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.getPolynomials(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinear(0)" "org.apache.commons.math.analysis.PolynomialFunction.getCoefficients(0)"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinear(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.coefficientTolerance"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinear(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinear(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateSin(0)" "org.apache.commons.math.analysis.SplineInterpolator.SplineInterpolator(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateSin(0)" "org.apache.commons.math.analysis.UnivariateRealInterpolator.interpolate(2)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateSin(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyInterpolation(3)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateSin(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyConsistency(2)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateSin(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.getPolynomials(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateSin(0)" "org.apache.commons.math.analysis.PolynomialFunction.getCoefficients(0)"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateSin(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.coefficientTolerance"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateSin(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateSin(0)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateSin(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.interpolationTolerance"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateSin(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateSin(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testIllegalArguments(0)" "org.apache.commons.math.analysis.SplineInterpolator.SplineInterpolator(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testIllegalArguments(0)" "org.apache.commons.math.analysis.UnivariateRealInterpolator.interpolate(2)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testIllegalArguments(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.fail(1)"
contain "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.SplineInterpolatorTest.testIllegalArguments(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyInterpolation(3)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyInterpolation(3)" "org.apache.commons.math.analysis.SplineInterpolatorTest.knotTolerance"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyInterpolation(3)" "org.apache.commons.math.analysis.SplineInterpolatorTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyInterpolation(3)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyConsistency(2)" "org.apache.commons.math.analysis.PolynomialSplineFunction.getPolynomials(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyConsistency(2)" "org.apache.commons.math.analysis.PolynomialFunction.value(1)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyConsistency(2)" "org.apache.commons.math.analysis.SplineInterpolatorTest.assertEquals(3)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyConsistency(2)" "org.apache.commons.math.analysis.PolynomialFunction.derivative(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyConsistency(2)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyConsistency(2)" "org.apache.commons.math.analysis.PolynomialFunction.polynomialDerivative(0)"
contain "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyConsistency(2)"
contain "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.SplineInterpolatorTest.class$(1)"
contain "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.SplineInterpolatorTest.knotTolerance"
contain "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.SplineInterpolatorTest.coefficientTolerance"
contain "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.SplineInterpolatorTest.interpolationTolerance"
contain "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.SplineInterpolatorTest.class$org$apache$commons$math$analysis$SplineInterpolatorTest"
reference "org.apache.commons.math.ode.TestProblem1" "double[]"
reference "org.apache.commons.math.ode.TestProblem1" "org.apache.commons.math.ode.TestProblemAbstract"
call "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)" "org.apache.commons.math.ode.TestProblemAbstract.TestProblemAbstract(0)"
call "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)" "org.apache.commons.math.ode.TestProblem1.setInitialConditions(2)"
call "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)" "org.apache.commons.math.ode.TestProblem1.setFinalConditions(1)"
call "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)" "org.apache.commons.math.ode.TestProblem1.setErrorScale(1)"
reference "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)" "org.apache.commons.math.ode.TestProblem1.y"
contain "org.apache.commons.math.ode.TestProblem1" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.TestProblem1.TestProblem1(1)" "org.apache.commons.math.ode.TestProblemAbstract.TestProblemAbstract(1)"
reference "org.apache.commons.math.ode.TestProblem1.TestProblem1(1)" "org.apache.commons.math.ode.TestProblem1.y"
contain "org.apache.commons.math.ode.TestProblem1" "org.apache.commons.math.ode.TestProblem1.TestProblem1(1)"
call "org.apache.commons.math.ode.TestProblem1.clone(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(1)"
contain "org.apache.commons.math.ode.TestProblem1" "org.apache.commons.math.ode.TestProblem1.clone(0)"
reference "org.apache.commons.math.ode.TestProblem1.doComputeDerivatives(3)" "org.apache.commons.math.ode.TestProblem1.n"
contain "org.apache.commons.math.ode.TestProblem1" "org.apache.commons.math.ode.TestProblem1.doComputeDerivatives(3)"
reference "org.apache.commons.math.ode.TestProblem1.computeTheoreticalState(1)" "org.apache.commons.math.ode.TestProblem1.t0"
reference "org.apache.commons.math.ode.TestProblem1.computeTheoreticalState(1)" "org.apache.commons.math.ode.TestProblem1.n"
reference "org.apache.commons.math.ode.TestProblem1.computeTheoreticalState(1)" "org.apache.commons.math.ode.TestProblem1.y"
reference "org.apache.commons.math.ode.TestProblem1.computeTheoreticalState(1)" "org.apache.commons.math.ode.TestProblem1.y0"
contain "org.apache.commons.math.ode.TestProblem1" "org.apache.commons.math.ode.TestProblem1.computeTheoreticalState(1)"
reference "org.apache.commons.math.ode.TestProblem1.y" "double[]"
contain "org.apache.commons.math.ode.TestProblem1" "org.apache.commons.math.ode.TestProblem1.y"
reference "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.PowellSingularFunction(2)" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.buildArray(2)"
call "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.PowellSingularFunction(2)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.PowellSingularFunction(2)"
reference "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.getJacobian(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.sqrt5"
reference "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.sqrt10"
contain "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.sqrt5"
reference "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.sqrt10"
contain "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.getResiduals(0)"
reference "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.static {...}" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.sqrt5"
reference "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.static {...}" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.sqrt10"
contain "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.static {...}"
contain "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.sqrt5"
contain "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.sqrt10"
reference "org.apache.commons.math.ode.TestProblem4" "double[]"
reference "org.apache.commons.math.ode.TestProblem4" "org.apache.commons.math.ode.SwitchingFunction"
reference "org.apache.commons.math.ode.TestProblem4" "org.apache.commons.math.ode.TestProblem4.Bounce"
reference "org.apache.commons.math.ode.TestProblem4" "org.apache.commons.math.ode.TestProblem4.Stop"
reference "org.apache.commons.math.ode.TestProblem4" "org.apache.commons.math.ode.TestProblemAbstract"
call "org.apache.commons.math.ode.TestProblem4.TestProblem4(0)" "org.apache.commons.math.ode.TestProblemAbstract.TestProblemAbstract(0)"
reference "org.apache.commons.math.ode.TestProblem4.TestProblem4(0)" "org.apache.commons.math.ode.TestProblem4.a"
call "org.apache.commons.math.ode.TestProblem4.TestProblem4(0)" "org.apache.commons.math.ode.TestProblem4.setInitialConditions(2)"
call "org.apache.commons.math.ode.TestProblem4.TestProblem4(0)" "org.apache.commons.math.ode.TestProblem4.setFinalConditions(1)"
call "org.apache.commons.math.ode.TestProblem4.TestProblem4(0)" "org.apache.commons.math.ode.TestProblem4.setErrorScale(1)"
reference "org.apache.commons.math.ode.TestProblem4.TestProblem4(0)" "org.apache.commons.math.ode.TestProblem4.y"
contain "org.apache.commons.math.ode.TestProblem4" "org.apache.commons.math.ode.TestProblem4.TestProblem4(0)"
call "org.apache.commons.math.ode.TestProblem4.TestProblem4(1)" "org.apache.commons.math.ode.TestProblemAbstract.TestProblemAbstract(1)"
reference "org.apache.commons.math.ode.TestProblem4.TestProblem4(1)" "org.apache.commons.math.ode.TestProblem4.a"
reference "org.apache.commons.math.ode.TestProblem4.TestProblem4(1)" "org.apache.commons.math.ode.TestProblem4.y"
contain "org.apache.commons.math.ode.TestProblem4" "org.apache.commons.math.ode.TestProblem4.TestProblem4(1)"
call "org.apache.commons.math.ode.TestProblem4.clone(0)" "org.apache.commons.math.ode.TestProblem4.TestProblem4(1)"
contain "org.apache.commons.math.ode.TestProblem4" "org.apache.commons.math.ode.TestProblem4.clone(0)"
call "org.apache.commons.math.ode.TestProblem4.getSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblem4.Bounce.Bounce(0)"
call "org.apache.commons.math.ode.TestProblem4.getSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblem4.Stop.Stop(0)"
contain "org.apache.commons.math.ode.TestProblem4" "org.apache.commons.math.ode.TestProblem4.getSwitchingFunctions(0)"
contain "org.apache.commons.math.ode.TestProblem4" "org.apache.commons.math.ode.TestProblem4.doComputeDerivatives(3)"
reference "org.apache.commons.math.ode.TestProblem4.computeTheoreticalState(1)" "org.apache.commons.math.ode.TestProblem4.a"
reference "org.apache.commons.math.ode.TestProblem4.computeTheoreticalState(1)" "org.apache.commons.math.ode.TestProblem4.y"
contain "org.apache.commons.math.ode.TestProblem4" "org.apache.commons.math.ode.TestProblem4.computeTheoreticalState(1)"
contain "org.apache.commons.math.ode.TestProblem4" "org.apache.commons.math.ode.TestProblem4.a"
reference "org.apache.commons.math.ode.TestProblem4.y" "double[]"
contain "org.apache.commons.math.ode.TestProblem4" "org.apache.commons.math.ode.TestProblem4.y"
reference "org.apache.commons.math.ode.TestProblem3" "double[]"
reference "org.apache.commons.math.ode.TestProblem3" "org.apache.commons.math.ode.TestProblemAbstract"
call "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)" "org.apache.commons.math.ode.TestProblemAbstract.TestProblemAbstract(0)"
reference "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)" "org.apache.commons.math.ode.TestProblem3.e"
call "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)" "org.apache.commons.math.ode.TestProblem3.setInitialConditions(2)"
call "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)" "org.apache.commons.math.ode.TestProblem3.setFinalConditions(1)"
call "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)" "org.apache.commons.math.ode.TestProblem3.setErrorScale(1)"
reference "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)" "org.apache.commons.math.ode.TestProblem3.y"
contain "org.apache.commons.math.ode.TestProblem3" "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.TestProblem3.TestProblem3(0)" "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)"
contain "org.apache.commons.math.ode.TestProblem3" "org.apache.commons.math.ode.TestProblem3.TestProblem3(0)"
call "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)" "org.apache.commons.math.ode.TestProblemAbstract.TestProblemAbstract(1)"
reference "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)" "org.apache.commons.math.ode.TestProblem3.e"
reference "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)" "org.apache.commons.math.ode.TestProblem3.y"
contain "org.apache.commons.math.ode.TestProblem3" "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.TestProblem3.clone(0)" "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)"
contain "org.apache.commons.math.ode.TestProblem3" "org.apache.commons.math.ode.TestProblem3.clone(0)"
contain "org.apache.commons.math.ode.TestProblem3" "org.apache.commons.math.ode.TestProblem3.doComputeDerivatives(3)"
reference "org.apache.commons.math.ode.TestProblem3.computeTheoreticalState(1)" "org.apache.commons.math.ode.TestProblem3.e"
reference "org.apache.commons.math.ode.TestProblem3.computeTheoreticalState(1)" "org.apache.commons.math.ode.TestProblem3.y"
contain "org.apache.commons.math.ode.TestProblem3" "org.apache.commons.math.ode.TestProblem3.computeTheoreticalState(1)"
contain "org.apache.commons.math.ode.TestProblem3" "org.apache.commons.math.ode.TestProblem3.e"
reference "org.apache.commons.math.ode.TestProblem3.y" "double[]"
contain "org.apache.commons.math.ode.TestProblem3" "org.apache.commons.math.ode.TestProblem3.y"
reference "org.apache.commons.math.ode.TestProblem5" "org.apache.commons.math.ode.TestProblem1"
call "org.apache.commons.math.ode.TestProblem5.TestProblem5(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
reference "org.apache.commons.math.ode.TestProblem5.TestProblem5(0)" "org.apache.commons.math.ode.TestProblem5.t0"
reference "org.apache.commons.math.ode.TestProblem5.TestProblem5(0)" "org.apache.commons.math.ode.TestProblem5.t1"
call "org.apache.commons.math.ode.TestProblem5.TestProblem5(0)" "org.apache.commons.math.ode.TestProblem5.setFinalConditions(1)"
contain "org.apache.commons.math.ode.TestProblem5" "org.apache.commons.math.ode.TestProblem5.TestProblem5(0)"
reference "org.apache.commons.math.distribution.TDistributionTest" "org.apache.commons.math.distribution.TDistributionImpl"
reference "org.apache.commons.math.distribution.TDistributionTest" "org.apache.commons.math.distribution.TDistribution"
reference "org.apache.commons.math.distribution.TDistributionTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest"
call "org.apache.commons.math.distribution.TDistributionTest.TDistributionTest(1)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.ContinuousDistributionAbstractTest(1)"
contain "org.apache.commons.math.distribution.TDistributionTest" "org.apache.commons.math.distribution.TDistributionTest.TDistributionTest(1)"
call "org.apache.commons.math.distribution.TDistributionTest.makeDistribution(0)" "org.apache.commons.math.distribution.TDistributionImpl.TDistributionImpl(1)"
contain "org.apache.commons.math.distribution.TDistributionTest" "org.apache.commons.math.distribution.TDistributionTest.makeDistribution(0)"
contain "org.apache.commons.math.distribution.TDistributionTest" "org.apache.commons.math.distribution.TDistributionTest.makeCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.TDistributionTest" "org.apache.commons.math.distribution.TDistributionTest.makeCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.TDistributionTest.setup(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)"
call "org.apache.commons.math.distribution.TDistributionTest.setup(0)" "org.apache.commons.math.distribution.TDistributionTest.setTolerance(1)"
contain "org.apache.commons.math.distribution.TDistributionTest" "org.apache.commons.math.distribution.TDistributionTest.setup(0)"
call "org.apache.commons.math.distribution.TDistributionTest.testCumulativeProbabilityAgaintStackOverflow(0)" "org.apache.commons.math.distribution.TDistributionImpl.TDistributionImpl(1)"
call "org.apache.commons.math.distribution.TDistributionTest.testCumulativeProbabilityAgaintStackOverflow(0)" "org.apache.commons.math.distribution.TDistributionImpl.cumulativeProbability(1)"
contain "org.apache.commons.math.distribution.TDistributionTest" "org.apache.commons.math.distribution.TDistributionTest.testCumulativeProbabilityAgaintStackOverflow(0)"
call "org.apache.commons.math.distribution.TDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.TDistributionImpl.TDistributionImpl(1)"
call "org.apache.commons.math.distribution.TDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.TDistributionTest.setDistribution(1)"
call "org.apache.commons.math.distribution.TDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.TDistributionTest.setTolerance(1)"
call "org.apache.commons.math.distribution.TDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.TDistributionTest.setCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.TDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.TDistributionTest.getCumulativeTestPoints(0)"
call "org.apache.commons.math.distribution.TDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.TDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.TDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.TDistributionTest.verifyCumulativeProbabilities(0)"
call "org.apache.commons.math.distribution.TDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.TDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.TDistributionTest" "org.apache.commons.math.distribution.TDistributionTest.testSmallDf(0)"
call "org.apache.commons.math.distribution.TDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.TDistributionTest.setInverseCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.TDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.TDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.TDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.TDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.TDistributionTest" "org.apache.commons.math.distribution.TDistributionTest.testInverseCumulativeProbabilityExtremes(0)"
call "org.apache.commons.math.distribution.TDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.TDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.TDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.TDistribution.getDegreesOfFreedom(0)"
call "org.apache.commons.math.distribution.TDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.TDistributionTest.assertEquals(3)"
call "org.apache.commons.math.distribution.TDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.TDistribution.setDegreesOfFreedom(1)"
call "org.apache.commons.math.distribution.TDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.TDistributionTest.fail(1)"
contain "org.apache.commons.math.distribution.TDistributionTest" "org.apache.commons.math.distribution.TDistributionTest.testDfAccessors(0)"
reference "org.apache.commons.math.linear.InvalidMatrixExceptionTest" "org.apache.commons.math.linear.InvalidMatrixException"
reference "org.apache.commons.math.linear.InvalidMatrixExceptionTest" "junit.framework.TestCase"
call "org.apache.commons.math.linear.InvalidMatrixExceptionTest.InvalidMatrixExceptionTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.linear.InvalidMatrixExceptionTest" "org.apache.commons.math.linear.InvalidMatrixExceptionTest.InvalidMatrixExceptionTest(0)"
call "org.apache.commons.math.linear.InvalidMatrixExceptionTest.testConstructor(0)" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(0)"
call "org.apache.commons.math.linear.InvalidMatrixExceptionTest.testConstructor(0)" "org.apache.commons.math.linear.InvalidMatrixException.getMessage(0)"
call "org.apache.commons.math.linear.InvalidMatrixExceptionTest.testConstructor(0)" "org.apache.commons.math.linear.InvalidMatrixExceptionTest.assertNull(1)"
contain "org.apache.commons.math.linear.InvalidMatrixExceptionTest" "org.apache.commons.math.linear.InvalidMatrixExceptionTest.testConstructor(0)"
call "org.apache.commons.math.linear.InvalidMatrixExceptionTest.testConstructorMessage(0)" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(1)"
call "org.apache.commons.math.linear.InvalidMatrixExceptionTest.testConstructorMessage(0)" "org.apache.commons.math.linear.InvalidMatrixException.getMessage(0)"
call "org.apache.commons.math.linear.InvalidMatrixExceptionTest.testConstructorMessage(0)" "org.apache.commons.math.linear.InvalidMatrixExceptionTest.assertEquals(2)"
contain "org.apache.commons.math.linear.InvalidMatrixExceptionTest" "org.apache.commons.math.linear.InvalidMatrixExceptionTest.testConstructorMessage(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "junit.framework.TestCase"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistribution"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.IntegerDistributionAbstractTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.IntegerDistributionAbstractTest(1)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.tolerance"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.IntegerDistributionAbstractTest(1)"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.makeDistribution(0)"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.makeDensityTestPoints(0)"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.makeDensityTestValues(0)"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.makeCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.makeCumulativeTestValues(0)"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.makeInverseCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.makeInverseCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)" "junit.framework.TestCase.setUp(0)"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.makeDistribution(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.distribution"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.makeDensityTestPoints(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.densityTestPoints"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.makeDensityTestValues(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.densityTestValues"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.makeCumulativeTestPoints(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.cumulativeTestPoints"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.makeCumulativeTestValues(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.cumulativeTestValues"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.makeInverseCumulativeTestPoints(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.inverseCumulativeTestPoints"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.makeInverseCumulativeTestValues(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.inverseCumulativeTestValues"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.tearDown(0)" "junit.framework.TestCase.tearDown(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.tearDown(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.distribution"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.tearDown(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.densityTestPoints"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.tearDown(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.densityTestValues"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.tearDown(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.cumulativeTestPoints"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.tearDown(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.cumulativeTestValues"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.tearDown(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.inverseCumulativeTestPoints"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.tearDown(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.inverseCumulativeTestValues"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.tearDown(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyDensities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.densityTestPoints"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyDensities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.densityTestValues"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyDensities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.distribution"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyDensities(0)" "org.apache.commons.math.distribution.IntegerDistribution.probability(1)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyDensities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.tolerance"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyDensities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.assertEquals(4)"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyDensities(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyCumulativeProbabilities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.cumulativeTestPoints"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyCumulativeProbabilities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.cumulativeTestValues"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyCumulativeProbabilities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.distribution"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyCumulativeProbabilities(0)" "org.apache.commons.math.distribution.IntegerDistribution.cumulativeProbability(1)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyCumulativeProbabilities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.tolerance"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyCumulativeProbabilities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.assertEquals(4)"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyCumulativeProbabilities(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyInverseCumulativeProbabilities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.inverseCumulativeTestPoints"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyInverseCumulativeProbabilities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.inverseCumulativeTestValues"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyInverseCumulativeProbabilities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.distribution"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyInverseCumulativeProbabilities(0)" "org.apache.commons.math.distribution.IntegerDistribution.inverseCumulativeProbability(1)"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyInverseCumulativeProbabilities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.assertEquals(3)"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyInverseCumulativeProbabilities(0)"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testDensities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyDensities(0)"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testDensities(0)"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testCumulativeProbabilities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testCumulativeProbabilities(0)"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testInverseCumulativeProbabilities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testInverseCumulativeProbabilities(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testIllegalArguments(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.distribution"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testIllegalArguments(0)" "org.apache.commons.math.distribution.IntegerDistribution.cumulativeProbability(2)"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testIllegalArguments(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.fail(1)"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testIllegalArguments(0)" "org.apache.commons.math.distribution.IntegerDistribution.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testIllegalArguments(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getCumulativeTestPoints(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.cumulativeTestPoints"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getCumulativeTestPoints(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setCumulativeTestPoints(1)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.cumulativeTestPoints"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setCumulativeTestPoints(1)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getCumulativeTestValues(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.cumulativeTestValues"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getCumulativeTestValues(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setCumulativeTestValues(1)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.cumulativeTestValues"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setCumulativeTestValues(1)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getDensityTestPoints(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.densityTestPoints"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getDensityTestPoints(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setDensityTestPoints(1)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.densityTestPoints"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setDensityTestPoints(1)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getDensityTestValues(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.densityTestValues"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getDensityTestValues(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setDensityTestValues(1)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.densityTestValues"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setDensityTestValues(1)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getDistribution(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.distribution"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getDistribution(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setDistribution(1)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.distribution"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setDistribution(1)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getInverseCumulativeTestPoints(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.inverseCumulativeTestPoints"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getInverseCumulativeTestPoints(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setInverseCumulativeTestPoints(1)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.inverseCumulativeTestPoints"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setInverseCumulativeTestPoints(1)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getInverseCumulativeTestValues(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.inverseCumulativeTestValues"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getInverseCumulativeTestValues(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setInverseCumulativeTestValues(1)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.inverseCumulativeTestValues"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setInverseCumulativeTestValues(1)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getTolerance(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.tolerance"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getTolerance(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setTolerance(1)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.tolerance"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setTolerance(1)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.distribution" "org.apache.commons.math.distribution.IntegerDistribution"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.distribution"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.tolerance"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.densityTestPoints" "int[]"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.densityTestPoints"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.densityTestValues" "double[]"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.densityTestValues"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.cumulativeTestPoints" "int[]"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.cumulativeTestPoints"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.cumulativeTestValues" "double[]"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.cumulativeTestValues"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.inverseCumulativeTestPoints" "double[]"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.inverseCumulativeTestPoints"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.inverseCumulativeTestValues" "int[]"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.inverseCumulativeTestValues"
reference "org.apache.commons.math.distribution.BinomialDistributionTest" "org.apache.commons.math.distribution.BinomialDistributionImpl"
reference "org.apache.commons.math.distribution.BinomialDistributionTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest"
call "org.apache.commons.math.distribution.BinomialDistributionTest.BinomialDistributionTest(1)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.IntegerDistributionAbstractTest(1)"
contain "org.apache.commons.math.distribution.BinomialDistributionTest" "org.apache.commons.math.distribution.BinomialDistributionTest.BinomialDistributionTest(1)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.makeDistribution(0)" "org.apache.commons.math.distribution.BinomialDistributionImpl.BinomialDistributionImpl(2)"
contain "org.apache.commons.math.distribution.BinomialDistributionTest" "org.apache.commons.math.distribution.BinomialDistributionTest.makeDistribution(0)"
contain "org.apache.commons.math.distribution.BinomialDistributionTest" "org.apache.commons.math.distribution.BinomialDistributionTest.makeDensityTestPoints(0)"
contain "org.apache.commons.math.distribution.BinomialDistributionTest" "org.apache.commons.math.distribution.BinomialDistributionTest.makeDensityTestValues(0)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.makeCumulativeTestPoints(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.makeDensityTestPoints(0)"
contain "org.apache.commons.math.distribution.BinomialDistributionTest" "org.apache.commons.math.distribution.BinomialDistributionTest.makeCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.BinomialDistributionTest" "org.apache.commons.math.distribution.BinomialDistributionTest.makeCumulativeTestValues(0)"
contain "org.apache.commons.math.distribution.BinomialDistributionTest" "org.apache.commons.math.distribution.BinomialDistributionTest.makeInverseCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.BinomialDistributionTest" "org.apache.commons.math.distribution.BinomialDistributionTest.makeInverseCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.BinomialDistributionImpl.BinomialDistributionImpl(2)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.setDistribution(1)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.setCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.setCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.setDensityTestPoints(1)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.setDensityTestValues(1)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.setInverseCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.verifyDensities(0)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.verifyCumulativeProbabilities(0)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.BinomialDistributionTest" "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate0(0)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.BinomialDistributionImpl.BinomialDistributionImpl(2)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.setDistribution(1)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.setCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.setCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.setDensityTestPoints(1)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.setDensityTestValues(1)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.setInverseCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.verifyDensities(0)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.verifyCumulativeProbabilities(0)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.BinomialDistributionTest" "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate1(0)"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.TestProblem1"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.DormandPrince54Integrator"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.TestProblemHandler"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.TestProblem5"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.TestProblem4"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.TestProblem3"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.FirstOrderIntegrator"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.TestProblemAbstract"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DormandPrince54IntegratorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DormandPrince54IntegratorTest(1)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.DormandPrince54Integrator.DormandPrince54Integrator(4)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.DormandPrince54Integrator.integrate(5)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testDimensionCheck(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.DormandPrince54Integrator.DormandPrince54Integrator(4)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.TestProblemHandler.TestProblemHandler(1)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testMinStep(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testSmallLastStep(0)" "org.apache.commons.math.ode.TestProblem5.TestProblem5(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testSmallLastStep(0)" "org.apache.commons.math.ode.TestProblemAbstract.getFinalTime(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testSmallLastStep(0)" "org.apache.commons.math.ode.TestProblemAbstract.getInitialTime(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testSmallLastStep(0)" "org.apache.commons.math.ode.DormandPrince54Integrator.DormandPrince54Integrator(4)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testSmallLastStep(0)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler.DP54SmallLastHandler(1)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testSmallLastStep(0)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testSmallLastStep(0)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.setInitialStepSize(1)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testSmallLastStep(0)" "org.apache.commons.math.ode.TestProblemAbstract.getInitialState(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testSmallLastStep(0)" "org.apache.commons.math.ode.TestProblemAbstract.getDimension(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testSmallLastStep(0)" "org.apache.commons.math.ode.AdaptiveStepsizeIntegrator.integrate(5)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testSmallLastStep(0)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.DP54SmallLastHandler.wasLastSeen(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testSmallLastStep(0)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.assertTrue(1)"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testSmallLastStep(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.DormandPrince54Integrator.DormandPrince54Integrator(4)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblemHandler.TestProblemHandler(1)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblemHandler.getMaximalError(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.TestProblem1.getCalls(0)"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testIncreasingTolerance(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblem4.TestProblem4(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblem4.getFinalTime(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblem4.getInitialTime(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.DormandPrince54Integrator.DormandPrince54Integrator(4)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblemHandler.TestProblemHandler(1)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblem4.getSwitchingFunctions(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addSwitchingFunction(3)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblem4.getInitialState(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblem4.getDimension(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblemHandler.getMaximalError(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.TestProblemHandler.getLastTime(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testSwitchingFunctions(0)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testSwitchingFunctions(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.DormandPrince54Integrator.DormandPrince54Integrator(4)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.KeplerHandler.KeplerHandler(1)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.getCalls(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.assertTrue(1)"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testKepler(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.DormandPrince54Integrator.DormandPrince54Integrator(4)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.VariableHandler.VariableHandler(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.testVariableSteps(0)"
reference "org.apache.commons.math.ode.DormandPrince54IntegratorTest.suite(0)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.class$org$apache$commons$math$ode$DormandPrince54IntegratorTest"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.suite(0)" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.class$(1)"
call "org.apache.commons.math.ode.DormandPrince54IntegratorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.suite(0)"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.class$(1)"
contain "org.apache.commons.math.ode.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.DormandPrince54IntegratorTest.class$org$apache$commons$math$ode$DormandPrince54IntegratorTest"
reference "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestImpl"
reference "org.apache.commons.math.stat.inference.TTestTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.inference.TTestTest" "junit.framework.TestCase"
reference "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
reference "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTest"
call "org.apache.commons.math.stat.inference.TTestTest.TTestTest(1)" "junit.framework.TestCase.TestCase(1)"
call "org.apache.commons.math.stat.inference.TTestTest.TTestTest(1)" "org.apache.commons.math.stat.inference.TTestImpl.TTestImpl(0)"
reference "org.apache.commons.math.stat.inference.TTestTest.TTestTest(1)" "org.apache.commons.math.stat.inference.TTestTest.testStatistic"
reference "org.apache.commons.math.stat.inference.TTestTest.TTestTest(1)" "org.apache.commons.math.stat.inference.TTestTest.tooShortObs"
reference "org.apache.commons.math.stat.inference.TTestTest.TTestTest(1)" "org.apache.commons.math.stat.inference.TTestTest.nullObserved"
reference "org.apache.commons.math.stat.inference.TTestTest.TTestTest(1)" "org.apache.commons.math.stat.inference.TTestTest.emptyObs"
call "org.apache.commons.math.stat.inference.TTestTest.TTestTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance(0)"
reference "org.apache.commons.math.stat.inference.TTestTest.TTestTest(1)" "org.apache.commons.math.stat.inference.TTestTest.emptyStats"
reference "org.apache.commons.math.stat.inference.TTestTest.TTestTest(1)" "org.apache.commons.math.stat.inference.TTestTest.nullStats"
reference "org.apache.commons.math.stat.inference.TTestTest.TTestTest(1)" "org.apache.commons.math.stat.inference.TTestTest.tooShortStats"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.TTestTest(1)"
call "org.apache.commons.math.stat.inference.TTestTest.setUp(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance(0)"
reference "org.apache.commons.math.stat.inference.TTestTest.setUp(0)" "org.apache.commons.math.stat.inference.TTestTest.tooShortStats"
call "org.apache.commons.math.stat.inference.TTestTest.setUp(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.setUp(0)"
reference "org.apache.commons.math.stat.inference.TTestTest.suite(0)" "org.apache.commons.math.stat.inference.TTestTest.class$org$apache$commons$math$stat$inference$TTestTest"
call "org.apache.commons.math.stat.inference.TTestTest.suite(0)" "org.apache.commons.math.stat.inference.TTestTest.class$(1)"
call "org.apache.commons.math.stat.inference.TTestTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.inference.TTestTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.suite(0)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleT(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance(0)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleT(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
reference "org.apache.commons.math.stat.inference.TTestTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TTestTest.testStatistic"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TTest.t(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TTestTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TTest.t(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TTest.tTest(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TTest.tTest(2)"
reference "org.apache.commons.math.stat.inference.TTestTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TTestTest.nullObserved"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TTestTest.fail(1)"
reference "org.apache.commons.math.stat.inference.TTestTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TTestTest.nullStats"
reference "org.apache.commons.math.stat.inference.TTestTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TTestTest.emptyObs"
reference "org.apache.commons.math.stat.inference.TTestTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TTestTest.emptyStats"
reference "org.apache.commons.math.stat.inference.TTestTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TTestTest.tooShortObs"
reference "org.apache.commons.math.stat.inference.TTestTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TTestTest.tooShortStats"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.testOneSampleT(0)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance(0)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
reference "org.apache.commons.math.stat.inference.TTestTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TTestTest.testStatistic"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TTest.t(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TTestTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TTest.t(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TTest.tTest(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TTest.tTest(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TTest.tTest(3)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TTestTest.assertTrue(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TTest.tTest(3)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TTestTest.fail(1)"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.testOneSampleTTest(0)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance(0)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
reference "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TTestTest.testStatistic"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TTest.t(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TTestTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TTest.t(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TTest.tTest(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TTest.tTest(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TTest.tTest(3)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TTestTest.assertTrue(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TTest.tTest(3)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TTestTest.fail(1)"
reference "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TTestTest.tooShortObs"
reference "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TTestTest.tooShortStats"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHeterscedastic(0)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHomoscedastic(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance(0)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHomoscedastic(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
reference "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHomoscedastic(0)" "org.apache.commons.math.stat.inference.TTestTest.testStatistic"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHomoscedastic(0)" "org.apache.commons.math.stat.inference.TTest.homoscedasticT(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHomoscedastic(0)" "org.apache.commons.math.stat.inference.TTestTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHomoscedastic(0)" "org.apache.commons.math.stat.inference.TTest.homoscedasticTTest(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHomoscedastic(0)" "org.apache.commons.math.stat.inference.TTest.homoscedasticTTest(3)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHomoscedastic(0)" "org.apache.commons.math.stat.inference.TTestTest.assertTrue(2)"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHomoscedastic(0)"
reference "org.apache.commons.math.stat.inference.TTestTest.testSmallSamples(0)" "org.apache.commons.math.stat.inference.TTestTest.testStatistic"
call "org.apache.commons.math.stat.inference.TTestTest.testSmallSamples(0)" "org.apache.commons.math.stat.inference.TTest.t(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testSmallSamples(0)" "org.apache.commons.math.stat.inference.TTestTest.assertEquals(3)"
call "org.apache.commons.math.stat.inference.TTestTest.testSmallSamples(0)" "org.apache.commons.math.stat.inference.TTest.tTest(2)"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.testSmallSamples(0)"
reference "org.apache.commons.math.stat.inference.TTestTest.testPaired(0)" "org.apache.commons.math.stat.inference.TTestTest.testStatistic"
call "org.apache.commons.math.stat.inference.TTestTest.testPaired(0)" "org.apache.commons.math.stat.inference.TTest.pairedT(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testPaired(0)" "org.apache.commons.math.stat.inference.TTestTest.assertEquals(3)"
call "org.apache.commons.math.stat.inference.TTestTest.testPaired(0)" "org.apache.commons.math.stat.inference.TTest.pairedTTest(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testPaired(0)" "org.apache.commons.math.stat.inference.TTest.pairedTTest(3)"
call "org.apache.commons.math.stat.inference.TTestTest.testPaired(0)" "org.apache.commons.math.stat.inference.TTestTest.assertFalse(1)"
call "org.apache.commons.math.stat.inference.TTestTest.testPaired(0)" "org.apache.commons.math.stat.inference.TTestTest.assertTrue(1)"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.testPaired(0)"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.class$(1)"
reference "org.apache.commons.math.stat.inference.TTestTest.testStatistic" "org.apache.commons.math.stat.inference.TTest"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.testStatistic"
reference "org.apache.commons.math.stat.inference.TTestTest.tooShortObs" "double[]"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.tooShortObs"
reference "org.apache.commons.math.stat.inference.TTestTest.nullObserved" "double[]"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.nullObserved"
reference "org.apache.commons.math.stat.inference.TTestTest.emptyObs" "double[]"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.emptyObs"
reference "org.apache.commons.math.stat.inference.TTestTest.emptyStats" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.emptyStats"
reference "org.apache.commons.math.stat.inference.TTestTest.nullStats" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.nullStats"
reference "org.apache.commons.math.stat.inference.TTestTest.tooShortStats" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.tooShortStats"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.class$org$apache$commons$math$stat$inference$TTestTest"
reference "org.apache.commons.math.random.UniformRandomGeneratorTest" "org.apache.commons.math.random.JDKRandomGenerator"
reference "org.apache.commons.math.random.UniformRandomGeneratorTest" "org.apache.commons.math.random.UniformRandomGenerator"
reference "org.apache.commons.math.random.UniformRandomGeneratorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.random.UniformRandomGeneratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.random.UniformRandomGeneratorTest" "org.apache.commons.math.random.RandomGenerator"
reference "org.apache.commons.math.random.UniformRandomGeneratorTest" "org.apache.commons.math.stat.StatUtils"
call "org.apache.commons.math.random.UniformRandomGeneratorTest.UniformRandomGeneratorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.random.UniformRandomGeneratorTest" "org.apache.commons.math.random.UniformRandomGeneratorTest.UniformRandomGeneratorTest(1)"
call "org.apache.commons.math.random.UniformRandomGeneratorTest.testMeanAndStandardDeviation(0)" "org.apache.commons.math.random.JDKRandomGenerator.JDKRandomGenerator(0)"
call "org.apache.commons.math.random.UniformRandomGeneratorTest.testMeanAndStandardDeviation(0)" "org.apache.commons.math.random.RandomGenerator.setSeed(1)"
call "org.apache.commons.math.random.UniformRandomGeneratorTest.testMeanAndStandardDeviation(0)" "org.apache.commons.math.random.UniformRandomGenerator.UniformRandomGenerator(1)"
call "org.apache.commons.math.random.UniformRandomGeneratorTest.testMeanAndStandardDeviation(0)" "org.apache.commons.math.random.UniformRandomGenerator.nextNormalizedDouble(0)"
call "org.apache.commons.math.random.UniformRandomGeneratorTest.testMeanAndStandardDeviation(0)" "org.apache.commons.math.stat.StatUtils.mean(1)"
call "org.apache.commons.math.random.UniformRandomGeneratorTest.testMeanAndStandardDeviation(0)" "org.apache.commons.math.random.UniformRandomGeneratorTest.assertEquals(3)"
call "org.apache.commons.math.random.UniformRandomGeneratorTest.testMeanAndStandardDeviation(0)" "org.apache.commons.math.stat.StatUtils.variance(1)"
contain "org.apache.commons.math.random.UniformRandomGeneratorTest" "org.apache.commons.math.random.UniformRandomGeneratorTest.testMeanAndStandardDeviation(0)"
reference "org.apache.commons.math.random.UniformRandomGeneratorTest.suite(0)" "org.apache.commons.math.random.UniformRandomGeneratorTest.class$org$apache$commons$math$random$UniformRandomGeneratorTest"
call "org.apache.commons.math.random.UniformRandomGeneratorTest.suite(0)" "org.apache.commons.math.random.UniformRandomGeneratorTest.class$(1)"
call "org.apache.commons.math.random.UniformRandomGeneratorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.random.UniformRandomGeneratorTest" "org.apache.commons.math.random.UniformRandomGeneratorTest.suite(0)"
contain "org.apache.commons.math.random.UniformRandomGeneratorTest" "org.apache.commons.math.random.UniformRandomGeneratorTest.class$(1)"
contain "org.apache.commons.math.random.UniformRandomGeneratorTest" "org.apache.commons.math.random.UniformRandomGeneratorTest.class$org$apache$commons$math$random$UniformRandomGeneratorTest"
reference "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.rank.Percentile"
reference "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.PercentileTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.PercentileTest(1)"
reference "org.apache.commons.math.stat.descriptive.rank.PercentileTest.suite(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.class$org$apache$commons$math$stat$descriptive$rank$PercentileTest"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.suite(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.class$(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)"
contain "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.rank.PercentileTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.percentile95"
contain "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testHighPercentile(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testHighPercentile(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testHighPercentile(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testHighPercentile(0)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testPercentile(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testPercentile(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testPercentile(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testPercentile(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.setQuantile(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testPercentile(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(4)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testPercentile(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.fail(0)"
contain "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testPercentile(0)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testNISTExample(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testNISTExample(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testNISTExample(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testNISTExample(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(4)"
contain "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testNISTExample(0)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.test5(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)"
reference "org.apache.commons.math.stat.descriptive.rank.PercentileTest.test5(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.percentile5"
reference "org.apache.commons.math.stat.descriptive.rank.PercentileTest.test5(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testArray"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.test5(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.test5(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.getTolerance(0)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.test5(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.test5(0)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testNullEmpty(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testNullEmpty(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testNullEmpty(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.fail(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testNullEmpty(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.assertTrue(1)"
contain "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testNullEmpty(0)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSingleton(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSingleton(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSingleton(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSingleton(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(3)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSingleton(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(4)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSingleton(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.assertTrue(1)"
contain "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSingleton(0)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.assertTrue(1)"
contain "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSpecialValues(0)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSetQuantile(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSetQuantile(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.setQuantile(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSetQuantile(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.getQuantile(0)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSetQuantile(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSetQuantile(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.fail(1)"
contain "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSetQuantile(0)"
contain "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.class$(1)"
reference "org.apache.commons.math.stat.descriptive.rank.PercentileTest.stat" "org.apache.commons.math.stat.descriptive.rank.Percentile"
contain "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.stat"
contain "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.class$org$apache$commons$math$stat$descriptive$rank$PercentileTest"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "junit.framework.TestCase"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistribution"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.ContinuousDistributionAbstractTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.ContinuousDistributionAbstractTest(1)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.tolerance"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.ContinuousDistributionAbstractTest(1)"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.makeDistribution(0)"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.makeCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.makeCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.makeInverseCumulativeTestPoints(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.makeCumulativeTestValues(0)"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.makeInverseCumulativeTestPoints(0)"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.makeInverseCumulativeTestValues(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.makeCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.makeInverseCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)" "junit.framework.TestCase.setUp(0)"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.makeDistribution(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.distribution"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.makeCumulativeTestPoints(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.cumulativeTestPoints"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.makeCumulativeTestValues(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.cumulativeTestValues"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.makeInverseCumulativeTestPoints(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.inverseCumulativeTestPoints"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.makeInverseCumulativeTestValues(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.inverseCumulativeTestValues"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.tearDown(0)" "junit.framework.TestCase.tearDown(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.tearDown(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.distribution"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.tearDown(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.cumulativeTestPoints"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.tearDown(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.cumulativeTestValues"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.tearDown(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.inverseCumulativeTestPoints"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.tearDown(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.inverseCumulativeTestValues"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.tearDown(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyCumulativeProbabilities(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.cumulativeTestPoints"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyCumulativeProbabilities(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.cumulativeTestValues"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyCumulativeProbabilities(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.distribution"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyCumulativeProbabilities(0)" "org.apache.commons.math.distribution.ContinuousDistribution.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyCumulativeProbabilities(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.getTolerance(0)"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyCumulativeProbabilities(0)" "org.apache.commons.math.TestUtils.assertEquals(4)"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyCumulativeProbabilities(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyInverseCumulativeProbabilities(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.inverseCumulativeTestPoints"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyInverseCumulativeProbabilities(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.inverseCumulativeTestValues"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyInverseCumulativeProbabilities(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.distribution"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyInverseCumulativeProbabilities(0)" "org.apache.commons.math.distribution.ContinuousDistribution.inverseCumulativeProbability(1)"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyInverseCumulativeProbabilities(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.getTolerance(0)"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyInverseCumulativeProbabilities(0)" "org.apache.commons.math.TestUtils.assertEquals(4)"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyInverseCumulativeProbabilities(0)"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testCumulativeProbabilities(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testCumulativeProbabilities(0)"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testInverseCumulativeProbabilities(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testInverseCumulativeProbabilities(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testConsistency(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.cumulativeTestPoints"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testConsistency(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.distribution"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testConsistency(0)" "org.apache.commons.math.distribution.ContinuousDistribution.cumulativeProbability(2)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testConsistency(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.tolerance"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testConsistency(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testConsistency(0)" "org.apache.commons.math.distribution.ContinuousDistribution.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testConsistency(0)" "org.apache.commons.math.TestUtils.assertEquals(4)"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testConsistency(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testIllegalArguments(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.distribution"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testIllegalArguments(0)" "org.apache.commons.math.distribution.ContinuousDistribution.cumulativeProbability(2)"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testIllegalArguments(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.fail(1)"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testIllegalArguments(0)" "org.apache.commons.math.distribution.ContinuousDistribution.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testIllegalArguments(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.getCumulativeTestPoints(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.cumulativeTestPoints"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.getCumulativeTestPoints(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setCumulativeTestPoints(1)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.cumulativeTestPoints"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setCumulativeTestPoints(1)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.getCumulativeTestValues(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.cumulativeTestValues"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.getCumulativeTestValues(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setCumulativeTestValues(1)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.cumulativeTestValues"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setCumulativeTestValues(1)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.getDistribution(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.distribution"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.getDistribution(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setDistribution(1)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.distribution"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setDistribution(1)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.getInverseCumulativeTestPoints(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.inverseCumulativeTestPoints"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.getInverseCumulativeTestPoints(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setInverseCumulativeTestPoints(1)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.inverseCumulativeTestPoints"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setInverseCumulativeTestPoints(1)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.getInverseCumulativeTestValues(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.inverseCumulativeTestValues"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.getInverseCumulativeTestValues(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setInverseCumulativeTestValues(1)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.inverseCumulativeTestValues"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setInverseCumulativeTestValues(1)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.getTolerance(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.tolerance"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.getTolerance(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setTolerance(1)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.tolerance"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setTolerance(1)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.distribution" "org.apache.commons.math.distribution.ContinuousDistribution"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.distribution"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.tolerance"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.cumulativeTestPoints" "double[]"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.cumulativeTestPoints"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.cumulativeTestValues" "double[]"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.cumulativeTestValues"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.inverseCumulativeTestPoints" "double[]"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.inverseCumulativeTestPoints"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.inverseCumulativeTestValues" "double[]"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.inverseCumulativeTestValues"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.ContinuousOutputModel"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.TestProblem3"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.DormandPrince54Integrator"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.FirstOrderIntegrator"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.ContinuousOutputModelTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest.ContinuousOutputModelTest(1)" "org.apache.commons.math.ode.ContinuousOutputModelTest.pb"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest.ContinuousOutputModelTest(1)" "org.apache.commons.math.ode.ContinuousOutputModelTest.integ"
contain "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.ContinuousOutputModelTest.ContinuousOutputModelTest(1)"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(0)" "org.apache.commons.math.ode.ContinuousOutputModelTest.integ"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(0)" "org.apache.commons.math.ode.ContinuousOutputModel.ContinuousOutputModel(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(0)" "org.apache.commons.math.ode.ContinuousOutputModelTest.pb"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(0)" "org.apache.commons.math.ode.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(0)" "org.apache.commons.math.ode.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(0)" "org.apache.commons.math.ode.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(0)" "org.apache.commons.math.ode.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.getStepHandler(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(0)" "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)"
contain "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(0)" "org.apache.commons.math.ode.ContinuousOutputModel.ContinuousOutputModel(0)"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(0)" "org.apache.commons.math.ode.ContinuousOutputModelTest.integ"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(0)" "org.apache.commons.math.ode.ContinuousOutputModelTest.pb"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(0)" "org.apache.commons.math.ode.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(0)" "org.apache.commons.math.ode.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(0)" "org.apache.commons.math.ode.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(0)" "org.apache.commons.math.ode.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(0)" "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(0)" "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(0)" "org.apache.commons.math.ode.TestProblem3.computeTheoreticalState(1)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(0)" "org.apache.commons.math.ode.ContinuousOutputModelTest.assertTrue(1)"
contain "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.checkValue(2)" "org.apache.commons.math.ode.ContinuousOutputModelTest.assertTrue(1)"
contain "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.ContinuousOutputModelTest.checkValue(2)"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest.suite(0)" "org.apache.commons.math.ode.ContinuousOutputModelTest.class$org$apache$commons$math$ode$ContinuousOutputModelTest"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.suite(0)" "org.apache.commons.math.ode.ContinuousOutputModelTest.class$(1)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.ContinuousOutputModelTest.suite(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.setUp(0)" "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest.setUp(0)" "org.apache.commons.math.ode.ContinuousOutputModelTest.pb"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.setUp(0)" "org.apache.commons.math.ode.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.setUp(0)" "org.apache.commons.math.ode.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.setUp(0)" "org.apache.commons.math.ode.DormandPrince54Integrator.DormandPrince54Integrator(4)"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest.setUp(0)" "org.apache.commons.math.ode.ContinuousOutputModelTest.integ"
contain "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.ContinuousOutputModelTest.setUp(0)"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest.tearDown(0)" "org.apache.commons.math.ode.ContinuousOutputModelTest.pb"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest.tearDown(0)" "org.apache.commons.math.ode.ContinuousOutputModelTest.integ"
contain "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.ContinuousOutputModelTest.tearDown(0)"
contain "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.ContinuousOutputModelTest.class$(1)"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest.pb" "org.apache.commons.math.ode.TestProblem3"
contain "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.ContinuousOutputModelTest.pb"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest.integ" "org.apache.commons.math.ode.FirstOrderIntegrator"
contain "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.ContinuousOutputModelTest.integ"
contain "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.ContinuousOutputModelTest.class$org$apache$commons$math$ode$ContinuousOutputModelTest"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "junit.framework.TestCase"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "org.apache.commons.math.TestUtils"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "org.apache.commons.math.stat.descriptive.StatisticalSummary"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.SummaryStatisticsImplTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.SummaryStatisticsImplTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.one"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.SummaryStatisticsImplTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.twoF"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.SummaryStatisticsImplTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.twoL"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.SummaryStatisticsImplTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.three"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.SummaryStatisticsImplTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.mean"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.SummaryStatisticsImplTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.sumSq"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.SummaryStatisticsImplTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.sum"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.SummaryStatisticsImplTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.var"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.SummaryStatisticsImplTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.std"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.SummaryStatisticsImplTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.n"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.SummaryStatisticsImplTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.min"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.SummaryStatisticsImplTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.max"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.SummaryStatisticsImplTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.tolerance"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.SummaryStatisticsImplTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.u"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.SummaryStatisticsImplTest(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.setUp(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.setUp(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.u"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.setUp(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.suite(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.class$org$apache$commons$math$stat$descriptive$SummaryStatisticsImplTest"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.suite(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.class$(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.suite(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.u"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getN(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.tolerance"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.assertEquals(4)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.one"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.twoF"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.twoL"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.three"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.n"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.sum"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSum(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.sumSq"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumsq(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.var"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getVariance(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.std"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getStandardDeviation(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.mean"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.min"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMin(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.max"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMax(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.clear(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testStats(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.u"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.assertTrue(2)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getStandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getVariance(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.one"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getGeometricMean(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.twoF"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testN0andN1Conditions(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.u"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getGeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.assertEquals(4)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testProductAndGeometricMean(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testNaNContracts(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.u"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testNaNContracts(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testNaNContracts(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.assertTrue(2)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testNaNContracts(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMin(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testNaNContracts(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getStandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testNaNContracts(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getVariance(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testNaNContracts(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getGeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testNaNContracts(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testNaNContracts(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.assertEquals(4)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testNaNContracts(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testGetSummary(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.u"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testGetSummary(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSummary(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testGetSummary(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.verifySummary(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testGetSummary(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testGetSummary(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.u"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testSerialization(0)" "org.apache.commons.math.TestUtils.checkSerializedEquality(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testSerialization(0)" "org.apache.commons.math.TestUtils.serializeAndRecover(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSummary(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.verifySummary(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testSerialization(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.u"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.hashCode(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.equals(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.assertTrue(2)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.assertFalse(2)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.clear(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.testEqualsAndHashCode(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.verifySummary(1)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getN(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.verifySummary(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.u"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.verifySummary(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getN(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.verifySummary(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.verifySummary(1)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getSum(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.verifySummary(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSum(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.verifySummary(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.tolerance"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.verifySummary(1)" "org.apache.commons.math.TestUtils.assertEquals(4)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.verifySummary(1)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getVariance(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.verifySummary(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getVariance(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.verifySummary(1)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getStandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.verifySummary(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getStandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.verifySummary(1)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.verifySummary(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.verifySummary(1)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getMin(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.verifySummary(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMin(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.verifySummary(1)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getMax(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.verifySummary(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMax(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.verifySummary(1)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.class$(1)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.one"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.twoF"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.twoL"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.three"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.mean"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.sumSq"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.sum"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.var"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.std"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.n"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.min"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.max"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.tolerance"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.u" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.u"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest.class$org$apache$commons$math$stat$descriptive$SummaryStatisticsImplTest"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.stat.descriptive.moment.VectorialMean"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.JDKRandomGenerator"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.GaussianRandomGenerator"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.DimensionMismatchException"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.RandomGenerator"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.UncorrelatedRandomVectorGeneratorTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.UncorrelatedRandomVectorGeneratorTest(1)" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.mean"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.UncorrelatedRandomVectorGeneratorTest(1)" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.standardDeviation"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.UncorrelatedRandomVectorGeneratorTest(1)" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.generator"
contain "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.UncorrelatedRandomVectorGeneratorTest(1)"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.testMeanAndCorrelation(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.mean"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.testMeanAndCorrelation(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.VectorialMean(1)"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.testMeanAndCorrelation(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.VectorialCovariance(1)"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.testMeanAndCorrelation(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.generator"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.testMeanAndCorrelation(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.nextVector(0)"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.testMeanAndCorrelation(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.increment(1)"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.testMeanAndCorrelation(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.increment(1)"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.testMeanAndCorrelation(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.getResult(0)"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.testMeanAndCorrelation(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.getResult(0)"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.testMeanAndCorrelation(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.assertEquals(3)"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.testMeanAndCorrelation(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.standardDeviation"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.testMeanAndCorrelation(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
contain "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.testMeanAndCorrelation(0)"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.mean"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.standardDeviation"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.random.JDKRandomGenerator.JDKRandomGenerator(0)"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.random.RandomGenerator.setSeed(1)"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.random.GaussianRandomGenerator.GaussianRandomGenerator(1)"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.UncorrelatedRandomVectorGenerator(3)"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.generator"
contain "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.setUp(0)"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.tearDown(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.mean"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.tearDown(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.standardDeviation"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.tearDown(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.generator"
contain "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.tearDown(0)"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.suite(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.class$org$apache$commons$math$random$UncorrelatedRandomVectorGeneratorTest"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.suite(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.class$(1)"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.suite(0)"
contain "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.class$(1)"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.mean" "double[]"
contain "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.mean"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.standardDeviation" "double[]"
contain "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.standardDeviation"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.generator" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator"
contain "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.generator"
contain "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.class$org$apache$commons$math$random$UncorrelatedRandomVectorGeneratorTest"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.WeightedMeasurement"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.PointModel(3)" "org.apache.commons.math.estimation.WeightedMeasurement.WeightedMeasurement(2)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.PointModel(3)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.this$0"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.PointModel(3)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.px"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.PointModel(3)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.py"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.PointModel(3)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartial(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.this$0"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartial(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.access$000(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartial(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiX(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartial(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getPartialRadiusX(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartial(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.access$100(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartial(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiY(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartial(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getPartialRadiusY(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartial(1)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getCenterDistance(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.px"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getCenterDistance(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.this$0"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getCenterDistance(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.access$000(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getCenterDistance(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getCenterDistance(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.py"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getCenterDistance(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.access$100(1)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getCenterDistance(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiX(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.this$0"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiX(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.access$000(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiX(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiX(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.px"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiX(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getCenterDistance(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiX(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiY(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.this$0"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiY(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.access$100(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiY(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiY(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.py"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiY(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getCenterDistance(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiY(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getTheoreticalValue(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getCenterDistance(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getTheoreticalValue(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.this$0"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getTheoreticalValue(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getRadius(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getTheoreticalValue(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.px"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.py"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.serialVersionUID"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.this$0" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.this$0"
reference "org.apache.commons.math.ConvergenceExceptionTest" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.ConvergenceExceptionTest" "junit.framework.TestCase"
call "org.apache.commons.math.ConvergenceExceptionTest.ConvergenceExceptionTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.ConvergenceExceptionTest" "org.apache.commons.math.ConvergenceExceptionTest.ConvergenceExceptionTest(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructor(0)" "org.apache.commons.math.ConvergenceException.ConvergenceException(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructor(0)" "org.apache.commons.math.ConvergenceException.getCause(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructor(0)" "org.apache.commons.math.ConvergenceExceptionTest.assertNull(1)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructor(0)" "org.apache.commons.math.ConvergenceException.getMessage(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructor(0)" "org.apache.commons.math.ConvergenceExceptionTest.assertNotNull(1)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructor(0)" "org.apache.commons.math.ConvergenceException.getMessage(1)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructor(0)" "org.apache.commons.math.ConvergenceExceptionTest.assertFalse(1)"
contain "org.apache.commons.math.ConvergenceExceptionTest" "org.apache.commons.math.ConvergenceExceptionTest.testConstructor(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.ConvergenceException.ConvergenceException(2)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.ConvergenceException.getCause(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.ConvergenceExceptionTest.assertNull(1)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.ConvergenceException.getPattern(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.ConvergenceExceptionTest.assertEquals(2)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.ConvergenceException.getArguments(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.ConvergenceExceptionTest.assertEquals(2)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.ConvergenceExceptionTest.assertEquals(2)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.ConvergenceException.getMessage(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.ConvergenceExceptionTest.assertFalse(1)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.ConvergenceException.getMessage(1)"
contain "org.apache.commons.math.ConvergenceExceptionTest" "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArguments(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorCause(0)" "org.apache.commons.math.ConvergenceException.ConvergenceException(1)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorCause(0)" "org.apache.commons.math.ConvergenceException.getCause(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorCause(0)" "org.apache.commons.math.ConvergenceExceptionTest.assertEquals(2)"
contain "org.apache.commons.math.ConvergenceExceptionTest" "org.apache.commons.math.ConvergenceExceptionTest.testConstructorCause(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.ConvergenceException.ConvergenceException(3)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.ConvergenceException.getCause(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.ConvergenceExceptionTest.assertEquals(2)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.ConvergenceException.getPattern(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.ConvergenceExceptionTest.assertEquals(2)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.ConvergenceException.getArguments(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.ConvergenceExceptionTest.assertEquals(2)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.ConvergenceException.getMessage(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.ConvergenceExceptionTest.assertFalse(1)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.ConvergenceException.getMessage(1)"
contain "org.apache.commons.math.ConvergenceExceptionTest" "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArgumentsCause(0)"
reference "org.apache.commons.math.optimization.MultiDirectionalTest" "org.apache.commons.math.optimization.MultiDirectional"
reference "org.apache.commons.math.optimization.MultiDirectionalTest" "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker"
reference "org.apache.commons.math.optimization.MultiDirectionalTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.optimization.MultiDirectionalTest" "junit.framework.TestCase"
reference "org.apache.commons.math.optimization.MultiDirectionalTest" "org.apache.commons.math.optimization.CostException"
reference "org.apache.commons.math.optimization.MultiDirectionalTest" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.optimization.MultiDirectionalTest" "org.apache.commons.math.optimization.PointCostPair"
call "org.apache.commons.math.optimization.MultiDirectionalTest.MultiDirectionalTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.optimization.MultiDirectionalTest" "org.apache.commons.math.optimization.MultiDirectionalTest.MultiDirectionalTest(1)"
call "org.apache.commons.math.optimization.MultiDirectionalTest.testRosenbrock(0)" "org.apache.commons.math.optimization.MultiDirectionalTest.1.{...}"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.testRosenbrock(0)" "org.apache.commons.math.optimization.MultiDirectionalTest.count"
call "org.apache.commons.math.optimization.MultiDirectionalTest.testRosenbrock(0)" "org.apache.commons.math.optimization.MultiDirectional.MultiDirectional(0)"
call "org.apache.commons.math.optimization.MultiDirectionalTest.testRosenbrock(0)" "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker.ValueChecker(1)"
call "org.apache.commons.math.optimization.MultiDirectionalTest.testRosenbrock(0)" "org.apache.commons.math.optimization.MultiDirectional.minimizes(5)"
call "org.apache.commons.math.optimization.MultiDirectionalTest.testRosenbrock(0)" "org.apache.commons.math.optimization.MultiDirectionalTest.assertTrue(1)"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.testRosenbrock(0)" "org.apache.commons.math.optimization.PointCostPair.cost"
contain "org.apache.commons.math.optimization.MultiDirectionalTest" "org.apache.commons.math.optimization.MultiDirectionalTest.testRosenbrock(0)"
call "org.apache.commons.math.optimization.MultiDirectionalTest.testPowell(0)" "org.apache.commons.math.optimization.MultiDirectionalTest.2.{...}"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.testPowell(0)" "org.apache.commons.math.optimization.MultiDirectionalTest.count"
call "org.apache.commons.math.optimization.MultiDirectionalTest.testPowell(0)" "org.apache.commons.math.optimization.MultiDirectional.MultiDirectional(0)"
call "org.apache.commons.math.optimization.MultiDirectionalTest.testPowell(0)" "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker.ValueChecker(1)"
call "org.apache.commons.math.optimization.MultiDirectionalTest.testPowell(0)" "org.apache.commons.math.optimization.MultiDirectional.minimizes(5)"
call "org.apache.commons.math.optimization.MultiDirectionalTest.testPowell(0)" "org.apache.commons.math.optimization.MultiDirectionalTest.assertTrue(1)"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.testPowell(0)" "org.apache.commons.math.optimization.PointCostPair.cost"
contain "org.apache.commons.math.optimization.MultiDirectionalTest" "org.apache.commons.math.optimization.MultiDirectionalTest.testPowell(0)"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.suite(0)" "org.apache.commons.math.optimization.MultiDirectionalTest.class$org$apache$commons$math$optimization$MultiDirectionalTest"
call "org.apache.commons.math.optimization.MultiDirectionalTest.suite(0)" "org.apache.commons.math.optimization.MultiDirectionalTest.class$(1)"
call "org.apache.commons.math.optimization.MultiDirectionalTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.optimization.MultiDirectionalTest" "org.apache.commons.math.optimization.MultiDirectionalTest.suite(0)"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.access$004(1)" "org.apache.commons.math.optimization.MultiDirectionalTest.count"
contain "org.apache.commons.math.optimization.MultiDirectionalTest" "org.apache.commons.math.optimization.MultiDirectionalTest.access$004(1)"
contain "org.apache.commons.math.optimization.MultiDirectionalTest" "org.apache.commons.math.optimization.MultiDirectionalTest.class$(1)"
contain "org.apache.commons.math.optimization.MultiDirectionalTest" "org.apache.commons.math.optimization.MultiDirectionalTest.count"
contain "org.apache.commons.math.optimization.MultiDirectionalTest" "org.apache.commons.math.optimization.MultiDirectionalTest.class$org$apache$commons$math$optimization$MultiDirectionalTest"
reference "org.apache.commons.math.ode.TestProblem4.Bounce" "org.apache.commons.math.ode.SwitchingFunction"
reference "org.apache.commons.math.ode.TestProblem4.Bounce" "org.apache.commons.math.ode.TestProblem4"
reference "org.apache.commons.math.ode.TestProblem4.Bounce.Bounce(0)" "org.apache.commons.math.ode.TestProblem4.Bounce.sign"
contain "org.apache.commons.math.ode.TestProblem4.Bounce" "org.apache.commons.math.ode.TestProblem4.Bounce.Bounce(0)"
reference "org.apache.commons.math.ode.TestProblem4.Bounce.g(2)" "org.apache.commons.math.ode.TestProblem4.Bounce.sign"
contain "org.apache.commons.math.ode.TestProblem4.Bounce" "org.apache.commons.math.ode.TestProblem4.Bounce.g(2)"
reference "org.apache.commons.math.ode.TestProblem4.Bounce.eventOccurred(2)" "org.apache.commons.math.ode.TestProblem4.Bounce.sign"
contain "org.apache.commons.math.ode.TestProblem4.Bounce" "org.apache.commons.math.ode.TestProblem4.Bounce.eventOccurred(2)"
contain "org.apache.commons.math.ode.TestProblem4.Bounce" "org.apache.commons.math.ode.TestProblem4.Bounce.resetState(2)"
contain "org.apache.commons.math.ode.TestProblem4.Bounce" "org.apache.commons.math.ode.TestProblem4.Bounce.serialVersionUID"
contain "org.apache.commons.math.ode.TestProblem4.Bounce" "org.apache.commons.math.ode.TestProblem4.Bounce.sign"
reference "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction.JennrichSampsonFunction(5)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction" "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction.JennrichSampsonFunction(5)"
reference "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction.getJacobian(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction.m"
contain "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction" "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction.m"
contain "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction" "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction.getResiduals(0)"
reference "org.apache.commons.math.complex.ComplexFormatTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest"
call "org.apache.commons.math.complex.ComplexFormatTest.ComplexFormatTest(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.ComplexFormatAbstractTest(0)"
contain "org.apache.commons.math.complex.ComplexFormatTest" "org.apache.commons.math.complex.ComplexFormatTest.ComplexFormatTest(0)"
contain "org.apache.commons.math.complex.ComplexFormatTest" "org.apache.commons.math.complex.ComplexFormatTest.getDecimalCharacter(0)"
contain "org.apache.commons.math.complex.ComplexFormatTest" "org.apache.commons.math.complex.ComplexFormatTest.getLocale(0)"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.ResizableDoubleArray"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.random.RandomDataImpl"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.DoubleArrayAbstractTest"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.DoubleArray"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.random.RandomData"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.ResizableDoubleArrayTest(1)" "org.apache.commons.math.util.DoubleArrayAbstractTest.DoubleArrayAbstractTest(1)"
contain "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.ResizableDoubleArrayTest.ResizableDoubleArrayTest(1)"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest.tearDown(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.da"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest.tearDown(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.ra"
contain "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.ResizableDoubleArrayTest.tearDown(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.setUp(0)" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(0)"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest.setUp(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.da"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest.setUp(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.ra"
contain "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.ResizableDoubleArrayTest.setUp(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testConstructors(0)" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testConstructors(0)" "org.apache.commons.math.util.ResizableDoubleArray.getNumElements(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testConstructors(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(2)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testConstructors(0)" "org.apache.commons.math.util.ResizableDoubleArray.getInternalLength(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testConstructors(0)" "org.apache.commons.math.util.ResizableDoubleArray.getExpansionFactor(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testConstructors(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(3)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testConstructors(0)" "org.apache.commons.math.util.ResizableDoubleArray.getContractionCriteria(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testConstructors(0)" "org.apache.commons.math.util.ResizableDoubleArray.getExpansionMode(0)"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest.testConstructors(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.da"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testConstructors(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.fail(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testConstructors(0)" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(2)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testConstructors(0)" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(3)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testConstructors(0)" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(4)"
contain "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.ResizableDoubleArrayTest.testConstructors(0)"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.da"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion(0)" "org.apache.commons.math.util.DoubleArray.addElement(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion(0)" "org.apache.commons.math.util.DoubleArray.setElement(2)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion(0)" "org.apache.commons.math.util.DoubleArray.getNumElements(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(3)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion(0)" "org.apache.commons.math.util.DoubleArray.getElement(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(4)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion(0)" "org.apache.commons.math.util.DoubleArray.clear(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion(0)" "org.apache.commons.math.util.ResizableDoubleArray.getInternalLength(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(2)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.fail(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion(0)" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(4)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion(0)" "org.apache.commons.math.util.ResizableDoubleArray.addElement(1)"
contain "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAdd1000(0)" "org.apache.commons.math.util.DoubleArrayAbstractTest.testAdd1000(0)"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest.testAdd1000(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.da"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAdd1000(0)" "org.apache.commons.math.util.ResizableDoubleArray.getInternalLength(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAdd1000(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(3)"
contain "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.ResizableDoubleArrayTest.testAdd1000(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)" "org.apache.commons.math.util.DoubleArrayAbstractTest.testAddElementRolling(0)"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.da"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)" "org.apache.commons.math.util.DoubleArray.clear(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)" "org.apache.commons.math.util.DoubleArray.addElement(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)" "org.apache.commons.math.util.DoubleArray.addElementRolling(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)" "org.apache.commons.math.util.DoubleArray.getElement(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(3)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(4)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)" "org.apache.commons.math.util.ResizableDoubleArray.getInternalLength(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(2)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)" "org.apache.commons.math.util.ResizableDoubleArray.addElement(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)" "org.apache.commons.math.util.ResizableDoubleArray.getElement(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)" "org.apache.commons.math.util.ResizableDoubleArray.getNumElements(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)" "org.apache.commons.math.util.ResizableDoubleArray.addElementRolling(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.fail(1)"
contain "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetNumberOfElements(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.da"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetNumberOfElements(0)" "org.apache.commons.math.util.DoubleArray.addElement(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetNumberOfElements(0)" "org.apache.commons.math.util.DoubleArray.getNumElements(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetNumberOfElements(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(3)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetNumberOfElements(0)" "org.apache.commons.math.util.ResizableDoubleArray.setNumElements(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetNumberOfElements(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.fail(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetNumberOfElements(0)" "org.apache.commons.math.util.DoubleArray.getElement(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetNumberOfElements(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(4)"
contain "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetNumberOfElements(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacity(0)" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacity(0)" "org.apache.commons.math.util.ResizableDoubleArray.getNumElements(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacity(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(3)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacity(0)" "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacity(0)" "org.apache.commons.math.random.RandomData.nextInt(2)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacity(0)" "org.apache.commons.math.util.ResizableDoubleArray.addElement(1)"
contain "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacity(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacityAndExpansionFactor(0)" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(3)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacityAndExpansionFactor(0)" "org.apache.commons.math.util.ResizableDoubleArray.getNumElements(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacityAndExpansionFactor(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(3)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacityAndExpansionFactor(0)" "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacityAndExpansionFactor(0)" "org.apache.commons.math.random.RandomData.nextInt(2)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacityAndExpansionFactor(0)" "org.apache.commons.math.util.ResizableDoubleArray.addElement(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacityAndExpansionFactor(0)" "org.apache.commons.math.util.ResizableDoubleArray.getExpansionFactor(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacityAndExpansionFactor(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(4)"
contain "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacityAndExpansionFactor(0)"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest.testDiscard(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.da"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testDiscard(0)" "org.apache.commons.math.util.DoubleArray.addElement(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testDiscard(0)" "org.apache.commons.math.util.DoubleArray.getNumElements(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testDiscard(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(3)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testDiscard(0)" "org.apache.commons.math.util.ResizableDoubleArray.discardFrontElements(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testDiscard(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.fail(1)"
contain "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.ResizableDoubleArrayTest.testDiscard(0)"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest.testMutators(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.da"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testMutators(0)" "org.apache.commons.math.util.ResizableDoubleArray.setContractionCriteria(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testMutators(0)" "org.apache.commons.math.util.ResizableDoubleArray.getContractionCriteria(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testMutators(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(3)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testMutators(0)" "org.apache.commons.math.util.ResizableDoubleArray.setExpansionFactor(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testMutators(0)" "org.apache.commons.math.util.ResizableDoubleArray.getExpansionFactor(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testMutators(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.fail(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testMutators(0)" "org.apache.commons.math.util.ResizableDoubleArray.setExpansionMode(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testMutators(0)" "org.apache.commons.math.util.ResizableDoubleArray.getExpansionMode(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testMutators(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(2)"
contain "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.ResizableDoubleArrayTest.testMutators(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest" "double[]"
reference "org.apache.commons.math.linear.RealMatrixImplTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImpl"
reference "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.InvalidMatrixException"
reference "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.MatrixIndexException"
reference "org.apache.commons.math.linear.RealMatrixImplTest" "double[][]"
reference "org.apache.commons.math.linear.RealMatrixImplTest" "junit.framework.TestCase"
reference "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.MatrixUtils"
call "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.id"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataLU"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataPlus2"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataMinus"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataRow1"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataCol3"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataInv"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.preMultTest"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.testData2"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.testData2T"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataPlusInv"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.luData"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.luDataLUDecomposition"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.singular"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.bigSingular"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.detData"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.detData2"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.testVector"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.testVector2"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.subTestData"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows02Cols13"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows03Cols12"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows03Cols123"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows20Cols123"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows31Cols31"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows01Cols23"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows23Cols00"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows00Cols33"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.subRow0"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.subRow3"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.subColumn1"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.subColumn3"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.entryTolerance"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.normTolerance"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.d3"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.d4"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.d5"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.setUp(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.suite(0)" "org.apache.commons.math.linear.RealMatrixImplTest.class$org$apache$commons$math$linear$RealMatrixImplTest"
call "org.apache.commons.math.linear.RealMatrixImplTest.suite(0)" "org.apache.commons.math.linear.RealMatrixImplTest.class$(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.suite(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData2"
call "org.apache.commons.math.linear.RealMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(3)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.RealMatrixImpl.isSquare(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertTrue(2)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testDimensions(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testCopyFunctions(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testCopyFunctions(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testCopyFunctions(0)" "org.apache.commons.math.linear.RealMatrixImpl.getData(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testCopyFunctions(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(2)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testCopyFunctions(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataInv"
call "org.apache.commons.math.linear.RealMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.RealMatrixImpl.add(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.RealMatrixImpl.getData(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataPlusInv"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.RealMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.RealMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(4)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testAdd(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testAddFail(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testAddFail(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testAddFail(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData2"
call "org.apache.commons.math.linear.RealMatrixImplTest.testAddFail(0)" "org.apache.commons.math.linear.RealMatrixImpl.add(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testAddFail(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testAddFail(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testNorm(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testNorm(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testNorm(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData2"
call "org.apache.commons.math.linear.RealMatrixImplTest.testNorm(0)" "org.apache.commons.math.linear.RealMatrixImpl.getNorm(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testNorm(0)" "org.apache.commons.math.linear.RealMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.RealMatrixImplTest.testNorm(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(4)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testNorm(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataInv"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.RealMatrixImpl.subtract(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.RealMatrixImpl.scalarMultiply(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.RealMatrix.add(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.RealMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData2"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testPlusMinus(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataInv"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.id"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData2"
call "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.RealMatrixImpl.multiply(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.bigSingular"
call "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply2(0)" "org.apache.commons.math.linear.RealMatrixImplTest.d3"
call "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply2(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply2(0)" "org.apache.commons.math.linear.RealMatrixImplTest.d4"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply2(0)" "org.apache.commons.math.linear.RealMatrixImplTest.d5"
call "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply2(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply2(0)" "org.apache.commons.math.linear.RealMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply2(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply2(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testIsSingular(0)" "org.apache.commons.math.linear.RealMatrixImplTest.singular"
call "org.apache.commons.math.linear.RealMatrixImplTest.testIsSingular(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testIsSingular(0)" "org.apache.commons.math.linear.RealMatrixImpl.isSingular(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testIsSingular(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertTrue(2)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testIsSingular(0)" "org.apache.commons.math.linear.RealMatrixImplTest.bigSingular"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testIsSingular(0)" "org.apache.commons.math.linear.RealMatrixImplTest.id"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testIsSingular(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testIsSingular(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testInverse(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testInverse(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testInverse(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataInv"
call "org.apache.commons.math.linear.RealMatrixImplTest.testInverse(0)" "org.apache.commons.math.linear.RealMatrixImpl.inverse(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testInverse(0)" "org.apache.commons.math.linear.RealMatrixImplTest.normTolerance"
call "org.apache.commons.math.linear.RealMatrixImplTest.testInverse(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testInverse(0)" "org.apache.commons.math.linear.RealMatrix.inverse(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testInverse(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData2"
call "org.apache.commons.math.linear.RealMatrixImplTest.testInverse(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testInverse(0)" "org.apache.commons.math.linear.RealMatrixImplTest.singular"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testInverse(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataInv"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testVector"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrix.operate(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrixImpl.solve(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrixImplTest.normTolerance"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testVector2"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrixImplTest.bigSingular"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrix.solve(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrixImpl.solve(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData2"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrixImpl.luDecompose(0)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testSolve(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.RealMatrixImplTest.bigSingular"
call "org.apache.commons.math.linear.RealMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.RealMatrix.getDeterminant(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(4)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.RealMatrixImplTest.detData"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.RealMatrixImplTest.normTolerance"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.RealMatrixImplTest.detData2"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData2"
call "org.apache.commons.math.linear.RealMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.RealMatrixImpl.getDeterminant(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testDeterminant(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testTrace(0)" "org.apache.commons.math.linear.RealMatrixImplTest.id"
call "org.apache.commons.math.linear.RealMatrixImplTest.testTrace(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testTrace(0)" "org.apache.commons.math.linear.RealMatrix.getTrace(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testTrace(0)" "org.apache.commons.math.linear.RealMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.RealMatrixImplTest.testTrace(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(4)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testTrace(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData2"
call "org.apache.commons.math.linear.RealMatrixImplTest.testTrace(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testTrace(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testScalarAdd(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testScalarAdd(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testScalarAdd(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataPlus2"
call "org.apache.commons.math.linear.RealMatrixImplTest.testScalarAdd(0)" "org.apache.commons.math.linear.RealMatrix.scalarAdd(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testScalarAdd(0)" "org.apache.commons.math.linear.RealMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.RealMatrixImplTest.testScalarAdd(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testScalarAdd(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.RealMatrixImplTest.id"
call "org.apache.commons.math.linear.RealMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testVector"
call "org.apache.commons.math.linear.RealMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.RealMatrix.operate(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.RealMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.RealMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.RealMatrixImplTest.bigSingular"
call "org.apache.commons.math.linear.RealMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testOperate(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.RealMatrix.inverse(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.RealMatrixImplTest.normTolerance"
call "org.apache.commons.math.linear.RealMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData2"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData2T"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testTranspose(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testVector"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.RealMatrix.preMultiply(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.preMultTest"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.normTolerance"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.bigSingular"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiplyVector(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.d3"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.d4"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.d5"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.RealMatrix.preMultiply(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataInv"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.id"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData2"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.RealMatrixImpl.preMultiply(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.bigSingular"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiply(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.RealMatrix.getRow(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataRow1"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.RealMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.RealMatrix.getColumn(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataCol3"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testGetVectors(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetEntry(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetEntry(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetEntry(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetEntry(0)" "org.apache.commons.math.linear.RealMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetEntry(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(4)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetEntry(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testGetEntry(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.RealMatrixImpl.getLUMatrix(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataLU"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.RealMatrixImplTest.normTolerance"
call "org.apache.commons.math.linear.RealMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.RealMatrixImplTest.verifyDecomposition(2)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.RealMatrixImplTest.luData"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.RealMatrixImplTest.luDataLUDecomposition"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataMinus"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.RealMatrixImplTest.id"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.RealMatrixImplTest.bigSingular"
call "org.apache.commons.math.linear.RealMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData2"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testLUDecomposition(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testExamples(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testExamples(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testExamples(0)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testExamples(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testExamples(0)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testExamples(0)" "org.apache.commons.math.linear.RealMatrix.inverse(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testExamples(0)" "org.apache.commons.math.linear.RealMatrix.solve(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testExamples(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(3)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testExamples(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subTestData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows23Cols00"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows00Cols33"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows01Cols23"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows02Cols13"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows03Cols12"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows03Cols123"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows20Cols123"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows31Cols31"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.RealMatrix.getSubMatrix(4)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(3)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.RealMatrix.getSubMatrix(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testSubMatrix(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subTestData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRow0"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRow3"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.RealMatrix.getRowMatrix(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(3)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testGetRowMatrix(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subTestData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subColumn1"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subColumn3"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.RealMatrix.getColumnMatrix(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(3)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumnMatrix(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.RealMatrixImpl.copy(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.RealMatrixImpl.transpose(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.RealMatrixImpl.hashCode(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertTrue(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.RealMatrixImpl.equals(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertFalse(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.RealMatrixImplTest.bigSingular"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testEqualsAndHashCode(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testToString(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testToString(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testToString(0)" "org.apache.commons.math.linear.RealMatrixImpl.toString(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testToString(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testToString(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(0)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testToString(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.detData2"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix(3)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(2)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataPlus2"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(0)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testSetSubMatrix(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)" "org.apache.commons.math.linear.RealMatrixImplTest.assertTrue(2)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)"
call "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(4)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)"
call "org.apache.commons.math.linear.RealMatrixImplTest.splitLU(3)" "org.apache.commons.math.linear.RealMatrix.isSquare(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.splitLU(3)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.splitLU(3)" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.splitLU(3)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.splitLU(3)"
call "org.apache.commons.math.linear.RealMatrixImplTest.permuteRows(2)" "org.apache.commons.math.linear.RealMatrix.isSquare(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.permuteRows(2)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.permuteRows(2)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.permuteRows(2)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.permuteRows(2)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.permuteRows(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.verifyDecomposition(2)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.verifyDecomposition(2)" "org.apache.commons.math.linear.RealMatrixImplTest.splitLU(3)"
call "org.apache.commons.math.linear.RealMatrixImplTest.verifyDecomposition(2)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.verifyDecomposition(2)" "org.apache.commons.math.linear.RealMatrixImpl.getPermutation(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.verifyDecomposition(2)" "org.apache.commons.math.linear.RealMatrixImplTest.permuteRows(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.verifyDecomposition(2)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.verifyDecomposition(2)" "org.apache.commons.math.linear.RealMatrixImplTest.normTolerance"
call "org.apache.commons.math.linear.RealMatrixImplTest.verifyDecomposition(2)" "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.verifyDecomposition(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.dumpMatrix(1)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.dumpMatrix(1)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.dumpMatrix(1)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.dumpMatrix(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.class$(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.id" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.id"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testData" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testDataLU" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testDataLU"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testDataPlus2" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testDataPlus2"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testDataMinus" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testDataMinus"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testDataRow1" "double[]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testDataRow1"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testDataCol3" "double[]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testDataCol3"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testDataInv" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testDataInv"
reference "org.apache.commons.math.linear.RealMatrixImplTest.preMultTest" "double[]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.preMultTest"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testData2" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testData2"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testData2T" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testData2T"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testDataPlusInv" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testDataPlusInv"
reference "org.apache.commons.math.linear.RealMatrixImplTest.luData" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.luData"
reference "org.apache.commons.math.linear.RealMatrixImplTest.luDataLUDecomposition" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.luDataLUDecomposition"
reference "org.apache.commons.math.linear.RealMatrixImplTest.singular" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.singular"
reference "org.apache.commons.math.linear.RealMatrixImplTest.bigSingular" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.bigSingular"
reference "org.apache.commons.math.linear.RealMatrixImplTest.detData" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.detData"
reference "org.apache.commons.math.linear.RealMatrixImplTest.detData2" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.detData2"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testVector" "double[]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testVector"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testVector2" "double[]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testVector2"
reference "org.apache.commons.math.linear.RealMatrixImplTest.subTestData" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.subTestData"
reference "org.apache.commons.math.linear.RealMatrixImplTest.subRows02Cols13" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.subRows02Cols13"
reference "org.apache.commons.math.linear.RealMatrixImplTest.subRows03Cols12" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.subRows03Cols12"
reference "org.apache.commons.math.linear.RealMatrixImplTest.subRows03Cols123" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.subRows03Cols123"
reference "org.apache.commons.math.linear.RealMatrixImplTest.subRows20Cols123" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.subRows20Cols123"
reference "org.apache.commons.math.linear.RealMatrixImplTest.subRows31Cols31" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.subRows31Cols31"
reference "org.apache.commons.math.linear.RealMatrixImplTest.subRows01Cols23" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.subRows01Cols23"
reference "org.apache.commons.math.linear.RealMatrixImplTest.subRows23Cols00" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.subRows23Cols00"
reference "org.apache.commons.math.linear.RealMatrixImplTest.subRows00Cols33" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.subRows00Cols33"
reference "org.apache.commons.math.linear.RealMatrixImplTest.subRow0" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.subRow0"
reference "org.apache.commons.math.linear.RealMatrixImplTest.subRow3" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.subRow3"
reference "org.apache.commons.math.linear.RealMatrixImplTest.subColumn1" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.subColumn1"
reference "org.apache.commons.math.linear.RealMatrixImplTest.subColumn3" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.subColumn3"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.entryTolerance"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.normTolerance"
reference "org.apache.commons.math.linear.RealMatrixImplTest.d3" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.d3"
reference "org.apache.commons.math.linear.RealMatrixImplTest.d4" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.d4"
reference "org.apache.commons.math.linear.RealMatrixImplTest.d5" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.d5"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.class$org$apache$commons$math$linear$RealMatrixImplTest"
reference "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction.RosenbrockFunction(2)" "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction.buildArray(2)"
call "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction.RosenbrockFunction(2)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction" "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction.RosenbrockFunction(2)"
reference "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction.getJacobian(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction" "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction" "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction.getResiduals(0)"
reference "org.apache.commons.math.stat.descriptive.summary.SumTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.summary.SumTest" "org.apache.commons.math.stat.descriptive.summary.Sum"
reference "org.apache.commons.math.stat.descriptive.summary.SumTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.summary.SumTest.SumTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.summary.SumTest" "org.apache.commons.math.stat.descriptive.summary.SumTest.SumTest(1)"
reference "org.apache.commons.math.stat.descriptive.summary.SumTest.suite(0)" "org.apache.commons.math.stat.descriptive.summary.SumTest.class$org$apache$commons$math$stat$descriptive$summary$SumTest"
call "org.apache.commons.math.stat.descriptive.summary.SumTest.suite(0)" "org.apache.commons.math.stat.descriptive.summary.SumTest.class$(1)"
call "org.apache.commons.math.stat.descriptive.summary.SumTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.summary.SumTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.summary.SumTest" "org.apache.commons.math.stat.descriptive.summary.SumTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(0)"
contain "org.apache.commons.math.stat.descriptive.summary.SumTest" "org.apache.commons.math.stat.descriptive.summary.SumTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.summary.SumTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.summary.SumTest.sum"
contain "org.apache.commons.math.stat.descriptive.summary.SumTest" "org.apache.commons.math.stat.descriptive.summary.SumTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.Sum.getResult(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.SumTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.summary.SumTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.Sum.increment(1)"
call "org.apache.commons.math.stat.descriptive.summary.SumTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.SumTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.summary.SumTest" "org.apache.commons.math.stat.descriptive.summary.SumTest.testSpecialValues(0)"
contain "org.apache.commons.math.stat.descriptive.summary.SumTest" "org.apache.commons.math.stat.descriptive.summary.SumTest.class$(1)"
reference "org.apache.commons.math.stat.descriptive.summary.SumTest.stat" "org.apache.commons.math.stat.descriptive.summary.Sum"
contain "org.apache.commons.math.stat.descriptive.summary.SumTest" "org.apache.commons.math.stat.descriptive.summary.SumTest.stat"
contain "org.apache.commons.math.stat.descriptive.summary.SumTest" "org.apache.commons.math.stat.descriptive.summary.SumTest.class$org$apache$commons$math$stat$descriptive$summary$SumTest"
reference "org.apache.commons.math.analysis.QuinticFunction.1" "org.apache.commons.math.analysis.UnivariateRealFunction"
reference "org.apache.commons.math.analysis.QuinticFunction.1" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.QuinticFunction.1.{...}" "org.apache.commons.math.analysis.QuinticFunction.1.this$0"
contain "org.apache.commons.math.analysis.QuinticFunction.1" "org.apache.commons.math.analysis.QuinticFunction.1.{...}"
contain "org.apache.commons.math.analysis.QuinticFunction.1" "org.apache.commons.math.analysis.QuinticFunction.1.value(1)"
reference "org.apache.commons.math.analysis.QuinticFunction.1.this$0" "org.apache.commons.math.analysis.QuinticFunction"
contain "org.apache.commons.math.analysis.QuinticFunction.1" "org.apache.commons.math.analysis.QuinticFunction.1.this$0"
reference "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.KowalikOsborneFunction(4)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
call "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.KowalikOsborneFunction(4)" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.setCostAccuracy(1)"
call "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.KowalikOsborneFunction(4)" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.setParamsAccuracy(1)"
contain "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.KowalikOsborneFunction(4)"
reference "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.getJacobian(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.m"
reference "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.v"
contain "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.m"
reference "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.y"
reference "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.v"
contain "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.getResiduals(0)"
reference "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.static {...}" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.v"
reference "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.static {...}" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.y"
contain "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.static {...}"
reference "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.v" "double[]"
contain "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.v"
reference "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.y" "double[]"
contain "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.y"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest" "org.apache.commons.math.ode.TestProblem3"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest" "org.apache.commons.math.ode.DormandPrince853Integrator"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest" "org.apache.commons.math.ode.ContinuousOutputModel"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest" "org.apache.commons.math.ode.IntegratorException"
call "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest.DormandPrince853StepInterpolatorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest" "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest.DormandPrince853StepInterpolatorTest(1)"
call "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.DormandPrince853Integrator.DormandPrince853Integrator(4)"
call "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.ContinuousOutputModel(0)"
call "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.DormandPrince853Integrator.setStepHandler(1)"
call "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.DormandPrince853Integrator.integrate(5)"
call "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.DormandPrince853Integrator.getStepHandler(0)"
call "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest.assertTrue(1)"
call "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState(0)"
call "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.computeTheoreticalState(1)"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest" "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest.testSerialization(0)"
reference "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest.suite(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest.class$org$apache$commons$math$ode$DormandPrince853StepInterpolatorTest"
call "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest.suite(0)" "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest.class$(1)"
call "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest" "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest.suite(0)"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest" "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest.class$(1)"
contain "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest" "org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest.class$org$apache$commons$math$ode$DormandPrince853StepInterpolatorTest"
reference "org.apache.commons.math.stat.descriptive.summary.SumSqTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.summary.SumSqTest" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares"
reference "org.apache.commons.math.stat.descriptive.summary.SumSqTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.summary.SumSqTest.SumSqTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.summary.SumSqTest" "org.apache.commons.math.stat.descriptive.summary.SumSqTest.SumSqTest(1)"
reference "org.apache.commons.math.stat.descriptive.summary.SumSqTest.suite(0)" "org.apache.commons.math.stat.descriptive.summary.SumSqTest.class$org$apache$commons$math$stat$descriptive$summary$SumSqTest"
call "org.apache.commons.math.stat.descriptive.summary.SumSqTest.suite(0)" "org.apache.commons.math.stat.descriptive.summary.SumSqTest.class$(1)"
call "org.apache.commons.math.stat.descriptive.summary.SumSqTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.summary.SumSqTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.summary.SumSqTest" "org.apache.commons.math.stat.descriptive.summary.SumSqTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumSqTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.SumOfSquares(0)"
contain "org.apache.commons.math.stat.descriptive.summary.SumSqTest" "org.apache.commons.math.stat.descriptive.summary.SumSqTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.summary.SumSqTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.summary.SumSqTest.sumSq"
contain "org.apache.commons.math.stat.descriptive.summary.SumSqTest" "org.apache.commons.math.stat.descriptive.summary.SumSqTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumSqTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.SumOfSquares(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumSqTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.getResult(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumSqTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.SumSqTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.summary.SumSqTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.increment(1)"
call "org.apache.commons.math.stat.descriptive.summary.SumSqTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.SumSqTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.summary.SumSqTest" "org.apache.commons.math.stat.descriptive.summary.SumSqTest.testSpecialValues(0)"
contain "org.apache.commons.math.stat.descriptive.summary.SumSqTest" "org.apache.commons.math.stat.descriptive.summary.SumSqTest.class$(1)"
reference "org.apache.commons.math.stat.descriptive.summary.SumSqTest.stat" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares"
contain "org.apache.commons.math.stat.descriptive.summary.SumSqTest" "org.apache.commons.math.stat.descriptive.summary.SumSqTest.stat"
contain "org.apache.commons.math.stat.descriptive.summary.SumSqTest" "org.apache.commons.math.stat.descriptive.summary.SumSqTest.class$org$apache$commons$math$stat$descriptive$summary$SumSqTest"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "junit.framework.TestCase"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
call "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.mean"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.geoMean"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.var"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.std"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.skew"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.kurt"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.min"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.max"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.median"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.percentile5"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.percentile95"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.product"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.sumLog"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.sumSq"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.sum"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.secondMoment"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.thirdMoment"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.fourthMoment"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.tolerance"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testArray"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.getUnivariateStatistic(0)"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.expectedValue(0)"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.getTolerance(0)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.tolerance"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.getTolerance(0)"
call "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testEvaluation(0)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testEvaluation(0)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testEvaluation(0)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testArray"
call "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testEvaluation(0)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testEvaluation(0)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.getTolerance(0)"
call "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testEvaluation(0)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testEvaluation(0)"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.mean"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.geoMean"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.var"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.std"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.skew"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.kurt"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.min"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.max"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.median"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.percentile5"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.percentile95"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.product"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.sumLog"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.sumSq"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.sum"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.secondMoment"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.thirdMoment"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.fourthMoment"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.tolerance"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testArray" "double[]"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testArray"
reference "org.apache.commons.math.analysis.Expm1Function.1" "org.apache.commons.math.analysis.UnivariateRealFunction"
reference "org.apache.commons.math.analysis.Expm1Function.1" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.Expm1Function.1.{...}" "org.apache.commons.math.analysis.Expm1Function.1.this$0"
contain "org.apache.commons.math.analysis.Expm1Function.1" "org.apache.commons.math.analysis.Expm1Function.1.{...}"
contain "org.apache.commons.math.analysis.Expm1Function.1" "org.apache.commons.math.analysis.Expm1Function.1.value(1)"
reference "org.apache.commons.math.analysis.Expm1Function.1.this$0" "org.apache.commons.math.analysis.Expm1Function"
contain "org.apache.commons.math.analysis.Expm1Function.1" "org.apache.commons.math.analysis.Expm1Function.1.this$0"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.TestProblem1"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.TestProblemAbstract"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.TestProblemHandler"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.TestProblem3"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.TestProblemFactory"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.FirstOrderIntegrator"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.ClassicalRungeKuttaIntegratorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.ClassicalRungeKuttaIntegratorTest(1)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(1)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.integrate(5)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testDimensionCheck(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testNullIntervalCheck(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testNullIntervalCheck(0)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(1)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testNullIntervalCheck(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testNullIntervalCheck(0)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.integrate(5)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testNullIntervalCheck(0)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testNullIntervalCheck(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemFactory.getProblems(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemAbstract.clone(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemAbstract.getFinalTime(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemAbstract.getInitialTime(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(1)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemHandler.TestProblemHandler(1)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemAbstract.getSwitchingFunctions(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addSwitchingFunction(3)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemAbstract.getInitialState(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemAbstract.getDimension(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemHandler.getMaximalError(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.assertTrue(1)"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(1)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblemHandler.TestProblemHandler(1)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblemHandler.getMaximalError(0)"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testSmallStep(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(1)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblemHandler.TestProblemHandler(1)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblemHandler.getMaximalError(0)"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testBigStep(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(1)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.KeplerHandler.KeplerHandler(1)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.testKepler(0)"
reference "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.suite(0)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.class$org$apache$commons$math$ode$ClassicalRungeKuttaIntegratorTest"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.suite(0)" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.class$(1)"
call "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.suite(0)"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.class$(1)"
contain "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest.class$org$apache$commons$math$ode$ClassicalRungeKuttaIntegratorTest"
reference "org.apache.commons.math.estimation.MinpackTest.MeyerFunction" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.MeyerFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.MeyerFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.MeyerFunction" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.MeyerFunction(4)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
call "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.MeyerFunction(4)" "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.setCostAccuracy(1)"
call "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.MeyerFunction(4)" "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.setParamsAccuracy(1)"
contain "org.apache.commons.math.estimation.MinpackTest.MeyerFunction" "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.MeyerFunction(4)"
reference "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.getJacobian(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.m"
contain "org.apache.commons.math.estimation.MinpackTest.MeyerFunction" "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.m"
reference "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.y"
contain "org.apache.commons.math.estimation.MinpackTest.MeyerFunction" "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.getResiduals(0)"
reference "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.static {...}" "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.y"
contain "org.apache.commons.math.estimation.MinpackTest.MeyerFunction" "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.static {...}"
reference "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.y" "double[]"
contain "org.apache.commons.math.estimation.MinpackTest.MeyerFunction" "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.y"
reference "org.apache.commons.math.ode.TestProblemFactory" "org.apache.commons.math.ode.TestProblemAbstract"
reference "org.apache.commons.math.ode.TestProblemFactory" "org.apache.commons.math.ode.TestProblem1"
reference "org.apache.commons.math.ode.TestProblemFactory" "org.apache.commons.math.ode.TestProblem2"
reference "org.apache.commons.math.ode.TestProblemFactory" "org.apache.commons.math.ode.TestProblem3"
reference "org.apache.commons.math.ode.TestProblemFactory" "org.apache.commons.math.ode.TestProblem4"
reference "org.apache.commons.math.ode.TestProblemFactory" "org.apache.commons.math.ode.TestProblem5"
contain "org.apache.commons.math.ode.TestProblemFactory" "org.apache.commons.math.ode.TestProblemFactory.TestProblemFactory(0)"
reference "org.apache.commons.math.ode.TestProblemFactory.getProblems(0)" "org.apache.commons.math.ode.TestProblemFactory.pool"
contain "org.apache.commons.math.ode.TestProblemFactory" "org.apache.commons.math.ode.TestProblemFactory.getProblems(0)"
call "org.apache.commons.math.ode.TestProblemFactory.static {...}" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.TestProblemFactory.static {...}" "org.apache.commons.math.ode.TestProblem2.TestProblem2(0)"
call "org.apache.commons.math.ode.TestProblemFactory.static {...}" "org.apache.commons.math.ode.TestProblem3.TestProblem3(0)"
call "org.apache.commons.math.ode.TestProblemFactory.static {...}" "org.apache.commons.math.ode.TestProblem4.TestProblem4(0)"
call "org.apache.commons.math.ode.TestProblemFactory.static {...}" "org.apache.commons.math.ode.TestProblem5.TestProblem5(0)"
reference "org.apache.commons.math.ode.TestProblemFactory.static {...}" "org.apache.commons.math.ode.TestProblemFactory.pool"
contain "org.apache.commons.math.ode.TestProblemFactory" "org.apache.commons.math.ode.TestProblemFactory.static {...}"
reference "org.apache.commons.math.ode.TestProblemFactory.pool" "org.apache.commons.math.ode.TestProblemAbstract[]"
contain "org.apache.commons.math.ode.TestProblemFactory" "org.apache.commons.math.ode.TestProblemFactory.pool"
reference "org.apache.commons.math.ode.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.TestProblem1"
reference "org.apache.commons.math.ode.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.ThreeEighthesIntegrator"
reference "org.apache.commons.math.ode.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.TestProblemAbstract"
reference "org.apache.commons.math.ode.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.TestProblemHandler"
reference "org.apache.commons.math.ode.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.TestProblem3"
reference "org.apache.commons.math.ode.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler"
reference "org.apache.commons.math.ode.ThreeEighthesIntegratorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.ThreeEighthesIntegratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.TestProblemFactory"
reference "org.apache.commons.math.ode.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.FirstOrderIntegrator"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.ThreeEighthesIntegratorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.ThreeEighthesIntegratorTest(1)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.ThreeEighthesIntegrator.ThreeEighthesIntegrator(1)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.ThreeEighthesIntegrator.integrate(5)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testDimensionCheck(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemFactory.getProblems(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemAbstract.clone(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemAbstract.getFinalTime(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemAbstract.getInitialTime(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.ThreeEighthesIntegrator.ThreeEighthesIntegrator(1)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemHandler.TestProblemHandler(1)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemAbstract.getSwitchingFunctions(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addSwitchingFunction(3)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemAbstract.getInitialState(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemAbstract.getDimension(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemHandler.getMaximalError(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.assertTrue(1)"
contain "org.apache.commons.math.ode.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testDecreasingSteps(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.ThreeEighthesIntegrator.ThreeEighthesIntegrator(1)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblemHandler.TestProblemHandler(1)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblemHandler.getMaximalError(0)"
contain "org.apache.commons.math.ode.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testSmallStep(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.ThreeEighthesIntegrator.ThreeEighthesIntegrator(1)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblemHandler.TestProblemHandler(1)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblemHandler.getMaximalError(0)"
contain "org.apache.commons.math.ode.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testBigStep(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.ThreeEighthesIntegrator.ThreeEighthesIntegrator(1)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.KeplerHandler.KeplerHandler(1)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
contain "org.apache.commons.math.ode.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.testKepler(0)"
reference "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.suite(0)" "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.class$org$apache$commons$math$ode$ThreeEighthesIntegratorTest"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.suite(0)" "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.class$(1)"
call "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.suite(0)"
contain "org.apache.commons.math.ode.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.class$(1)"
contain "org.apache.commons.math.ode.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.ThreeEighthesIntegratorTest.class$org$apache$commons$math$ode$ThreeEighthesIntegratorTest"
reference "org.apache.commons.math.stat.descriptive.moment.KurtosisTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.moment.KurtosisTest" "org.apache.commons.math.stat.descriptive.moment.Kurtosis"
reference "org.apache.commons.math.stat.descriptive.moment.KurtosisTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.KurtosisTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.moment.KurtosisTest" "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.KurtosisTest(1)"
reference "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.suite(0)" "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.class$org$apache$commons$math$stat$descriptive$moment$KurtosisTest"
call "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.suite(0)" "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.class$(1)"
call "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.moment.KurtosisTest" "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(0)"
contain "org.apache.commons.math.stat.descriptive.moment.KurtosisTest" "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.kurt"
contain "org.apache.commons.math.stat.descriptive.moment.KurtosisTest" "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(0)"
call "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.getResult(0)"
call "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.increment(1)"
call "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.assertFalse(1)"
contain "org.apache.commons.math.stat.descriptive.moment.KurtosisTest" "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.testNaN(0)"
contain "org.apache.commons.math.stat.descriptive.moment.KurtosisTest" "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.class$(1)"
reference "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.stat" "org.apache.commons.math.stat.descriptive.moment.Kurtosis"
contain "org.apache.commons.math.stat.descriptive.moment.KurtosisTest" "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.stat"
contain "org.apache.commons.math.stat.descriptive.moment.KurtosisTest" "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.class$org$apache$commons$math$stat$descriptive$moment$KurtosisTest"
reference "org.apache.commons.math.transform.FastFourierTransformerTest" "org.apache.commons.math.transform.FastFourierTransformer"
reference "org.apache.commons.math.transform.FastFourierTransformerTest" "org.apache.commons.math.complex.Complex"
reference "org.apache.commons.math.transform.FastFourierTransformerTest" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.transform.FastFourierTransformerTest" "junit.framework.TestCase"
reference "org.apache.commons.math.transform.FastFourierTransformerTest" "org.apache.commons.math.MathException"
call "org.apache.commons.math.transform.FastFourierTransformerTest.FastFourierTransformerTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.transform.FastFourierTransformerTest" "org.apache.commons.math.transform.FastFourierTransformerTest.FastFourierTransformerTest(0)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastFourierTransformer.FastFourierTransformer(0)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testAdHocData(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastFourierTransformer.transform(1)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testAdHocData(0)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastFourierTransformerTest.assertEquals(3)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testAdHocData(0)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastFourierTransformer.inversetransform(1)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastFourierTransformer.transform2(1)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastFourierTransformer.inversetransform2(1)"
contain "org.apache.commons.math.transform.FastFourierTransformerTest" "org.apache.commons.math.transform.FastFourierTransformerTest.testAdHocData(0)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testSinFunction(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testSinFunction(0)" "org.apache.commons.math.transform.FastFourierTransformer.FastFourierTransformer(0)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testSinFunction(0)" "org.apache.commons.math.transform.FastFourierTransformer.transform(4)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testSinFunction(0)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testSinFunction(0)" "org.apache.commons.math.transform.FastFourierTransformerTest.assertEquals(3)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testSinFunction(0)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testSinFunction(0)" "org.apache.commons.math.transform.FastFourierTransformer.inversetransform(4)"
contain "org.apache.commons.math.transform.FastFourierTransformerTest" "org.apache.commons.math.transform.FastFourierTransformerTest.testSinFunction(0)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testParameters(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testParameters(0)" "org.apache.commons.math.transform.FastFourierTransformer.FastFourierTransformer(0)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testParameters(0)" "org.apache.commons.math.transform.FastFourierTransformer.transform(4)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testParameters(0)" "org.apache.commons.math.transform.FastFourierTransformerTest.fail(1)"
contain "org.apache.commons.math.transform.FastFourierTransformerTest" "org.apache.commons.math.transform.FastFourierTransformerTest.testParameters(0)"
reference "org.apache.commons.math.analysis.BrentSolverTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.analysis.BrentSolver"
reference "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.analysis.SecantSolver"
reference "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.analysis.QuinticFunction"
reference "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.analysis.MonitoredFunction"
reference "org.apache.commons.math.analysis.BrentSolverTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.analysis.UnivariateRealSolver"
reference "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.analysis.UnivariateRealSolverUtils"
call "org.apache.commons.math.analysis.BrentSolverTest.BrentSolverTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.analysis.BrentSolverTest.BrentSolverTest(1)"
reference "org.apache.commons.math.analysis.BrentSolverTest.suite(0)" "org.apache.commons.math.analysis.BrentSolverTest.class$org$apache$commons$math$analysis$BrentSolverTest"
call "org.apache.commons.math.analysis.BrentSolverTest.suite(0)" "org.apache.commons.math.analysis.BrentSolverTest.class$(1)"
call "org.apache.commons.math.analysis.BrentSolverTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.analysis.BrentSolverTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.analysis.BrentSolverTest.suite(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.BrentSolver.BrentSolver(1)"
call "org.apache.commons.math.analysis.BrentSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
call "org.apache.commons.math.analysis.BrentSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.BrentSolverTest.assertEquals(3)"
call "org.apache.commons.math.analysis.BrentSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getIterationCount(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.BrentSolverTest.assertTrue(1)"
call "org.apache.commons.math.analysis.BrentSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.SecantSolver.SecantSolver(1)"
call "org.apache.commons.math.analysis.BrentSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getResult(0)"
contain "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.analysis.BrentSolverTest.testSinZero(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.BrentSolver.BrentSolver(1)"
call "org.apache.commons.math.analysis.BrentSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
call "org.apache.commons.math.analysis.BrentSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.BrentSolverTest.assertEquals(3)"
call "org.apache.commons.math.analysis.BrentSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getIterationCount(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.BrentSolverTest.assertTrue(1)"
call "org.apache.commons.math.analysis.BrentSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.SecantSolver.SecantSolver(1)"
call "org.apache.commons.math.analysis.BrentSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(3)"
contain "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.analysis.BrentSolverTest.testQuinticZero(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testBadEndpoints(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testBadEndpoints(0)" "org.apache.commons.math.analysis.BrentSolver.BrentSolver(1)"
call "org.apache.commons.math.analysis.BrentSolverTest.testBadEndpoints(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
call "org.apache.commons.math.analysis.BrentSolverTest.testBadEndpoints(0)" "org.apache.commons.math.analysis.BrentSolverTest.fail(1)"
contain "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.analysis.BrentSolverTest.testBadEndpoints(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testInitialGuess(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testInitialGuess(0)" "org.apache.commons.math.analysis.MonitoredFunction.MonitoredFunction(1)"
call "org.apache.commons.math.analysis.BrentSolverTest.testInitialGuess(0)" "org.apache.commons.math.analysis.BrentSolver.BrentSolver(1)"
call "org.apache.commons.math.analysis.BrentSolverTest.testInitialGuess(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
call "org.apache.commons.math.analysis.BrentSolverTest.testInitialGuess(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testInitialGuess(0)" "org.apache.commons.math.analysis.BrentSolverTest.assertEquals(3)"
call "org.apache.commons.math.analysis.BrentSolverTest.testInitialGuess(0)" "org.apache.commons.math.analysis.MonitoredFunction.getCallsCount(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testInitialGuess(0)" "org.apache.commons.math.analysis.BrentSolverTest.assertTrue(1)"
call "org.apache.commons.math.analysis.BrentSolverTest.testInitialGuess(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(3)"
call "org.apache.commons.math.analysis.BrentSolverTest.testInitialGuess(0)" "org.apache.commons.math.analysis.BrentSolverTest.fail(1)"
call "org.apache.commons.math.analysis.BrentSolverTest.testInitialGuess(0)" "org.apache.commons.math.analysis.MonitoredFunction.setCallsCount(1)"
call "org.apache.commons.math.analysis.BrentSolverTest.testInitialGuess(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getIterationCount(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testInitialGuess(0)" "org.apache.commons.math.analysis.BrentSolverTest.assertEquals(2)"
contain "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.analysis.BrentSolverTest.testInitialGuess(0)"
contain "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.analysis.BrentSolverTest.class$(1)"
contain "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.analysis.BrentSolverTest.class$org$apache$commons$math$analysis$BrentSolverTest"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest" "double[][]"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest" "org.apache.commons.math.stat.descriptive.moment.VectorialMean"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest" "org.apache.commons.math.DimensionMismatchException"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest" "double[]"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest" "junit.framework.TestCase"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.VectorialMeanTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.VectorialMeanTest(1)" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.points"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.VectorialMeanTest(1)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testMismatch(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.VectorialMean(1)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testMismatch(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.increment(1)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testMismatch(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.fail(1)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testMismatch(0)" "org.apache.commons.math.DimensionMismatchException.getDimension1(0)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testMismatch(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.assertEquals(2)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testMismatch(0)" "org.apache.commons.math.DimensionMismatchException.getDimension2(0)"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testMismatch(0)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testSimplistic(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.VectorialMean(1)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testSimplistic(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.increment(1)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testSimplistic(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.getResult(0)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testSimplistic(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testSimplistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testBasicStats(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.points"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testBasicStats(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.VectorialMean(1)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testBasicStats(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.increment(1)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testBasicStats(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.getN(0)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testBasicStats(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.assertEquals(2)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testBasicStats(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.getResult(0)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testBasicStats(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testBasicStats(0)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.setUp(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.points"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.setUp(0)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.tearDown(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.points"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.tearDown(0)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.suite(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.class$org$apache$commons$math$stat$descriptive$moment$VectorialMeanTest"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.suite(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.class$(1)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.suite(0)"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.class$(1)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.points" "double[][]"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.points"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.class$org$apache$commons$math$stat$descriptive$moment$VectorialMeanTest"
reference "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistributionImpl"
reference "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistribution"
reference "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest"
call "org.apache.commons.math.distribution.NormalDistributionTest.NormalDistributionTest(1)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.ContinuousDistributionAbstractTest(1)"
contain "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistributionTest.NormalDistributionTest(1)"
call "org.apache.commons.math.distribution.NormalDistributionTest.makeDistribution(0)" "org.apache.commons.math.distribution.NormalDistributionImpl.NormalDistributionImpl(2)"
contain "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistributionTest.makeDistribution(0)"
contain "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistributionTest.makeCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistributionTest.makeCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.setup(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.setup(0)" "org.apache.commons.math.distribution.NormalDistributionTest.setTolerance(1)"
contain "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistributionTest.setup(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.verifyQuantiles(0)" "org.apache.commons.math.distribution.NormalDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.verifyQuantiles(0)" "org.apache.commons.math.distribution.NormalDistribution.getMean(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.verifyQuantiles(0)" "org.apache.commons.math.distribution.NormalDistribution.getStandardDeviation(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.verifyQuantiles(0)" "org.apache.commons.math.distribution.NormalDistributionTest.setCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.NormalDistributionTest.verifyQuantiles(0)" "org.apache.commons.math.distribution.NormalDistributionTest.setCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.NormalDistributionTest.verifyQuantiles(0)" "org.apache.commons.math.distribution.NormalDistributionTest.verifyCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistributionTest.verifyQuantiles(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testQuantiles(0)" "org.apache.commons.math.distribution.NormalDistributionTest.verifyQuantiles(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testQuantiles(0)" "org.apache.commons.math.distribution.NormalDistributionImpl.NormalDistributionImpl(2)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testQuantiles(0)" "org.apache.commons.math.distribution.NormalDistributionTest.setDistribution(1)"
contain "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistributionTest.testQuantiles(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.NormalDistributionTest.setInverseCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.NormalDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.NormalDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilityExtremes(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testGetMean(0)" "org.apache.commons.math.distribution.NormalDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testGetMean(0)" "org.apache.commons.math.distribution.NormalDistribution.getMean(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testGetMean(0)" "org.apache.commons.math.distribution.NormalDistributionTest.assertEquals(3)"
contain "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistributionTest.testGetMean(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testSetMean(0)" "org.apache.commons.math.distribution.NormalDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testSetMean(0)" "org.apache.commons.math.distribution.NormalDistribution.setMean(1)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testSetMean(0)" "org.apache.commons.math.distribution.NormalDistributionTest.verifyQuantiles(0)"
contain "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistributionTest.testSetMean(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testGetStandardDeviation(0)" "org.apache.commons.math.distribution.NormalDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testGetStandardDeviation(0)" "org.apache.commons.math.distribution.NormalDistribution.getStandardDeviation(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testGetStandardDeviation(0)" "org.apache.commons.math.distribution.NormalDistributionTest.assertEquals(3)"
contain "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistributionTest.testGetStandardDeviation(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testSetStandardDeviation(0)" "org.apache.commons.math.distribution.NormalDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testSetStandardDeviation(0)" "org.apache.commons.math.distribution.NormalDistribution.setStandardDeviation(1)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testSetStandardDeviation(0)" "org.apache.commons.math.distribution.NormalDistribution.getStandardDeviation(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testSetStandardDeviation(0)" "org.apache.commons.math.distribution.NormalDistributionTest.assertEquals(3)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testSetStandardDeviation(0)" "org.apache.commons.math.distribution.NormalDistributionTest.verifyQuantiles(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testSetStandardDeviation(0)" "org.apache.commons.math.distribution.NormalDistributionTest.fail(1)"
contain "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistributionTest.testSetStandardDeviation(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(0)" "org.apache.commons.math.distribution.NormalDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(0)" "org.apache.commons.math.distribution.NormalDistribution.setMean(1)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(0)" "org.apache.commons.math.distribution.NormalDistribution.setStandardDeviation(1)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(0)" "org.apache.commons.math.distribution.NormalDistribution.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(0)" "org.apache.commons.math.distribution.NormalDistributionTest.assertTrue(1)"
contain "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(0)"
reference "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistributionImpl"
reference "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest"
reference "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistribution"
call "org.apache.commons.math.distribution.PoissonDistributionTest.PoissonDistributionTest(1)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.IntegerDistributionAbstractTest(1)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.PoissonDistributionTest(1)" "org.apache.commons.math.distribution.PoissonDistributionTest.setTolerance(1)"
contain "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistributionTest.PoissonDistributionTest(1)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.makeDistribution(0)" "org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(1)"
contain "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistributionTest.makeDistribution(0)"
contain "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistributionTest.makeDensityTestPoints(0)"
contain "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistributionTest.makeDensityTestValues(0)"
contain "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistributionTest.makeCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistributionTest.makeCumulativeTestValues(0)"
contain "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistributionTest.makeInverseCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistributionTest.makeInverseCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testNormalApproximateProbability(0)" "org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(1)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testNormalApproximateProbability(0)" "org.apache.commons.math.distribution.PoissonDistribution.normalApproximateProbability(1)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testNormalApproximateProbability(0)" "org.apache.commons.math.distribution.PoissonDistributionTest.assertEquals(3)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testNormalApproximateProbability(0)" "org.apache.commons.math.distribution.PoissonDistribution.setMean(1)"
contain "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistributionTest.testNormalApproximateProbability(0)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testDegenerateInverseCumulativeProbability(0)" "org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(1)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testDegenerateInverseCumulativeProbability(0)" "org.apache.commons.math.distribution.PoissonDistribution.inverseCumulativeProbability(1)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testDegenerateInverseCumulativeProbability(0)" "org.apache.commons.math.distribution.PoissonDistributionTest.assertEquals(2)"
contain "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistributionTest.testDegenerateInverseCumulativeProbability(0)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testMean(0)" "org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(1)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testMean(0)" "org.apache.commons.math.distribution.PoissonDistribution.setMean(1)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testMean(0)" "org.apache.commons.math.distribution.PoissonDistributionTest.fail(1)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testMean(0)" "org.apache.commons.math.distribution.PoissonDistribution.getMean(0)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testMean(0)" "org.apache.commons.math.distribution.PoissonDistributionTest.assertEquals(3)"
contain "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistributionTest.testMean(0)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testLargeMeanCumulativeProbability(0)" "org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(1)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testLargeMeanCumulativeProbability(0)" "org.apache.commons.math.distribution.PoissonDistribution.setMean(1)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testLargeMeanCumulativeProbability(0)" "org.apache.commons.math.distribution.PoissonDistribution.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testLargeMeanCumulativeProbability(0)" "org.apache.commons.math.MathException.getMessage(0)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testLargeMeanCumulativeProbability(0)" "org.apache.commons.math.distribution.PoissonDistributionTest.fail(1)"
contain "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistributionTest.testLargeMeanCumulativeProbability(0)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testLargeMeanInverseCumulativeProbability(0)" "org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(1)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testLargeMeanInverseCumulativeProbability(0)" "org.apache.commons.math.distribution.PoissonDistribution.setMean(1)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testLargeMeanInverseCumulativeProbability(0)" "org.apache.commons.math.distribution.PoissonDistribution.inverseCumulativeProbability(1)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testLargeMeanInverseCumulativeProbability(0)" "org.apache.commons.math.MathException.getMessage(0)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testLargeMeanInverseCumulativeProbability(0)" "org.apache.commons.math.distribution.PoissonDistributionTest.fail(1)"
contain "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistributionTest.testLargeMeanInverseCumulativeProbability(0)"
contain "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistributionTest.DEFAULT_TEST_POISSON_PARAMETER"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement" "org.apache.commons.math.estimation.WeightedMeasurementTest"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.MyMeasurement(2)" "org.apache.commons.math.estimation.WeightedMeasurement.WeightedMeasurement(2)"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.MyMeasurement(2)" "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.testInstance"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement" "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.MyMeasurement(2)"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.getTheoreticalValue(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.testInstance"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.getTheoreticalValue(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.access$000(1)"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement" "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.getTheoreticalValue(0)"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.getPartial(1)" "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.testInstance"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.getPartial(1)" "org.apache.commons.math.estimation.WeightedMeasurementTest.access$100(2)"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement" "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.getPartial(1)"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.testInstance" "org.apache.commons.math.estimation.WeightedMeasurementTest"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement" "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.testInstance"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement" "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.serialVersionUID"
reference "org.apache.commons.math.analysis.NewtonSolverTest" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.analysis.NewtonSolverTest" "org.apache.commons.math.analysis.NewtonSolver"
reference "org.apache.commons.math.analysis.NewtonSolverTest" "org.apache.commons.math.analysis.QuinticFunction"
reference "org.apache.commons.math.analysis.NewtonSolverTest" "org.apache.commons.math.analysis.BisectionSolver"
reference "org.apache.commons.math.analysis.NewtonSolverTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.NewtonSolverTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.analysis.NewtonSolverTest" "org.apache.commons.math.analysis.UnivariateRealSolver"
reference "org.apache.commons.math.analysis.NewtonSolverTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.analysis.NewtonSolverTest.NewtonSolverTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.analysis.NewtonSolverTest" "org.apache.commons.math.analysis.NewtonSolverTest.NewtonSolverTest(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.NewtonSolver.NewtonSolver(1)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.NewtonSolverTest.assertEquals(3)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getResult(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getIterationCount(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.NewtonSolverTest.assertTrue(1)"
contain "org.apache.commons.math.analysis.NewtonSolverTest" "org.apache.commons.math.analysis.NewtonSolverTest.testSinZero(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(1)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.NewtonSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.NewtonSolverTest" "org.apache.commons.math.analysis.NewtonSolverTest.testQuinticZero(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.NewtonSolver.NewtonSolver(1)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSerialization(0)" "org.apache.commons.math.TestUtils.serializeAndRecover(1)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.NewtonSolver.solve(2)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.NewtonSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.NewtonSolverTest.assertEquals(3)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.NewtonSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.NewtonSolver.setRelativeAccuracy(1)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.NewtonSolver.resetRelativeAccuracy(0)"
contain "org.apache.commons.math.analysis.NewtonSolverTest" "org.apache.commons.math.analysis.NewtonSolverTest.testSerialization(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.LinearMeasurement(3)" "org.apache.commons.math.estimation.WeightedMeasurement.WeightedMeasurement(2)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.LinearMeasurement(3)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.factors"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.LinearMeasurement(3)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.parameters"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.getTheoreticalValue(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.factors"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.getTheoreticalValue(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.parameters"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.getTheoreticalValue(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.getTheoreticalValue(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.getPartial(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.parameters"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.getPartial(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.factors"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.getPartial(1)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.getParameters(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.parameters"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.getParameters(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.factors" "double[]"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.factors"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.parameters" "org.apache.commons.math.estimation.EstimatedParameter[]"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.parameters"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest" "org.apache.commons.math.stat.descriptive.moment.Mean"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest" "junit.framework.TestCase"
call "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.AbstractUnivariateStatisticTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.AbstractUnivariateStatisticTest(1)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testArray"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.AbstractUnivariateStatisticTest(1)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.nullArray"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.AbstractUnivariateStatisticTest(1)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.singletonArray"
call "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.AbstractUnivariateStatisticTest(1)" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.AbstractUnivariateStatisticTest(1)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testStatistic"
contain "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.AbstractUnivariateStatisticTest(1)"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.suite(0)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.class$org$apache$commons$math$stat$descriptive$AbstractUnivariateStatisticTest"
call "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.suite(0)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.class$(1)"
call "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.suite(0)"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestPositive(0)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testStatistic"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestPositive(0)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testArray"
call "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestPositive(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.test(3)"
call "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestPositive(0)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.assertTrue(1)"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestPositive(0)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.singletonArray"
contain "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestPositive(0)"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestNegative(0)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testStatistic"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestNegative(0)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.singletonArray"
call "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestNegative(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.test(3)"
call "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestNegative(0)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.assertFalse(1)"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestNegative(0)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testArray"
call "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestNegative(0)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.fail(1)"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestNegative(0)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.nullArray"
contain "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestNegative(0)"
contain "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.class$(1)"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testArray" "double[]"
contain "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testArray"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.nullArray" "double[]"
contain "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.nullArray"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.singletonArray" "double[]"
contain "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.singletonArray"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testStatistic" "org.apache.commons.math.stat.descriptive.moment.Mean"
contain "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testStatistic"
contain "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.class$org$apache$commons$math$stat$descriptive$AbstractUnivariateStatisticTest"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest" "junit.framework.TestCase"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurement"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.WeightedMeasurementTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.WeightedMeasurementTest(1)" "org.apache.commons.math.estimation.WeightedMeasurementTest.p1"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.WeightedMeasurementTest(1)" "org.apache.commons.math.estimation.WeightedMeasurementTest.p2"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.WeightedMeasurementTest(1)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testConstruction(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.theoretical(0)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testConstruction(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.MyMeasurement(2)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testConstruction(0)" "org.apache.commons.math.estimation.WeightedMeasurement.getWeight(0)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testConstruction(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.checkValue(2)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testConstruction(0)" "org.apache.commons.math.estimation.WeightedMeasurement.getMeasuredValue(0)"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.testConstruction(0)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testIgnored(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.theoretical(0)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testIgnored(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.MyMeasurement(2)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testIgnored(0)" "org.apache.commons.math.estimation.WeightedMeasurement.isIgnored(0)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testIgnored(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.assertTrue(1)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testIgnored(0)" "org.apache.commons.math.estimation.WeightedMeasurement.setIgnored(1)"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.testIgnored(0)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testTheory(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.theoretical(0)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testTheory(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.MyMeasurement(2)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testTheory(0)" "org.apache.commons.math.estimation.WeightedMeasurement.getTheoreticalValue(0)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testTheory(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.checkValue(2)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testTheory(0)" "org.apache.commons.math.estimation.WeightedMeasurement.getResidual(0)"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.testTheory(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.p1"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testTheory(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testTheory(0)" "org.apache.commons.math.estimation.WeightedMeasurement.getPartial(1)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testTheory(0)" "org.apache.commons.math.estimation.EstimatedParameter.setEstimate(1)"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.testTheory(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.p2"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.testTheory(0)"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.suite(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.class$org$apache$commons$math$estimation$WeightedMeasurementTest"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.suite(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.class$(1)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.suite(0)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.setUp(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.setUp(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.p1"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.setUp(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.p2"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.setUp(0)"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.tearDown(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.p1"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.tearDown(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.p2"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.tearDown(0)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.checkValue(2)" "org.apache.commons.math.estimation.WeightedMeasurementTest.assertTrue(1)"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.checkValue(2)"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.theoretical(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.p1"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.theoretical(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.theoretical(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.p2"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.theoretical(0)"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.partial(1)" "org.apache.commons.math.estimation.WeightedMeasurementTest.p1"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.partial(1)" "org.apache.commons.math.estimation.WeightedMeasurementTest.p2"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.partial(1)"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.class$(1)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.access$000(1)" "org.apache.commons.math.estimation.WeightedMeasurementTest.theoretical(0)"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.access$000(1)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.access$100(2)" "org.apache.commons.math.estimation.WeightedMeasurementTest.partial(1)"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.access$100(2)"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.p1" "org.apache.commons.math.estimation.EstimatedParameter"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.p1"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.p2" "org.apache.commons.math.estimation.EstimatedParameter"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.p2"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.class$org$apache$commons$math$estimation$WeightedMeasurementTest"
reference "org.apache.commons.math.stat.inference.ChiSquareTestTest" "org.apache.commons.math.stat.inference.ChiSquareTestImpl"
reference "org.apache.commons.math.stat.inference.ChiSquareTestTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.inference.ChiSquareTestTest" "long[]"
reference "org.apache.commons.math.stat.inference.ChiSquareTestTest" "junit.framework.TestCase"
reference "org.apache.commons.math.stat.inference.ChiSquareTestTest" "org.apache.commons.math.stat.inference.ChiSquareTest"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.ChiSquareTestTest(1)" "junit.framework.TestCase.TestCase(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.ChiSquareTestTest(1)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.ChiSquareTestImpl(0)"
reference "org.apache.commons.math.stat.inference.ChiSquareTestTest.ChiSquareTestTest(1)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testStatistic"
contain "org.apache.commons.math.stat.inference.ChiSquareTestTest" "org.apache.commons.math.stat.inference.ChiSquareTestTest.ChiSquareTestTest(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestTest" "org.apache.commons.math.stat.inference.ChiSquareTestTest.setUp(0)"
reference "org.apache.commons.math.stat.inference.ChiSquareTestTest.suite(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.class$org$apache$commons$math$stat$inference$ChiSquareTestTest"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.suite(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.class$(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestTest" "org.apache.commons.math.stat.inference.ChiSquareTestTest.suite(0)"
reference "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquare(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testStatistic"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquare(0)" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquare(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquare(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquare(0)" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareTest(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquare(0)" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareTest(3)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquare(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.assertTrue(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquare(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.fail(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestTest" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquare(0)"
reference "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareIndependence(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testStatistic"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareIndependence(0)" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquare(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareIndependence(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareIndependence(0)" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareTest(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareIndependence(0)" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareTest(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareIndependence(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.assertTrue(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareIndependence(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.fail(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestTest" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareIndependence(0)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareLargeTestStatistic(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.ChiSquareTestImpl(0)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareLargeTestStatistic(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareLargeTestStatistic(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.assertEquals(4)"
reference "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareLargeTestStatistic(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testStatistic"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareLargeTestStatistic(0)" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquare(2)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestTest" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareLargeTestStatistic(0)"
reference "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareZeroCount(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testStatistic"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareZeroCount(0)" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquare(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareZeroCount(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareZeroCount(0)" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareTest(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestTest" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareZeroCount(0)"
reference "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonEqualCounts(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testStatistic"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonEqualCounts(0)" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareTestDataSetsComparison(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonEqualCounts(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonEqualCounts(0)" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareDataSetsComparison(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonEqualCounts(0)" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareTestDataSetsComparison(3)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonEqualCounts(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.assertFalse(2)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestTest" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonEqualCounts(0)"
reference "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonUnEqualCounts(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testStatistic"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonUnEqualCounts(0)" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareTestDataSetsComparison(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonUnEqualCounts(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonUnEqualCounts(0)" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareDataSetsComparison(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonUnEqualCounts(0)" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareTestDataSetsComparison(3)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonUnEqualCounts(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.assertTrue(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonUnEqualCounts(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.assertFalse(2)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestTest" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonUnEqualCounts(0)"
reference "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonBadCounts(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testStatistic"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonBadCounts(0)" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareTestDataSetsComparison(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonBadCounts(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.fail(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestTest" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonBadCounts(0)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestTest" "org.apache.commons.math.stat.inference.ChiSquareTestTest.class$(1)"
reference "org.apache.commons.math.stat.inference.ChiSquareTestTest.testStatistic" "org.apache.commons.math.stat.inference.ChiSquareTest"
contain "org.apache.commons.math.stat.inference.ChiSquareTestTest" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testStatistic"
contain "org.apache.commons.math.stat.inference.ChiSquareTestTest" "org.apache.commons.math.stat.inference.ChiSquareTestTest.class$org$apache$commons$math$stat$inference$ChiSquareTestTest"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.StepHandler"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.StepInterpolator"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.TestProblem3"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler" "junit.framework.Assert"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler.KeplerStepHandler(1)" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler.pb"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler.KeplerStepHandler(1)" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler.reset(0)"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler.KeplerStepHandler(1)"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler.reset(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler.nbSteps"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler.reset(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler.maxError"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler.reset(0)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler.handleStep(2)" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler.nbSteps"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getPreviousTime(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getInterpolatedState(0)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler.handleStep(2)" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler.pb"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getInterpolatedTime(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler.handleStep(2)" "org.apache.commons.math.ode.TestProblem3.computeTheoreticalState(1)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler.handleStep(2)" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler.maxError"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler.handleStep(2)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler.handleStep(2)"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler.nbSteps"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler.maxError"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler.pb" "org.apache.commons.math.ode.TestProblem3"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.KeplerStepHandler.pb"
reference "org.apache.commons.math.linear.MatrixIndexExceptionTest" "org.apache.commons.math.linear.MatrixIndexException"
reference "org.apache.commons.math.linear.MatrixIndexExceptionTest" "junit.framework.TestCase"
call "org.apache.commons.math.linear.MatrixIndexExceptionTest.MatrixIndexExceptionTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.linear.MatrixIndexExceptionTest" "org.apache.commons.math.linear.MatrixIndexExceptionTest.MatrixIndexExceptionTest(0)"
call "org.apache.commons.math.linear.MatrixIndexExceptionTest.testConstructorMessage(0)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(1)"
call "org.apache.commons.math.linear.MatrixIndexExceptionTest.testConstructorMessage(0)" "org.apache.commons.math.linear.MatrixIndexException.getMessage(0)"
call "org.apache.commons.math.linear.MatrixIndexExceptionTest.testConstructorMessage(0)" "org.apache.commons.math.linear.MatrixIndexExceptionTest.assertEquals(2)"
contain "org.apache.commons.math.linear.MatrixIndexExceptionTest" "org.apache.commons.math.linear.MatrixIndexExceptionTest.testConstructorMessage(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.Fraction"
reference "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.ProperFractionFormat"
reference "org.apache.commons.math.fraction.FractionFormatTest" "junit.framework.TestCase"
reference "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.FractionFormatTest(0)" "junit.framework.TestCase.TestCase(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest.FractionFormatTest(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
reference "org.apache.commons.math.fraction.FractionFormatTest.FractionFormatTest(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.FractionFormatTest(0)"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.getLocale(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.setUp(0)" "org.apache.commons.math.fraction.FractionFormatTest.getLocale(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.setUp(0)" "org.apache.commons.math.fraction.FractionFormat.getProperInstance(1)"
reference "org.apache.commons.math.fraction.FractionFormatTest.setUp(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.setUp(0)" "org.apache.commons.math.fraction.FractionFormat.getImproperInstance(1)"
reference "org.apache.commons.math.fraction.FractionFormatTest.setUp(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.setUp(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testFormat(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testFormat(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testFormat(0)" "org.apache.commons.math.fraction.FractionFormat.format(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testFormat(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertEquals(2)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testFormat(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testFormat(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testFormatNegative(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testFormatNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testFormatNegative(0)" "org.apache.commons.math.fraction.FractionFormat.format(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testFormatNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertEquals(2)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testFormatNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testFormatNegative(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testFormatZero(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testFormatZero(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testFormatZero(0)" "org.apache.commons.math.fraction.FractionFormat.format(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testFormatZero(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertEquals(2)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testFormatZero(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testFormatZero(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testFormatImproper(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testFormatImproper(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testFormatImproper(0)" "org.apache.commons.math.fraction.FractionFormat.format(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testFormatImproper(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertEquals(2)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testFormatImproper(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testFormatImproper(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testFormatImproperNegative(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testFormatImproperNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testFormatImproperNegative(0)" "org.apache.commons.math.fraction.FractionFormat.format(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testFormatImproperNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertEquals(2)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testFormatImproperNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testFormatImproperNegative(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testParse(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testParse(0)" "org.apache.commons.math.fraction.FractionFormat.parse(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParse(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertNotNull(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParse(0)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParse(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertEquals(2)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParse(0)" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testParse(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testParse(0)" "org.apache.commons.math.fraction.FractionFormatTest.fail(1)"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testParse(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testParseInteger(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseInteger(0)" "org.apache.commons.math.fraction.FractionFormat.parse(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseInteger(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertNotNull(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseInteger(0)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseInteger(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertEquals(2)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseInteger(0)" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseInteger(0)" "org.apache.commons.math.fraction.FractionFormatTest.fail(1)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testParseInteger(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testParseInteger(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testParseInvalid(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseInvalid(0)" "org.apache.commons.math.fraction.FractionFormat.parse(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseInvalid(0)" "org.apache.commons.math.fraction.FractionFormatTest.fail(1)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testParseInvalid(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testParseInvalid(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testParseInvalidDenominator(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseInvalidDenominator(0)" "org.apache.commons.math.fraction.FractionFormat.parse(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseInvalidDenominator(0)" "org.apache.commons.math.fraction.FractionFormatTest.fail(1)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testParseInvalidDenominator(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testParseInvalidDenominator(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testParseNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseNegative(0)" "org.apache.commons.math.fraction.FractionFormat.parse(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertNotNull(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseNegative(0)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertEquals(2)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseNegative(0)" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testParseNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.fail(1)"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testParseNegative(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testParseProper(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseProper(0)" "org.apache.commons.math.fraction.FractionFormat.parse(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseProper(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertNotNull(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseProper(0)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseProper(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertEquals(2)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseProper(0)" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseProper(0)" "org.apache.commons.math.fraction.FractionFormatTest.fail(1)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testParseProper(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testParseProper(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testParseProperNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseProperNegative(0)" "org.apache.commons.math.fraction.FractionFormat.parse(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseProperNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertNotNull(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseProperNegative(0)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseProperNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertEquals(2)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseProperNegative(0)" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseProperNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.fail(1)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testParseProperNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testParseProperNegative(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testParseProperInvalidMinus(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseProperInvalidMinus(0)" "org.apache.commons.math.fraction.FractionFormat.parse(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseProperInvalidMinus(0)" "org.apache.commons.math.fraction.FractionFormatTest.fail(1)"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testParseProperInvalidMinus(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testNumeratorFormat(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testNumeratorFormat(0)" "org.apache.commons.math.fraction.FractionFormat.getNumeratorFormat(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testNumeratorFormat(0)" "org.apache.commons.math.fraction.FractionFormat.setNumeratorFormat(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testNumeratorFormat(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertEquals(2)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testNumeratorFormat(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testNumeratorFormat(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testDenominatorFormat(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testDenominatorFormat(0)" "org.apache.commons.math.fraction.FractionFormat.getDenominatorFormat(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testDenominatorFormat(0)" "org.apache.commons.math.fraction.FractionFormat.setDenominatorFormat(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testDenominatorFormat(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertEquals(2)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testDenominatorFormat(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testDenominatorFormat(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testWholeFormat(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testWholeFormat(0)" "org.apache.commons.math.fraction.ProperFractionFormat.getWholeFormat(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testWholeFormat(0)" "org.apache.commons.math.fraction.ProperFractionFormat.setWholeFormat(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testWholeFormat(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertEquals(2)"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testWholeFormat(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest.properFormat" "org.apache.commons.math.fraction.FractionFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
reference "org.apache.commons.math.fraction.FractionFormatTest.improperFormat" "org.apache.commons.math.fraction.FractionFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.Complex"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormat"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest" "junit.framework.TestCase"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.ComplexFormatAbstractTest(0)" "junit.framework.TestCase.TestCase(0)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.ComplexFormatAbstractTest(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.ComplexFormatAbstractTest(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormatJ"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.ComplexFormatAbstractTest(0)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getLocale(0)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.setUp(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getLocale(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.setUp(0)" "org.apache.commons.math.complex.ComplexFormat.getInstance(1)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.setUp(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.setUp(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormatJ"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.setUp(0)" "org.apache.commons.math.complex.ComplexFormat.setImaginaryCharacter(1)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.setUp(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleNoDecimals(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleNoDecimals(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleNoDecimals(0)" "org.apache.commons.math.complex.ComplexFormat.format(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleNoDecimals(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleNoDecimals(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleWithDecimals(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleWithDecimals(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleWithDecimals(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleWithDecimals(0)" "org.apache.commons.math.complex.ComplexFormat.format(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleWithDecimals(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleWithDecimals(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.complex.ComplexFormat.format(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleWithDecimalsTrunc(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeReal(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeReal(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeReal(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeReal(0)" "org.apache.commons.math.complex.ComplexFormat.format(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeReal(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeReal(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeImaginary(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeImaginary(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeImaginary(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeImaginary(0)" "org.apache.commons.math.complex.ComplexFormat.format(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeImaginary(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeImaginary(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeBoth(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeBoth(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeBoth(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeBoth(0)" "org.apache.commons.math.complex.ComplexFormat.format(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeBoth(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeBoth(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testZeroReal(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testZeroReal(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testZeroReal(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testZeroReal(0)" "org.apache.commons.math.complex.ComplexFormat.format(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testZeroReal(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testZeroReal(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testZeroImaginary(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testZeroImaginary(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testZeroImaginary(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testZeroImaginary(0)" "org.apache.commons.math.complex.ComplexFormat.format(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testZeroImaginary(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testZeroImaginary(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testDifferentImaginaryChar(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testDifferentImaginaryChar(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormatJ"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testDifferentImaginaryChar(0)" "org.apache.commons.math.complex.ComplexFormat.format(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testDifferentImaginaryChar(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testDifferentImaginaryChar(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testStaticFormatComplex(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getLocale(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testStaticFormatComplex(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testStaticFormatComplex(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testStaticFormatComplex(0)" "org.apache.commons.math.complex.ComplexFormat.formatComplex(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testStaticFormatComplex(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testStaticFormatComplex(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNan(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNan(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNan(0)" "org.apache.commons.math.complex.ComplexFormat.format(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNan(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNan(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testPositiveInfinity(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testPositiveInfinity(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testPositiveInfinity(0)" "org.apache.commons.math.complex.ComplexFormat.format(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testPositiveInfinity(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testPositiveInfinity(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeInfinity(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeInfinity(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeInfinity(0)" "org.apache.commons.math.complex.ComplexFormat.format(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeInfinity(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeInfinity(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleNoDecimals(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleNoDecimals(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleNoDecimals(0)" "org.apache.commons.math.complex.ComplexFormat.parseObject(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleNoDecimals(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleNoDecimals(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleNoDecimals(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimals(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimals(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimals(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimals(0)" "org.apache.commons.math.complex.ComplexFormat.parseObject(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimals(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimals(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimals(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.complex.ComplexFormat.parseObject(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimalsTrunc(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeReal(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeReal(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeReal(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeReal(0)" "org.apache.commons.math.complex.ComplexFormat.parseObject(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeReal(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeReal(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeReal(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeImaginary(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeImaginary(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeImaginary(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeImaginary(0)" "org.apache.commons.math.complex.ComplexFormat.parseObject(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeImaginary(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeImaginary(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeImaginary(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeBoth(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeBoth(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeBoth(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeBoth(0)" "org.apache.commons.math.complex.ComplexFormat.parseObject(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeBoth(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeBoth(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeBoth(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseZeroReal(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseZeroReal(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseZeroReal(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseZeroReal(0)" "org.apache.commons.math.complex.ComplexFormat.parseObject(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseZeroReal(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseZeroReal(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseZeroReal(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseZeroImaginary(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseZeroImaginary(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseZeroImaginary(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseZeroImaginary(0)" "org.apache.commons.math.complex.ComplexFormat.parseObject(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseZeroImaginary(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseZeroImaginary(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseZeroImaginary(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseDifferentImaginaryChar(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseDifferentImaginaryChar(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseDifferentImaginaryChar(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormatJ"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseDifferentImaginaryChar(0)" "org.apache.commons.math.complex.ComplexFormat.parseObject(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseDifferentImaginaryChar(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseDifferentImaginaryChar(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseDifferentImaginaryChar(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNan(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNan(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNan(0)" "org.apache.commons.math.complex.ComplexFormat.parseObject(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNan(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNan(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNan(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParsePositiveInfinity(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParsePositiveInfinity(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParsePositiveInfinity(0)" "org.apache.commons.math.complex.ComplexFormat.parseObject(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParsePositiveInfinity(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParsePositiveInfinity(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParsePositiveInfinity(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testPaseNegativeInfinity(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testPaseNegativeInfinity(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testPaseNegativeInfinity(0)" "org.apache.commons.math.complex.ComplexFormat.parseObject(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testPaseNegativeInfinity(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testPaseNegativeInfinity(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testPaseNegativeInfinity(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testConstructorSingleFormat(0)" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testConstructorSingleFormat(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertNotNull(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testConstructorSingleFormat(0)" "org.apache.commons.math.complex.ComplexFormat.getRealFormat(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testConstructorSingleFormat(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testConstructorSingleFormat(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testGetImaginaryFormat(0)" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testGetImaginaryFormat(0)" "org.apache.commons.math.complex.ComplexFormat.getImaginaryFormat(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testGetImaginaryFormat(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertNotSame(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testGetImaginaryFormat(0)" "org.apache.commons.math.complex.ComplexFormat.setImaginaryFormat(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testGetImaginaryFormat(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertSame(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testGetImaginaryFormat(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetImaginaryFormatNull(0)" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetImaginaryFormatNull(0)" "org.apache.commons.math.complex.ComplexFormat.setImaginaryFormat(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetImaginaryFormatNull(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(0)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetImaginaryFormatNull(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetRealFormatNull(0)" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetRealFormatNull(0)" "org.apache.commons.math.complex.ComplexFormat.setRealFormat(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetRealFormatNull(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(0)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetRealFormatNull(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testGetRealFormat(0)" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testGetRealFormat(0)" "org.apache.commons.math.complex.ComplexFormat.getRealFormat(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testGetRealFormat(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertNotSame(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testGetRealFormat(0)" "org.apache.commons.math.complex.ComplexFormat.setRealFormat(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testGetRealFormat(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertSame(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testGetRealFormat(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetImaginaryCharacterNull(0)" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetImaginaryCharacterNull(0)" "org.apache.commons.math.complex.ComplexFormat.setImaginaryCharacter(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetImaginaryCharacterNull(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(0)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetImaginaryCharacterNull(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetImaginaryCharacterEmpty(0)" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetImaginaryCharacterEmpty(0)" "org.apache.commons.math.complex.ComplexFormat.setImaginaryCharacter(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetImaginaryCharacterEmpty(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(0)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetImaginaryCharacterEmpty(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testFormatNumber(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getLocale(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testFormatNumber(0)" "org.apache.commons.math.complex.ComplexFormat.getInstance(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testFormatNumber(0)" "org.apache.commons.math.complex.ComplexFormat.format(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testFormatNumber(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testFormatNumber(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testFormatNumber(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testFormatObject(0)" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testFormatObject(0)" "org.apache.commons.math.complex.ComplexFormat.format(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testFormatObject(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(0)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testFormatObject(0)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat" "org.apache.commons.math.complex.ComplexFormat"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormatJ" "org.apache.commons.math.complex.ComplexFormat"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormatJ"
reference "org.apache.commons.math.analysis.Expm1Function" "org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction"
reference "org.apache.commons.math.analysis.Expm1Function" "org.apache.commons.math.FunctionEvaluationException"
contain "org.apache.commons.math.analysis.Expm1Function" "org.apache.commons.math.analysis.Expm1Function.Expm1Function(0)"
contain "org.apache.commons.math.analysis.Expm1Function" "org.apache.commons.math.analysis.Expm1Function.value(1)"
call "org.apache.commons.math.analysis.Expm1Function.derivative(0)" "org.apache.commons.math.analysis.Expm1Function.1.{...}"
contain "org.apache.commons.math.analysis.Expm1Function" "org.apache.commons.math.analysis.Expm1Function.derivative(0)"
reference "org.apache.commons.math.distribution.PascalDistributionTest" "org.apache.commons.math.distribution.PascalDistributionImpl"
reference "org.apache.commons.math.distribution.PascalDistributionTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest"
call "org.apache.commons.math.distribution.PascalDistributionTest.PascalDistributionTest(1)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.IntegerDistributionAbstractTest(1)"
contain "org.apache.commons.math.distribution.PascalDistributionTest" "org.apache.commons.math.distribution.PascalDistributionTest.PascalDistributionTest(1)"
call "org.apache.commons.math.distribution.PascalDistributionTest.makeDistribution(0)" "org.apache.commons.math.distribution.PascalDistributionImpl.PascalDistributionImpl(2)"
contain "org.apache.commons.math.distribution.PascalDistributionTest" "org.apache.commons.math.distribution.PascalDistributionTest.makeDistribution(0)"
contain "org.apache.commons.math.distribution.PascalDistributionTest" "org.apache.commons.math.distribution.PascalDistributionTest.makeDensityTestPoints(0)"
contain "org.apache.commons.math.distribution.PascalDistributionTest" "org.apache.commons.math.distribution.PascalDistributionTest.makeDensityTestValues(0)"
call "org.apache.commons.math.distribution.PascalDistributionTest.makeCumulativeTestPoints(0)" "org.apache.commons.math.distribution.PascalDistributionTest.makeDensityTestPoints(0)"
contain "org.apache.commons.math.distribution.PascalDistributionTest" "org.apache.commons.math.distribution.PascalDistributionTest.makeCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.PascalDistributionTest" "org.apache.commons.math.distribution.PascalDistributionTest.makeCumulativeTestValues(0)"
contain "org.apache.commons.math.distribution.PascalDistributionTest" "org.apache.commons.math.distribution.PascalDistributionTest.makeInverseCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.PascalDistributionTest" "org.apache.commons.math.distribution.PascalDistributionTest.makeInverseCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.PascalDistributionImpl.PascalDistributionImpl(2)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.PascalDistributionTest.setDistribution(1)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.PascalDistributionTest.setCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.PascalDistributionTest.setCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.PascalDistributionTest.setDensityTestPoints(1)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.PascalDistributionTest.setDensityTestValues(1)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.PascalDistributionTest.setInverseCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.PascalDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.PascalDistributionTest.verifyDensities(0)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.PascalDistributionTest.verifyCumulativeProbabilities(0)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.PascalDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.PascalDistributionTest" "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate0(0)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.PascalDistributionImpl.PascalDistributionImpl(2)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.PascalDistributionTest.setDistribution(1)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.PascalDistributionTest.setCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.PascalDistributionTest.setCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.PascalDistributionTest.setDensityTestPoints(1)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.PascalDistributionTest.setDensityTestValues(1)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.PascalDistributionTest.setInverseCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.PascalDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.PascalDistributionTest.verifyDensities(0)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.PascalDistributionTest.verifyCumulativeProbabilities(0)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.PascalDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.PascalDistributionTest" "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate1(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.WeightedMeasurement[]"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.EstimationProblem"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.Circle(2)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.Circle(2)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.cx"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.Circle(2)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.cy"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.Circle(2)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.points"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.Circle(2)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.addPoint(2)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.points"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.addPoint(2)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.PointModel(3)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.addPoint(2)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getM(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.points"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getM(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getMeasurements(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.points"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getMeasurements(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getAllParameters(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.cx"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getAllParameters(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.cy"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getAllParameters(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getUnboundParameters(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.cx"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getUnboundParameters(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.cy"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getUnboundParameters(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getPartialRadiusX(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.points"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getPartialRadiusX(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiX(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getPartialRadiusX(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getPartialRadiusY(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.points"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getPartialRadiusY(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiY(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getPartialRadiusY(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getRadius(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.points"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getRadius(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getCenterDistance(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getRadius(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getX(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.cx"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getX(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getX(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getY(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.cy"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getY(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getY(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.access$000(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.cx"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.access$000(1)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.access$100(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.cy"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.access$100(1)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.cx" "org.apache.commons.math.estimation.EstimatedParameter"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.cx"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.cy" "org.apache.commons.math.estimation.EstimatedParameter"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.cy"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.points"
reference "org.apache.commons.math.ode.GillStepInterpolatorTest" "org.apache.commons.math.ode.TestProblem3"
reference "org.apache.commons.math.ode.GillStepInterpolatorTest" "org.apache.commons.math.ode.GillIntegrator"
reference "org.apache.commons.math.ode.GillStepInterpolatorTest" "org.apache.commons.math.ode.ContinuousOutputModel"
reference "org.apache.commons.math.ode.GillStepInterpolatorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.GillStepInterpolatorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.GillStepInterpolatorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.GillStepInterpolatorTest" "org.apache.commons.math.ode.IntegratorException"
call "org.apache.commons.math.ode.GillStepInterpolatorTest.GillStepInterpolatorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.GillStepInterpolatorTest" "org.apache.commons.math.ode.GillStepInterpolatorTest.GillStepInterpolatorTest(1)"
call "org.apache.commons.math.ode.GillStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.GillStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.GillStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.GillStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.GillIntegrator.GillIntegrator(1)"
call "org.apache.commons.math.ode.GillStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.ContinuousOutputModel(0)"
call "org.apache.commons.math.ode.GillStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.GillIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.GillStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.GillStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.GillStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.GillIntegrator.integrate(5)"
call "org.apache.commons.math.ode.GillStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.GillIntegrator.getStepHandler(0)"
call "org.apache.commons.math.ode.GillStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.GillStepInterpolatorTest.assertTrue(1)"
call "org.apache.commons.math.ode.GillStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.GillStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState(0)"
call "org.apache.commons.math.ode.GillStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.computeTheoreticalState(1)"
contain "org.apache.commons.math.ode.GillStepInterpolatorTest" "org.apache.commons.math.ode.GillStepInterpolatorTest.testSerialization(0)"
reference "org.apache.commons.math.ode.GillStepInterpolatorTest.suite(0)" "org.apache.commons.math.ode.GillStepInterpolatorTest.class$org$apache$commons$math$ode$GillStepInterpolatorTest"
call "org.apache.commons.math.ode.GillStepInterpolatorTest.suite(0)" "org.apache.commons.math.ode.GillStepInterpolatorTest.class$(1)"
call "org.apache.commons.math.ode.GillStepInterpolatorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.GillStepInterpolatorTest" "org.apache.commons.math.ode.GillStepInterpolatorTest.suite(0)"
contain "org.apache.commons.math.ode.GillStepInterpolatorTest" "org.apache.commons.math.ode.GillStepInterpolatorTest.class$(1)"
contain "org.apache.commons.math.ode.GillStepInterpolatorTest" "org.apache.commons.math.ode.GillStepInterpolatorTest.class$org$apache$commons$math$ode$GillStepInterpolatorTest"
reference "org.apache.commons.math.random.TestRandomGenerator" "org.apache.commons.math.random.AbstractRandomGenerator"
call "org.apache.commons.math.random.TestRandomGenerator.TestRandomGenerator(0)" "org.apache.commons.math.random.AbstractRandomGenerator.AbstractRandomGenerator(0)"
reference "org.apache.commons.math.random.TestRandomGenerator.TestRandomGenerator(0)" "org.apache.commons.math.random.TestRandomGenerator.random"
contain "org.apache.commons.math.random.TestRandomGenerator" "org.apache.commons.math.random.TestRandomGenerator.TestRandomGenerator(0)"
call "org.apache.commons.math.random.TestRandomGenerator.setSeed(1)" "org.apache.commons.math.random.TestRandomGenerator.clear(0)"
reference "org.apache.commons.math.random.TestRandomGenerator.setSeed(1)" "org.apache.commons.math.random.TestRandomGenerator.random"
contain "org.apache.commons.math.random.TestRandomGenerator" "org.apache.commons.math.random.TestRandomGenerator.setSeed(1)"
reference "org.apache.commons.math.random.TestRandomGenerator.nextDouble(0)" "org.apache.commons.math.random.TestRandomGenerator.random"
contain "org.apache.commons.math.random.TestRandomGenerator" "org.apache.commons.math.random.TestRandomGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.TestRandomGenerator" "org.apache.commons.math.random.TestRandomGenerator.random"
reference "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.Complex"
reference "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexFormat"
reference "org.apache.commons.math.complex.ComplexUtilsTest" "junit.framework.TestCase"
reference "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtils"
reference "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "junit.framework.TestCase.TestCase(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.inf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.nan"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.pi"
call "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.oneInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infOne"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfOne"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.oneNaN"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infNaN"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfNaN"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.nanInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.nanNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.zeroNaN"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.nanZero"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infZero"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.zeroInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.zeroNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfZero"
call "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.fmt"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testAcos(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testAcos(0)" "org.apache.commons.math.complex.ComplexUtils.acos(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testAcos(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAcos(0)" "org.apache.commons.math.complex.Complex.ZERO"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testAcos(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAcosInf(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAcosInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.oneInf"
call "org.apache.commons.math.complex.ComplexUtilsTest.testAcosInf(0)" "org.apache.commons.math.complex.ComplexUtils.acos(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testAcosInf(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAcosInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAcosInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infOne"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAcosInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfOne"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAcosInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAcosInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAcosInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAcosInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfNegInf"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testAcosInf(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAcosNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexUtilsTest.testAcosNaN(0)" "org.apache.commons.math.complex.ComplexUtils.acos(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testAcosNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testAcosNaN(0)" "org.apache.commons.math.complex.ComplexUtilsTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testAcosNaN(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testAcosNull(0)" "org.apache.commons.math.complex.ComplexUtils.acos(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testAcosNull(0)" "org.apache.commons.math.complex.ComplexUtilsTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testAcosNull(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testAsin(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testAsin(0)" "org.apache.commons.math.complex.ComplexUtils.asin(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testAsin(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testAsin(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAsinNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexUtilsTest.testAsinNaN(0)" "org.apache.commons.math.complex.ComplexUtils.asin(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testAsinNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testAsinNaN(0)" "org.apache.commons.math.complex.ComplexUtilsTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testAsinNaN(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAsinInf(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAsinInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.oneInf"
call "org.apache.commons.math.complex.ComplexUtilsTest.testAsinInf(0)" "org.apache.commons.math.complex.ComplexUtils.asin(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testAsinInf(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAsinInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAsinInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infOne"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAsinInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfOne"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAsinInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAsinInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAsinInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAsinInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfNegInf"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testAsinInf(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testAsinNull(0)" "org.apache.commons.math.complex.ComplexUtils.asin(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testAsinNull(0)" "org.apache.commons.math.complex.ComplexUtilsTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testAsinNull(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testAtan(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testAtan(0)" "org.apache.commons.math.complex.ComplexUtils.atan(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testAtan(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testAtan(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAtanInf(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAtanInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.oneInf"
call "org.apache.commons.math.complex.ComplexUtilsTest.testAtanInf(0)" "org.apache.commons.math.complex.ComplexUtils.atan(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testAtanInf(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAtanInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAtanInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infOne"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAtanInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfOne"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAtanInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAtanInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAtanInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAtanInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfNegInf"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testAtanInf(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAtanNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexUtilsTest.testAtanNaN(0)" "org.apache.commons.math.complex.ComplexUtils.atan(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testAtanNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testAtanNaN(0)" "org.apache.commons.math.complex.ComplexUtilsTest.assertTrue(1)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testAtanNaN(0)" "org.apache.commons.math.complex.Complex.I"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testAtanNaN(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testAtanNull(0)" "org.apache.commons.math.complex.ComplexUtils.atan(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testAtanNull(0)" "org.apache.commons.math.complex.ComplexUtilsTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testAtanNull(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testCos(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testCos(0)" "org.apache.commons.math.complex.ComplexUtils.cos(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testCos(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testCos(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testCosNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexUtilsTest.testCosNaN(0)" "org.apache.commons.math.complex.ComplexUtils.cos(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testCosNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testCosNaN(0)" "org.apache.commons.math.complex.ComplexUtilsTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testCosNaN(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testCosInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testCosInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.oneInf"
call "org.apache.commons.math.complex.ComplexUtilsTest.testCosInf(0)" "org.apache.commons.math.complex.ComplexUtils.cos(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testCosInf(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testCosInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testCosInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testCosInf(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testCosInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infOne"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testCosInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfOne"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testCosInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testCosInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfNegInf"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testCosInf(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testCosNull(0)" "org.apache.commons.math.complex.ComplexUtils.cos(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testCosNull(0)" "org.apache.commons.math.complex.ComplexUtilsTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testCosNull(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testCosh(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testCosh(0)" "org.apache.commons.math.complex.ComplexUtils.cosh(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testCosh(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testCosh(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testCoshNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexUtilsTest.testCoshNaN(0)" "org.apache.commons.math.complex.ComplexUtils.cosh(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testCoshNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testCoshNaN(0)" "org.apache.commons.math.complex.ComplexUtilsTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testCoshNaN(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testCoshInf(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testCoshInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.oneInf"
call "org.apache.commons.math.complex.ComplexUtilsTest.testCoshInf(0)" "org.apache.commons.math.complex.ComplexUtils.cosh(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testCoshInf(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testCoshInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testCoshInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testCoshInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infOne"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testCoshInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testCoshInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfOne"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testCoshInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testCoshInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfNegInf"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testCoshInf(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testCoshNull(0)" "org.apache.commons.math.complex.ComplexUtils.cosh(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testCoshNull(0)" "org.apache.commons.math.complex.ComplexUtilsTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testCoshNull(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testExp(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testExp(0)" "org.apache.commons.math.complex.ComplexUtils.exp(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testExp(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testExp(0)" "org.apache.commons.math.complex.Complex.ONE"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testExp(0)" "org.apache.commons.math.complex.Complex.ZERO"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testExp(0)" "org.apache.commons.math.complex.Complex.I"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testExp(0)" "org.apache.commons.math.complex.ComplexUtilsTest.pi"
call "org.apache.commons.math.complex.ComplexUtilsTest.testExp(0)" "org.apache.commons.math.complex.Complex.multiply(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testExp(0)" "org.apache.commons.math.complex.Complex.negate(0)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testExp(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testExpNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexUtilsTest.testExpNaN(0)" "org.apache.commons.math.complex.ComplexUtils.exp(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testExpNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testExpNaN(0)" "org.apache.commons.math.complex.ComplexUtilsTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testExpNaN(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testExpInf(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testExpInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.oneInf"
call "org.apache.commons.math.complex.ComplexUtilsTest.testExpInf(0)" "org.apache.commons.math.complex.ComplexUtils.exp(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testExpInf(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testExpInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testExpInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testExpInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infOne"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testExpInf(0)" "org.apache.commons.math.complex.Complex.ZERO"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testExpInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfOne"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testExpInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testExpInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testExpInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfNegInf"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testExpInf(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testExpNull(0)" "org.apache.commons.math.complex.ComplexUtils.exp(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testExpNull(0)" "org.apache.commons.math.complex.ComplexUtilsTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testExpNull(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testLog(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testLog(0)" "org.apache.commons.math.complex.ComplexUtils.log(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testLog(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testLog(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testLogNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexUtilsTest.testLogNaN(0)" "org.apache.commons.math.complex.ComplexUtils.log(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testLogNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testLogNaN(0)" "org.apache.commons.math.complex.ComplexUtilsTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testLogNaN(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testLogInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.inf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testLogInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.pi"
call "org.apache.commons.math.complex.ComplexUtilsTest.testLogInf(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testLogInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.oneInf"
call "org.apache.commons.math.complex.ComplexUtilsTest.testLogInf(0)" "org.apache.commons.math.complex.ComplexUtils.log(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testLogInf(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testLogInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testLogInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infZero"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testLogInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infOne"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testLogInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfOne"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testLogInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testLogInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testLogInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testLogInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfNegInf"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testLogInf(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testLogZero(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfZero"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testLogZero(0)" "org.apache.commons.math.complex.Complex.ZERO"
call "org.apache.commons.math.complex.ComplexUtilsTest.testLogZero(0)" "org.apache.commons.math.complex.ComplexUtils.log(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testLogZero(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testLogZero(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testlogNull(0)" "org.apache.commons.math.complex.ComplexUtils.log(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testlogNull(0)" "org.apache.commons.math.complex.ComplexUtilsTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testlogNull(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2Complex(0)" "org.apache.commons.math.complex.Complex.ONE"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2Complex(0)" "org.apache.commons.math.complex.ComplexUtils.polar2Complex(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2Complex(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2Complex(0)" "org.apache.commons.math.complex.Complex.ZERO"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2Complex(0)" "org.apache.commons.math.complex.Complex.I"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2Complex(0)" "org.apache.commons.math.complex.ComplexUtilsTest.pi"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2Complex(0)" "org.apache.commons.math.complex.Complex.negate(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2Complex(0)" "org.apache.commons.math.complex.ComplexUtilsTest.altPolar(2)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2Complex(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.altPolar(2)" "org.apache.commons.math.complex.Complex.I"
call "org.apache.commons.math.complex.ComplexUtilsTest.altPolar(2)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.altPolar(2)" "org.apache.commons.math.complex.Complex.multiply(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.altPolar(2)" "org.apache.commons.math.complex.ComplexUtils.exp(1)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.altPolar(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexIllegalModulus(0)" "org.apache.commons.math.complex.ComplexUtils.polar2Complex(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexIllegalModulus(0)" "org.apache.commons.math.complex.ComplexUtilsTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexIllegalModulus(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexNaN(0)" "org.apache.commons.math.complex.ComplexUtilsTest.nan"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexNaN(0)" "org.apache.commons.math.complex.ComplexUtils.polar2Complex(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexNaN(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexNaN(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexInf(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.inf"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexInf(0)" "org.apache.commons.math.complex.ComplexUtils.polar2Complex(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexInf(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.pi"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infNaN"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfNegInf"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexInf(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPow(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPow(0)" "org.apache.commons.math.complex.ComplexUtils.pow(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPow(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testPow(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPowNaNBase(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPowNaNBase(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPowNaNBase(0)" "org.apache.commons.math.complex.ComplexUtils.pow(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPowNaNBase(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPowNaNBase(0)" "org.apache.commons.math.complex.ComplexUtilsTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testPowNaNBase(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPowNaNExponent(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPowNaNExponent(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPowNaNExponent(0)" "org.apache.commons.math.complex.ComplexUtils.pow(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPowNaNExponent(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPowNaNExponent(0)" "org.apache.commons.math.complex.ComplexUtilsTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testPowNaNExponent(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPowInf(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPowInf(0)" "org.apache.commons.math.complex.Complex.ONE"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPowInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.oneInf"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPowInf(0)" "org.apache.commons.math.complex.ComplexUtils.pow(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPowInf(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPowInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPowInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infOne"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPowInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPowInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPowInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPowInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPowInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfOne"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testPowInf(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPowZero(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPowZero(0)" "org.apache.commons.math.complex.Complex.ZERO"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPowZero(0)" "org.apache.commons.math.complex.Complex.ONE"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPowZero(0)" "org.apache.commons.math.complex.ComplexUtils.pow(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPowZero(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPowZero(0)" "org.apache.commons.math.complex.Complex.I"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPowZero(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPowZero(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testPowZero(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testpowNull(0)" "org.apache.commons.math.complex.Complex.ONE"
call "org.apache.commons.math.complex.ComplexUtilsTest.testpowNull(0)" "org.apache.commons.math.complex.ComplexUtils.pow(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testpowNull(0)" "org.apache.commons.math.complex.ComplexUtilsTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testpowNull(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSin(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSin(0)" "org.apache.commons.math.complex.ComplexUtils.sin(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSin(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testSin(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSinInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSinInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.oneInf"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSinInf(0)" "org.apache.commons.math.complex.ComplexUtils.sin(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSinInf(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSinInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSinInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSinInf(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSinInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infOne"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSinInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfOne"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSinInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSinInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfNegInf"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testSinInf(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSinNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSinNaN(0)" "org.apache.commons.math.complex.ComplexUtils.sin(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSinNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSinNaN(0)" "org.apache.commons.math.complex.ComplexUtilsTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testSinNaN(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSinNull(0)" "org.apache.commons.math.complex.ComplexUtils.sin(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSinNull(0)" "org.apache.commons.math.complex.ComplexUtilsTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testSinNull(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSinh(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSinh(0)" "org.apache.commons.math.complex.ComplexUtils.sinh(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSinh(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testSinh(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSinhNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSinhNaN(0)" "org.apache.commons.math.complex.ComplexUtils.sinh(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSinhNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSinhNaN(0)" "org.apache.commons.math.complex.ComplexUtilsTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testSinhNaN(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSinhInf(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSinhInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.oneInf"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSinhInf(0)" "org.apache.commons.math.complex.ComplexUtils.sinh(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSinhInf(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSinhInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSinhInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSinhInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infOne"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSinhInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSinhInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfOne"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSinhInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSinhInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfNegInf"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testSinhInf(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testsinhNull(0)" "org.apache.commons.math.complex.ComplexUtils.sinh(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testsinhNull(0)" "org.apache.commons.math.complex.ComplexUtilsTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testsinhNull(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtRealPositive(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtRealPositive(0)" "org.apache.commons.math.complex.ComplexUtils.sqrt(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtRealPositive(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtRealPositive(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtRealZero(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtRealZero(0)" "org.apache.commons.math.complex.ComplexUtils.sqrt(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtRealZero(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtRealZero(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtRealNegative(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtRealNegative(0)" "org.apache.commons.math.complex.ComplexUtils.sqrt(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtRealNegative(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtRealNegative(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtImaginaryZero(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtImaginaryZero(0)" "org.apache.commons.math.complex.ComplexUtils.sqrt(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtImaginaryZero(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtImaginaryZero(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtImaginaryNegative(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtImaginaryNegative(0)" "org.apache.commons.math.complex.ComplexUtils.sqrt(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtImaginaryNegative(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtImaginaryNegative(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtPolar(0)" "org.apache.commons.math.complex.ComplexUtilsTest.pi"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtPolar(0)" "org.apache.commons.math.complex.ComplexUtils.polar2Complex(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtPolar(0)" "org.apache.commons.math.complex.ComplexUtils.sqrt(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtPolar(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtPolar(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtNaN(0)" "org.apache.commons.math.complex.ComplexUtils.sqrt(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtNaN(0)" "org.apache.commons.math.complex.ComplexUtilsTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtNaN(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infNaN"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.oneInf"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtInf(0)" "org.apache.commons.math.complex.ComplexUtils.sqrt(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtInf(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infZero"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infOne"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.zeroInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfOne"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.nanInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.nanNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfNegInf"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtInf(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtNull(0)" "org.apache.commons.math.complex.ComplexUtils.sqrt(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtNull(0)" "org.apache.commons.math.complex.ComplexUtilsTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testSqrtNull(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrt1z(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrt1z(0)" "org.apache.commons.math.complex.ComplexUtils.sqrt1z(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrt1z(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testSqrt1z(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testSqrt1zNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrt1zNaN(0)" "org.apache.commons.math.complex.ComplexUtils.sqrt1z(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrt1zNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrt1zNaN(0)" "org.apache.commons.math.complex.ComplexUtilsTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testSqrt1zNaN(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrt1zNull(0)" "org.apache.commons.math.complex.ComplexUtils.sqrt1z(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testSqrt1zNull(0)" "org.apache.commons.math.complex.ComplexUtilsTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testSqrt1zNull(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testTan(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testTan(0)" "org.apache.commons.math.complex.ComplexUtils.tan(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testTan(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testTan(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testTanNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexUtilsTest.testTanNaN(0)" "org.apache.commons.math.complex.ComplexUtils.tan(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testTanNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testTanNaN(0)" "org.apache.commons.math.complex.ComplexUtilsTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testTanNaN(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testTanInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.zeroNaN"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testTanInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.oneInf"
call "org.apache.commons.math.complex.ComplexUtilsTest.testTanInf(0)" "org.apache.commons.math.complex.ComplexUtils.tan(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testTanInf(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testTanInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testTanInf(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testTanInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infOne"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testTanInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfOne"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testTanInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testTanInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testTanInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testTanInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfNegInf"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testTanInf(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testTanCritical(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infNaN"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testTanCritical(0)" "org.apache.commons.math.complex.ComplexUtilsTest.pi"
call "org.apache.commons.math.complex.ComplexUtilsTest.testTanCritical(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testTanCritical(0)" "org.apache.commons.math.complex.ComplexUtils.tan(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testTanCritical(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testTanCritical(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfNaN"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testTanCritical(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testTanNull(0)" "org.apache.commons.math.complex.ComplexUtils.tan(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testTanNull(0)" "org.apache.commons.math.complex.ComplexUtilsTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testTanNull(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testTanh(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testTanh(0)" "org.apache.commons.math.complex.ComplexUtils.tanh(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testTanh(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testTanh(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testTanhNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexUtilsTest.testTanhNaN(0)" "org.apache.commons.math.complex.ComplexUtils.tanh(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testTanhNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testTanhNaN(0)" "org.apache.commons.math.complex.ComplexUtilsTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testTanhNaN(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testTanhInf(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testTanhInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.oneInf"
call "org.apache.commons.math.complex.ComplexUtilsTest.testTanhInf(0)" "org.apache.commons.math.complex.ComplexUtils.tanh(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testTanhInf(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testTanhInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testTanhInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.nanZero"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testTanhInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infOne"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testTanhInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfOne"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testTanhInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testTanhInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testTanhInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testTanhInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfNegInf"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testTanhInf(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testTanhCritical(0)" "org.apache.commons.math.complex.ComplexUtilsTest.nanInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testTanhCritical(0)" "org.apache.commons.math.complex.ComplexUtilsTest.pi"
call "org.apache.commons.math.complex.ComplexUtilsTest.testTanhCritical(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testTanhCritical(0)" "org.apache.commons.math.complex.ComplexUtils.tanh(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testTanhCritical(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testTanhCritical(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testTanhNull(0)" "org.apache.commons.math.complex.ComplexUtils.tanh(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testTanhNull(0)" "org.apache.commons.math.complex.ComplexUtilsTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testTanhNull(0)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.inf"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.negInf"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.nan"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.pi"
reference "org.apache.commons.math.complex.ComplexUtilsTest.oneInf" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.oneInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.oneNegInf" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.infOne" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.infOne"
reference "org.apache.commons.math.complex.ComplexUtilsTest.negInfOne" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.negInfOne"
reference "org.apache.commons.math.complex.ComplexUtilsTest.negInfInf" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.infNegInf" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.infInf" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.infInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.negInfNegInf" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.negInfNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.oneNaN" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.oneNaN"
reference "org.apache.commons.math.complex.ComplexUtilsTest.infNaN" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.infNaN"
reference "org.apache.commons.math.complex.ComplexUtilsTest.negInfNaN" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.negInfNaN"
reference "org.apache.commons.math.complex.ComplexUtilsTest.nanInf" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.nanInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.nanNegInf" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.nanNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.zeroNaN" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.zeroNaN"
reference "org.apache.commons.math.complex.ComplexUtilsTest.nanZero" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.nanZero"
reference "org.apache.commons.math.complex.ComplexUtilsTest.infZero" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.infZero"
reference "org.apache.commons.math.complex.ComplexUtilsTest.zeroInf" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.zeroInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.zeroNegInf" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.zeroNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.negInfZero" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.negInfZero"
reference "org.apache.commons.math.complex.ComplexUtilsTest.fmt" "org.apache.commons.math.complex.ComplexFormat"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.fmt"
reference "org.apache.commons.math.util.MathUtilsTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.util.MathUtilsTest" "junit.framework.TestCase"
reference "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtils"
reference "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.util.MathUtilsTest.MathUtilsTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.MathUtilsTest(1)"
reference "org.apache.commons.math.util.MathUtilsTest.suite(0)" "org.apache.commons.math.util.MathUtilsTest.class$org$apache$commons$math$util$MathUtilsTest"
call "org.apache.commons.math.util.MathUtilsTest.suite(0)" "org.apache.commons.math.util.MathUtilsTest.class$(1)"
call "org.apache.commons.math.util.MathUtilsTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.util.MathUtilsTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.suite(0)"
call "org.apache.commons.math.util.MathUtilsTest.testAddAndCheck(0)" "org.apache.commons.math.util.MathUtils.addAndCheck(2)"
call "org.apache.commons.math.util.MathUtilsTest.testAddAndCheck(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
call "org.apache.commons.math.util.MathUtilsTest.testAddAndCheck(0)" "org.apache.commons.math.util.MathUtilsTest.fail(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testAddAndCheck(0)"
call "org.apache.commons.math.util.MathUtilsTest.testMulAndCheck(0)" "org.apache.commons.math.util.MathUtils.mulAndCheck(2)"
call "org.apache.commons.math.util.MathUtilsTest.testMulAndCheck(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
call "org.apache.commons.math.util.MathUtilsTest.testMulAndCheck(0)" "org.apache.commons.math.util.MathUtilsTest.fail(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testMulAndCheck(0)"
call "org.apache.commons.math.util.MathUtilsTest.testSubAndCheck(0)" "org.apache.commons.math.util.MathUtils.subAndCheck(2)"
call "org.apache.commons.math.util.MathUtilsTest.testSubAndCheck(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
call "org.apache.commons.math.util.MathUtilsTest.testSubAndCheck(0)" "org.apache.commons.math.util.MathUtilsTest.fail(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testSubAndCheck(0)"
call "org.apache.commons.math.util.MathUtilsTest.testSubAndCheckErrorMessage(0)" "org.apache.commons.math.util.MathUtils.subAndCheck(2)"
call "org.apache.commons.math.util.MathUtilsTest.testSubAndCheckErrorMessage(0)" "org.apache.commons.math.util.MathUtilsTest.fail(1)"
call "org.apache.commons.math.util.MathUtilsTest.testSubAndCheckErrorMessage(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testSubAndCheckErrorMessage(0)"
call "org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(0)" "org.apache.commons.math.util.MathUtils.binomialCoefficient(2)"
call "org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
call "org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(0)" "org.apache.commons.math.util.MathUtilsTest.binomialCoefficient(2)"
call "org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(0)" "org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(2)"
call "org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(4)"
call "org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(0)" "org.apache.commons.math.util.MathUtils.binomialCoefficientLog(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(0)"
call "org.apache.commons.math.util.MathUtilsTest.test0Choose0(0)" "org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(2)"
call "org.apache.commons.math.util.MathUtilsTest.test0Choose0(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
call "org.apache.commons.math.util.MathUtilsTest.test0Choose0(0)" "org.apache.commons.math.util.MathUtils.binomialCoefficientLog(2)"
call "org.apache.commons.math.util.MathUtilsTest.test0Choose0(0)" "org.apache.commons.math.util.MathUtils.binomialCoefficient(2)"
call "org.apache.commons.math.util.MathUtilsTest.test0Choose0(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.test0Choose0(0)"
call "org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(0)" "org.apache.commons.math.util.MathUtils.binomialCoefficient(2)"
call "org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(0)" "org.apache.commons.math.util.MathUtilsTest.fail(1)"
call "org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(0)" "org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(2)"
call "org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(0)" "org.apache.commons.math.util.MathUtils.binomialCoefficientLog(2)"
call "org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(0)" "org.apache.commons.math.util.MathUtilsTest.assertTrue(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(0)"
call "org.apache.commons.math.util.MathUtilsTest.testFactorial(0)" "org.apache.commons.math.util.MathUtilsTest.factorial(1)"
call "org.apache.commons.math.util.MathUtilsTest.testFactorial(0)" "org.apache.commons.math.util.MathUtils.factorial(1)"
call "org.apache.commons.math.util.MathUtilsTest.testFactorial(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
call "org.apache.commons.math.util.MathUtilsTest.testFactorial(0)" "org.apache.commons.math.util.MathUtils.factorialDouble(1)"
call "org.apache.commons.math.util.MathUtilsTest.testFactorial(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(4)"
call "org.apache.commons.math.util.MathUtilsTest.testFactorial(0)" "org.apache.commons.math.util.MathUtils.factorialLog(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testFactorial(0)"
call "org.apache.commons.math.util.MathUtilsTest.testFactorialFail(0)" "org.apache.commons.math.util.MathUtils.factorial(1)"
call "org.apache.commons.math.util.MathUtilsTest.testFactorialFail(0)" "org.apache.commons.math.util.MathUtilsTest.fail(1)"
call "org.apache.commons.math.util.MathUtilsTest.testFactorialFail(0)" "org.apache.commons.math.util.MathUtils.factorialDouble(1)"
call "org.apache.commons.math.util.MathUtilsTest.testFactorialFail(0)" "org.apache.commons.math.util.MathUtils.factorialLog(1)"
call "org.apache.commons.math.util.MathUtilsTest.testFactorialFail(0)" "org.apache.commons.math.util.MathUtilsTest.assertTrue(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testFactorialFail(0)"
call "org.apache.commons.math.util.MathUtilsTest.binomialCoefficient(2)" "org.apache.commons.math.util.MathUtilsTest.binomialCoefficient(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.binomialCoefficient(2)"
call "org.apache.commons.math.util.MathUtilsTest.findBinomialLimits(0)" "org.apache.commons.math.util.MathUtils.binomialCoefficient(2)"
call "org.apache.commons.math.util.MathUtilsTest.findBinomialLimits(0)" "org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.findBinomialLimits(0)"
call "org.apache.commons.math.util.MathUtilsTest.findFactorialLimits(0)" "org.apache.commons.math.util.MathUtils.factorial(1)"
call "org.apache.commons.math.util.MathUtilsTest.findFactorialLimits(0)" "org.apache.commons.math.util.MathUtils.factorialDouble(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.findFactorialLimits(0)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.factorial(1)"
call "org.apache.commons.math.util.MathUtilsTest.testSignDouble(0)" "org.apache.commons.math.util.MathUtils.indicator(1)"
call "org.apache.commons.math.util.MathUtilsTest.testSignDouble(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testSignDouble(0)"
call "org.apache.commons.math.util.MathUtilsTest.testSignFloat(0)" "org.apache.commons.math.util.MathUtils.indicator(1)"
call "org.apache.commons.math.util.MathUtilsTest.testSignFloat(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testSignFloat(0)"
call "org.apache.commons.math.util.MathUtilsTest.testSignByte(0)" "org.apache.commons.math.util.MathUtils.indicator(1)"
call "org.apache.commons.math.util.MathUtilsTest.testSignByte(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testSignByte(0)"
call "org.apache.commons.math.util.MathUtilsTest.testSignShort(0)" "org.apache.commons.math.util.MathUtils.indicator(1)"
call "org.apache.commons.math.util.MathUtilsTest.testSignShort(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testSignShort(0)"
call "org.apache.commons.math.util.MathUtilsTest.testSignInt(0)" "org.apache.commons.math.util.MathUtils.indicator(1)"
call "org.apache.commons.math.util.MathUtilsTest.testSignInt(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testSignInt(0)"
call "org.apache.commons.math.util.MathUtilsTest.testSignLong(0)" "org.apache.commons.math.util.MathUtils.indicator(1)"
call "org.apache.commons.math.util.MathUtilsTest.testSignLong(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testSignLong(0)"
call "org.apache.commons.math.util.MathUtilsTest.testIndicatorDouble(0)" "org.apache.commons.math.util.MathUtils.indicator(1)"
call "org.apache.commons.math.util.MathUtilsTest.testIndicatorDouble(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testIndicatorDouble(0)"
call "org.apache.commons.math.util.MathUtilsTest.testIndicatorFloat(0)" "org.apache.commons.math.util.MathUtils.indicator(1)"
call "org.apache.commons.math.util.MathUtilsTest.testIndicatorFloat(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testIndicatorFloat(0)"
call "org.apache.commons.math.util.MathUtilsTest.testIndicatorByte(0)" "org.apache.commons.math.util.MathUtils.indicator(1)"
call "org.apache.commons.math.util.MathUtilsTest.testIndicatorByte(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testIndicatorByte(0)"
call "org.apache.commons.math.util.MathUtilsTest.testIndicatorShort(0)" "org.apache.commons.math.util.MathUtils.indicator(1)"
call "org.apache.commons.math.util.MathUtilsTest.testIndicatorShort(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testIndicatorShort(0)"
call "org.apache.commons.math.util.MathUtilsTest.testIndicatorInt(0)" "org.apache.commons.math.util.MathUtils.indicator(1)"
call "org.apache.commons.math.util.MathUtilsTest.testIndicatorInt(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testIndicatorInt(0)"
call "org.apache.commons.math.util.MathUtilsTest.testIndicatorLong(0)" "org.apache.commons.math.util.MathUtils.indicator(1)"
call "org.apache.commons.math.util.MathUtilsTest.testIndicatorLong(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testIndicatorLong(0)"
call "org.apache.commons.math.util.MathUtilsTest.testCosh(0)" "org.apache.commons.math.util.MathUtils.cosh(1)"
call "org.apache.commons.math.util.MathUtilsTest.testCosh(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testCosh(0)"
call "org.apache.commons.math.util.MathUtilsTest.testSinh(0)" "org.apache.commons.math.util.MathUtils.sinh(1)"
call "org.apache.commons.math.util.MathUtilsTest.testSinh(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testSinh(0)"
call "org.apache.commons.math.util.MathUtilsTest.testCoshNaN(0)" "org.apache.commons.math.util.MathUtils.cosh(1)"
call "org.apache.commons.math.util.MathUtilsTest.testCoshNaN(0)" "org.apache.commons.math.util.MathUtilsTest.assertTrue(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testCoshNaN(0)"
call "org.apache.commons.math.util.MathUtilsTest.testSinhNaN(0)" "org.apache.commons.math.util.MathUtils.sinh(1)"
call "org.apache.commons.math.util.MathUtilsTest.testSinhNaN(0)" "org.apache.commons.math.util.MathUtilsTest.assertTrue(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testSinhNaN(0)"
call "org.apache.commons.math.util.MathUtilsTest.testEquals(0)" "org.apache.commons.math.util.MathUtils.equals(2)"
call "org.apache.commons.math.util.MathUtilsTest.testEquals(0)" "org.apache.commons.math.util.MathUtilsTest.assertTrue(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testEquals(0)"
call "org.apache.commons.math.util.MathUtilsTest.testHash(0)" "org.apache.commons.math.util.MathUtils.hash(1)"
call "org.apache.commons.math.util.MathUtilsTest.testHash(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
call "org.apache.commons.math.util.MathUtilsTest.testHash(0)" "org.apache.commons.math.util.MathUtilsTest.assertTrue(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testHash(0)"
call "org.apache.commons.math.util.MathUtilsTest.testLog(0)" "org.apache.commons.math.util.MathUtils.log(2)"
call "org.apache.commons.math.util.MathUtilsTest.testLog(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
call "org.apache.commons.math.util.MathUtilsTest.testLog(0)" "org.apache.commons.math.util.MathUtilsTest.assertTrue(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testLog(0)"
call "org.apache.commons.math.util.MathUtilsTest.testGcd(0)" "org.apache.commons.math.util.MathUtils.gcd(2)"
call "org.apache.commons.math.util.MathUtilsTest.testGcd(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testGcd(0)"
call "org.apache.commons.math.util.MathUtilsTest.testLcm(0)" "org.apache.commons.math.util.MathUtils.lcm(2)"
call "org.apache.commons.math.util.MathUtilsTest.testLcm(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
call "org.apache.commons.math.util.MathUtilsTest.testLcm(0)" "org.apache.commons.math.util.MathUtilsTest.fail(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testLcm(0)"
call "org.apache.commons.math.util.MathUtilsTest.testRoundFloat(0)" "org.apache.commons.math.util.MathUtils.round(2)"
call "org.apache.commons.math.util.MathUtilsTest.testRoundFloat(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
call "org.apache.commons.math.util.MathUtilsTest.testRoundFloat(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
call "org.apache.commons.math.util.MathUtilsTest.testRoundFloat(0)" "org.apache.commons.math.util.MathUtils.round(3)"
call "org.apache.commons.math.util.MathUtilsTest.testRoundFloat(0)" "org.apache.commons.math.util.MathUtilsTest.fail(0)"
call "org.apache.commons.math.util.MathUtilsTest.testRoundFloat(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testRoundFloat(0)"
call "org.apache.commons.math.util.MathUtilsTest.testNextAfterSpecialCases(0)" "org.apache.commons.math.util.MathUtils.nextAfter(2)"
call "org.apache.commons.math.util.MathUtilsTest.testNextAfterSpecialCases(0)" "org.apache.commons.math.util.MathUtilsTest.assertTrue(1)"
call "org.apache.commons.math.util.MathUtilsTest.testNextAfterSpecialCases(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testNextAfterSpecialCases(0)"
call "org.apache.commons.math.util.MathUtilsTest.testNextAfter(0)" "org.apache.commons.math.util.MathUtils.nextAfter(2)"
call "org.apache.commons.math.util.MathUtilsTest.testNextAfter(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testNextAfter(0)"
call "org.apache.commons.math.util.MathUtilsTest.testRoundDouble(0)" "org.apache.commons.math.util.MathUtils.round(2)"
call "org.apache.commons.math.util.MathUtilsTest.testRoundDouble(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
call "org.apache.commons.math.util.MathUtilsTest.testRoundDouble(0)" "org.apache.commons.math.util.MathUtils.round(3)"
call "org.apache.commons.math.util.MathUtilsTest.testRoundDouble(0)" "org.apache.commons.math.util.MathUtilsTest.fail(0)"
call "org.apache.commons.math.util.MathUtilsTest.testRoundDouble(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testRoundDouble(0)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.class$(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.class$org$apache$commons$math$util$MathUtilsTest"
reference "org.apache.commons.math.stat.inference.ChiSquareFactoryTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.inference.ChiSquareFactoryTest" "org.apache.commons.math.stat.inference.ChiSquareTestTest"
reference "org.apache.commons.math.stat.inference.ChiSquareFactoryTest" "org.apache.commons.math.stat.inference.TestUtils"
call "org.apache.commons.math.stat.inference.ChiSquareFactoryTest.ChiSquareFactoryTest(1)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.ChiSquareTestTest(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareFactoryTest" "org.apache.commons.math.stat.inference.ChiSquareFactoryTest.ChiSquareFactoryTest(1)"
call "org.apache.commons.math.stat.inference.ChiSquareFactoryTest.setUp(0)" "org.apache.commons.math.stat.inference.TestUtils.getChiSquareTest(0)"
reference "org.apache.commons.math.stat.inference.ChiSquareFactoryTest.setUp(0)" "org.apache.commons.math.stat.inference.ChiSquareFactoryTest.testStatistic"
contain "org.apache.commons.math.stat.inference.ChiSquareFactoryTest" "org.apache.commons.math.stat.inference.ChiSquareFactoryTest.setUp(0)"
reference "org.apache.commons.math.stat.inference.ChiSquareFactoryTest.suite(0)" "org.apache.commons.math.stat.inference.ChiSquareFactoryTest.class$org$apache$commons$math$stat$inference$ChiSquareFactoryTest"
call "org.apache.commons.math.stat.inference.ChiSquareFactoryTest.suite(0)" "org.apache.commons.math.stat.inference.ChiSquareFactoryTest.class$(1)"
call "org.apache.commons.math.stat.inference.ChiSquareFactoryTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.inference.ChiSquareFactoryTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareFactoryTest" "org.apache.commons.math.stat.inference.ChiSquareFactoryTest.suite(0)"
contain "org.apache.commons.math.stat.inference.ChiSquareFactoryTest" "org.apache.commons.math.stat.inference.ChiSquareFactoryTest.class$(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareFactoryTest" "org.apache.commons.math.stat.inference.ChiSquareFactoryTest.class$org$apache$commons$math$stat$inference$ChiSquareFactoryTest"
reference "org.apache.commons.math.linear.BigMatrixImplTest" "double[]"
reference "org.apache.commons.math.linear.BigMatrixImplTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.linear.BigMatrixImplTest" "double[][]"
reference "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImpl"
reference "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.InvalidMatrixException"
reference "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.MatrixIndexException"
reference "org.apache.commons.math.linear.BigMatrixImplTest" "junit.framework.TestCase"
reference "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrix"
reference "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.MatrixUtils"
call "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataString"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.id"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataLU"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataPlus2"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataMinus"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataRow1"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataCol3"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataInv"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.preMultTest"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.testData2"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.testData2T"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataPlusInv"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.luData"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.luDataLUDecomposition"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.singular"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.bigSingular"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.detData"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.detData2"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.testVector"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.testVector2"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.subTestData"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows02Cols13"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows03Cols12"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows03Cols123"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows20Cols123"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows31Cols31"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows01Cols23"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows23Cols00"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows00Cols33"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.subRow0"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.subRow3"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.subColumn1"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.subColumn3"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.entryTolerance"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.normTolerance"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.d3"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.d4"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.d5"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.setUp(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.suite(0)" "org.apache.commons.math.linear.BigMatrixImplTest.class$org$apache$commons$math$linear$BigMatrixImplTest"
call "org.apache.commons.math.linear.BigMatrixImplTest.suite(0)" "org.apache.commons.math.linear.BigMatrixImplTest.class$(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.suite(0)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.asDouble(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.asDouble(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.asBigDecimal(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.asBigDecimal(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData2"
call "org.apache.commons.math.linear.BigMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertEquals(3)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.BigMatrixImpl.isSquare(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertTrue(2)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testDimensions(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testCopyFunctions(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testCopyFunctions(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testCopyFunctions(0)" "org.apache.commons.math.linear.BigMatrixImpl.getData(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testCopyFunctions(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testCopyFunctions(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertEquals(2)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testCopyFunctions(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testConstructors(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testConstructors(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testConstructors(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataString"
call "org.apache.commons.math.linear.BigMatrixImplTest.testConstructors(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testConstructors(0)" "org.apache.commons.math.linear.BigMatrixImplTest.asBigDecimal(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testConstructors(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testConstructors(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testConstructors(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testConstructors(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testConstructors(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataInv"
call "org.apache.commons.math.linear.BigMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.BigMatrixImpl.add(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.BigMatrixImpl.getData(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.BigMatrixImplTest.asDouble(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataPlusInv"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.BigMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertEquals(4)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testAdd(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testAddFail(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testAddFail(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testAddFail(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData2"
call "org.apache.commons.math.linear.BigMatrixImplTest.testAddFail(0)" "org.apache.commons.math.linear.BigMatrixImpl.add(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testAddFail(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testAddFail(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testNorm(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testNorm(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testNorm(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData2"
call "org.apache.commons.math.linear.BigMatrixImplTest.testNorm(0)" "org.apache.commons.math.linear.BigMatrixImpl.getNorm(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testNorm(0)" "org.apache.commons.math.linear.BigMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.testNorm(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertEquals(4)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testNorm(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataInv"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.BigMatrixImpl.subtract(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.BigMatrixImpl.scalarMultiply(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.BigMatrix.add(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.BigMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData2"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testPlusMinus(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataInv"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.id"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData2"
call "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.BigMatrixImpl.multiply(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.bigSingular"
call "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply2(0)" "org.apache.commons.math.linear.BigMatrixImplTest.d3"
call "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply2(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply2(0)" "org.apache.commons.math.linear.BigMatrixImplTest.d4"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply2(0)" "org.apache.commons.math.linear.BigMatrixImplTest.d5"
call "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply2(0)" "org.apache.commons.math.linear.BigMatrix.multiply(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply2(0)" "org.apache.commons.math.linear.BigMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply2(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply2(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testIsSingular(0)" "org.apache.commons.math.linear.BigMatrixImplTest.singular"
call "org.apache.commons.math.linear.BigMatrixImplTest.testIsSingular(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testIsSingular(0)" "org.apache.commons.math.linear.BigMatrixImpl.isSingular(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testIsSingular(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertTrue(2)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testIsSingular(0)" "org.apache.commons.math.linear.BigMatrixImplTest.bigSingular"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testIsSingular(0)" "org.apache.commons.math.linear.BigMatrixImplTest.id"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testIsSingular(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testIsSingular(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testInverse(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testInverse(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testInverse(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataInv"
call "org.apache.commons.math.linear.BigMatrixImplTest.testInverse(0)" "org.apache.commons.math.linear.BigMatrixImpl.inverse(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testInverse(0)" "org.apache.commons.math.linear.BigMatrixImplTest.normTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.testInverse(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testInverse(0)" "org.apache.commons.math.linear.BigMatrix.inverse(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testInverse(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData2"
call "org.apache.commons.math.linear.BigMatrixImplTest.testInverse(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testInverse(0)" "org.apache.commons.math.linear.BigMatrixImplTest.singular"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testInverse(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataInv"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testVector"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrixImplTest.asBigDecimal(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrix.operate(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrixImplTest.asDouble(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrixImpl.solve(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrixImplTest.normTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testVector2"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrixImplTest.bigSingular"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrix.solve(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrixImpl.solve(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData2"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrixImpl.luDecompose(0)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImplTest.bigSingular"
call "org.apache.commons.math.linear.BigMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.BigMatrix.getDeterminant(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertEquals(4)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImplTest.detData"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImplTest.normTolerance"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImplTest.detData2"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData2"
call "org.apache.commons.math.linear.BigMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImpl.getDeterminant(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testDeterminant(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testTrace(0)" "org.apache.commons.math.linear.BigMatrixImplTest.id"
call "org.apache.commons.math.linear.BigMatrixImplTest.testTrace(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testTrace(0)" "org.apache.commons.math.linear.BigMatrix.getTrace(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testTrace(0)" "org.apache.commons.math.linear.BigMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.testTrace(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertEquals(4)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testTrace(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData2"
call "org.apache.commons.math.linear.BigMatrixImplTest.testTrace(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testTrace(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testScalarAdd(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testScalarAdd(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testScalarAdd(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataPlus2"
call "org.apache.commons.math.linear.BigMatrixImplTest.testScalarAdd(0)" "org.apache.commons.math.linear.BigMatrix.scalarAdd(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testScalarAdd(0)" "org.apache.commons.math.linear.BigMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.testScalarAdd(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testScalarAdd(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.BigMatrixImplTest.id"
call "org.apache.commons.math.linear.BigMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testVector"
call "org.apache.commons.math.linear.BigMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.BigMatrixImplTest.asBigDecimal(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.BigMatrix.operate(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.BigMatrixImplTest.asDouble(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.BigMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.BigMatrixImplTest.bigSingular"
call "org.apache.commons.math.linear.BigMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testOperate(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.BigMatrix.inverse(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.BigMatrix.transpose(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.BigMatrixImplTest.normTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData2"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData2T"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testTranspose(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testVector"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.BigMatrixImplTest.asBigDecimal(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.BigMatrix.preMultiply(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.BigMatrixImplTest.asDouble(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.BigMatrixImplTest.preMultTest"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.BigMatrixImplTest.normTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.BigMatrixImplTest.bigSingular"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiplyVector(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.d3"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.d4"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.d5"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.BigMatrix.preMultiply(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataInv"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.id"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData2"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.BigMatrixImpl.preMultiply(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.bigSingular"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiply(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.BigMatrix.getRowAsDoubleArray(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataRow1"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.BigMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.BigMatrix.getColumnAsDoubleArray(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataCol3"
call "org.apache.commons.math.linear.BigMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testGetVectors(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.BigMatrixImpl.getLUMatrix(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataLU"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.BigMatrixImplTest.normTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.BigMatrixImplTest.verifyDecomposition(2)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.BigMatrixImplTest.luData"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.BigMatrixImplTest.luDataLUDecomposition"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataMinus"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.BigMatrixImplTest.id"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.BigMatrixImplTest.bigSingular"
call "org.apache.commons.math.linear.BigMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData2"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testLUDecomposition(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.subTestData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows23Cols00"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows00Cols33"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows01Cols23"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows02Cols13"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows03Cols12"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows03Cols123"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows20Cols123"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows31Cols31"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.BigMatrix.getSubMatrix(4)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertEquals(3)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.BigMatrix.getSubMatrix(2)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testSubMatrix(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.subTestData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.subColumn1"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.subColumn3"
call "org.apache.commons.math.linear.BigMatrixImplTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.BigMatrix.getColumnMatrix(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertEquals(3)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testGetColumnMatrix(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.subTestData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.subRow0"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.subRow3"
call "org.apache.commons.math.linear.BigMatrixImplTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.BigMatrix.getRowMatrix(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertEquals(3)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testGetRowMatrix(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.BigMatrixImpl.copy(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.BigMatrixImpl.transpose(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.BigMatrixImpl.hashCode(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertTrue(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.BigMatrixImpl.equals(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertFalse(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.BigMatrixImplTest.bigSingular"
call "org.apache.commons.math.linear.BigMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testEqualsAndHashCode(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testToString(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testToString(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testToString(0)" "org.apache.commons.math.linear.BigMatrixImpl.toString(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testToString(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testToString(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(0)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testToString(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.detData2"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createBigMatrix(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.BigMatrix.getData(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.setSubMatrix(3)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertEquals(2)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataPlus2"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createBigMatrix(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.getData(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)" "org.apache.commons.math.linear.BigMatrix.subtract(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)" "org.apache.commons.math.linear.BigMatrix.getNorm(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)" "org.apache.commons.math.linear.BigMatrixImplTest.assertTrue(2)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
call "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)" "org.apache.commons.math.linear.BigMatrixImplTest.assertEquals(4)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
call "org.apache.commons.math.linear.BigMatrixImplTest.splitLU(3)" "org.apache.commons.math.linear.BigMatrix.isSquare(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.splitLU(3)" "org.apache.commons.math.linear.BigMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.splitLU(3)" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.splitLU(3)" "org.apache.commons.math.linear.BigMatrix.getEntry(2)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.splitLU(3)"
call "org.apache.commons.math.linear.BigMatrixImplTest.permuteRows(2)" "org.apache.commons.math.linear.BigMatrix.isSquare(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.permuteRows(2)" "org.apache.commons.math.linear.BigMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.permuteRows(2)" "org.apache.commons.math.linear.BigMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.permuteRows(2)" "org.apache.commons.math.linear.BigMatrix.getEntry(2)"
call "org.apache.commons.math.linear.BigMatrixImplTest.permuteRows(2)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.permuteRows(2)"
call "org.apache.commons.math.linear.BigMatrixImplTest.verifyDecomposition(2)" "org.apache.commons.math.linear.BigMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.verifyDecomposition(2)" "org.apache.commons.math.linear.BigMatrixImplTest.splitLU(3)"
call "org.apache.commons.math.linear.BigMatrixImplTest.verifyDecomposition(2)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.verifyDecomposition(2)" "org.apache.commons.math.linear.BigMatrixImpl.getPermutation(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.verifyDecomposition(2)" "org.apache.commons.math.linear.BigMatrixImplTest.permuteRows(2)"
call "org.apache.commons.math.linear.BigMatrixImplTest.verifyDecomposition(2)" "org.apache.commons.math.linear.BigMatrix.multiply(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.verifyDecomposition(2)" "org.apache.commons.math.linear.BigMatrixImplTest.normTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.verifyDecomposition(2)" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.verifyDecomposition(2)"
call "org.apache.commons.math.linear.BigMatrixImplTest.dumpMatrix(1)" "org.apache.commons.math.linear.BigMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.dumpMatrix(1)" "org.apache.commons.math.linear.BigMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.dumpMatrix(1)" "org.apache.commons.math.linear.BigMatrix.getEntry(2)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.dumpMatrix(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.class$(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testDataString"
reference "org.apache.commons.math.linear.BigMatrixImplTest.id" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.id"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testData" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testDataLU" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testDataLU"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testDataPlus2" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testDataPlus2"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testDataMinus" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testDataMinus"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testDataRow1" "double[]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testDataRow1"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testDataCol3" "double[]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testDataCol3"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testDataInv" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testDataInv"
reference "org.apache.commons.math.linear.BigMatrixImplTest.preMultTest" "double[]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.preMultTest"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testData2" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testData2"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testData2T" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testData2T"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testDataPlusInv" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testDataPlusInv"
reference "org.apache.commons.math.linear.BigMatrixImplTest.luData" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.luData"
reference "org.apache.commons.math.linear.BigMatrixImplTest.luDataLUDecomposition" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.luDataLUDecomposition"
reference "org.apache.commons.math.linear.BigMatrixImplTest.singular" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.singular"
reference "org.apache.commons.math.linear.BigMatrixImplTest.bigSingular" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.bigSingular"
reference "org.apache.commons.math.linear.BigMatrixImplTest.detData" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.detData"
reference "org.apache.commons.math.linear.BigMatrixImplTest.detData2" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.detData2"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testVector" "double[]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testVector"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testVector2" "double[]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testVector2"
reference "org.apache.commons.math.linear.BigMatrixImplTest.subTestData" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.subTestData"
reference "org.apache.commons.math.linear.BigMatrixImplTest.subRows02Cols13" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.subRows02Cols13"
reference "org.apache.commons.math.linear.BigMatrixImplTest.subRows03Cols12" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.subRows03Cols12"
reference "org.apache.commons.math.linear.BigMatrixImplTest.subRows03Cols123" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.subRows03Cols123"
reference "org.apache.commons.math.linear.BigMatrixImplTest.subRows20Cols123" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.subRows20Cols123"
reference "org.apache.commons.math.linear.BigMatrixImplTest.subRows31Cols31" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.subRows31Cols31"
reference "org.apache.commons.math.linear.BigMatrixImplTest.subRows01Cols23" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.subRows01Cols23"
reference "org.apache.commons.math.linear.BigMatrixImplTest.subRows23Cols00" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.subRows23Cols00"
reference "org.apache.commons.math.linear.BigMatrixImplTest.subRows00Cols33" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.subRows00Cols33"
reference "org.apache.commons.math.linear.BigMatrixImplTest.subRow0" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.subRow0"
reference "org.apache.commons.math.linear.BigMatrixImplTest.subRow3" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.subRow3"
reference "org.apache.commons.math.linear.BigMatrixImplTest.subColumn1" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.subColumn1"
reference "org.apache.commons.math.linear.BigMatrixImplTest.subColumn3" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.subColumn3"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.entryTolerance"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.normTolerance"
reference "org.apache.commons.math.linear.BigMatrixImplTest.d3" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.d3"
reference "org.apache.commons.math.linear.BigMatrixImplTest.d4" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.d4"
reference "org.apache.commons.math.linear.BigMatrixImplTest.d5" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.d5"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.class$org$apache$commons$math$linear$BigMatrixImplTest"
reference "org.apache.commons.math.stat.descriptive.InteractionTest" "org.apache.commons.math.stat.descriptive.moment.FourthMoment"
reference "org.apache.commons.math.stat.descriptive.InteractionTest" "org.apache.commons.math.stat.descriptive.moment.Mean"
reference "org.apache.commons.math.stat.descriptive.InteractionTest" "org.apache.commons.math.stat.descriptive.moment.Variance"
reference "org.apache.commons.math.stat.descriptive.InteractionTest" "org.apache.commons.math.stat.descriptive.moment.Skewness"
reference "org.apache.commons.math.stat.descriptive.InteractionTest" "org.apache.commons.math.stat.descriptive.moment.Kurtosis"
reference "org.apache.commons.math.stat.descriptive.InteractionTest" "junit.framework.TestCase"
call "org.apache.commons.math.stat.descriptive.InteractionTest.InteractionTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.stat.descriptive.InteractionTest.InteractionTest(1)" "org.apache.commons.math.stat.descriptive.InteractionTest.mean"
reference "org.apache.commons.math.stat.descriptive.InteractionTest.InteractionTest(1)" "org.apache.commons.math.stat.descriptive.InteractionTest.var"
reference "org.apache.commons.math.stat.descriptive.InteractionTest.InteractionTest(1)" "org.apache.commons.math.stat.descriptive.InteractionTest.skew"
reference "org.apache.commons.math.stat.descriptive.InteractionTest.InteractionTest(1)" "org.apache.commons.math.stat.descriptive.InteractionTest.kurt"
reference "org.apache.commons.math.stat.descriptive.InteractionTest.InteractionTest(1)" "org.apache.commons.math.stat.descriptive.InteractionTest.tolerance"
reference "org.apache.commons.math.stat.descriptive.InteractionTest.InteractionTest(1)" "org.apache.commons.math.stat.descriptive.InteractionTest.testArray"
contain "org.apache.commons.math.stat.descriptive.InteractionTest" "org.apache.commons.math.stat.descriptive.InteractionTest.InteractionTest(1)"
call "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.FourthMoment(0)"
call "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(1)"
call "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)"
call "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(1)"
call "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(1)"
reference "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.InteractionTest.testArray"
call "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.increment(1)"
reference "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.InteractionTest.mean"
call "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.InteractionTest.tolerance"
call "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.InteractionTest.assertEquals(3)"
reference "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.InteractionTest.var"
call "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.InteractionTest.skew"
call "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.moment.Skewness.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.InteractionTest.kurt"
call "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.InteractionTest" "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)"
contain "org.apache.commons.math.stat.descriptive.InteractionTest" "org.apache.commons.math.stat.descriptive.InteractionTest.mean"
contain "org.apache.commons.math.stat.descriptive.InteractionTest" "org.apache.commons.math.stat.descriptive.InteractionTest.var"
contain "org.apache.commons.math.stat.descriptive.InteractionTest" "org.apache.commons.math.stat.descriptive.InteractionTest.skew"
contain "org.apache.commons.math.stat.descriptive.InteractionTest" "org.apache.commons.math.stat.descriptive.InteractionTest.kurt"
contain "org.apache.commons.math.stat.descriptive.InteractionTest" "org.apache.commons.math.stat.descriptive.InteractionTest.tolerance"
reference "org.apache.commons.math.stat.descriptive.InteractionTest.testArray" "double[]"
contain "org.apache.commons.math.stat.descriptive.InteractionTest" "org.apache.commons.math.stat.descriptive.InteractionTest.testArray"
reference "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction.BrownDennisFunction(5)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction" "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction.BrownDennisFunction(5)"
reference "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction.getJacobian(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction.m"
contain "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction" "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction.m"
contain "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction" "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction.getResiduals(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Bar" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Bar.Bar(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Bar.this$0"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Bar" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Bar.Bar(0)"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Bar" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Bar.heresBar(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Bar.this$0" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Bar" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Bar.this$0"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne1Function" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne1Function" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne1Function" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne1Function" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.Osborne1Function(4)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.Osborne1Function" "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.Osborne1Function(4)"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.parameters"
call "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.getJacobian(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.m"
contain "org.apache.commons.math.estimation.MinpackTest.Osborne1Function" "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.parameters"
call "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.m"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.y"
contain "org.apache.commons.math.estimation.MinpackTest.Osborne1Function" "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.getResiduals(0)"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.static {...}" "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.y"
contain "org.apache.commons.math.estimation.MinpackTest.Osborne1Function" "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.static {...}"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.y" "double[]"
contain "org.apache.commons.math.estimation.MinpackTest.Osborne1Function" "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.y"
reference "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest" "org.apache.commons.math.analysis.DividedDifferenceInterpolator"
reference "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest" "org.apache.commons.math.analysis.Expm1Function"
reference "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest" "org.apache.commons.math.analysis.UnivariateRealFunction"
reference "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest" "org.apache.commons.math.analysis.UnivariateRealInterpolator"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.DividedDifferenceInterpolatorTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest" "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.DividedDifferenceInterpolatorTest(0)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testSinFunction(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testSinFunction(0)" "org.apache.commons.math.analysis.DividedDifferenceInterpolator.DividedDifferenceInterpolator(0)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealInterpolator.interpolate(2)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testSinFunction(0)" "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.partialerror(2)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testSinFunction(0)" "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest" "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testSinFunction(0)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testExpm1Function(0)" "org.apache.commons.math.analysis.Expm1Function.Expm1Function(0)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testExpm1Function(0)" "org.apache.commons.math.analysis.DividedDifferenceInterpolator.DividedDifferenceInterpolator(0)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testExpm1Function(0)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testExpm1Function(0)" "org.apache.commons.math.analysis.UnivariateRealInterpolator.interpolate(2)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testExpm1Function(0)" "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.partialerror(2)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testExpm1Function(0)" "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest" "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testExpm1Function(0)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testParameters(0)" "org.apache.commons.math.analysis.DividedDifferenceInterpolator.DividedDifferenceInterpolator(0)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealInterpolator.interpolate(2)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testParameters(0)" "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.fail(1)"
contain "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest" "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testParameters(0)"
contain "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest" "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.partialerror(2)"
reference "org.apache.commons.math.ode.TestProblemAbstract" "double[]"
reference "org.apache.commons.math.ode.TestProblemAbstract" "org.apache.commons.math.ode.SwitchingFunction"
reference "org.apache.commons.math.ode.TestProblemAbstract" "org.apache.commons.math.ode.FirstOrderDifferentialEquations"
reference "org.apache.commons.math.ode.TestProblemAbstract.TestProblemAbstract(0)" "org.apache.commons.math.ode.TestProblemAbstract.n"
reference "org.apache.commons.math.ode.TestProblemAbstract.TestProblemAbstract(0)" "org.apache.commons.math.ode.TestProblemAbstract.calls"
reference "org.apache.commons.math.ode.TestProblemAbstract.TestProblemAbstract(0)" "org.apache.commons.math.ode.TestProblemAbstract.t0"
reference "org.apache.commons.math.ode.TestProblemAbstract.TestProblemAbstract(0)" "org.apache.commons.math.ode.TestProblemAbstract.y0"
reference "org.apache.commons.math.ode.TestProblemAbstract.TestProblemAbstract(0)" "org.apache.commons.math.ode.TestProblemAbstract.t1"
reference "org.apache.commons.math.ode.TestProblemAbstract.TestProblemAbstract(0)" "org.apache.commons.math.ode.TestProblemAbstract.errorScale"
contain "org.apache.commons.math.ode.TestProblemAbstract" "org.apache.commons.math.ode.TestProblemAbstract.TestProblemAbstract(0)"
reference "org.apache.commons.math.ode.TestProblemAbstract.TestProblemAbstract(1)" "org.apache.commons.math.ode.TestProblemAbstract.n"
reference "org.apache.commons.math.ode.TestProblemAbstract.TestProblemAbstract(1)" "org.apache.commons.math.ode.TestProblemAbstract.calls"
reference "org.apache.commons.math.ode.TestProblemAbstract.TestProblemAbstract(1)" "org.apache.commons.math.ode.TestProblemAbstract.t0"
reference "org.apache.commons.math.ode.TestProblemAbstract.TestProblemAbstract(1)" "org.apache.commons.math.ode.TestProblemAbstract.y0"
reference "org.apache.commons.math.ode.TestProblemAbstract.TestProblemAbstract(1)" "org.apache.commons.math.ode.TestProblemAbstract.errorScale"
reference "org.apache.commons.math.ode.TestProblemAbstract.TestProblemAbstract(1)" "org.apache.commons.math.ode.TestProblemAbstract.t1"
contain "org.apache.commons.math.ode.TestProblemAbstract" "org.apache.commons.math.ode.TestProblemAbstract.TestProblemAbstract(1)"
contain "org.apache.commons.math.ode.TestProblemAbstract" "org.apache.commons.math.ode.TestProblemAbstract.clone(0)"
reference "org.apache.commons.math.ode.TestProblemAbstract.setInitialConditions(2)" "org.apache.commons.math.ode.TestProblemAbstract.calls"
reference "org.apache.commons.math.ode.TestProblemAbstract.setInitialConditions(2)" "org.apache.commons.math.ode.TestProblemAbstract.n"
reference "org.apache.commons.math.ode.TestProblemAbstract.setInitialConditions(2)" "org.apache.commons.math.ode.TestProblemAbstract.t0"
reference "org.apache.commons.math.ode.TestProblemAbstract.setInitialConditions(2)" "org.apache.commons.math.ode.TestProblemAbstract.y0"
contain "org.apache.commons.math.ode.TestProblemAbstract" "org.apache.commons.math.ode.TestProblemAbstract.setInitialConditions(2)"
reference "org.apache.commons.math.ode.TestProblemAbstract.setFinalConditions(1)" "org.apache.commons.math.ode.TestProblemAbstract.t1"
contain "org.apache.commons.math.ode.TestProblemAbstract" "org.apache.commons.math.ode.TestProblemAbstract.setFinalConditions(1)"
reference "org.apache.commons.math.ode.TestProblemAbstract.setErrorScale(1)" "org.apache.commons.math.ode.TestProblemAbstract.errorScale"
contain "org.apache.commons.math.ode.TestProblemAbstract" "org.apache.commons.math.ode.TestProblemAbstract.setErrorScale(1)"
reference "org.apache.commons.math.ode.TestProblemAbstract.getDimension(0)" "org.apache.commons.math.ode.TestProblemAbstract.n"
contain "org.apache.commons.math.ode.TestProblemAbstract" "org.apache.commons.math.ode.TestProblemAbstract.getDimension(0)"
reference "org.apache.commons.math.ode.TestProblemAbstract.getInitialTime(0)" "org.apache.commons.math.ode.TestProblemAbstract.t0"
contain "org.apache.commons.math.ode.TestProblemAbstract" "org.apache.commons.math.ode.TestProblemAbstract.getInitialTime(0)"
reference "org.apache.commons.math.ode.TestProblemAbstract.getInitialState(0)" "org.apache.commons.math.ode.TestProblemAbstract.y0"
contain "org.apache.commons.math.ode.TestProblemAbstract" "org.apache.commons.math.ode.TestProblemAbstract.getInitialState(0)"
reference "org.apache.commons.math.ode.TestProblemAbstract.getFinalTime(0)" "org.apache.commons.math.ode.TestProblemAbstract.t1"
contain "org.apache.commons.math.ode.TestProblemAbstract" "org.apache.commons.math.ode.TestProblemAbstract.getFinalTime(0)"
reference "org.apache.commons.math.ode.TestProblemAbstract.getErrorScale(0)" "org.apache.commons.math.ode.TestProblemAbstract.errorScale"
contain "org.apache.commons.math.ode.TestProblemAbstract" "org.apache.commons.math.ode.TestProblemAbstract.getErrorScale(0)"
contain "org.apache.commons.math.ode.TestProblemAbstract" "org.apache.commons.math.ode.TestProblemAbstract.getSwitchingFunctions(0)"
reference "org.apache.commons.math.ode.TestProblemAbstract.getCalls(0)" "org.apache.commons.math.ode.TestProblemAbstract.calls"
contain "org.apache.commons.math.ode.TestProblemAbstract" "org.apache.commons.math.ode.TestProblemAbstract.getCalls(0)"
reference "org.apache.commons.math.ode.TestProblemAbstract.computeDerivatives(3)" "org.apache.commons.math.ode.TestProblemAbstract.calls"
call "org.apache.commons.math.ode.TestProblemAbstract.computeDerivatives(3)" "org.apache.commons.math.ode.TestProblemAbstract.doComputeDerivatives(3)"
contain "org.apache.commons.math.ode.TestProblemAbstract" "org.apache.commons.math.ode.TestProblemAbstract.computeDerivatives(3)"
contain "org.apache.commons.math.ode.TestProblemAbstract" "org.apache.commons.math.ode.TestProblemAbstract.doComputeDerivatives(3)"
contain "org.apache.commons.math.ode.TestProblemAbstract" "org.apache.commons.math.ode.TestProblemAbstract.computeTheoreticalState(1)"
contain "org.apache.commons.math.ode.TestProblemAbstract" "org.apache.commons.math.ode.TestProblemAbstract.n"
contain "org.apache.commons.math.ode.TestProblemAbstract" "org.apache.commons.math.ode.TestProblemAbstract.calls"
contain "org.apache.commons.math.ode.TestProblemAbstract" "org.apache.commons.math.ode.TestProblemAbstract.t0"
reference "org.apache.commons.math.ode.TestProblemAbstract.y0" "double[]"
contain "org.apache.commons.math.ode.TestProblemAbstract" "org.apache.commons.math.ode.TestProblemAbstract.y0"
contain "org.apache.commons.math.ode.TestProblemAbstract" "org.apache.commons.math.ode.TestProblemAbstract.t1"
reference "org.apache.commons.math.ode.TestProblemAbstract.errorScale" "double[]"
contain "org.apache.commons.math.ode.TestProblemAbstract" "org.apache.commons.math.ode.TestProblemAbstract.errorScale"
reference "org.apache.commons.math.distribution.WeibullDistributionTest" "org.apache.commons.math.distribution.WeibullDistributionImpl"
reference "org.apache.commons.math.distribution.WeibullDistributionTest" "org.apache.commons.math.distribution.WeibullDistribution"
reference "org.apache.commons.math.distribution.WeibullDistributionTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest"
call "org.apache.commons.math.distribution.WeibullDistributionTest.WeibullDistributionTest(1)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.ContinuousDistributionAbstractTest(1)"
contain "org.apache.commons.math.distribution.WeibullDistributionTest" "org.apache.commons.math.distribution.WeibullDistributionTest.WeibullDistributionTest(1)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.makeDistribution(0)" "org.apache.commons.math.distribution.WeibullDistributionImpl.WeibullDistributionImpl(2)"
contain "org.apache.commons.math.distribution.WeibullDistributionTest" "org.apache.commons.math.distribution.WeibullDistributionTest.makeDistribution(0)"
contain "org.apache.commons.math.distribution.WeibullDistributionTest" "org.apache.commons.math.distribution.WeibullDistributionTest.makeCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.WeibullDistributionTest" "org.apache.commons.math.distribution.WeibullDistributionTest.makeCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.WeibullDistributionTest.setInverseCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.WeibullDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.WeibullDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.WeibullDistributionTest" "org.apache.commons.math.distribution.WeibullDistributionTest.testInverseCumulativeProbabilityExtremes(0)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testAlpha(0)" "org.apache.commons.math.distribution.WeibullDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testAlpha(0)" "org.apache.commons.math.distribution.WeibullDistribution.setShape(1)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testAlpha(0)" "org.apache.commons.math.distribution.WeibullDistribution.getShape(0)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testAlpha(0)" "org.apache.commons.math.distribution.WeibullDistributionTest.assertEquals(3)"
contain "org.apache.commons.math.distribution.WeibullDistributionTest" "org.apache.commons.math.distribution.WeibullDistributionTest.testAlpha(0)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testBeta(0)" "org.apache.commons.math.distribution.WeibullDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testBeta(0)" "org.apache.commons.math.distribution.WeibullDistribution.setScale(1)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testBeta(0)" "org.apache.commons.math.distribution.WeibullDistribution.getScale(0)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testBeta(0)" "org.apache.commons.math.distribution.WeibullDistributionTest.assertEquals(3)"
contain "org.apache.commons.math.distribution.WeibullDistributionTest" "org.apache.commons.math.distribution.WeibullDistributionTest.testBeta(0)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testSetAlpha(0)" "org.apache.commons.math.distribution.WeibullDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testSetAlpha(0)" "org.apache.commons.math.distribution.WeibullDistribution.setShape(1)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testSetAlpha(0)" "org.apache.commons.math.distribution.WeibullDistributionTest.fail(1)"
contain "org.apache.commons.math.distribution.WeibullDistributionTest" "org.apache.commons.math.distribution.WeibullDistributionTest.testSetAlpha(0)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testSetBeta(0)" "org.apache.commons.math.distribution.WeibullDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testSetBeta(0)" "org.apache.commons.math.distribution.WeibullDistribution.setScale(1)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testSetBeta(0)" "org.apache.commons.math.distribution.WeibullDistributionTest.fail(1)"
contain "org.apache.commons.math.distribution.WeibullDistributionTest" "org.apache.commons.math.distribution.WeibullDistributionTest.testSetBeta(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.2" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Bar"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.2" "org.apache.commons.math.util.NumberTransformer"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.2" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.2.{...}" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.2.this$0"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.2" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.2.{...}"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.2.transform(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Bar.heresBar(0)"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.2" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.2.transform(1)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.2.this$0" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.2" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.2.this$0"
reference "org.apache.commons.math.ode.EulerStepInterpolatorTest" "double[]"
reference "org.apache.commons.math.ode.EulerStepInterpolatorTest" "org.apache.commons.math.ode.EulerStepInterpolator"
reference "org.apache.commons.math.ode.EulerStepInterpolatorTest" "org.apache.commons.math.ode.EulerStepInterpolatorTest.DummyEquations"
reference "org.apache.commons.math.ode.EulerStepInterpolatorTest" "org.apache.commons.math.ode.TestProblem1"
reference "org.apache.commons.math.ode.EulerStepInterpolatorTest" "org.apache.commons.math.ode.EulerIntegrator"
reference "org.apache.commons.math.ode.EulerStepInterpolatorTest" "org.apache.commons.math.ode.ContinuousOutputModel"
reference "org.apache.commons.math.ode.EulerStepInterpolatorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.EulerStepInterpolatorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.EulerStepInterpolatorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.EulerStepInterpolatorTest" "org.apache.commons.math.ode.IntegratorException"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.EulerStepInterpolatorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.EulerStepInterpolatorTest" "org.apache.commons.math.ode.EulerStepInterpolatorTest.EulerStepInterpolatorTest(1)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testNoReset(0)" "org.apache.commons.math.ode.EulerStepInterpolator.EulerStepInterpolator(0)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testNoReset(0)" "org.apache.commons.math.ode.EulerStepInterpolatorTest.DummyEquations.DummyEquations(1)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testNoReset(0)" "org.apache.commons.math.ode.EulerStepInterpolator.reinitialize(4)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testNoReset(0)" "org.apache.commons.math.ode.EulerStepInterpolator.storeTime(1)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testNoReset(0)" "org.apache.commons.math.ode.EulerStepInterpolator.shift(0)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testNoReset(0)" "org.apache.commons.math.ode.EulerStepInterpolator.getInterpolatedState(0)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testNoReset(0)" "org.apache.commons.math.ode.EulerStepInterpolatorTest.assertTrue(1)"
contain "org.apache.commons.math.ode.EulerStepInterpolatorTest" "org.apache.commons.math.ode.EulerStepInterpolatorTest.testNoReset(0)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testInterpolationAtBounds(0)" "org.apache.commons.math.ode.EulerStepInterpolator.EulerStepInterpolator(0)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testInterpolationAtBounds(0)" "org.apache.commons.math.ode.EulerStepInterpolatorTest.DummyEquations.DummyEquations(1)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testInterpolationAtBounds(0)" "org.apache.commons.math.ode.EulerStepInterpolator.reinitialize(4)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testInterpolationAtBounds(0)" "org.apache.commons.math.ode.EulerStepInterpolator.storeTime(1)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testInterpolationAtBounds(0)" "org.apache.commons.math.ode.EulerStepInterpolator.shift(0)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testInterpolationAtBounds(0)" "org.apache.commons.math.ode.EulerStepInterpolator.getPreviousTime(0)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testInterpolationAtBounds(0)" "org.apache.commons.math.ode.EulerStepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testInterpolationAtBounds(0)" "org.apache.commons.math.ode.EulerStepInterpolator.getInterpolatedState(0)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testInterpolationAtBounds(0)" "org.apache.commons.math.ode.EulerStepInterpolatorTest.assertTrue(1)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testInterpolationAtBounds(0)" "org.apache.commons.math.ode.EulerStepInterpolator.getCurrentTime(0)"
contain "org.apache.commons.math.ode.EulerStepInterpolatorTest" "org.apache.commons.math.ode.EulerStepInterpolatorTest.testInterpolationAtBounds(0)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testInterpolationInside(0)" "org.apache.commons.math.ode.EulerStepInterpolator.EulerStepInterpolator(0)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testInterpolationInside(0)" "org.apache.commons.math.ode.EulerStepInterpolatorTest.DummyEquations.DummyEquations(1)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testInterpolationInside(0)" "org.apache.commons.math.ode.EulerStepInterpolator.reinitialize(4)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testInterpolationInside(0)" "org.apache.commons.math.ode.EulerStepInterpolator.storeTime(1)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testInterpolationInside(0)" "org.apache.commons.math.ode.EulerStepInterpolator.shift(0)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testInterpolationInside(0)" "org.apache.commons.math.ode.EulerStepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testInterpolationInside(0)" "org.apache.commons.math.ode.EulerStepInterpolator.getInterpolatedState(0)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testInterpolationInside(0)" "org.apache.commons.math.ode.EulerStepInterpolatorTest.assertTrue(1)"
contain "org.apache.commons.math.ode.EulerStepInterpolatorTest" "org.apache.commons.math.ode.EulerStepInterpolatorTest.testInterpolationInside(0)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.EulerIntegrator.EulerIntegrator(1)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.ContinuousOutputModel(0)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.EulerIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.EulerIntegrator.integrate(5)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.EulerIntegrator.getStepHandler(0)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.EulerStepInterpolatorTest.assertTrue(1)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState(0)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem1.computeTheoreticalState(1)"
contain "org.apache.commons.math.ode.EulerStepInterpolatorTest" "org.apache.commons.math.ode.EulerStepInterpolatorTest.testSerialization(0)"
reference "org.apache.commons.math.ode.EulerStepInterpolatorTest.suite(0)" "org.apache.commons.math.ode.EulerStepInterpolatorTest.class$org$apache$commons$math$ode$EulerStepInterpolatorTest"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.suite(0)" "org.apache.commons.math.ode.EulerStepInterpolatorTest.class$(1)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.EulerStepInterpolatorTest" "org.apache.commons.math.ode.EulerStepInterpolatorTest.suite(0)"
contain "org.apache.commons.math.ode.EulerStepInterpolatorTest" "org.apache.commons.math.ode.EulerStepInterpolatorTest.class$(1)"
contain "org.apache.commons.math.ode.EulerStepInterpolatorTest" "org.apache.commons.math.ode.EulerStepInterpolatorTest.class$org$apache$commons$math$ode$EulerStepInterpolatorTest"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.1" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Foo"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.1" "org.apache.commons.math.util.NumberTransformer"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.1" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.1.{...}" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.1.this$0"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.1" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.1.{...}"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.1.transform(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Foo.heresFoo(0)"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.1" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.1.transform(1)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.1.this$0" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.1" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.1.this$0"
reference "org.apache.commons.math.stat.StatUtilsTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.StatUtilsTest" "junit.framework.TestCase"
reference "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtils"
reference "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.stat.StatUtilsTest.StatUtilsTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.stat.StatUtilsTest.StatUtilsTest(1)" "org.apache.commons.math.stat.StatUtilsTest.one"
reference "org.apache.commons.math.stat.StatUtilsTest.StatUtilsTest(1)" "org.apache.commons.math.stat.StatUtilsTest.two"
reference "org.apache.commons.math.stat.StatUtilsTest.StatUtilsTest(1)" "org.apache.commons.math.stat.StatUtilsTest.three"
reference "org.apache.commons.math.stat.StatUtilsTest.StatUtilsTest(1)" "org.apache.commons.math.stat.StatUtilsTest.mean"
reference "org.apache.commons.math.stat.StatUtilsTest.StatUtilsTest(1)" "org.apache.commons.math.stat.StatUtilsTest.sumSq"
reference "org.apache.commons.math.stat.StatUtilsTest.StatUtilsTest(1)" "org.apache.commons.math.stat.StatUtilsTest.sum"
reference "org.apache.commons.math.stat.StatUtilsTest.StatUtilsTest(1)" "org.apache.commons.math.stat.StatUtilsTest.var"
reference "org.apache.commons.math.stat.StatUtilsTest.StatUtilsTest(1)" "org.apache.commons.math.stat.StatUtilsTest.std"
reference "org.apache.commons.math.stat.StatUtilsTest.StatUtilsTest(1)" "org.apache.commons.math.stat.StatUtilsTest.n"
reference "org.apache.commons.math.stat.StatUtilsTest.StatUtilsTest(1)" "org.apache.commons.math.stat.StatUtilsTest.min"
reference "org.apache.commons.math.stat.StatUtilsTest.StatUtilsTest(1)" "org.apache.commons.math.stat.StatUtilsTest.max"
reference "org.apache.commons.math.stat.StatUtilsTest.StatUtilsTest(1)" "org.apache.commons.math.stat.StatUtilsTest.skewness"
reference "org.apache.commons.math.stat.StatUtilsTest.StatUtilsTest(1)" "org.apache.commons.math.stat.StatUtilsTest.kurtosis"
reference "org.apache.commons.math.stat.StatUtilsTest.StatUtilsTest(1)" "org.apache.commons.math.stat.StatUtilsTest.tolerance"
reference "org.apache.commons.math.stat.StatUtilsTest.StatUtilsTest(1)" "org.apache.commons.math.stat.StatUtilsTest.nan"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.StatUtilsTest(1)"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.setUp(0)"
reference "org.apache.commons.math.stat.StatUtilsTest.suite(0)" "org.apache.commons.math.stat.StatUtilsTest.class$org$apache$commons$math$stat$StatUtilsTest"
call "org.apache.commons.math.stat.StatUtilsTest.suite(0)" "org.apache.commons.math.stat.StatUtilsTest.class$(1)"
call "org.apache.commons.math.stat.StatUtilsTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.StatUtilsTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.suite(0)"
reference "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtilsTest.one"
reference "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtilsTest.two"
reference "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtilsTest.three"
reference "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtilsTest.sum"
call "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtils.sum(1)"
reference "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtilsTest.tolerance"
call "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtilsTest.assertEquals(4)"
reference "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtilsTest.sumSq"
call "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtils.sumSq(1)"
reference "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtilsTest.var"
call "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtils.variance(1)"
reference "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtilsTest.mean"
call "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtils.variance(2)"
call "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtils.mean(1)"
reference "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtilsTest.min"
call "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtils.min(1)"
reference "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtilsTest.max"
call "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtils.max(1)"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.testStats(0)"
call "org.apache.commons.math.stat.StatUtilsTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.StatUtils.mean(1)"
call "org.apache.commons.math.stat.StatUtilsTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.StatUtilsTest.assertTrue(2)"
call "org.apache.commons.math.stat.StatUtilsTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.StatUtils.variance(1)"
reference "org.apache.commons.math.stat.StatUtilsTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.StatUtilsTest.one"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.testN0andN1Conditions(0)"
call "org.apache.commons.math.stat.StatUtilsTest.testArrayIndexConditions(0)" "org.apache.commons.math.stat.StatUtils.sum(3)"
call "org.apache.commons.math.stat.StatUtilsTest.testArrayIndexConditions(0)" "org.apache.commons.math.stat.StatUtilsTest.assertEquals(4)"
call "org.apache.commons.math.stat.StatUtilsTest.testArrayIndexConditions(0)" "org.apache.commons.math.stat.StatUtilsTest.assertTrue(2)"
call "org.apache.commons.math.stat.StatUtilsTest.testArrayIndexConditions(0)" "org.apache.commons.math.stat.StatUtilsTest.assertTrue(1)"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.testArrayIndexConditions(0)"
call "org.apache.commons.math.stat.StatUtilsTest.testSumSq(0)" "org.apache.commons.math.stat.StatUtils.sumSq(1)"
call "org.apache.commons.math.stat.StatUtilsTest.testSumSq(0)" "org.apache.commons.math.stat.StatUtilsTest.fail(1)"
call "org.apache.commons.math.stat.StatUtilsTest.testSumSq(0)" "org.apache.commons.math.stat.StatUtils.sumSq(3)"
reference "org.apache.commons.math.stat.StatUtilsTest.testSumSq(0)" "org.apache.commons.math.stat.StatUtilsTest.tolerance"
call "org.apache.commons.math.stat.StatUtilsTest.testSumSq(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
reference "org.apache.commons.math.stat.StatUtilsTest.testSumSq(0)" "org.apache.commons.math.stat.StatUtilsTest.two"
reference "org.apache.commons.math.stat.StatUtilsTest.testSumSq(0)" "org.apache.commons.math.stat.StatUtilsTest.one"
reference "org.apache.commons.math.stat.StatUtilsTest.testSumSq(0)" "org.apache.commons.math.stat.StatUtilsTest.three"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.testSumSq(0)"
call "org.apache.commons.math.stat.StatUtilsTest.testProduct(0)" "org.apache.commons.math.stat.StatUtils.product(1)"
call "org.apache.commons.math.stat.StatUtilsTest.testProduct(0)" "org.apache.commons.math.stat.StatUtilsTest.fail(1)"
call "org.apache.commons.math.stat.StatUtilsTest.testProduct(0)" "org.apache.commons.math.stat.StatUtils.product(3)"
reference "org.apache.commons.math.stat.StatUtilsTest.testProduct(0)" "org.apache.commons.math.stat.StatUtilsTest.tolerance"
call "org.apache.commons.math.stat.StatUtilsTest.testProduct(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
reference "org.apache.commons.math.stat.StatUtilsTest.testProduct(0)" "org.apache.commons.math.stat.StatUtilsTest.two"
reference "org.apache.commons.math.stat.StatUtilsTest.testProduct(0)" "org.apache.commons.math.stat.StatUtilsTest.one"
reference "org.apache.commons.math.stat.StatUtilsTest.testProduct(0)" "org.apache.commons.math.stat.StatUtilsTest.three"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.testProduct(0)"
call "org.apache.commons.math.stat.StatUtilsTest.testSumLog(0)" "org.apache.commons.math.stat.StatUtils.sumLog(1)"
call "org.apache.commons.math.stat.StatUtilsTest.testSumLog(0)" "org.apache.commons.math.stat.StatUtilsTest.fail(1)"
call "org.apache.commons.math.stat.StatUtilsTest.testSumLog(0)" "org.apache.commons.math.stat.StatUtils.sumLog(3)"
reference "org.apache.commons.math.stat.StatUtilsTest.testSumLog(0)" "org.apache.commons.math.stat.StatUtilsTest.tolerance"
call "org.apache.commons.math.stat.StatUtilsTest.testSumLog(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
reference "org.apache.commons.math.stat.StatUtilsTest.testSumLog(0)" "org.apache.commons.math.stat.StatUtilsTest.two"
reference "org.apache.commons.math.stat.StatUtilsTest.testSumLog(0)" "org.apache.commons.math.stat.StatUtilsTest.one"
reference "org.apache.commons.math.stat.StatUtilsTest.testSumLog(0)" "org.apache.commons.math.stat.StatUtilsTest.three"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.testSumLog(0)"
call "org.apache.commons.math.stat.StatUtilsTest.testMean(0)" "org.apache.commons.math.stat.StatUtils.mean(3)"
call "org.apache.commons.math.stat.StatUtilsTest.testMean(0)" "org.apache.commons.math.stat.StatUtilsTest.fail(1)"
reference "org.apache.commons.math.stat.StatUtilsTest.testMean(0)" "org.apache.commons.math.stat.StatUtilsTest.tolerance"
call "org.apache.commons.math.stat.StatUtilsTest.testMean(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
reference "org.apache.commons.math.stat.StatUtilsTest.testMean(0)" "org.apache.commons.math.stat.StatUtilsTest.two"
reference "org.apache.commons.math.stat.StatUtilsTest.testMean(0)" "org.apache.commons.math.stat.StatUtilsTest.one"
reference "org.apache.commons.math.stat.StatUtilsTest.testMean(0)" "org.apache.commons.math.stat.StatUtilsTest.three"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.testMean(0)"
call "org.apache.commons.math.stat.StatUtilsTest.testVariance(0)" "org.apache.commons.math.stat.StatUtils.variance(3)"
call "org.apache.commons.math.stat.StatUtilsTest.testVariance(0)" "org.apache.commons.math.stat.StatUtilsTest.fail(1)"
reference "org.apache.commons.math.stat.StatUtilsTest.testVariance(0)" "org.apache.commons.math.stat.StatUtilsTest.tolerance"
call "org.apache.commons.math.stat.StatUtilsTest.testVariance(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
reference "org.apache.commons.math.stat.StatUtilsTest.testVariance(0)" "org.apache.commons.math.stat.StatUtilsTest.two"
reference "org.apache.commons.math.stat.StatUtilsTest.testVariance(0)" "org.apache.commons.math.stat.StatUtilsTest.one"
reference "org.apache.commons.math.stat.StatUtilsTest.testVariance(0)" "org.apache.commons.math.stat.StatUtilsTest.three"
call "org.apache.commons.math.stat.StatUtilsTest.testVariance(0)" "org.apache.commons.math.stat.StatUtils.variance(4)"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.testVariance(0)"
call "org.apache.commons.math.stat.StatUtilsTest.testMax(0)" "org.apache.commons.math.stat.StatUtils.max(3)"
call "org.apache.commons.math.stat.StatUtilsTest.testMax(0)" "org.apache.commons.math.stat.StatUtilsTest.fail(1)"
reference "org.apache.commons.math.stat.StatUtilsTest.testMax(0)" "org.apache.commons.math.stat.StatUtilsTest.tolerance"
call "org.apache.commons.math.stat.StatUtilsTest.testMax(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
reference "org.apache.commons.math.stat.StatUtilsTest.testMax(0)" "org.apache.commons.math.stat.StatUtilsTest.two"
reference "org.apache.commons.math.stat.StatUtilsTest.testMax(0)" "org.apache.commons.math.stat.StatUtilsTest.one"
reference "org.apache.commons.math.stat.StatUtilsTest.testMax(0)" "org.apache.commons.math.stat.StatUtilsTest.three"
reference "org.apache.commons.math.stat.StatUtilsTest.testMax(0)" "org.apache.commons.math.stat.StatUtilsTest.nan"
call "org.apache.commons.math.stat.StatUtilsTest.testMax(0)" "org.apache.commons.math.stat.StatUtils.max(1)"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.testMax(0)"
call "org.apache.commons.math.stat.StatUtilsTest.testMin(0)" "org.apache.commons.math.stat.StatUtils.min(3)"
call "org.apache.commons.math.stat.StatUtilsTest.testMin(0)" "org.apache.commons.math.stat.StatUtilsTest.fail(1)"
reference "org.apache.commons.math.stat.StatUtilsTest.testMin(0)" "org.apache.commons.math.stat.StatUtilsTest.tolerance"
call "org.apache.commons.math.stat.StatUtilsTest.testMin(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
reference "org.apache.commons.math.stat.StatUtilsTest.testMin(0)" "org.apache.commons.math.stat.StatUtilsTest.two"
reference "org.apache.commons.math.stat.StatUtilsTest.testMin(0)" "org.apache.commons.math.stat.StatUtilsTest.one"
reference "org.apache.commons.math.stat.StatUtilsTest.testMin(0)" "org.apache.commons.math.stat.StatUtilsTest.three"
reference "org.apache.commons.math.stat.StatUtilsTest.testMin(0)" "org.apache.commons.math.stat.StatUtilsTest.nan"
call "org.apache.commons.math.stat.StatUtilsTest.testMin(0)" "org.apache.commons.math.stat.StatUtils.min(1)"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.testMin(0)"
call "org.apache.commons.math.stat.StatUtilsTest.testPercentile(0)" "org.apache.commons.math.stat.StatUtils.percentile(2)"
call "org.apache.commons.math.stat.StatUtilsTest.testPercentile(0)" "org.apache.commons.math.stat.StatUtilsTest.fail(1)"
call "org.apache.commons.math.stat.StatUtilsTest.testPercentile(0)" "org.apache.commons.math.stat.StatUtils.percentile(4)"
reference "org.apache.commons.math.stat.StatUtilsTest.testPercentile(0)" "org.apache.commons.math.stat.StatUtilsTest.tolerance"
call "org.apache.commons.math.stat.StatUtilsTest.testPercentile(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
reference "org.apache.commons.math.stat.StatUtilsTest.testPercentile(0)" "org.apache.commons.math.stat.StatUtilsTest.two"
reference "org.apache.commons.math.stat.StatUtilsTest.testPercentile(0)" "org.apache.commons.math.stat.StatUtilsTest.one"
reference "org.apache.commons.math.stat.StatUtilsTest.testPercentile(0)" "org.apache.commons.math.stat.StatUtilsTest.three"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.testPercentile(0)"
call "org.apache.commons.math.stat.StatUtilsTest.testDifferenceStats(0)" "org.apache.commons.math.stat.StatUtils.meanDifference(2)"
call "org.apache.commons.math.stat.StatUtilsTest.testDifferenceStats(0)" "org.apache.commons.math.stat.StatUtils.sumDifference(2)"
call "org.apache.commons.math.stat.StatUtilsTest.testDifferenceStats(0)" "org.apache.commons.math.stat.StatUtils.sum(1)"
reference "org.apache.commons.math.stat.StatUtilsTest.testDifferenceStats(0)" "org.apache.commons.math.stat.StatUtilsTest.tolerance"
call "org.apache.commons.math.stat.StatUtilsTest.testDifferenceStats(0)" "org.apache.commons.math.stat.StatUtilsTest.assertEquals(3)"
call "org.apache.commons.math.stat.StatUtilsTest.testDifferenceStats(0)" "org.apache.commons.math.stat.StatUtils.mean(1)"
call "org.apache.commons.math.stat.StatUtilsTest.testDifferenceStats(0)" "org.apache.commons.math.stat.StatUtils.varianceDifference(3)"
call "org.apache.commons.math.stat.StatUtilsTest.testDifferenceStats(0)" "org.apache.commons.math.stat.StatUtils.variance(1)"
call "org.apache.commons.math.stat.StatUtilsTest.testDifferenceStats(0)" "org.apache.commons.math.stat.StatUtilsTest.fail(1)"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.testDifferenceStats(0)"
call "org.apache.commons.math.stat.StatUtilsTest.testGeometricMean(0)" "org.apache.commons.math.stat.StatUtils.geometricMean(1)"
call "org.apache.commons.math.stat.StatUtilsTest.testGeometricMean(0)" "org.apache.commons.math.stat.StatUtilsTest.fail(1)"
call "org.apache.commons.math.stat.StatUtilsTest.testGeometricMean(0)" "org.apache.commons.math.stat.StatUtils.sumLog(1)"
call "org.apache.commons.math.stat.StatUtilsTest.testGeometricMean(0)" "org.apache.commons.math.stat.StatUtilsTest.assertEquals(3)"
call "org.apache.commons.math.stat.StatUtilsTest.testGeometricMean(0)" "org.apache.commons.math.stat.StatUtils.sumLog(3)"
call "org.apache.commons.math.stat.StatUtilsTest.testGeometricMean(0)" "org.apache.commons.math.stat.StatUtils.geometricMean(3)"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.testGeometricMean(0)"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.class$(1)"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.one"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.two"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.three"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.mean"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.sumSq"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.sum"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.var"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.std"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.n"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.min"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.max"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.skewness"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.kurtosis"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.tolerance"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.nan"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.class$org$apache$commons$math$stat$StatUtilsTest"
reference "org.apache.commons.math.analysis.SinFunction" "org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction"
reference "org.apache.commons.math.analysis.SinFunction" "org.apache.commons.math.FunctionEvaluationException"
contain "org.apache.commons.math.analysis.SinFunction" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
contain "org.apache.commons.math.analysis.SinFunction" "org.apache.commons.math.analysis.SinFunction.value(1)"
call "org.apache.commons.math.analysis.SinFunction.derivative(0)" "org.apache.commons.math.analysis.SinFunction.1.{...}"
contain "org.apache.commons.math.analysis.SinFunction" "org.apache.commons.math.analysis.SinFunction.derivative(0)"
reference "org.apache.commons.math.util.DoubleArrayAbstractTest" "junit.framework.TestCase"
reference "org.apache.commons.math.util.DoubleArrayAbstractTest" "org.apache.commons.math.util.DoubleArray"
reference "org.apache.commons.math.util.DoubleArrayAbstractTest" "org.apache.commons.math.stat.StatUtils"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.DoubleArrayAbstractTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.util.DoubleArrayAbstractTest.DoubleArrayAbstractTest(1)" "org.apache.commons.math.util.DoubleArrayAbstractTest.da"
reference "org.apache.commons.math.util.DoubleArrayAbstractTest.DoubleArrayAbstractTest(1)" "org.apache.commons.math.util.DoubleArrayAbstractTest.ra"
contain "org.apache.commons.math.util.DoubleArrayAbstractTest" "org.apache.commons.math.util.DoubleArrayAbstractTest.DoubleArrayAbstractTest(1)"
reference "org.apache.commons.math.util.DoubleArrayAbstractTest.testAdd1000(0)" "org.apache.commons.math.util.DoubleArrayAbstractTest.da"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testAdd1000(0)" "org.apache.commons.math.util.DoubleArray.addElement(1)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testAdd1000(0)" "org.apache.commons.math.util.DoubleArray.getNumElements(0)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testAdd1000(0)" "org.apache.commons.math.util.DoubleArrayAbstractTest.assertEquals(3)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testAdd1000(0)" "org.apache.commons.math.util.DoubleArray.getElement(1)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testAdd1000(0)" "org.apache.commons.math.util.DoubleArrayAbstractTest.assertEquals(4)"
contain "org.apache.commons.math.util.DoubleArrayAbstractTest" "org.apache.commons.math.util.DoubleArrayAbstractTest.testAdd1000(0)"
reference "org.apache.commons.math.util.DoubleArrayAbstractTest.testGetValues(0)" "org.apache.commons.math.util.DoubleArrayAbstractTest.da"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testGetValues(0)" "org.apache.commons.math.util.DoubleArray.addElement(1)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testGetValues(0)" "org.apache.commons.math.util.DoubleArray.getElements(0)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testGetValues(0)" "org.apache.commons.math.util.DoubleArray.getNumElements(0)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testGetValues(0)" "org.apache.commons.math.util.DoubleArrayAbstractTest.assertEquals(4)"
contain "org.apache.commons.math.util.DoubleArrayAbstractTest" "org.apache.commons.math.util.DoubleArrayAbstractTest.testGetValues(0)"
reference "org.apache.commons.math.util.DoubleArrayAbstractTest.testAddElementRolling(0)" "org.apache.commons.math.util.DoubleArrayAbstractTest.ra"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testAddElementRolling(0)" "org.apache.commons.math.util.DoubleArray.addElement(1)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testAddElementRolling(0)" "org.apache.commons.math.util.DoubleArray.addElementRolling(1)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testAddElementRolling(0)" "org.apache.commons.math.util.DoubleArray.getNumElements(0)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testAddElementRolling(0)" "org.apache.commons.math.util.DoubleArrayAbstractTest.assertEquals(3)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testAddElementRolling(0)" "org.apache.commons.math.util.DoubleArray.getElements(0)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testAddElementRolling(0)" "org.apache.commons.math.stat.StatUtils.max(1)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testAddElementRolling(0)" "org.apache.commons.math.util.DoubleArrayAbstractTest.assertEquals(4)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testAddElementRolling(0)" "org.apache.commons.math.stat.StatUtils.min(1)"
contain "org.apache.commons.math.util.DoubleArrayAbstractTest" "org.apache.commons.math.util.DoubleArrayAbstractTest.testAddElementRolling(0)"
reference "org.apache.commons.math.util.DoubleArrayAbstractTest.testMinMax(0)" "org.apache.commons.math.util.DoubleArrayAbstractTest.da"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testMinMax(0)" "org.apache.commons.math.util.DoubleArray.addElement(1)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testMinMax(0)" "org.apache.commons.math.util.DoubleArray.getElements(0)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testMinMax(0)" "org.apache.commons.math.stat.StatUtils.min(1)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testMinMax(0)" "org.apache.commons.math.util.DoubleArrayAbstractTest.assertEquals(4)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testMinMax(0)" "org.apache.commons.math.stat.StatUtils.max(1)"
contain "org.apache.commons.math.util.DoubleArrayAbstractTest" "org.apache.commons.math.util.DoubleArrayAbstractTest.testMinMax(0)"
reference "org.apache.commons.math.util.DoubleArrayAbstractTest.da" "org.apache.commons.math.util.DoubleArray"
contain "org.apache.commons.math.util.DoubleArrayAbstractTest" "org.apache.commons.math.util.DoubleArrayAbstractTest.da"
reference "org.apache.commons.math.util.DoubleArrayAbstractTest.ra" "org.apache.commons.math.util.DoubleArray"
contain "org.apache.commons.math.util.DoubleArrayAbstractTest" "org.apache.commons.math.util.DoubleArrayAbstractTest.ra"
reference "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest" "org.apache.commons.math.ode.TestProblem3"
reference "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest" "org.apache.commons.math.ode.HighamHall54Integrator"
reference "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest" "org.apache.commons.math.ode.ContinuousOutputModel"
reference "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest" "org.apache.commons.math.ode.IntegratorException"
call "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest.HighamHall54StepInterpolatorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest" "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest.HighamHall54StepInterpolatorTest(1)"
call "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.HighamHall54Integrator.HighamHall54Integrator(4)"
call "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.ContinuousOutputModel(0)"
call "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.HighamHall54Integrator.setStepHandler(1)"
call "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.HighamHall54Integrator.integrate(5)"
call "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.HighamHall54Integrator.getStepHandler(0)"
call "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest.assertTrue(1)"
call "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState(0)"
call "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.computeTheoreticalState(1)"
contain "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest" "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest.testSerialization(0)"
reference "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest.suite(0)" "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest.class$org$apache$commons$math$ode$HighamHall54StepInterpolatorTest"
call "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest.suite(0)" "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest.class$(1)"
call "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest" "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest.suite(0)"
contain "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest" "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest.class$(1)"
contain "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest" "org.apache.commons.math.ode.HighamHall54StepInterpolatorTest.class$org$apache$commons$math$ode$HighamHall54StepInterpolatorTest"
reference "org.apache.commons.math.distribution.ChiSquareDistributionTest" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl"
reference "org.apache.commons.math.distribution.ChiSquareDistributionTest" "org.apache.commons.math.distribution.ChiSquaredDistribution"
reference "org.apache.commons.math.distribution.ChiSquareDistributionTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.ChiSquareDistributionTest(1)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.ContinuousDistributionAbstractTest(1)"
contain "org.apache.commons.math.distribution.ChiSquareDistributionTest" "org.apache.commons.math.distribution.ChiSquareDistributionTest.ChiSquareDistributionTest(1)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.makeDistribution(0)" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.ChiSquaredDistributionImpl(1)"
contain "org.apache.commons.math.distribution.ChiSquareDistributionTest" "org.apache.commons.math.distribution.ChiSquareDistributionTest.makeDistribution(0)"
contain "org.apache.commons.math.distribution.ChiSquareDistributionTest" "org.apache.commons.math.distribution.ChiSquareDistributionTest.makeCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.ChiSquareDistributionTest" "org.apache.commons.math.distribution.ChiSquareDistributionTest.makeCumulativeTestValues(0)"
contain "org.apache.commons.math.distribution.ChiSquareDistributionTest" "org.apache.commons.math.distribution.ChiSquareDistributionTest.makeInverseCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.ChiSquareDistributionTest" "org.apache.commons.math.distribution.ChiSquareDistributionTest.makeInverseCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.setup(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.setup(0)" "org.apache.commons.math.distribution.ChiSquareDistributionTest.setTolerance(1)"
contain "org.apache.commons.math.distribution.ChiSquareDistributionTest" "org.apache.commons.math.distribution.ChiSquareDistributionTest.setup(0)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.ChiSquaredDistributionImpl(1)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.ChiSquareDistributionTest.setDistribution(1)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.ChiSquareDistributionTest.setTolerance(1)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.ChiSquareDistributionTest.setCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.ChiSquareDistributionTest.getCumulativeTestPoints(0)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.ChiSquareDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.ChiSquareDistributionTest.getCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.ChiSquareDistributionTest.setInverseCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.ChiSquareDistributionTest.verifyCumulativeProbabilities(0)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.ChiSquareDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.ChiSquareDistributionTest" "org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(0)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.ChiSquareDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.ChiSquaredDistribution.getDegreesOfFreedom(0)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.ChiSquareDistributionTest.assertEquals(3)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.ChiSquaredDistribution.setDegreesOfFreedom(1)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.ChiSquareDistributionTest.fail(1)"
contain "org.apache.commons.math.distribution.ChiSquareDistributionTest" "org.apache.commons.math.distribution.ChiSquareDistributionTest.testDfAccessors(0)"
reference "org.apache.commons.math.transform.FastSineTransformerTest" "org.apache.commons.math.transform.FastSineTransformer"
reference "org.apache.commons.math.transform.FastSineTransformerTest" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.transform.FastSineTransformerTest" "junit.framework.TestCase"
reference "org.apache.commons.math.transform.FastSineTransformerTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.transform.FastSineTransformerTest" "org.apache.commons.math.transform.FastFourierTransformer"
call "org.apache.commons.math.transform.FastSineTransformerTest.FastSineTransformerTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.transform.FastSineTransformerTest" "org.apache.commons.math.transform.FastSineTransformerTest.FastSineTransformerTest(0)"
call "org.apache.commons.math.transform.FastSineTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastSineTransformer.FastSineTransformer(0)"
call "org.apache.commons.math.transform.FastSineTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastSineTransformer.transform(1)"
call "org.apache.commons.math.transform.FastSineTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastSineTransformerTest.assertEquals(3)"
call "org.apache.commons.math.transform.FastSineTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastSineTransformer.inversetransform(1)"
call "org.apache.commons.math.transform.FastSineTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
call "org.apache.commons.math.transform.FastSineTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastSineTransformer.transform2(1)"
call "org.apache.commons.math.transform.FastSineTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastSineTransformer.inversetransform2(1)"
contain "org.apache.commons.math.transform.FastSineTransformerTest" "org.apache.commons.math.transform.FastSineTransformerTest.testAdHocData(0)"
call "org.apache.commons.math.transform.FastSineTransformerTest.testSinFunction(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.transform.FastSineTransformerTest.testSinFunction(0)" "org.apache.commons.math.transform.FastSineTransformer.FastSineTransformer(0)"
call "org.apache.commons.math.transform.FastSineTransformerTest.testSinFunction(0)" "org.apache.commons.math.transform.FastSineTransformer.transform(4)"
call "org.apache.commons.math.transform.FastSineTransformerTest.testSinFunction(0)" "org.apache.commons.math.transform.FastSineTransformerTest.assertEquals(3)"
contain "org.apache.commons.math.transform.FastSineTransformerTest" "org.apache.commons.math.transform.FastSineTransformerTest.testSinFunction(0)"
call "org.apache.commons.math.transform.FastSineTransformerTest.testParameters(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.transform.FastSineTransformerTest.testParameters(0)" "org.apache.commons.math.transform.FastSineTransformer.FastSineTransformer(0)"
call "org.apache.commons.math.transform.FastSineTransformerTest.testParameters(0)" "org.apache.commons.math.transform.FastSineTransformer.transform(4)"
call "org.apache.commons.math.transform.FastSineTransformerTest.testParameters(0)" "org.apache.commons.math.transform.FastSineTransformerTest.fail(1)"
contain "org.apache.commons.math.transform.FastSineTransformerTest" "org.apache.commons.math.transform.FastSineTransformerTest.testParameters(0)"
reference "org.apache.commons.math.transform.FastCosineTransformerTest" "org.apache.commons.math.transform.FastCosineTransformer"
reference "org.apache.commons.math.transform.FastCosineTransformerTest" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.transform.FastCosineTransformerTest" "junit.framework.TestCase"
reference "org.apache.commons.math.transform.FastCosineTransformerTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.transform.FastCosineTransformerTest" "org.apache.commons.math.transform.FastFourierTransformer"
call "org.apache.commons.math.transform.FastCosineTransformerTest.FastCosineTransformerTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.transform.FastCosineTransformerTest" "org.apache.commons.math.transform.FastCosineTransformerTest.FastCosineTransformerTest(0)"
call "org.apache.commons.math.transform.FastCosineTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastCosineTransformer.FastCosineTransformer(0)"
call "org.apache.commons.math.transform.FastCosineTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastCosineTransformer.transform(1)"
call "org.apache.commons.math.transform.FastCosineTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastCosineTransformerTest.assertEquals(3)"
call "org.apache.commons.math.transform.FastCosineTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastCosineTransformer.inversetransform(1)"
call "org.apache.commons.math.transform.FastCosineTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
call "org.apache.commons.math.transform.FastCosineTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastCosineTransformer.transform2(1)"
call "org.apache.commons.math.transform.FastCosineTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastCosineTransformer.inversetransform2(1)"
contain "org.apache.commons.math.transform.FastCosineTransformerTest" "org.apache.commons.math.transform.FastCosineTransformerTest.testAdHocData(0)"
call "org.apache.commons.math.transform.FastCosineTransformerTest.testSinFunction(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.transform.FastCosineTransformerTest.testSinFunction(0)" "org.apache.commons.math.transform.FastCosineTransformer.FastCosineTransformer(0)"
call "org.apache.commons.math.transform.FastCosineTransformerTest.testSinFunction(0)" "org.apache.commons.math.transform.FastCosineTransformer.transform(4)"
call "org.apache.commons.math.transform.FastCosineTransformerTest.testSinFunction(0)" "org.apache.commons.math.transform.FastCosineTransformerTest.assertEquals(3)"
contain "org.apache.commons.math.transform.FastCosineTransformerTest" "org.apache.commons.math.transform.FastCosineTransformerTest.testSinFunction(0)"
call "org.apache.commons.math.transform.FastCosineTransformerTest.testParameters(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.transform.FastCosineTransformerTest.testParameters(0)" "org.apache.commons.math.transform.FastCosineTransformer.FastCosineTransformer(0)"
call "org.apache.commons.math.transform.FastCosineTransformerTest.testParameters(0)" "org.apache.commons.math.transform.FastCosineTransformer.transform(4)"
call "org.apache.commons.math.transform.FastCosineTransformerTest.testParameters(0)" "org.apache.commons.math.transform.FastCosineTransformerTest.fail(1)"
contain "org.apache.commons.math.transform.FastCosineTransformerTest" "org.apache.commons.math.transform.FastCosineTransformerTest.testParameters(0)"
reference "org.apache.commons.math.analysis.NevilleInterpolatorTest" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.analysis.NevilleInterpolatorTest" "org.apache.commons.math.analysis.NevilleInterpolator"
reference "org.apache.commons.math.analysis.NevilleInterpolatorTest" "org.apache.commons.math.analysis.Expm1Function"
reference "org.apache.commons.math.analysis.NevilleInterpolatorTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.analysis.NevilleInterpolatorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.NevilleInterpolatorTest" "org.apache.commons.math.analysis.UnivariateRealFunction"
reference "org.apache.commons.math.analysis.NevilleInterpolatorTest" "org.apache.commons.math.analysis.UnivariateRealInterpolator"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.NevilleInterpolatorTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.analysis.NevilleInterpolatorTest" "org.apache.commons.math.analysis.NevilleInterpolatorTest.NevilleInterpolatorTest(0)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testSinFunction(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testSinFunction(0)" "org.apache.commons.math.analysis.NevilleInterpolator.NevilleInterpolator(0)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealInterpolator.interpolate(2)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testSinFunction(0)" "org.apache.commons.math.analysis.NevilleInterpolatorTest.partialerror(2)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testSinFunction(0)" "org.apache.commons.math.analysis.NevilleInterpolatorTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.NevilleInterpolatorTest" "org.apache.commons.math.analysis.NevilleInterpolatorTest.testSinFunction(0)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testExpm1Function(0)" "org.apache.commons.math.analysis.Expm1Function.Expm1Function(0)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testExpm1Function(0)" "org.apache.commons.math.analysis.NevilleInterpolator.NevilleInterpolator(0)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testExpm1Function(0)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testExpm1Function(0)" "org.apache.commons.math.analysis.UnivariateRealInterpolator.interpolate(2)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testExpm1Function(0)" "org.apache.commons.math.analysis.NevilleInterpolatorTest.partialerror(2)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testExpm1Function(0)" "org.apache.commons.math.analysis.NevilleInterpolatorTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.NevilleInterpolatorTest" "org.apache.commons.math.analysis.NevilleInterpolatorTest.testExpm1Function(0)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testParameters(0)" "org.apache.commons.math.analysis.NevilleInterpolator.NevilleInterpolator(0)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealInterpolator.interpolate(2)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testParameters(0)" "org.apache.commons.math.analysis.NevilleInterpolatorTest.fail(1)"
contain "org.apache.commons.math.analysis.NevilleInterpolatorTest" "org.apache.commons.math.analysis.NevilleInterpolatorTest.testParameters(0)"
contain "org.apache.commons.math.analysis.NevilleInterpolatorTest" "org.apache.commons.math.analysis.NevilleInterpolatorTest.partialerror(2)"
reference "org.apache.commons.math.ArgumentOutsideDomainExceptionTest" "org.apache.commons.math.ArgumentOutsideDomainException"
reference "org.apache.commons.math.ArgumentOutsideDomainExceptionTest" "junit.framework.TestCase"
call "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.ArgumentOutsideDomainExceptionTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.ArgumentOutsideDomainExceptionTest" "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.ArgumentOutsideDomainExceptionTest(0)"
call "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.testConstructor(0)" "org.apache.commons.math.ArgumentOutsideDomainException.ArgumentOutsideDomainException(3)"
call "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.testConstructor(0)" "org.apache.commons.math.ArgumentOutsideDomainException.getCause(0)"
call "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.testConstructor(0)" "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.assertNull(1)"
call "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.testConstructor(0)" "org.apache.commons.math.ArgumentOutsideDomainException.getMessage(0)"
call "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.testConstructor(0)" "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.assertNotNull(1)"
call "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.testConstructor(0)" "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.assertTrue(1)"
call "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.testConstructor(0)" "org.apache.commons.math.ArgumentOutsideDomainException.getArgument(0)"
call "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.testConstructor(0)" "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.assertEquals(3)"
call "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.testConstructor(0)" "org.apache.commons.math.ArgumentOutsideDomainException.getMessage(1)"
call "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.testConstructor(0)" "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.assertFalse(1)"
contain "org.apache.commons.math.ArgumentOutsideDomainExceptionTest" "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.testConstructor(0)"
reference "org.apache.commons.math.stat.descriptive.rank.MaxTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.rank.MaxTest" "org.apache.commons.math.stat.descriptive.rank.Max"
reference "org.apache.commons.math.stat.descriptive.rank.MaxTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.rank.MaxTest.MaxTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.rank.MaxTest" "org.apache.commons.math.stat.descriptive.rank.MaxTest.MaxTest(1)"
reference "org.apache.commons.math.stat.descriptive.rank.MaxTest.suite(0)" "org.apache.commons.math.stat.descriptive.rank.MaxTest.class$org$apache$commons$math$stat$descriptive$rank$MaxTest"
call "org.apache.commons.math.stat.descriptive.rank.MaxTest.suite(0)" "org.apache.commons.math.stat.descriptive.rank.MaxTest.class$(1)"
call "org.apache.commons.math.stat.descriptive.rank.MaxTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.rank.MaxTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.rank.MaxTest" "org.apache.commons.math.stat.descriptive.rank.MaxTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.rank.MaxTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.rank.Max.Max(0)"
contain "org.apache.commons.math.stat.descriptive.rank.MaxTest" "org.apache.commons.math.stat.descriptive.rank.MaxTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.rank.MaxTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.rank.MaxTest.max"
contain "org.apache.commons.math.stat.descriptive.rank.MaxTest" "org.apache.commons.math.stat.descriptive.rank.MaxTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.rank.MaxTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.Max.Max(0)"
call "org.apache.commons.math.stat.descriptive.rank.MaxTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.Max.getResult(0)"
call "org.apache.commons.math.stat.descriptive.rank.MaxTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.MaxTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.rank.MaxTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.Max.increment(1)"
call "org.apache.commons.math.stat.descriptive.rank.MaxTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.MaxTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.rank.MaxTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.Max.evaluate(1)"
contain "org.apache.commons.math.stat.descriptive.rank.MaxTest" "org.apache.commons.math.stat.descriptive.rank.MaxTest.testSpecialValues(0)"
call "org.apache.commons.math.stat.descriptive.rank.MaxTest.testNaNs(0)" "org.apache.commons.math.stat.descriptive.rank.Max.Max(0)"
call "org.apache.commons.math.stat.descriptive.rank.MaxTest.testNaNs(0)" "org.apache.commons.math.stat.descriptive.rank.Max.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.rank.MaxTest.testNaNs(0)" "org.apache.commons.math.stat.descriptive.rank.MaxTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.rank.MaxTest.testNaNs(0)" "org.apache.commons.math.stat.descriptive.rank.MaxTest.assertTrue(1)"
contain "org.apache.commons.math.stat.descriptive.rank.MaxTest" "org.apache.commons.math.stat.descriptive.rank.MaxTest.testNaNs(0)"
contain "org.apache.commons.math.stat.descriptive.rank.MaxTest" "org.apache.commons.math.stat.descriptive.rank.MaxTest.class$(1)"
reference "org.apache.commons.math.stat.descriptive.rank.MaxTest.stat" "org.apache.commons.math.stat.descriptive.rank.Max"
contain "org.apache.commons.math.stat.descriptive.rank.MaxTest" "org.apache.commons.math.stat.descriptive.rank.MaxTest.stat"
contain "org.apache.commons.math.stat.descriptive.rank.MaxTest" "org.apache.commons.math.stat.descriptive.rank.MaxTest.class$org$apache$commons$math$stat$descriptive$rank$MaxTest"
reference "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction" "org.apache.commons.math.estimation.MinpackTest"
contain "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction" "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.buildChebyquadArray(2)"
call "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.ChebyquadFunction(6)" "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.buildChebyquadArray(2)"
call "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.ChebyquadFunction(6)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction" "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.ChebyquadFunction(6)"
reference "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.m"
reference "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.n"
reference "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.getJacobian(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction" "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.m"
reference "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.n"
reference "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction" "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.getResiduals(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "junit.framework.TestCase"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.ListUnivariateImplTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.ListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.one"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.ListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.two"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.ListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.three"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.ListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.mean"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.ListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.sumSq"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.ListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.sum"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.ListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.var"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.ListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.std"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.ListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.n"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.ListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.min"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.ListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.max"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.ListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.skewness"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.ListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.kurtosis"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.ListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.tolerance"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.ListUnivariateImplTest(1)"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.setUp(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.suite(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.class$org$apache$commons$math$stat$descriptive$ListUnivariateImplTest"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.suite(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.class$(1)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(1)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getN(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.tolerance"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.assertEquals(4)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.one"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.two"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.three"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.n"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.sum"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSum(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.sumSq"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSumsq(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.var"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVariance(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.std"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getStandardDeviation(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.mean"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.min"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMin(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.max"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMax(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.clear(0)"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(1)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.assertTrue(2)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getStandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVariance(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.one"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testN0andN1Conditions(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.assertEquals(4)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVariance(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSkewness(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getKurtosis(0)"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSkewAndKurtosis(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(1)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.setWindowSize(1)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.addValue(1)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getGeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.assertEquals(4)"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testProductAndGeometricMean(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.class$org$apache$commons$math$stat$descriptive$ListUnivariateImpl"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.class$(1)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance(1)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.fail(1)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getN(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.tolerance"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.assertEquals(4)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.one"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.two"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.TestUtils.serializeAndRecover(1)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.three"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.n"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.sum"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSum(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.sumSq"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSumsq(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.var"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVariance(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.std"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getStandardDeviation(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.mean"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.min"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMin(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.max"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMax(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.clear(0)"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.class$(1)"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.one"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.two"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.three"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.mean"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.sumSq"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.sum"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.var"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.std"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.n"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.min"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.max"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.skewness"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.kurtosis"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.tolerance"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.class$org$apache$commons$math$stat$descriptive$ListUnivariateImplTest"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.class$org$apache$commons$math$stat$descriptive$ListUnivariateImpl"
reference "org.apache.commons.math.MaxIterationsExceededExceptionTest" "org.apache.commons.math.MaxIterationsExceededException"
reference "org.apache.commons.math.MaxIterationsExceededExceptionTest" "junit.framework.TestCase"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.MaxIterationsExceededExceptionTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.MaxIterationsExceededExceptionTest" "org.apache.commons.math.MaxIterationsExceededExceptionTest.MaxIterationsExceededExceptionTest(0)"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.testConstructor(0)" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.testConstructor(0)" "org.apache.commons.math.MaxIterationsExceededException.getCause(0)"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.testConstructor(0)" "org.apache.commons.math.MaxIterationsExceededExceptionTest.assertNull(1)"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.testConstructor(0)" "org.apache.commons.math.MaxIterationsExceededException.getMessage(0)"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.testConstructor(0)" "org.apache.commons.math.MaxIterationsExceededExceptionTest.assertNotNull(1)"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.testConstructor(0)" "org.apache.commons.math.MaxIterationsExceededExceptionTest.assertTrue(1)"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.testConstructor(0)" "org.apache.commons.math.MaxIterationsExceededException.getMaxIterations(0)"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.testConstructor(0)" "org.apache.commons.math.MaxIterationsExceededExceptionTest.assertEquals(2)"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.testConstructor(0)" "org.apache.commons.math.MaxIterationsExceededException.getMessage(1)"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.testConstructor(0)" "org.apache.commons.math.MaxIterationsExceededExceptionTest.assertFalse(1)"
contain "org.apache.commons.math.MaxIterationsExceededExceptionTest" "org.apache.commons.math.MaxIterationsExceededExceptionTest.testConstructor(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.random.RandomDataImpl"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImpl"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "junit.framework.TestCase"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.random.RandomData"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.DescriptiveStatisticsTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.DescriptiveStatisticsTest(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.one"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.DescriptiveStatisticsTest(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.two"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.DescriptiveStatisticsTest(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.three"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.DescriptiveStatisticsTest(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.mean"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.DescriptiveStatisticsTest(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.sumSq"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.DescriptiveStatisticsTest(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.sum"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.DescriptiveStatisticsTest(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.var"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.DescriptiveStatisticsTest(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.std"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.DescriptiveStatisticsTest(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.n"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.DescriptiveStatisticsTest(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.min"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.DescriptiveStatisticsTest(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.max"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.DescriptiveStatisticsTest(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.skewness"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.DescriptiveStatisticsTest(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.kurtosis"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.DescriptiveStatisticsTest(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.tolerance"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.DescriptiveStatisticsTest(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.setUp(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.suite(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.class$org$apache$commons$math$stat$descriptive$DescriptiveStatisticsTest"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.suite(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.class$(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getN(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.tolerance"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.assertEquals(4)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.one"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.two"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.three"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.n"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.sum"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSum(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.sumSq"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSumsq(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.var"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVariance(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.std"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getStandardDeviation(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.mean"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.min"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMin(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.max"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMax(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.clear(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testStats(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.assertTrue(2)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getStandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVariance(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.one"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testN0andN1Conditions(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.assertEquals(4)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVariance(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSkewness(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getKurtosis(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSkewAndKurtosis(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setWindowSize(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getGeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.assertEquals(4)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testProductAndGeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testAddValue(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testAddValue(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setWindowSize(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testAddValue(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testAddValue(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getValues(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testAddValue(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.assertEquals(4)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testAddValue(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testGetSortedValues(0)" "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testGetSortedValues(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.tstGetSortedValues(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testGetSortedValues(0)" "org.apache.commons.math.random.RandomData.nextPermutation(2)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testGetSortedValues(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.tstGetSortedValues(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.tstGetSortedValues(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setWindowSize(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.tstGetSortedValues(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.tstGetSortedValues(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSortedValues(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.tstGetSortedValues(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.fail(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.tstGetSortedValues(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testPercentiles(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testPercentiles(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setWindowSize(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testPercentiles(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testPercentiles(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getPercentile(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testPercentiles(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.assertEquals(4)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testPercentiles(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.fail(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testPercentiles(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.clear(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testPercentiles(0)" "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testPercentiles(0)" "org.apache.commons.math.random.RandomData.nextPermutation(2)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testPercentiles(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.assertTrue(2)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testPercentiles(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getN(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.tolerance"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.assertEquals(4)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.one"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.two"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSerialization(0)" "org.apache.commons.math.TestUtils.serializeAndRecover(1)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.three"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.n"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.sum"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSum(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.sumSq"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSumsq(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.var"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVariance(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.std"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getStandardDeviation(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.mean"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.min"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMin(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.max"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMax(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.clear(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSerialization(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testNewInstanceClassNull(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testNewInstanceClassNull(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.fail(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testNewInstanceClassNull(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.fail(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testNewInstanceClassNull(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testNewInstanceClassValid(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.class$org$apache$commons$math$stat$descriptive$DescriptiveStatisticsImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testNewInstanceClassValid(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.class$(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testNewInstanceClassValid(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testNewInstanceClassValid(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.assertNotNull(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testNewInstanceClassValid(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testNewInstanceClassValid(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.fail(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testNewInstanceClassValid(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testWindowSize(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testWindowSize(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setWindowSize(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testWindowSize(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getWindowSize(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testWindowSize(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.assertEquals(2)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testWindowSize(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testWindowSize(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getN(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testWindowSize(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.assertEquals(2)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testWindowSize(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testWindowing(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testWindowing(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setWindowSize(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testWindowing(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testWindowing(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testWindowing(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.tolerance"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testWindowing(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testWindowing(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testToString(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testToString(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.toString(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testToString(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testToString(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testToString(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.class$(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.one"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.two"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.three"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.mean"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.sumSq"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.sum"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.var"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.std"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.n"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.min"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.max"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.skewness"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.kurtosis"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.tolerance"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.class$org$apache$commons$math$stat$descriptive$DescriptiveStatisticsTest"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.class$org$apache$commons$math$stat$descriptive$DescriptiveStatisticsImpl"
reference "org.apache.commons.math.linear.MatrixUtilsTest" "double[]"
reference "org.apache.commons.math.linear.MatrixUtilsTest" "double[][]"
reference "org.apache.commons.math.linear.MatrixUtilsTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.RealMatrixImpl"
reference "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.BigMatrixImpl"
reference "org.apache.commons.math.linear.MatrixUtilsTest" "junit.framework.TestCase"
reference "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtils"
reference "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.BigMatrix"
call "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "org.apache.commons.math.linear.MatrixUtilsTest.testData"
reference "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "org.apache.commons.math.linear.MatrixUtilsTest.nullMatrix"
reference "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "org.apache.commons.math.linear.MatrixUtilsTest.row"
reference "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "org.apache.commons.math.linear.MatrixUtilsTest.bigRow"
reference "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "org.apache.commons.math.linear.MatrixUtilsTest.stringRow"
reference "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "org.apache.commons.math.linear.MatrixUtilsTest.rowMatrix"
reference "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "org.apache.commons.math.linear.MatrixUtilsTest.bigRowMatrix"
reference "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "org.apache.commons.math.linear.MatrixUtilsTest.stringRowMatrix"
reference "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "org.apache.commons.math.linear.MatrixUtilsTest.col"
reference "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "org.apache.commons.math.linear.MatrixUtilsTest.bigCol"
reference "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "org.apache.commons.math.linear.MatrixUtilsTest.stringCol"
reference "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "org.apache.commons.math.linear.MatrixUtilsTest.nullDoubleArray"
reference "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "org.apache.commons.math.linear.MatrixUtilsTest.colMatrix"
reference "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "org.apache.commons.math.linear.MatrixUtilsTest.bigColMatrix"
reference "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "org.apache.commons.math.linear.MatrixUtilsTest.stringColMatrix"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.setUp(0)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.suite(0)" "org.apache.commons.math.linear.MatrixUtilsTest.class$org$apache$commons$math$linear$MatrixUtilsTest"
call "org.apache.commons.math.linear.MatrixUtilsTest.suite(0)" "org.apache.commons.math.linear.MatrixUtilsTest.class$(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.suite(0)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRealMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.testData"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRealMatrix(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRealMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRealMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.assertEquals(2)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRealMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.fail(1)"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRealMatrix(0)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.testData"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createBigMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.assertEquals(2)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.bigColMatrix"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createBigMatrix(1)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.stringColMatrix"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createBigMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.fail(1)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.nullMatrix"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigMatrix(0)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowRealMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.row"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowRealMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(1)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowRealMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.rowMatrix"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowRealMatrix(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowRealMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.assertEquals(2)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowRealMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.fail(1)"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowRealMatrix(0)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.row"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(1)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.rowMatrix"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.assertEquals(2)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.bigRow"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(1)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.bigRowMatrix"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.stringRow"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(1)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.stringRowMatrix"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.fail(1)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.nullDoubleArray"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnRealMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.col"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnRealMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createColumnRealMatrix(1)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnRealMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.colMatrix"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnRealMatrix(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnRealMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.assertEquals(2)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnRealMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.fail(1)"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnRealMatrix(0)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.col"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createColumnBigMatrix(1)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.colMatrix"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.assertEquals(2)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.bigCol"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createColumnBigMatrix(1)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.bigColMatrix"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.stringCol"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createColumnBigMatrix(1)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.stringColMatrix"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.fail(1)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.nullDoubleArray"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)"
call "org.apache.commons.math.linear.MatrixUtilsTest.checkIdentityMatrix(1)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.MatrixUtilsTest.checkIdentityMatrix(1)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.MatrixUtilsTest.checkIdentityMatrix(1)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.MatrixUtilsTest.checkIdentityMatrix(1)" "org.apache.commons.math.linear.MatrixUtilsTest.assertEquals(3)"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.checkIdentityMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateIdentityMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createRealIdentityMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateIdentityMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.checkIdentityMatrix(1)"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.testCreateIdentityMatrix(0)"
call "org.apache.commons.math.linear.MatrixUtilsTest.checkIdentityBigMatrix(1)" "org.apache.commons.math.linear.BigMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.MatrixUtilsTest.checkIdentityBigMatrix(1)" "org.apache.commons.math.linear.BigMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.MatrixUtilsTest.checkIdentityBigMatrix(1)" "org.apache.commons.math.linear.BigMatrix.getEntry(2)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.checkIdentityBigMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.ONE"
call "org.apache.commons.math.linear.MatrixUtilsTest.checkIdentityBigMatrix(1)" "org.apache.commons.math.linear.MatrixUtilsTest.assertEquals(2)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.checkIdentityBigMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.ZERO"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.checkIdentityBigMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigIdentityMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createBigIdentityMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigIdentityMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.checkIdentityBigMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigIdentityMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createRealIdentityMatrix(1)"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigIdentityMatrix(0)"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.class$(1)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testData" "double[][]"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.testData"
reference "org.apache.commons.math.linear.MatrixUtilsTest.nullMatrix" "double[][]"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.nullMatrix"
reference "org.apache.commons.math.linear.MatrixUtilsTest.row" "double[]"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.row"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.bigRow"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.stringRow"
reference "org.apache.commons.math.linear.MatrixUtilsTest.rowMatrix" "double[][]"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.rowMatrix"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.bigRowMatrix"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.stringRowMatrix"
reference "org.apache.commons.math.linear.MatrixUtilsTest.col" "double[]"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.col"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.bigCol"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.stringCol"
reference "org.apache.commons.math.linear.MatrixUtilsTest.nullDoubleArray" "double[]"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.nullDoubleArray"
reference "org.apache.commons.math.linear.MatrixUtilsTest.colMatrix" "double[][]"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.colMatrix"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.bigColMatrix"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.stringColMatrix"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.class$org$apache$commons$math$linear$MatrixUtilsTest"
reference "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.Rotation"
reference "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.Vector3D"
reference "org.apache.commons.math.geometry.RotationTest" "double[]"
reference "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.NotARotationMatrixException"
reference "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationOrder"
reference "org.apache.commons.math.geometry.RotationTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.geometry.RotationTest" "junit.framework.TestCase"
reference "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.CardanEulerSingularityException"
call "org.apache.commons.math.geometry.RotationTest.RotationTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.RotationTest(1)"
call "org.apache.commons.math.geometry.RotationTest.testIdentity(0)" "org.apache.commons.math.geometry.Rotation.Rotation(0)"
reference "org.apache.commons.math.geometry.RotationTest.testIdentity(0)" "org.apache.commons.math.geometry.Vector3D.plusI"
call "org.apache.commons.math.geometry.RotationTest.testIdentity(0)" "org.apache.commons.math.geometry.Rotation.applyTo(1)"
call "org.apache.commons.math.geometry.RotationTest.testIdentity(0)" "org.apache.commons.math.geometry.RotationTest.checkVector(2)"
reference "org.apache.commons.math.geometry.RotationTest.testIdentity(0)" "org.apache.commons.math.geometry.Vector3D.plusJ"
reference "org.apache.commons.math.geometry.RotationTest.testIdentity(0)" "org.apache.commons.math.geometry.Vector3D.plusK"
call "org.apache.commons.math.geometry.RotationTest.testIdentity(0)" "org.apache.commons.math.geometry.Rotation.getAngle(0)"
call "org.apache.commons.math.geometry.RotationTest.testIdentity(0)" "org.apache.commons.math.geometry.RotationTest.checkAngle(2)"
call "org.apache.commons.math.geometry.RotationTest.testIdentity(0)" "org.apache.commons.math.geometry.Rotation.Rotation(5)"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.testIdentity(0)"
call "org.apache.commons.math.geometry.RotationTest.testAxisAngle(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.RotationTest.testAxisAngle(0)" "org.apache.commons.math.geometry.Rotation.Rotation(2)"
reference "org.apache.commons.math.geometry.RotationTest.testAxisAngle(0)" "org.apache.commons.math.geometry.Vector3D.plusI"
call "org.apache.commons.math.geometry.RotationTest.testAxisAngle(0)" "org.apache.commons.math.geometry.Rotation.applyTo(1)"
reference "org.apache.commons.math.geometry.RotationTest.testAxisAngle(0)" "org.apache.commons.math.geometry.Vector3D.plusJ"
call "org.apache.commons.math.geometry.RotationTest.testAxisAngle(0)" "org.apache.commons.math.geometry.RotationTest.checkVector(2)"
reference "org.apache.commons.math.geometry.RotationTest.testAxisAngle(0)" "org.apache.commons.math.geometry.Vector3D.plusK"
call "org.apache.commons.math.geometry.RotationTest.testAxisAngle(0)" "org.apache.commons.math.geometry.Rotation.getAxis(0)"
call "org.apache.commons.math.geometry.RotationTest.testAxisAngle(0)" "org.apache.commons.math.geometry.Rotation.getAngle(0)"
call "org.apache.commons.math.geometry.RotationTest.testAxisAngle(0)" "org.apache.commons.math.geometry.RotationTest.checkAngle(2)"
call "org.apache.commons.math.geometry.RotationTest.testAxisAngle(0)" "org.apache.commons.math.geometry.RotationTest.fail(1)"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.testAxisAngle(0)"
call "org.apache.commons.math.geometry.RotationTest.testVectorOnePair(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.RotationTest.testVectorOnePair(0)" "org.apache.commons.math.geometry.Rotation.Rotation(2)"
call "org.apache.commons.math.geometry.RotationTest.testVectorOnePair(0)" "org.apache.commons.math.geometry.Vector3D.getNorm(0)"
call "org.apache.commons.math.geometry.RotationTest.testVectorOnePair(0)" "org.apache.commons.math.geometry.Vector3D.multiply(1)"
call "org.apache.commons.math.geometry.RotationTest.testVectorOnePair(0)" "org.apache.commons.math.geometry.Rotation.applyTo(1)"
call "org.apache.commons.math.geometry.RotationTest.testVectorOnePair(0)" "org.apache.commons.math.geometry.RotationTest.checkVector(2)"
call "org.apache.commons.math.geometry.RotationTest.testVectorOnePair(0)" "org.apache.commons.math.geometry.Vector3D.negate(0)"
call "org.apache.commons.math.geometry.RotationTest.testVectorOnePair(0)" "org.apache.commons.math.geometry.Rotation.getAngle(0)"
call "org.apache.commons.math.geometry.RotationTest.testVectorOnePair(0)" "org.apache.commons.math.geometry.RotationTest.checkAngle(2)"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.testVectorOnePair(0)"
call "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.Rotation.Rotation(4)"
reference "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.Vector3D.plusI"
call "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.Rotation.applyTo(1)"
reference "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.Vector3D.plusK"
call "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.RotationTest.checkVector(2)"
reference "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.Vector3D.plusJ"
reference "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.Vector3D.minusI"
call "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.Vector3D.negate(0)"
call "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.Rotation.getAxis(0)"
call "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.Vector3D.dotProduct(2)"
reference "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.Vector3D.minusK"
call "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.Rotation.getAngle(0)"
call "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.RotationTest.checkAngle(2)"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)"
call "org.apache.commons.math.geometry.RotationTest.testMatrix(0)" "org.apache.commons.math.geometry.Rotation.Rotation(2)"
reference "org.apache.commons.math.geometry.RotationTest.testMatrix(0)" "org.apache.commons.math.geometry.Vector3D.plusI"
call "org.apache.commons.math.geometry.RotationTest.testMatrix(0)" "org.apache.commons.math.geometry.Rotation.applyTo(1)"
reference "org.apache.commons.math.geometry.RotationTest.testMatrix(0)" "org.apache.commons.math.geometry.Vector3D.plusK"
call "org.apache.commons.math.geometry.RotationTest.testMatrix(0)" "org.apache.commons.math.geometry.RotationTest.checkVector(2)"
reference "org.apache.commons.math.geometry.RotationTest.testMatrix(0)" "org.apache.commons.math.geometry.Vector3D.plusJ"
call "org.apache.commons.math.geometry.RotationTest.testMatrix(0)" "org.apache.commons.math.geometry.Rotation.getMatrix(0)"
call "org.apache.commons.math.geometry.RotationTest.testMatrix(0)" "org.apache.commons.math.geometry.RotationTest.assertTrue(1)"
call "org.apache.commons.math.geometry.RotationTest.testMatrix(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.RotationTest.testMatrix(0)" "org.apache.commons.math.geometry.Rotation.getAngle(0)"
call "org.apache.commons.math.geometry.RotationTest.testMatrix(0)" "org.apache.commons.math.geometry.RotationTest.checkAngle(2)"
call "org.apache.commons.math.geometry.RotationTest.testMatrix(0)" "org.apache.commons.math.geometry.RotationTest.fail(1)"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.testMatrix(0)"
reference "org.apache.commons.math.geometry.RotationTest.testAngles(0)" "org.apache.commons.math.geometry.RotationOrder.XYZ"
reference "org.apache.commons.math.geometry.RotationTest.testAngles(0)" "org.apache.commons.math.geometry.RotationOrder.XZY"
reference "org.apache.commons.math.geometry.RotationTest.testAngles(0)" "org.apache.commons.math.geometry.RotationOrder.YXZ"
reference "org.apache.commons.math.geometry.RotationTest.testAngles(0)" "org.apache.commons.math.geometry.RotationOrder.YZX"
reference "org.apache.commons.math.geometry.RotationTest.testAngles(0)" "org.apache.commons.math.geometry.RotationOrder.ZXY"
reference "org.apache.commons.math.geometry.RotationTest.testAngles(0)" "org.apache.commons.math.geometry.RotationOrder.ZYX"
reference "org.apache.commons.math.geometry.RotationTest.testAngles(0)" "org.apache.commons.math.geometry.RotationOrder.XYX"
reference "org.apache.commons.math.geometry.RotationTest.testAngles(0)" "org.apache.commons.math.geometry.RotationOrder.XZX"
reference "org.apache.commons.math.geometry.RotationTest.testAngles(0)" "org.apache.commons.math.geometry.RotationOrder.YXY"
reference "org.apache.commons.math.geometry.RotationTest.testAngles(0)" "org.apache.commons.math.geometry.RotationOrder.YZY"
reference "org.apache.commons.math.geometry.RotationTest.testAngles(0)" "org.apache.commons.math.geometry.RotationOrder.ZXZ"
reference "org.apache.commons.math.geometry.RotationTest.testAngles(0)" "org.apache.commons.math.geometry.RotationOrder.ZYZ"
call "org.apache.commons.math.geometry.RotationTest.testAngles(0)" "org.apache.commons.math.geometry.Rotation.Rotation(4)"
call "org.apache.commons.math.geometry.RotationTest.testAngles(0)" "org.apache.commons.math.geometry.Rotation.getAngles(1)"
call "org.apache.commons.math.geometry.RotationTest.testAngles(0)" "org.apache.commons.math.geometry.RotationTest.checkAngle(2)"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.testAngles(0)"
call "org.apache.commons.math.geometry.RotationTest.testQuaternion(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.RotationTest.testQuaternion(0)" "org.apache.commons.math.geometry.Rotation.Rotation(2)"
call "org.apache.commons.math.geometry.RotationTest.testQuaternion(0)" "org.apache.commons.math.geometry.Rotation.getQ0(0)"
call "org.apache.commons.math.geometry.RotationTest.testQuaternion(0)" "org.apache.commons.math.geometry.Rotation.getQ1(0)"
call "org.apache.commons.math.geometry.RotationTest.testQuaternion(0)" "org.apache.commons.math.geometry.Rotation.getQ2(0)"
call "org.apache.commons.math.geometry.RotationTest.testQuaternion(0)" "org.apache.commons.math.geometry.Rotation.getQ3(0)"
call "org.apache.commons.math.geometry.RotationTest.testQuaternion(0)" "org.apache.commons.math.geometry.Rotation.Rotation(5)"
call "org.apache.commons.math.geometry.RotationTest.testQuaternion(0)" "org.apache.commons.math.geometry.Rotation.applyTo(1)"
call "org.apache.commons.math.geometry.RotationTest.testQuaternion(0)" "org.apache.commons.math.geometry.RotationTest.checkVector(2)"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.testQuaternion(0)"
call "org.apache.commons.math.geometry.RotationTest.testCompose(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.RotationTest.testCompose(0)" "org.apache.commons.math.geometry.Rotation.Rotation(2)"
call "org.apache.commons.math.geometry.RotationTest.testCompose(0)" "org.apache.commons.math.geometry.Rotation.applyTo(1)"
call "org.apache.commons.math.geometry.RotationTest.testCompose(0)" "org.apache.commons.math.geometry.Rotation.applyTo(1)"
call "org.apache.commons.math.geometry.RotationTest.testCompose(0)" "org.apache.commons.math.geometry.RotationTest.checkVector(2)"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.testCompose(0)"
call "org.apache.commons.math.geometry.RotationTest.testComposeInverse(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.RotationTest.testComposeInverse(0)" "org.apache.commons.math.geometry.Rotation.Rotation(2)"
call "org.apache.commons.math.geometry.RotationTest.testComposeInverse(0)" "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)"
call "org.apache.commons.math.geometry.RotationTest.testComposeInverse(0)" "org.apache.commons.math.geometry.Rotation.applyTo(1)"
call "org.apache.commons.math.geometry.RotationTest.testComposeInverse(0)" "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)"
call "org.apache.commons.math.geometry.RotationTest.testComposeInverse(0)" "org.apache.commons.math.geometry.RotationTest.checkVector(2)"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.testComposeInverse(0)"
call "org.apache.commons.math.geometry.RotationTest.testApplyInverseTo(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.RotationTest.testApplyInverseTo(0)" "org.apache.commons.math.geometry.Rotation.Rotation(2)"
call "org.apache.commons.math.geometry.RotationTest.testApplyInverseTo(0)" "org.apache.commons.math.geometry.Rotation.applyTo(1)"
call "org.apache.commons.math.geometry.RotationTest.testApplyInverseTo(0)" "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)"
call "org.apache.commons.math.geometry.RotationTest.testApplyInverseTo(0)" "org.apache.commons.math.geometry.RotationTest.checkVector(2)"
call "org.apache.commons.math.geometry.RotationTest.testApplyInverseTo(0)" "org.apache.commons.math.geometry.Rotation.Rotation(0)"
reference "org.apache.commons.math.geometry.RotationTest.testApplyInverseTo(0)" "org.apache.commons.math.geometry.Vector3D.plusK"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.testApplyInverseTo(0)"
call "org.apache.commons.math.geometry.RotationTest.checkVector(2)" "org.apache.commons.math.geometry.Vector3D.subtract(1)"
call "org.apache.commons.math.geometry.RotationTest.checkVector(2)" "org.apache.commons.math.geometry.Vector3D.getNorm(0)"
call "org.apache.commons.math.geometry.RotationTest.checkVector(2)" "org.apache.commons.math.geometry.RotationTest.assertTrue(1)"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.checkVector(2)"
call "org.apache.commons.math.geometry.RotationTest.checkAngle(2)" "org.apache.commons.math.geometry.RotationTest.assertTrue(1)"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.checkAngle(2)"
reference "org.apache.commons.math.geometry.RotationTest.suite(0)" "org.apache.commons.math.geometry.RotationTest.class$org$apache$commons$math$geometry$RotationTest"
call "org.apache.commons.math.geometry.RotationTest.suite(0)" "org.apache.commons.math.geometry.RotationTest.class$(1)"
call "org.apache.commons.math.geometry.RotationTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.suite(0)"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.class$(1)"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.class$org$apache$commons$math$geometry$RotationTest"
reference "org.apache.commons.math.ode.EulerIntegratorTest" "org.apache.commons.math.ode.TestProblem1"
reference "org.apache.commons.math.ode.EulerIntegratorTest" "org.apache.commons.math.ode.EulerIntegrator"
reference "org.apache.commons.math.ode.EulerIntegratorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.EulerIntegratorTest" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.EulerIntegratorTest" "org.apache.commons.math.ode.TestProblemAbstract"
reference "org.apache.commons.math.ode.EulerIntegratorTest" "org.apache.commons.math.ode.TestProblemHandler"
reference "org.apache.commons.math.ode.EulerIntegratorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.EulerIntegratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.EulerIntegratorTest" "org.apache.commons.math.ode.TestProblemFactory"
reference "org.apache.commons.math.ode.EulerIntegratorTest" "org.apache.commons.math.ode.FirstOrderIntegrator"
call "org.apache.commons.math.ode.EulerIntegratorTest.EulerIntegratorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.EulerIntegratorTest" "org.apache.commons.math.ode.EulerIntegratorTest.EulerIntegratorTest(1)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.EulerIntegrator.EulerIntegrator(1)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.EulerIntegrator.integrate(5)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.EulerIntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.EulerIntegratorTest" "org.apache.commons.math.ode.EulerIntegratorTest.testDimensionCheck(0)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemFactory.getProblems(0)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemAbstract.clone(0)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemAbstract.getFinalTime(0)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemAbstract.getInitialTime(0)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.EulerIntegrator.EulerIntegrator(1)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemHandler.TestProblemHandler(1)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemAbstract.getSwitchingFunctions(0)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addSwitchingFunction(3)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemAbstract.getInitialState(0)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemAbstract.getDimension(0)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.TestProblemHandler.getMaximalError(0)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.EulerIntegratorTest.assertTrue(1)"
contain "org.apache.commons.math.ode.EulerIntegratorTest" "org.apache.commons.math.ode.EulerIntegratorTest.testDecreasingSteps(0)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.EulerIntegrator.EulerIntegrator(1)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblemHandler.TestProblemHandler(1)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.EulerIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.TestProblemHandler.getMaximalError(0)"
contain "org.apache.commons.math.ode.EulerIntegratorTest" "org.apache.commons.math.ode.EulerIntegratorTest.testSmallStep(0)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.EulerIntegrator.EulerIntegrator(1)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblemHandler.TestProblemHandler(1)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.EulerIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.EulerIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.TestProblemHandler.getMaximalError(0)"
contain "org.apache.commons.math.ode.EulerIntegratorTest" "org.apache.commons.math.ode.EulerIntegratorTest.testBigStep(0)"
reference "org.apache.commons.math.ode.EulerIntegratorTest.suite(0)" "org.apache.commons.math.ode.EulerIntegratorTest.class$org$apache$commons$math$ode$EulerIntegratorTest"
call "org.apache.commons.math.ode.EulerIntegratorTest.suite(0)" "org.apache.commons.math.ode.EulerIntegratorTest.class$(1)"
call "org.apache.commons.math.ode.EulerIntegratorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.EulerIntegratorTest" "org.apache.commons.math.ode.EulerIntegratorTest.suite(0)"
contain "org.apache.commons.math.ode.EulerIntegratorTest" "org.apache.commons.math.ode.EulerIntegratorTest.class$(1)"
contain "org.apache.commons.math.ode.EulerIntegratorTest" "org.apache.commons.math.ode.EulerIntegratorTest.class$org$apache$commons$math$ode$EulerIntegratorTest"
reference "org.apache.commons.math.optimization.NelderMeadTest.2" "org.apache.commons.math.optimization.CostFunction"
reference "org.apache.commons.math.optimization.NelderMeadTest.2" "org.apache.commons.math.optimization.NelderMeadTest"
reference "org.apache.commons.math.optimization.NelderMeadTest.2.{...}" "org.apache.commons.math.optimization.NelderMeadTest.2.this$0"
contain "org.apache.commons.math.optimization.NelderMeadTest.2" "org.apache.commons.math.optimization.NelderMeadTest.2.{...}"
reference "org.apache.commons.math.optimization.NelderMeadTest.2.cost(1)" "org.apache.commons.math.optimization.NelderMeadTest.2.this$0"
call "org.apache.commons.math.optimization.NelderMeadTest.2.cost(1)" "org.apache.commons.math.optimization.NelderMeadTest.access$004(1)"
contain "org.apache.commons.math.optimization.NelderMeadTest.2" "org.apache.commons.math.optimization.NelderMeadTest.2.cost(1)"
reference "org.apache.commons.math.optimization.NelderMeadTest.2.this$0" "org.apache.commons.math.optimization.NelderMeadTest"
contain "org.apache.commons.math.optimization.NelderMeadTest.2" "org.apache.commons.math.optimization.NelderMeadTest.2.this$0"
reference "org.apache.commons.math.optimization.NelderMeadTest.1" "org.apache.commons.math.optimization.CostFunction"
reference "org.apache.commons.math.optimization.NelderMeadTest.1" "org.apache.commons.math.optimization.NelderMeadTest"
reference "org.apache.commons.math.optimization.NelderMeadTest.1.{...}" "org.apache.commons.math.optimization.NelderMeadTest.1.this$0"
contain "org.apache.commons.math.optimization.NelderMeadTest.1" "org.apache.commons.math.optimization.NelderMeadTest.1.{...}"
reference "org.apache.commons.math.optimization.NelderMeadTest.1.cost(1)" "org.apache.commons.math.optimization.NelderMeadTest.1.this$0"
call "org.apache.commons.math.optimization.NelderMeadTest.1.cost(1)" "org.apache.commons.math.optimization.NelderMeadTest.access$004(1)"
contain "org.apache.commons.math.optimization.NelderMeadTest.1" "org.apache.commons.math.optimization.NelderMeadTest.1.cost(1)"
reference "org.apache.commons.math.optimization.NelderMeadTest.1.this$0" "org.apache.commons.math.optimization.NelderMeadTest"
contain "org.apache.commons.math.optimization.NelderMeadTest.1" "org.apache.commons.math.optimization.NelderMeadTest.1.this$0"
reference "org.apache.commons.math.distribution.ExponentialDistributionTest" "org.apache.commons.math.distribution.ExponentialDistributionImpl"
reference "org.apache.commons.math.distribution.ExponentialDistributionTest" "org.apache.commons.math.distribution.ExponentialDistribution"
reference "org.apache.commons.math.distribution.ExponentialDistributionTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest"
reference "org.apache.commons.math.distribution.ExponentialDistributionTest" "org.apache.commons.math.distribution.ContinuousDistribution"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.ExponentialDistributionTest(1)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.ContinuousDistributionAbstractTest(1)"
contain "org.apache.commons.math.distribution.ExponentialDistributionTest" "org.apache.commons.math.distribution.ExponentialDistributionTest.ExponentialDistributionTest(1)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.makeDistribution(0)" "org.apache.commons.math.distribution.ExponentialDistributionImpl.ExponentialDistributionImpl(1)"
contain "org.apache.commons.math.distribution.ExponentialDistributionTest" "org.apache.commons.math.distribution.ExponentialDistributionTest.makeDistribution(0)"
contain "org.apache.commons.math.distribution.ExponentialDistributionTest" "org.apache.commons.math.distribution.ExponentialDistributionTest.makeCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.ExponentialDistributionTest" "org.apache.commons.math.distribution.ExponentialDistributionTest.makeCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.ExponentialDistributionTest.setCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.ExponentialDistributionTest.setCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.ExponentialDistributionTest.verifyCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.ExponentialDistributionTest" "org.apache.commons.math.distribution.ExponentialDistributionTest.testCumulativeProbabilityExtremes(0)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.ExponentialDistributionTest.setInverseCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.ExponentialDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.ExponentialDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.ExponentialDistributionTest" "org.apache.commons.math.distribution.ExponentialDistributionTest.testInverseCumulativeProbabilityExtremes(0)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testCumulativeProbability2(0)" "org.apache.commons.math.distribution.ExponentialDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testCumulativeProbability2(0)" "org.apache.commons.math.distribution.ContinuousDistribution.cumulativeProbability(2)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testCumulativeProbability2(0)" "org.apache.commons.math.distribution.ExponentialDistributionTest.assertEquals(3)"
contain "org.apache.commons.math.distribution.ExponentialDistributionTest" "org.apache.commons.math.distribution.ExponentialDistributionTest.testCumulativeProbability2(0)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testMeanAccessors(0)" "org.apache.commons.math.distribution.ExponentialDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testMeanAccessors(0)" "org.apache.commons.math.distribution.ExponentialDistribution.getMean(0)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testMeanAccessors(0)" "org.apache.commons.math.distribution.ExponentialDistributionTest.assertEquals(3)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testMeanAccessors(0)" "org.apache.commons.math.distribution.ExponentialDistribution.setMean(1)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testMeanAccessors(0)" "org.apache.commons.math.distribution.ExponentialDistributionTest.fail(1)"
contain "org.apache.commons.math.distribution.ExponentialDistributionTest" "org.apache.commons.math.distribution.ExponentialDistributionTest.testMeanAccessors(0)"
reference "org.apache.commons.math.analysis.MullerSolverTest" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.analysis.MullerSolverTest" "org.apache.commons.math.analysis.MullerSolver"
reference "org.apache.commons.math.analysis.MullerSolverTest" "org.apache.commons.math.analysis.QuinticFunction"
reference "org.apache.commons.math.analysis.MullerSolverTest" "org.apache.commons.math.analysis.Expm1Function"
reference "org.apache.commons.math.analysis.MullerSolverTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.MullerSolverTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.analysis.MullerSolverTest" "org.apache.commons.math.analysis.UnivariateRealSolver"
call "org.apache.commons.math.analysis.MullerSolverTest.MullerSolverTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.analysis.MullerSolverTest" "org.apache.commons.math.analysis.MullerSolverTest.MullerSolverTest(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testSinFunction(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testSinFunction(0)" "org.apache.commons.math.analysis.MullerSolver.MullerSolver(1)"
call "org.apache.commons.math.analysis.MullerSolverTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
call "org.apache.commons.math.analysis.MullerSolverTest.testSinFunction(0)" "org.apache.commons.math.analysis.MullerSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.MullerSolverTest" "org.apache.commons.math.analysis.MullerSolverTest.testSinFunction(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testSinFunction2(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testSinFunction2(0)" "org.apache.commons.math.analysis.MullerSolver.MullerSolver(1)"
call "org.apache.commons.math.analysis.MullerSolverTest.testSinFunction2(0)" "org.apache.commons.math.analysis.MullerSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testSinFunction2(0)" "org.apache.commons.math.analysis.MullerSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testSinFunction2(0)" "org.apache.commons.math.analysis.MullerSolver.solve2(2)"
call "org.apache.commons.math.analysis.MullerSolverTest.testSinFunction2(0)" "org.apache.commons.math.analysis.MullerSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.MullerSolverTest" "org.apache.commons.math.analysis.MullerSolverTest.testSinFunction2(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.MullerSolver.MullerSolver(1)"
call "org.apache.commons.math.analysis.MullerSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
call "org.apache.commons.math.analysis.MullerSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.MullerSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.MullerSolverTest" "org.apache.commons.math.analysis.MullerSolverTest.testQuinticFunction(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testQuinticFunction2(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testQuinticFunction2(0)" "org.apache.commons.math.analysis.MullerSolver.MullerSolver(1)"
call "org.apache.commons.math.analysis.MullerSolverTest.testQuinticFunction2(0)" "org.apache.commons.math.analysis.MullerSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testQuinticFunction2(0)" "org.apache.commons.math.analysis.MullerSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testQuinticFunction2(0)" "org.apache.commons.math.analysis.MullerSolver.solve2(2)"
call "org.apache.commons.math.analysis.MullerSolverTest.testQuinticFunction2(0)" "org.apache.commons.math.analysis.MullerSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.MullerSolverTest" "org.apache.commons.math.analysis.MullerSolverTest.testQuinticFunction2(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testExpm1Function(0)" "org.apache.commons.math.analysis.Expm1Function.Expm1Function(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testExpm1Function(0)" "org.apache.commons.math.analysis.MullerSolver.MullerSolver(1)"
call "org.apache.commons.math.analysis.MullerSolverTest.testExpm1Function(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testExpm1Function(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testExpm1Function(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
call "org.apache.commons.math.analysis.MullerSolverTest.testExpm1Function(0)" "org.apache.commons.math.analysis.MullerSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.MullerSolverTest" "org.apache.commons.math.analysis.MullerSolverTest.testExpm1Function(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testExpm1Function2(0)" "org.apache.commons.math.analysis.Expm1Function.Expm1Function(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testExpm1Function2(0)" "org.apache.commons.math.analysis.MullerSolver.MullerSolver(1)"
call "org.apache.commons.math.analysis.MullerSolverTest.testExpm1Function2(0)" "org.apache.commons.math.analysis.MullerSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testExpm1Function2(0)" "org.apache.commons.math.analysis.MullerSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testExpm1Function2(0)" "org.apache.commons.math.analysis.MullerSolver.solve2(2)"
call "org.apache.commons.math.analysis.MullerSolverTest.testExpm1Function2(0)" "org.apache.commons.math.analysis.MullerSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.MullerSolverTest" "org.apache.commons.math.analysis.MullerSolverTest.testExpm1Function2(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testParameters(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testParameters(0)" "org.apache.commons.math.analysis.MullerSolver.MullerSolver(1)"
call "org.apache.commons.math.analysis.MullerSolverTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
call "org.apache.commons.math.analysis.MullerSolverTest.testParameters(0)" "org.apache.commons.math.analysis.MullerSolverTest.fail(1)"
contain "org.apache.commons.math.analysis.MullerSolverTest" "org.apache.commons.math.analysis.MullerSolverTest.testParameters(0)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler" "org.apache.commons.math.ode.StepHandler"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler" "org.apache.commons.math.ode.StepInterpolator"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler" "junit.framework.Assert"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler.VariableStepHandler(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler.reset(0)"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler.VariableStepHandler(0)"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler.reset(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler.firstTime"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler.reset(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler.minStep"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler.reset(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler.maxStep"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler.reset(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getPreviousTime(0)"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler.handleStep(2)" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler.firstTime"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler.handleStep(2)" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler.minStep"
reference "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler.handleStep(2)" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler.maxStep"
call "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler.handleStep(2)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler.handleStep(2)"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler.firstTime"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler.minStep"
contain "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler" "org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest.VariableStepHandler.maxStep"
reference "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest" "double[]"
reference "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic"
reference "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.moment.SecondMoment"
reference "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest"
reference "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)"
reference "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.smallSamples"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.getUnivariateStatistic(0)"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testIncrementation(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.getUnivariateStatistic(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testIncrementation(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.clear(0)"
reference "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testIncrementation(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testArray"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testIncrementation(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.increment(1)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testIncrementation(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testIncrementation(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.getResult(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testIncrementation(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.getTolerance(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testIncrementation(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testIncrementation(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.getN(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testIncrementation(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.assertEquals(2)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testIncrementation(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.assertTrue(1)"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testIncrementation(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.getUnivariateStatistic(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testSerialization(0)" "org.apache.commons.math.TestUtils.checkSerializedEquality(1)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.clear(0)"
reference "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testArray"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.increment(1)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testSerialization(0)" "org.apache.commons.math.TestUtils.serializeAndRecover(1)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.getResult(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.getTolerance(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.assertTrue(1)"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testSerialization(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.getUnivariateStatistic(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.assertTrue(2)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.increment(1)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.clear(0)"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testEqualsAndHashCode(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testMomentSmallSamples(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.getUnivariateStatistic(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testMomentSmallSamples(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.getResult(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testMomentSmallSamples(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testMomentSmallSamples(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.increment(1)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testMomentSmallSamples(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testMomentSmallSamples(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testConsistency(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testConsistency(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testArray"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testConsistency(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.incrementAll(1)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testConsistency(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.getResult(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testConsistency(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testConsistency(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.getTolerance(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testConsistency(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.assertEquals(3)"
reference "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testConsistency(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.smallSamples"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testConsistency(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.clear(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testConsistency(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.increment(1)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testConsistency(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testConsistency(0)"
reference "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.smallSamples" "double[][]"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.smallSamples"
reference "org.apache.commons.math.estimation.MinpackTest.BardFunction" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.BardFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.BardFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.BardFunction" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.BardFunction.BardFunction(4)" "org.apache.commons.math.estimation.MinpackTest.BardFunction.buildArray(2)"
call "org.apache.commons.math.estimation.MinpackTest.BardFunction.BardFunction(4)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.BardFunction" "org.apache.commons.math.estimation.MinpackTest.BardFunction.BardFunction(4)"
reference "org.apache.commons.math.estimation.MinpackTest.BardFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.BardFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.BardFunction.getJacobian(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.BardFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.BardFunction.m"
contain "org.apache.commons.math.estimation.MinpackTest.BardFunction" "org.apache.commons.math.estimation.MinpackTest.BardFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.BardFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.BardFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.BardFunction.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.BardFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.BardFunction.m"
reference "org.apache.commons.math.estimation.MinpackTest.BardFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.BardFunction.y"
contain "org.apache.commons.math.estimation.MinpackTest.BardFunction" "org.apache.commons.math.estimation.MinpackTest.BardFunction.getResiduals(0)"
reference "org.apache.commons.math.estimation.MinpackTest.BardFunction.static {...}" "org.apache.commons.math.estimation.MinpackTest.BardFunction.y"
contain "org.apache.commons.math.estimation.MinpackTest.BardFunction" "org.apache.commons.math.estimation.MinpackTest.BardFunction.static {...}"
reference "org.apache.commons.math.estimation.MinpackTest.BardFunction.y" "double[]"
contain "org.apache.commons.math.estimation.MinpackTest.BardFunction" "org.apache.commons.math.estimation.MinpackTest.BardFunction.y"
reference "org.apache.commons.math.analysis.SimpsonIntegratorTest" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.analysis.SimpsonIntegratorTest" "org.apache.commons.math.analysis.SimpsonIntegrator"
reference "org.apache.commons.math.analysis.SimpsonIntegratorTest" "org.apache.commons.math.analysis.QuinticFunction"
reference "org.apache.commons.math.analysis.SimpsonIntegratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.SimpsonIntegratorTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.analysis.SimpsonIntegratorTest" "org.apache.commons.math.analysis.UnivariateRealIntegrator"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.SimpsonIntegratorTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.analysis.SimpsonIntegratorTest" "org.apache.commons.math.analysis.SimpsonIntegratorTest.SimpsonIntegratorTest(0)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testSinFunction(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testSinFunction(0)" "org.apache.commons.math.analysis.SimpsonIntegrator.SimpsonIntegrator(1)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.integrate(2)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testSinFunction(0)" "org.apache.commons.math.analysis.SimpsonIntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.SimpsonIntegratorTest" "org.apache.commons.math.analysis.SimpsonIntegratorTest.testSinFunction(0)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.SimpsonIntegrator.SimpsonIntegrator(1)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.integrate(2)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.SimpsonIntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.SimpsonIntegratorTest" "org.apache.commons.math.analysis.SimpsonIntegratorTest.testQuinticFunction(0)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.SimpsonIntegrator.SimpsonIntegrator(1)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.integrate(2)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.SimpsonIntegratorTest.fail(1)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.setMinimalIterationCount(1)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.setMaximalIterationCount(1)"
contain "org.apache.commons.math.analysis.SimpsonIntegratorTest" "org.apache.commons.math.analysis.SimpsonIntegratorTest.testParameters(0)"
reference "org.apache.commons.math.analysis.TrapezoidIntegratorTest" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.analysis.TrapezoidIntegratorTest" "org.apache.commons.math.analysis.TrapezoidIntegrator"
reference "org.apache.commons.math.analysis.TrapezoidIntegratorTest" "org.apache.commons.math.analysis.QuinticFunction"
reference "org.apache.commons.math.analysis.TrapezoidIntegratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.TrapezoidIntegratorTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.analysis.TrapezoidIntegratorTest" "org.apache.commons.math.analysis.UnivariateRealIntegrator"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.TrapezoidIntegratorTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.analysis.TrapezoidIntegratorTest" "org.apache.commons.math.analysis.TrapezoidIntegratorTest.TrapezoidIntegratorTest(0)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testSinFunction(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testSinFunction(0)" "org.apache.commons.math.analysis.TrapezoidIntegrator.TrapezoidIntegrator(1)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.integrate(2)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testSinFunction(0)" "org.apache.commons.math.analysis.TrapezoidIntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.TrapezoidIntegratorTest" "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testSinFunction(0)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.TrapezoidIntegrator.TrapezoidIntegrator(1)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.integrate(2)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.TrapezoidIntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.TrapezoidIntegratorTest" "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testQuinticFunction(0)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.TrapezoidIntegrator.TrapezoidIntegrator(1)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.integrate(2)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.TrapezoidIntegratorTest.fail(1)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.setMinimalIterationCount(1)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.setMaximalIterationCount(1)"
contain "org.apache.commons.math.analysis.TrapezoidIntegratorTest" "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testParameters(0)"
reference "org.apache.commons.math.ode.MidpointStepInterpolatorTest" "org.apache.commons.math.ode.TestProblem1"
reference "org.apache.commons.math.ode.MidpointStepInterpolatorTest" "org.apache.commons.math.ode.MidpointIntegrator"
reference "org.apache.commons.math.ode.MidpointStepInterpolatorTest" "org.apache.commons.math.ode.ContinuousOutputModel"
reference "org.apache.commons.math.ode.MidpointStepInterpolatorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.MidpointStepInterpolatorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.MidpointStepInterpolatorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.MidpointStepInterpolatorTest" "org.apache.commons.math.ode.IntegratorException"
call "org.apache.commons.math.ode.MidpointStepInterpolatorTest.MidpointStepInterpolatorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.MidpointStepInterpolatorTest" "org.apache.commons.math.ode.MidpointStepInterpolatorTest.MidpointStepInterpolatorTest(1)"
call "org.apache.commons.math.ode.MidpointStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.MidpointStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.MidpointStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.MidpointStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.MidpointIntegrator.MidpointIntegrator(1)"
call "org.apache.commons.math.ode.MidpointStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.ContinuousOutputModel(0)"
call "org.apache.commons.math.ode.MidpointStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.MidpointIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.MidpointStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.MidpointStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.MidpointStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.MidpointIntegrator.integrate(5)"
call "org.apache.commons.math.ode.MidpointStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.MidpointIntegrator.getStepHandler(0)"
call "org.apache.commons.math.ode.MidpointStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.MidpointStepInterpolatorTest.assertTrue(1)"
call "org.apache.commons.math.ode.MidpointStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.MidpointStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState(0)"
call "org.apache.commons.math.ode.MidpointStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem1.computeTheoreticalState(1)"
contain "org.apache.commons.math.ode.MidpointStepInterpolatorTest" "org.apache.commons.math.ode.MidpointStepInterpolatorTest.testSerialization(0)"
reference "org.apache.commons.math.ode.MidpointStepInterpolatorTest.suite(0)" "org.apache.commons.math.ode.MidpointStepInterpolatorTest.class$org$apache$commons$math$ode$MidpointStepInterpolatorTest"
call "org.apache.commons.math.ode.MidpointStepInterpolatorTest.suite(0)" "org.apache.commons.math.ode.MidpointStepInterpolatorTest.class$(1)"
call "org.apache.commons.math.ode.MidpointStepInterpolatorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.MidpointStepInterpolatorTest" "org.apache.commons.math.ode.MidpointStepInterpolatorTest.suite(0)"
contain "org.apache.commons.math.ode.MidpointStepInterpolatorTest" "org.apache.commons.math.ode.MidpointStepInterpolatorTest.class$(1)"
contain "org.apache.commons.math.ode.MidpointStepInterpolatorTest" "org.apache.commons.math.ode.MidpointStepInterpolatorTest.class$org$apache$commons$math$ode$MidpointStepInterpolatorTest"
reference "org.apache.commons.math.ode.EulerStepInterpolatorTest.DummyEquations" "org.apache.commons.math.ode.FirstOrderDifferentialEquations"
reference "org.apache.commons.math.ode.EulerStepInterpolatorTest.DummyEquations" "org.apache.commons.math.ode.EulerStepInterpolatorTest"
contain "org.apache.commons.math.ode.EulerStepInterpolatorTest.DummyEquations" "org.apache.commons.math.ode.EulerStepInterpolatorTest.DummyEquations.DummyEquations(0)"
contain "org.apache.commons.math.ode.EulerStepInterpolatorTest.DummyEquations" "org.apache.commons.math.ode.EulerStepInterpolatorTest.DummyEquations.getDimension(0)"
contain "org.apache.commons.math.ode.EulerStepInterpolatorTest.DummyEquations" "org.apache.commons.math.ode.EulerStepInterpolatorTest.DummyEquations.computeDerivatives(3)"
call "org.apache.commons.math.ode.EulerStepInterpolatorTest.DummyEquations.DummyEquations(1)" "org.apache.commons.math.ode.EulerStepInterpolatorTest.DummyEquations.DummyEquations(0)"
contain "org.apache.commons.math.ode.EulerStepInterpolatorTest.DummyEquations" "org.apache.commons.math.ode.EulerStepInterpolatorTest.DummyEquations.DummyEquations(1)"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest" "double[]"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegression"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest" "junit.framework.TestCase"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.SimpleRegressionTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.SimpleRegressionTest(1)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.data"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.SimpleRegressionTest(1)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.corrData"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.SimpleRegressionTest(1)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.infData"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.SimpleRegressionTest(1)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.infData2"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.SimpleRegressionTest(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.setUp(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.suite(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.class$org$apache$commons$math$stat$regression$SimpleRegressionTest"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.suite(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.class$(1)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.suite(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)" "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.data"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)" "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlope(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertEquals(4)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeStdErr(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getN(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertEquals(3)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getIntercept(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getInterceptStdErr(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getRSquare(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getRegressionSumSquares(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getMeanSquareError(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSumSquaredErrors(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)" "org.apache.commons.math.stat.regression.SimpleRegression.predict(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testCorr(0)" "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.testCorr(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.corrData"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testCorr(0)" "org.apache.commons.math.stat.regression.SimpleRegression.addData(1)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testCorr(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getN(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testCorr(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertEquals(3)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testCorr(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getRSquare(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testCorr(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertEquals(4)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testCorr(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getR(0)"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.testCorr(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNaNs(0)" "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNaNs(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getIntercept(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNaNs(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertTrue(2)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNaNs(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlope(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNaNs(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeStdErr(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNaNs(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getInterceptStdErr(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNaNs(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getMeanSquareError(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNaNs(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getR(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNaNs(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getRSquare(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNaNs(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getRegressionSumSquares(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNaNs(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSumSquaredErrors(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNaNs(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getTotalSumSquares(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNaNs(0)" "org.apache.commons.math.stat.regression.SimpleRegression.predict(1)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNaNs(0)" "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNaNs(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testClear(0)" "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.testClear(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.corrData"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testClear(0)" "org.apache.commons.math.stat.regression.SimpleRegression.addData(1)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testClear(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getN(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testClear(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertEquals(3)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testClear(0)" "org.apache.commons.math.stat.regression.SimpleRegression.clear(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testClear(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getRSquare(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testClear(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertEquals(4)"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.testClear(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.data"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.testClear(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(0)" "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.infData"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(0)" "org.apache.commons.math.stat.regression.SimpleRegression.addData(1)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeStdErr(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertEquals(4)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getInterceptStdErr(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSignificance(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeConfidenceInterval(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.infData2"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeConfidenceInterval(1)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertTrue(2)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.fail(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfect(0)" "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfect(0)" "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfect(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSignificance(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfect(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertEquals(3)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfect(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlope(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfect(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertTrue(1)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfect(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSumSquaredErrors(0)"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfect(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfectNegative(0)" "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfectNegative(0)" "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfectNegative(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSignificance(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfectNegative(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertEquals(3)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfectNegative(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlope(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfectNegative(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertTrue(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfectNegative(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRandom(0)" "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRandom(0)" "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRandom(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSignificance(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRandom(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertTrue(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRandom(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testSSENonNegative(0)" "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testSSENonNegative(0)" "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testSSENonNegative(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSumSquaredErrors(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testSSENonNegative(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertTrue(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.testSSENonNegative(0)"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.class$(1)"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.data" "double[][]"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.data"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.corrData" "double[][]"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.corrData"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.infData" "double[][]"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.infData"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.infData2" "double[][]"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.infData2"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.class$org$apache$commons$math$stat$regression$SimpleRegressionTest"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.StepHandler"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.StepInterpolator"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.TestProblem3"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler" "junit.framework.Assert"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.DormandPrince853IntegratorTest"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler.KeplerHandler(1)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler.pb"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler.KeplerHandler(1)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler.reset(0)"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler.KeplerHandler(1)"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler.reset(0)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler.nbSteps"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler.reset(0)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler.maxError"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler.reset(0)"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler.nbSteps"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getPreviousTime(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getInterpolatedState(0)"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler.pb"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getInterpolatedTime(0)"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.TestProblem3.computeTheoreticalState(1)"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler.maxError"
call "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler.handleStep(2)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler.handleStep(2)"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler.nbSteps"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler.maxError"
reference "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler.pb" "org.apache.commons.math.ode.TestProblem3"
contain "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.DormandPrince853IntegratorTest.KeplerHandler.pb"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem" "org.apache.commons.math.estimation.EstimatedParameter[]"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem" "org.apache.commons.math.estimation.EstimationProblem"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.LinearProblem(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.measurements"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.LinearProblem(1)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.getMeasurements(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.measurements"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.getMeasurements(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.getUnboundParameters(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.getAllParameters(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.getUnboundParameters(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.getAllParameters(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.measurements"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.getAllParameters(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.getParameters(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.getAllParameters(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.measurements" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement[]"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.measurements"
reference "org.apache.commons.math.MathConfigurationExceptionTest" "org.apache.commons.math.MathConfigurationException"
reference "org.apache.commons.math.MathConfigurationExceptionTest" "junit.framework.TestCase"
call "org.apache.commons.math.MathConfigurationExceptionTest.MathConfigurationExceptionTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.MathConfigurationExceptionTest" "org.apache.commons.math.MathConfigurationExceptionTest.MathConfigurationExceptionTest(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructor(0)" "org.apache.commons.math.MathConfigurationException.MathConfigurationException(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructor(0)" "org.apache.commons.math.MathConfigurationException.getCause(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructor(0)" "org.apache.commons.math.MathConfigurationExceptionTest.assertNull(1)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructor(0)" "org.apache.commons.math.MathConfigurationException.getMessage(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructor(0)" "org.apache.commons.math.MathConfigurationException.getMessage(1)"
contain "org.apache.commons.math.MathConfigurationExceptionTest" "org.apache.commons.math.MathConfigurationExceptionTest.testConstructor(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathConfigurationException.MathConfigurationException(2)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathConfigurationException.getCause(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathConfigurationExceptionTest.assertNull(1)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathConfigurationException.getPattern(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathConfigurationExceptionTest.assertEquals(2)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathConfigurationException.getArguments(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathConfigurationExceptionTest.assertEquals(2)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathConfigurationExceptionTest.assertEquals(2)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathConfigurationException.getMessage(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathConfigurationExceptionTest.assertFalse(1)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathConfigurationException.getMessage(1)"
contain "org.apache.commons.math.MathConfigurationExceptionTest" "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArguments(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorCause(0)" "org.apache.commons.math.MathConfigurationException.MathConfigurationException(1)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorCause(0)" "org.apache.commons.math.MathConfigurationException.getCause(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorCause(0)" "org.apache.commons.math.MathConfigurationExceptionTest.assertEquals(2)"
contain "org.apache.commons.math.MathConfigurationExceptionTest" "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorCause(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathConfigurationException.MathConfigurationException(3)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathConfigurationException.getCause(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathConfigurationExceptionTest.assertEquals(2)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathConfigurationException.getPattern(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathConfigurationExceptionTest.assertEquals(2)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathConfigurationException.getArguments(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathConfigurationExceptionTest.assertEquals(2)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathConfigurationException.getMessage(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathConfigurationExceptionTest.assertFalse(1)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathConfigurationException.getMessage(1)"
contain "org.apache.commons.math.MathConfigurationExceptionTest" "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArgumentsCause(0)"
reference "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.StepHandler"
reference "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.StepInterpolator"
reference "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.TestProblem3"
reference "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler" "junit.framework.Assert"
reference "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.HighamHall54IntegratorTest"
reference "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler.KeplerHandler(1)" "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler.pb"
reference "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler.KeplerHandler(1)" "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler.nbSteps"
reference "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler.KeplerHandler(1)" "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler.maxError"
contain "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler.KeplerHandler(1)"
contain "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler.reset(0)" "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler.nbSteps"
reference "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler.reset(0)" "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler.maxError"
contain "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler.reset(0)"
reference "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler.nbSteps"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getInterpolatedState(0)"
reference "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler.pb"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.TestProblem3.computeTheoreticalState(1)"
reference "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler.maxError"
call "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler.handleStep(2)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler.handleStep(2)"
reference "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler.pb" "org.apache.commons.math.ode.TestProblem3"
contain "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler.pb"
contain "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler.nbSteps"
contain "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.HighamHall54IntegratorTest.KeplerHandler.maxError"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest" "org.apache.commons.math.ode.TestProblem3"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest" "org.apache.commons.math.ode.ContinuousOutputModel"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest" "org.apache.commons.math.ode.IntegratorException"
call "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest.GraggBulirschStoerStepInterpolatorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest.GraggBulirschStoerStepInterpolatorTest(1)"
call "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)"
call "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.ContinuousOutputModel(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.integrate(5)"
call "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.GraggBulirschStoerIntegrator.getStepHandler(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest.assertTrue(1)"
call "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState(0)"
call "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.TestProblem3.computeTheoreticalState(1)"
contain "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest.testSerialization(0)"
reference "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest.suite(0)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest.class$org$apache$commons$math$ode$GraggBulirschStoerStepInterpolatorTest"
call "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest.suite(0)" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest.class$(1)"
call "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest.suite(0)"
contain "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest.class$(1)"
contain "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest" "org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest.class$org$apache$commons$math$ode$GraggBulirschStoerStepInterpolatorTest"
reference "org.apache.commons.math.MathExceptionTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.MathExceptionTest" "org.apache.commons.math.MathConfigurationException"
reference "org.apache.commons.math.MathExceptionTest" "junit.framework.TestCase"
reference "org.apache.commons.math.MathExceptionTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.MathExceptionTest.MathExceptionTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.MathExceptionTest" "org.apache.commons.math.MathExceptionTest.MathExceptionTest(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructor(0)" "org.apache.commons.math.MathException.MathException(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructor(0)" "org.apache.commons.math.MathException.getCause(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructor(0)" "org.apache.commons.math.MathExceptionTest.assertNull(1)"
call "org.apache.commons.math.MathExceptionTest.testConstructor(0)" "org.apache.commons.math.MathException.getMessage(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructor(0)" "org.apache.commons.math.MathException.getMessage(1)"
contain "org.apache.commons.math.MathExceptionTest" "org.apache.commons.math.MathExceptionTest.testConstructor(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathException.MathException(2)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathException.getCause(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathExceptionTest.assertNull(1)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathException.getPattern(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathExceptionTest.assertEquals(2)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathException.getArguments(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathExceptionTest.assertEquals(2)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathExceptionTest.assertEquals(2)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathException.getMessage(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathExceptionTest.assertFalse(1)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathException.getMessage(1)"
contain "org.apache.commons.math.MathExceptionTest" "org.apache.commons.math.MathExceptionTest.testConstructorPatternArguments(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructorCause(0)" "org.apache.commons.math.MathException.MathException(1)"
call "org.apache.commons.math.MathExceptionTest.testConstructorCause(0)" "org.apache.commons.math.MathException.getCause(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructorCause(0)" "org.apache.commons.math.MathExceptionTest.assertEquals(2)"
contain "org.apache.commons.math.MathExceptionTest" "org.apache.commons.math.MathExceptionTest.testConstructorCause(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathException.MathException(3)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathException.getCause(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathExceptionTest.assertEquals(2)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathException.getPattern(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathExceptionTest.assertEquals(2)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathException.getArguments(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathExceptionTest.assertEquals(2)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathException.getMessage(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathExceptionTest.assertFalse(1)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathException.getMessage(1)"
contain "org.apache.commons.math.MathExceptionTest" "org.apache.commons.math.MathExceptionTest.testConstructorPatternArgumentsCause(0)"
call "org.apache.commons.math.MathExceptionTest.testPrintStackTrace(0)" "org.apache.commons.math.MathConfigurationException.MathConfigurationException(2)"
call "org.apache.commons.math.MathExceptionTest.testPrintStackTrace(0)" "org.apache.commons.math.MathException.MathException(3)"
call "org.apache.commons.math.MathExceptionTest.testPrintStackTrace(0)" "org.apache.commons.math.MathException.printStackTrace(1)"
call "org.apache.commons.math.MathExceptionTest.testPrintStackTrace(0)" "org.apache.commons.math.MathExceptionTest.assertTrue(1)"
call "org.apache.commons.math.MathExceptionTest.testPrintStackTrace(0)" "org.apache.commons.math.MathException.printStackTrace(1)"
contain "org.apache.commons.math.MathExceptionTest" "org.apache.commons.math.MathExceptionTest.testPrintStackTrace(0)"
call "org.apache.commons.math.MathExceptionTest.testSerialization(0)" "org.apache.commons.math.MathConfigurationException.MathConfigurationException(2)"
call "org.apache.commons.math.MathExceptionTest.testSerialization(0)" "org.apache.commons.math.MathException.MathException(3)"
call "org.apache.commons.math.MathExceptionTest.testSerialization(0)" "org.apache.commons.math.TestUtils.serializeAndRecover(1)"
call "org.apache.commons.math.MathExceptionTest.testSerialization(0)" "org.apache.commons.math.MathException.printStackTrace(1)"
reference "org.apache.commons.math.MathExceptionTest.testSerialization(0)" "org.apache.commons.math.MathExceptionTest.class$java$lang$Throwable"
call "org.apache.commons.math.MathExceptionTest.testSerialization(0)" "org.apache.commons.math.MathExceptionTest.class$(1)"
call "org.apache.commons.math.MathExceptionTest.testSerialization(0)" "org.apache.commons.math.MathExceptionTest.assertEquals(2)"
call "org.apache.commons.math.MathExceptionTest.testSerialization(0)" "org.apache.commons.math.MathExceptionTest.assertTrue(1)"
contain "org.apache.commons.math.MathExceptionTest" "org.apache.commons.math.MathExceptionTest.testSerialization(0)"
contain "org.apache.commons.math.MathExceptionTest" "org.apache.commons.math.MathExceptionTest.class$(1)"
contain "org.apache.commons.math.MathExceptionTest" "org.apache.commons.math.MathExceptionTest.class$java$lang$Throwable"
reference "org.apache.commons.math.analysis.MonitoredFunction" "org.apache.commons.math.analysis.UnivariateRealFunction"
reference "org.apache.commons.math.analysis.MonitoredFunction" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.MonitoredFunction.MonitoredFunction(1)" "org.apache.commons.math.analysis.MonitoredFunction.callsCount"
reference "org.apache.commons.math.analysis.MonitoredFunction.MonitoredFunction(1)" "org.apache.commons.math.analysis.MonitoredFunction.f"
contain "org.apache.commons.math.analysis.MonitoredFunction" "org.apache.commons.math.analysis.MonitoredFunction.MonitoredFunction(1)"
reference "org.apache.commons.math.analysis.MonitoredFunction.setCallsCount(1)" "org.apache.commons.math.analysis.MonitoredFunction.callsCount"
contain "org.apache.commons.math.analysis.MonitoredFunction" "org.apache.commons.math.analysis.MonitoredFunction.setCallsCount(1)"
reference "org.apache.commons.math.analysis.MonitoredFunction.getCallsCount(0)" "org.apache.commons.math.analysis.MonitoredFunction.callsCount"
contain "org.apache.commons.math.analysis.MonitoredFunction" "org.apache.commons.math.analysis.MonitoredFunction.getCallsCount(0)"
reference "org.apache.commons.math.analysis.MonitoredFunction.value(1)" "org.apache.commons.math.analysis.MonitoredFunction.callsCount"
reference "org.apache.commons.math.analysis.MonitoredFunction.value(1)" "org.apache.commons.math.analysis.MonitoredFunction.f"
call "org.apache.commons.math.analysis.MonitoredFunction.value(1)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
contain "org.apache.commons.math.analysis.MonitoredFunction" "org.apache.commons.math.analysis.MonitoredFunction.value(1)"
contain "org.apache.commons.math.analysis.MonitoredFunction" "org.apache.commons.math.analysis.MonitoredFunction.callsCount"
reference "org.apache.commons.math.analysis.MonitoredFunction.f" "org.apache.commons.math.analysis.UnivariateRealFunction"
contain "org.apache.commons.math.analysis.MonitoredFunction" "org.apache.commons.math.analysis.MonitoredFunction.f"
reference "org.apache.commons.math.distribution.CauchyDistributionTest" "org.apache.commons.math.distribution.CauchyDistributionImpl"
reference "org.apache.commons.math.distribution.CauchyDistributionTest" "org.apache.commons.math.distribution.CauchyDistribution"
reference "org.apache.commons.math.distribution.CauchyDistributionTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest"
call "org.apache.commons.math.distribution.CauchyDistributionTest.CauchyDistributionTest(1)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.ContinuousDistributionAbstractTest(1)"
contain "org.apache.commons.math.distribution.CauchyDistributionTest" "org.apache.commons.math.distribution.CauchyDistributionTest.CauchyDistributionTest(1)"
call "org.apache.commons.math.distribution.CauchyDistributionTest.makeDistribution(0)" "org.apache.commons.math.distribution.CauchyDistributionImpl.CauchyDistributionImpl(2)"
contain "org.apache.commons.math.distribution.CauchyDistributionTest" "org.apache.commons.math.distribution.CauchyDistributionTest.makeDistribution(0)"
contain "org.apache.commons.math.distribution.CauchyDistributionTest" "org.apache.commons.math.distribution.CauchyDistributionTest.makeCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.CauchyDistributionTest" "org.apache.commons.math.distribution.CauchyDistributionTest.makeCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.CauchyDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.CauchyDistributionTest.setInverseCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.CauchyDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.CauchyDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.CauchyDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.CauchyDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.CauchyDistributionTest" "org.apache.commons.math.distribution.CauchyDistributionTest.testInverseCumulativeProbabilityExtremes(0)"
call "org.apache.commons.math.distribution.CauchyDistributionTest.testMedian(0)" "org.apache.commons.math.distribution.CauchyDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.CauchyDistributionTest.testMedian(0)" "org.apache.commons.math.distribution.CauchyDistribution.setMedian(1)"
call "org.apache.commons.math.distribution.CauchyDistributionTest.testMedian(0)" "org.apache.commons.math.distribution.CauchyDistribution.getMedian(0)"
call "org.apache.commons.math.distribution.CauchyDistributionTest.testMedian(0)" "org.apache.commons.math.distribution.CauchyDistributionTest.assertEquals(3)"
contain "org.apache.commons.math.distribution.CauchyDistributionTest" "org.apache.commons.math.distribution.CauchyDistributionTest.testMedian(0)"
call "org.apache.commons.math.distribution.CauchyDistributionTest.testScale(0)" "org.apache.commons.math.distribution.CauchyDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.CauchyDistributionTest.testScale(0)" "org.apache.commons.math.distribution.CauchyDistribution.setScale(1)"
call "org.apache.commons.math.distribution.CauchyDistributionTest.testScale(0)" "org.apache.commons.math.distribution.CauchyDistribution.getScale(0)"
call "org.apache.commons.math.distribution.CauchyDistributionTest.testScale(0)" "org.apache.commons.math.distribution.CauchyDistributionTest.assertEquals(3)"
contain "org.apache.commons.math.distribution.CauchyDistributionTest" "org.apache.commons.math.distribution.CauchyDistributionTest.testScale(0)"
call "org.apache.commons.math.distribution.CauchyDistributionTest.testSetScale(0)" "org.apache.commons.math.distribution.CauchyDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.CauchyDistributionTest.testSetScale(0)" "org.apache.commons.math.distribution.CauchyDistribution.setScale(1)"
call "org.apache.commons.math.distribution.CauchyDistributionTest.testSetScale(0)" "org.apache.commons.math.distribution.CauchyDistributionTest.fail(1)"
contain "org.apache.commons.math.distribution.CauchyDistributionTest" "org.apache.commons.math.distribution.CauchyDistributionTest.testSetScale(0)"
reference "org.apache.commons.math.ode.StepNormalizerTest" "org.apache.commons.math.ode.StepNormalizer"
reference "org.apache.commons.math.ode.StepNormalizerTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.StepNormalizerTest" "org.apache.commons.math.ode.TestProblem3"
reference "org.apache.commons.math.ode.StepNormalizerTest" "org.apache.commons.math.ode.DormandPrince54Integrator"
reference "org.apache.commons.math.ode.StepNormalizerTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.StepNormalizerTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.StepNormalizerTest" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.StepNormalizerTest" "org.apache.commons.math.ode.FirstOrderIntegrator"
call "org.apache.commons.math.ode.StepNormalizerTest.StepNormalizerTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.ode.StepNormalizerTest.StepNormalizerTest(1)" "org.apache.commons.math.ode.StepNormalizerTest.pb"
reference "org.apache.commons.math.ode.StepNormalizerTest.StepNormalizerTest(1)" "org.apache.commons.math.ode.StepNormalizerTest.integ"
contain "org.apache.commons.math.ode.StepNormalizerTest" "org.apache.commons.math.ode.StepNormalizerTest.StepNormalizerTest(1)"
reference "org.apache.commons.math.ode.StepNormalizerTest.testBoundaries(0)" "org.apache.commons.math.ode.StepNormalizerTest.pb"
call "org.apache.commons.math.ode.StepNormalizerTest.testBoundaries(0)" "org.apache.commons.math.ode.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.StepNormalizerTest.testBoundaries(0)" "org.apache.commons.math.ode.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.StepNormalizerTest.testBoundaries(0)" "org.apache.commons.math.ode.StepNormalizerTest.setLastSeen(1)"
reference "org.apache.commons.math.ode.StepNormalizerTest.testBoundaries(0)" "org.apache.commons.math.ode.StepNormalizerTest.integ"
call "org.apache.commons.math.ode.StepNormalizerTest.testBoundaries(0)" "org.apache.commons.math.ode.StepNormalizerTest.1.{...}"
call "org.apache.commons.math.ode.StepNormalizerTest.testBoundaries(0)" "org.apache.commons.math.ode.StepNormalizer.StepNormalizer(2)"
call "org.apache.commons.math.ode.StepNormalizerTest.testBoundaries(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.StepNormalizerTest.testBoundaries(0)" "org.apache.commons.math.ode.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.StepNormalizerTest.testBoundaries(0)" "org.apache.commons.math.ode.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.StepNormalizerTest.testBoundaries(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
reference "org.apache.commons.math.ode.StepNormalizerTest.testBoundaries(0)" "org.apache.commons.math.ode.StepNormalizerTest.lastSeen"
call "org.apache.commons.math.ode.StepNormalizerTest.testBoundaries(0)" "org.apache.commons.math.ode.StepNormalizerTest.assertTrue(1)"
contain "org.apache.commons.math.ode.StepNormalizerTest" "org.apache.commons.math.ode.StepNormalizerTest.testBoundaries(0)"
reference "org.apache.commons.math.ode.StepNormalizerTest.testBeforeEnd(0)" "org.apache.commons.math.ode.StepNormalizerTest.pb"
call "org.apache.commons.math.ode.StepNormalizerTest.testBeforeEnd(0)" "org.apache.commons.math.ode.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.StepNormalizerTest.testBeforeEnd(0)" "org.apache.commons.math.ode.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.StepNormalizerTest.testBeforeEnd(0)" "org.apache.commons.math.ode.StepNormalizerTest.setLastSeen(1)"
reference "org.apache.commons.math.ode.StepNormalizerTest.testBeforeEnd(0)" "org.apache.commons.math.ode.StepNormalizerTest.integ"
call "org.apache.commons.math.ode.StepNormalizerTest.testBeforeEnd(0)" "org.apache.commons.math.ode.StepNormalizerTest.2.{...}"
call "org.apache.commons.math.ode.StepNormalizerTest.testBeforeEnd(0)" "org.apache.commons.math.ode.StepNormalizer.StepNormalizer(2)"
call "org.apache.commons.math.ode.StepNormalizerTest.testBeforeEnd(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.setStepHandler(1)"
call "org.apache.commons.math.ode.StepNormalizerTest.testBeforeEnd(0)" "org.apache.commons.math.ode.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.StepNormalizerTest.testBeforeEnd(0)" "org.apache.commons.math.ode.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.StepNormalizerTest.testBeforeEnd(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
reference "org.apache.commons.math.ode.StepNormalizerTest.testBeforeEnd(0)" "org.apache.commons.math.ode.StepNormalizerTest.lastSeen"
call "org.apache.commons.math.ode.StepNormalizerTest.testBeforeEnd(0)" "org.apache.commons.math.ode.StepNormalizerTest.assertTrue(1)"
contain "org.apache.commons.math.ode.StepNormalizerTest" "org.apache.commons.math.ode.StepNormalizerTest.testBeforeEnd(0)"
call "org.apache.commons.math.ode.StepNormalizerTest.checkValue(2)" "org.apache.commons.math.ode.StepNormalizerTest.assertTrue(1)"
contain "org.apache.commons.math.ode.StepNormalizerTest" "org.apache.commons.math.ode.StepNormalizerTest.checkValue(2)"
reference "org.apache.commons.math.ode.StepNormalizerTest.setLastSeen(1)" "org.apache.commons.math.ode.StepNormalizerTest.lastSeen"
contain "org.apache.commons.math.ode.StepNormalizerTest" "org.apache.commons.math.ode.StepNormalizerTest.setLastSeen(1)"
reference "org.apache.commons.math.ode.StepNormalizerTest.suite(0)" "org.apache.commons.math.ode.StepNormalizerTest.class$org$apache$commons$math$ode$StepNormalizerTest"
call "org.apache.commons.math.ode.StepNormalizerTest.suite(0)" "org.apache.commons.math.ode.StepNormalizerTest.class$(1)"
call "org.apache.commons.math.ode.StepNormalizerTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.StepNormalizerTest" "org.apache.commons.math.ode.StepNormalizerTest.suite(0)"
call "org.apache.commons.math.ode.StepNormalizerTest.setUp(0)" "org.apache.commons.math.ode.TestProblem3.TestProblem3(1)"
reference "org.apache.commons.math.ode.StepNormalizerTest.setUp(0)" "org.apache.commons.math.ode.StepNormalizerTest.pb"
call "org.apache.commons.math.ode.StepNormalizerTest.setUp(0)" "org.apache.commons.math.ode.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.StepNormalizerTest.setUp(0)" "org.apache.commons.math.ode.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.StepNormalizerTest.setUp(0)" "org.apache.commons.math.ode.DormandPrince54Integrator.DormandPrince54Integrator(4)"
reference "org.apache.commons.math.ode.StepNormalizerTest.setUp(0)" "org.apache.commons.math.ode.StepNormalizerTest.integ"
reference "org.apache.commons.math.ode.StepNormalizerTest.setUp(0)" "org.apache.commons.math.ode.StepNormalizerTest.lastSeen"
contain "org.apache.commons.math.ode.StepNormalizerTest" "org.apache.commons.math.ode.StepNormalizerTest.setUp(0)"
reference "org.apache.commons.math.ode.StepNormalizerTest.tearDown(0)" "org.apache.commons.math.ode.StepNormalizerTest.pb"
reference "org.apache.commons.math.ode.StepNormalizerTest.tearDown(0)" "org.apache.commons.math.ode.StepNormalizerTest.integ"
contain "org.apache.commons.math.ode.StepNormalizerTest" "org.apache.commons.math.ode.StepNormalizerTest.tearDown(0)"
contain "org.apache.commons.math.ode.StepNormalizerTest" "org.apache.commons.math.ode.StepNormalizerTest.class$(1)"
reference "org.apache.commons.math.ode.StepNormalizerTest.pb" "org.apache.commons.math.ode.TestProblem3"
contain "org.apache.commons.math.ode.StepNormalizerTest" "org.apache.commons.math.ode.StepNormalizerTest.pb"
reference "org.apache.commons.math.ode.StepNormalizerTest.integ" "org.apache.commons.math.ode.FirstOrderIntegrator"
contain "org.apache.commons.math.ode.StepNormalizerTest" "org.apache.commons.math.ode.StepNormalizerTest.integ"
contain "org.apache.commons.math.ode.StepNormalizerTest" "org.apache.commons.math.ode.StepNormalizerTest.lastSeen"
contain "org.apache.commons.math.ode.StepNormalizerTest" "org.apache.commons.math.ode.StepNormalizerTest.class$org$apache$commons$math$ode$StepNormalizerTest"
reference "org.apache.commons.math.analysis.PolynomialFunctionTest" "org.apache.commons.math.analysis.PolynomialFunction"
reference "org.apache.commons.math.analysis.PolynomialFunctionTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.PolynomialFunctionTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.analysis.PolynomialFunctionTest" "org.apache.commons.math.analysis.UnivariateRealFunction"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.PolynomialFunctionTest(0)" "junit.framework.TestCase.TestCase(0)"
reference "org.apache.commons.math.analysis.PolynomialFunctionTest.PolynomialFunctionTest(0)" "org.apache.commons.math.analysis.PolynomialFunctionTest.tolerance"
contain "org.apache.commons.math.analysis.PolynomialFunctionTest" "org.apache.commons.math.analysis.PolynomialFunctionTest.PolynomialFunctionTest(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testConstants(0)" "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testConstants(0)" "org.apache.commons.math.analysis.PolynomialFunction.value(1)"
reference "org.apache.commons.math.analysis.PolynomialFunctionTest.testConstants(0)" "org.apache.commons.math.analysis.PolynomialFunctionTest.tolerance"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testConstants(0)" "org.apache.commons.math.analysis.PolynomialFunctionTest.assertEquals(3)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testConstants(0)" "org.apache.commons.math.analysis.PolynomialFunction.degree(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testConstants(0)" "org.apache.commons.math.analysis.PolynomialFunctionTest.assertEquals(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testConstants(0)" "org.apache.commons.math.analysis.PolynomialFunction.derivative(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testConstants(0)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testConstants(0)" "org.apache.commons.math.analysis.PolynomialFunction.polynomialDerivative(0)"
contain "org.apache.commons.math.analysis.PolynomialFunctionTest" "org.apache.commons.math.analysis.PolynomialFunctionTest.testConstants(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testLinear(0)" "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testLinear(0)" "org.apache.commons.math.analysis.PolynomialFunction.value(1)"
reference "org.apache.commons.math.analysis.PolynomialFunctionTest.testLinear(0)" "org.apache.commons.math.analysis.PolynomialFunctionTest.tolerance"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testLinear(0)" "org.apache.commons.math.analysis.PolynomialFunctionTest.assertEquals(3)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testLinear(0)" "org.apache.commons.math.analysis.PolynomialFunction.degree(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testLinear(0)" "org.apache.commons.math.analysis.PolynomialFunctionTest.assertEquals(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testLinear(0)" "org.apache.commons.math.analysis.PolynomialFunction.polynomialDerivative(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testLinear(0)" "org.apache.commons.math.analysis.PolynomialFunction.derivative(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testLinear(0)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
contain "org.apache.commons.math.analysis.PolynomialFunctionTest" "org.apache.commons.math.analysis.PolynomialFunctionTest.testLinear(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testQuadratic(0)" "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testQuadratic(0)" "org.apache.commons.math.analysis.PolynomialFunction.value(1)"
reference "org.apache.commons.math.analysis.PolynomialFunctionTest.testQuadratic(0)" "org.apache.commons.math.analysis.PolynomialFunctionTest.tolerance"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testQuadratic(0)" "org.apache.commons.math.analysis.PolynomialFunctionTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.PolynomialFunctionTest" "org.apache.commons.math.analysis.PolynomialFunctionTest.testQuadratic(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testQuintic(0)" "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testQuintic(0)" "org.apache.commons.math.analysis.PolynomialFunction.value(1)"
reference "org.apache.commons.math.analysis.PolynomialFunctionTest.testQuintic(0)" "org.apache.commons.math.analysis.PolynomialFunctionTest.tolerance"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testQuintic(0)" "org.apache.commons.math.analysis.PolynomialFunctionTest.assertEquals(3)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testQuintic(0)" "org.apache.commons.math.analysis.PolynomialFunction.degree(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testQuintic(0)" "org.apache.commons.math.analysis.PolynomialFunctionTest.assertEquals(2)"
contain "org.apache.commons.math.analysis.PolynomialFunctionTest" "org.apache.commons.math.analysis.PolynomialFunctionTest.testQuintic(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testfirstDerivativeComparision(0)" "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testfirstDerivativeComparision(0)" "org.apache.commons.math.analysis.PolynomialFunction.derivative(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testfirstDerivativeComparision(0)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testfirstDerivativeComparision(0)" "org.apache.commons.math.analysis.PolynomialFunction.value(1)"
reference "org.apache.commons.math.analysis.PolynomialFunctionTest.testfirstDerivativeComparision(0)" "org.apache.commons.math.analysis.PolynomialFunctionTest.tolerance"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testfirstDerivativeComparision(0)" "org.apache.commons.math.analysis.PolynomialFunctionTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.PolynomialFunctionTest" "org.apache.commons.math.analysis.PolynomialFunctionTest.testfirstDerivativeComparision(0)"
contain "org.apache.commons.math.analysis.PolynomialFunctionTest" "org.apache.commons.math.analysis.PolynomialFunctionTest.tolerance"
reference "org.apache.commons.math.ode.FirstOrderConverterTest.Equations" "org.apache.commons.math.ode.SecondOrderDifferentialEquations"
reference "org.apache.commons.math.ode.FirstOrderConverterTest.Equations" "org.apache.commons.math.ode.FirstOrderConverterTest"
reference "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.Equations(2)" "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.n"
reference "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.Equations(2)" "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.omega2"
contain "org.apache.commons.math.ode.FirstOrderConverterTest.Equations" "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.Equations(2)"
reference "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.getDimension(0)" "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.n"
contain "org.apache.commons.math.ode.FirstOrderConverterTest.Equations" "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.getDimension(0)"
reference "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.computeSecondDerivatives(4)" "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.n"
reference "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.computeSecondDerivatives(4)" "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.omega2"
contain "org.apache.commons.math.ode.FirstOrderConverterTest.Equations" "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.computeSecondDerivatives(4)"
contain "org.apache.commons.math.ode.FirstOrderConverterTest.Equations" "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.n"
contain "org.apache.commons.math.ode.FirstOrderConverterTest.Equations" "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.omega2"
reference "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction.FreudensteinRothFunction(4)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction" "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction.FreudensteinRothFunction(4)"
reference "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction.getJacobian(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction" "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction" "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction.getResiduals(0)"
reference "org.apache.commons.math.analysis.QuinticFunction" "org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction"
reference "org.apache.commons.math.analysis.QuinticFunction" "org.apache.commons.math.FunctionEvaluationException"
contain "org.apache.commons.math.analysis.QuinticFunction" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
contain "org.apache.commons.math.analysis.QuinticFunction" "org.apache.commons.math.analysis.QuinticFunction.value(1)"
call "org.apache.commons.math.analysis.QuinticFunction.derivative(0)" "org.apache.commons.math.analysis.QuinticFunction.1.{...}"
contain "org.apache.commons.math.analysis.QuinticFunction" "org.apache.commons.math.analysis.QuinticFunction.derivative(0)"
contain "org.apache.commons.math.analysis.QuinticFunction" "org.apache.commons.math.analysis.QuinticFunction.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.summary.SumLogTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.summary.SumLogTest" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs"
reference "org.apache.commons.math.stat.descriptive.summary.SumLogTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.summary.SumLogTest.SumLogTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.summary.SumLogTest" "org.apache.commons.math.stat.descriptive.summary.SumLogTest.SumLogTest(1)"
reference "org.apache.commons.math.stat.descriptive.summary.SumLogTest.suite(0)" "org.apache.commons.math.stat.descriptive.summary.SumLogTest.class$org$apache$commons$math$stat$descriptive$summary$SumLogTest"
call "org.apache.commons.math.stat.descriptive.summary.SumLogTest.suite(0)" "org.apache.commons.math.stat.descriptive.summary.SumLogTest.class$(1)"
call "org.apache.commons.math.stat.descriptive.summary.SumLogTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.summary.SumLogTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.summary.SumLogTest" "org.apache.commons.math.stat.descriptive.summary.SumLogTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumLogTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.SumOfLogs(0)"
contain "org.apache.commons.math.stat.descriptive.summary.SumLogTest" "org.apache.commons.math.stat.descriptive.summary.SumLogTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.summary.SumLogTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.summary.SumLogTest.sumLog"
contain "org.apache.commons.math.stat.descriptive.summary.SumLogTest" "org.apache.commons.math.stat.descriptive.summary.SumLogTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumLogTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.SumOfLogs(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumLogTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.getResult(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumLogTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.SumLogTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.summary.SumLogTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.increment(1)"
call "org.apache.commons.math.stat.descriptive.summary.SumLogTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.SumLogTest.assertFalse(1)"
call "org.apache.commons.math.stat.descriptive.summary.SumLogTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.SumLogTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.summary.SumLogTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.clear(0)"
contain "org.apache.commons.math.stat.descriptive.summary.SumLogTest" "org.apache.commons.math.stat.descriptive.summary.SumLogTest.testSpecialValues(0)"
contain "org.apache.commons.math.stat.descriptive.summary.SumLogTest" "org.apache.commons.math.stat.descriptive.summary.SumLogTest.class$(1)"
reference "org.apache.commons.math.stat.descriptive.summary.SumLogTest.stat" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs"
contain "org.apache.commons.math.stat.descriptive.summary.SumLogTest" "org.apache.commons.math.stat.descriptive.summary.SumLogTest.stat"
contain "org.apache.commons.math.stat.descriptive.summary.SumLogTest" "org.apache.commons.math.stat.descriptive.summary.SumLogTest.class$org$apache$commons$math$stat$descriptive$summary$SumLogTest"
reference "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.Frequency"
reference "org.apache.commons.math.stat.FrequencyTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.FrequencyTest" "junit.framework.TestCase"
reference "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.stat.FrequencyTest.FrequencyTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.stat.FrequencyTest.FrequencyTest(1)" "org.apache.commons.math.stat.FrequencyTest.oneL"
reference "org.apache.commons.math.stat.FrequencyTest.FrequencyTest(1)" "org.apache.commons.math.stat.FrequencyTest.twoL"
reference "org.apache.commons.math.stat.FrequencyTest.FrequencyTest(1)" "org.apache.commons.math.stat.FrequencyTest.threeL"
reference "org.apache.commons.math.stat.FrequencyTest.FrequencyTest(1)" "org.apache.commons.math.stat.FrequencyTest.oneI"
reference "org.apache.commons.math.stat.FrequencyTest.FrequencyTest(1)" "org.apache.commons.math.stat.FrequencyTest.twoI"
reference "org.apache.commons.math.stat.FrequencyTest.FrequencyTest(1)" "org.apache.commons.math.stat.FrequencyTest.threeI"
reference "org.apache.commons.math.stat.FrequencyTest.FrequencyTest(1)" "org.apache.commons.math.stat.FrequencyTest.oneS"
reference "org.apache.commons.math.stat.FrequencyTest.FrequencyTest(1)" "org.apache.commons.math.stat.FrequencyTest.twoS"
reference "org.apache.commons.math.stat.FrequencyTest.FrequencyTest(1)" "org.apache.commons.math.stat.FrequencyTest.tolerance"
reference "org.apache.commons.math.stat.FrequencyTest.FrequencyTest(1)" "org.apache.commons.math.stat.FrequencyTest.f"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.FrequencyTest(1)"
call "org.apache.commons.math.stat.FrequencyTest.setUp(0)" "org.apache.commons.math.stat.Frequency.Frequency(0)"
reference "org.apache.commons.math.stat.FrequencyTest.setUp(0)" "org.apache.commons.math.stat.FrequencyTest.f"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.setUp(0)"
reference "org.apache.commons.math.stat.FrequencyTest.suite(0)" "org.apache.commons.math.stat.FrequencyTest.class$org$apache$commons$math$stat$FrequencyTest"
call "org.apache.commons.math.stat.FrequencyTest.suite(0)" "org.apache.commons.math.stat.FrequencyTest.class$(1)"
call "org.apache.commons.math.stat.FrequencyTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.FrequencyTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.suite(0)"
reference "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.FrequencyTest.f"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.getSumFreq(0)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.FrequencyTest.assertEquals(3)"
reference "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.FrequencyTest.oneL"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
reference "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.FrequencyTest.twoL"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
reference "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.FrequencyTest.oneI"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.getCumFreq(1)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.getCumFreq(1)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.clear(0)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
reference "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.FrequencyTest.tolerance"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.FrequencyTest.assertEquals(4)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.Frequency(0)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.getPct(1)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.Frequency(1)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.FrequencyTest.assertEquals(2)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.getCumFreq(1)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.getPct(1)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.FrequencyTest.assertEquals(3)"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.testCounts(0)"
reference "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.FrequencyTest.f"
reference "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.FrequencyTest.oneL"
call "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
reference "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.FrequencyTest.twoL"
reference "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.FrequencyTest.oneI"
call "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
reference "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.FrequencyTest.twoI"
reference "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.FrequencyTest.threeL"
reference "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.FrequencyTest.threeI"
call "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.Frequency.getPct(1)"
reference "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.FrequencyTest.tolerance"
call "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.FrequencyTest.assertEquals(4)"
call "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.Frequency.getPct(1)"
call "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.Frequency.getPct(1)"
call "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
call "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
call "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.testPcts(0)"
reference "org.apache.commons.math.stat.FrequencyTest.testAdd(0)" "org.apache.commons.math.stat.FrequencyTest.f"
call "org.apache.commons.math.stat.FrequencyTest.testAdd(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.stat.FrequencyTest.testAdd(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.stat.FrequencyTest.testAdd(0)" "org.apache.commons.math.stat.FrequencyTest.fail(1)"
call "org.apache.commons.math.stat.FrequencyTest.testAdd(0)" "org.apache.commons.math.stat.Frequency.getPct(1)"
reference "org.apache.commons.math.stat.FrequencyTest.testAdd(0)" "org.apache.commons.math.stat.FrequencyTest.tolerance"
call "org.apache.commons.math.stat.FrequencyTest.testAdd(0)" "org.apache.commons.math.stat.FrequencyTest.assertEquals(4)"
call "org.apache.commons.math.stat.FrequencyTest.testAdd(0)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
call "org.apache.commons.math.stat.FrequencyTest.testAdd(0)" "org.apache.commons.math.stat.Frequency.getPct(1)"
call "org.apache.commons.math.stat.FrequencyTest.testAdd(0)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.testAdd(0)"
reference "org.apache.commons.math.stat.FrequencyTest.testEmptyTable(0)" "org.apache.commons.math.stat.FrequencyTest.f"
call "org.apache.commons.math.stat.FrequencyTest.testEmptyTable(0)" "org.apache.commons.math.stat.Frequency.getSumFreq(0)"
call "org.apache.commons.math.stat.FrequencyTest.testEmptyTable(0)" "org.apache.commons.math.stat.FrequencyTest.assertEquals(3)"
call "org.apache.commons.math.stat.FrequencyTest.testEmptyTable(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
call "org.apache.commons.math.stat.FrequencyTest.testEmptyTable(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
call "org.apache.commons.math.stat.FrequencyTest.testEmptyTable(0)" "org.apache.commons.math.stat.Frequency.getCumFreq(1)"
call "org.apache.commons.math.stat.FrequencyTest.testEmptyTable(0)" "org.apache.commons.math.stat.Frequency.getCumFreq(1)"
call "org.apache.commons.math.stat.FrequencyTest.testEmptyTable(0)" "org.apache.commons.math.stat.Frequency.getPct(1)"
call "org.apache.commons.math.stat.FrequencyTest.testEmptyTable(0)" "org.apache.commons.math.stat.FrequencyTest.assertTrue(2)"
call "org.apache.commons.math.stat.FrequencyTest.testEmptyTable(0)" "org.apache.commons.math.stat.Frequency.getPct(1)"
call "org.apache.commons.math.stat.FrequencyTest.testEmptyTable(0)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
call "org.apache.commons.math.stat.FrequencyTest.testEmptyTable(0)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.testEmptyTable(0)"
reference "org.apache.commons.math.stat.FrequencyTest.testToString(0)" "org.apache.commons.math.stat.FrequencyTest.f"
reference "org.apache.commons.math.stat.FrequencyTest.testToString(0)" "org.apache.commons.math.stat.FrequencyTest.oneL"
call "org.apache.commons.math.stat.FrequencyTest.testToString(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
reference "org.apache.commons.math.stat.FrequencyTest.testToString(0)" "org.apache.commons.math.stat.FrequencyTest.twoL"
reference "org.apache.commons.math.stat.FrequencyTest.testToString(0)" "org.apache.commons.math.stat.FrequencyTest.oneI"
call "org.apache.commons.math.stat.FrequencyTest.testToString(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
reference "org.apache.commons.math.stat.FrequencyTest.testToString(0)" "org.apache.commons.math.stat.FrequencyTest.twoI"
call "org.apache.commons.math.stat.FrequencyTest.testToString(0)" "org.apache.commons.math.stat.Frequency.toString(0)"
call "org.apache.commons.math.stat.FrequencyTest.testToString(0)" "org.apache.commons.math.stat.FrequencyTest.assertNotNull(1)"
call "org.apache.commons.math.stat.FrequencyTest.testToString(0)" "org.apache.commons.math.stat.FrequencyTest.assertNull(1)"
call "org.apache.commons.math.stat.FrequencyTest.testToString(0)" "org.apache.commons.math.stat.FrequencyTest.fail(1)"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.testToString(0)"
reference "org.apache.commons.math.stat.FrequencyTest.testIntegerValues(0)" "org.apache.commons.math.stat.FrequencyTest.f"
call "org.apache.commons.math.stat.FrequencyTest.testIntegerValues(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.stat.FrequencyTest.testIntegerValues(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.stat.FrequencyTest.testIntegerValues(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.stat.FrequencyTest.testIntegerValues(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
call "org.apache.commons.math.stat.FrequencyTest.testIntegerValues(0)" "org.apache.commons.math.stat.FrequencyTest.assertEquals(3)"
call "org.apache.commons.math.stat.FrequencyTest.testIntegerValues(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
call "org.apache.commons.math.stat.FrequencyTest.testIntegerValues(0)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
reference "org.apache.commons.math.stat.FrequencyTest.testIntegerValues(0)" "org.apache.commons.math.stat.FrequencyTest.tolerance"
call "org.apache.commons.math.stat.FrequencyTest.testIntegerValues(0)" "org.apache.commons.math.stat.FrequencyTest.assertEquals(4)"
call "org.apache.commons.math.stat.FrequencyTest.testIntegerValues(0)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
call "org.apache.commons.math.stat.FrequencyTest.testIntegerValues(0)" "org.apache.commons.math.stat.Frequency.valuesIterator(0)"
call "org.apache.commons.math.stat.FrequencyTest.testIntegerValues(0)" "org.apache.commons.math.stat.FrequencyTest.assertTrue(1)"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.testIntegerValues(0)"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.class$(1)"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.oneL"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.twoL"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.threeL"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.oneI"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.twoI"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.threeI"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.oneS"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.twoS"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.tolerance"
reference "org.apache.commons.math.stat.FrequencyTest.f" "org.apache.commons.math.stat.Frequency"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.f"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.class$org$apache$commons$math$stat$FrequencyTest"
reference "org.apache.commons.math.ode.TestProblem4.Stop" "org.apache.commons.math.ode.SwitchingFunction"
reference "org.apache.commons.math.ode.TestProblem4.Stop" "org.apache.commons.math.ode.TestProblem4"
contain "org.apache.commons.math.ode.TestProblem4.Stop" "org.apache.commons.math.ode.TestProblem4.Stop.Stop(0)"
contain "org.apache.commons.math.ode.TestProblem4.Stop" "org.apache.commons.math.ode.TestProblem4.Stop.g(2)"
contain "org.apache.commons.math.ode.TestProblem4.Stop" "org.apache.commons.math.ode.TestProblem4.Stop.eventOccurred(2)"
contain "org.apache.commons.math.ode.TestProblem4.Stop" "org.apache.commons.math.ode.TestProblem4.Stop.resetState(2)"
contain "org.apache.commons.math.ode.TestProblem4.Stop" "org.apache.commons.math.ode.TestProblem4.Stop.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.moment.SecondMomentTest" "org.apache.commons.math.stat.descriptive.moment.SecondMoment"
reference "org.apache.commons.math.stat.descriptive.moment.SecondMomentTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.moment.SecondMomentTest.SecondMomentTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.moment.SecondMomentTest" "org.apache.commons.math.stat.descriptive.moment.SecondMomentTest.SecondMomentTest(1)"
call "org.apache.commons.math.stat.descriptive.moment.SecondMomentTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.SecondMoment(0)"
contain "org.apache.commons.math.stat.descriptive.moment.SecondMomentTest" "org.apache.commons.math.stat.descriptive.moment.SecondMomentTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.SecondMomentTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMomentTest.secondMoment"
contain "org.apache.commons.math.stat.descriptive.moment.SecondMomentTest" "org.apache.commons.math.stat.descriptive.moment.SecondMomentTest.expectedValue(0)"
reference "org.apache.commons.math.stat.descriptive.moment.SecondMomentTest.stat" "org.apache.commons.math.stat.descriptive.moment.SecondMoment"
contain "org.apache.commons.math.stat.descriptive.moment.SecondMomentTest" "org.apache.commons.math.stat.descriptive.moment.SecondMomentTest.stat"
