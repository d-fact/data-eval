<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction68	68	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.CSVFormat: java.lang.String toString()>/assign/instruction50	50	<org.apache.commons.csv.CSVFormat: java.lang.String toString()>
<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction77	77	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction86	86	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.CSVFormat: java.lang.String toString()>/assign/instruction7	7	<org.apache.commons.csv.CSVFormat: java.lang.String toString()>
<org.apache.commons.csv.CSVPrinter: void printRecords(java.sql.ResultSet)>/assign/instruction3	3	<org.apache.commons.csv.CSVPrinter: void printRecords(java.sql.ResultSet)>
<org.apache.commons.csv.CSVParser$2: void <clinit>()>/assign/instruction27	27	<org.apache.commons.csv.CSVParser$2: void <clinit>()>
<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction69	69	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.CSVRecord: java.util.Map putIn(java.util.Map)>/assign/instruction13	13	<org.apache.commons.csv.CSVRecord: java.util.Map putIn(java.util.Map)>
<org.apache.commons.csv.CSVPrinter: void printRecords(java.sql.ResultSet)>/assign/instruction4	4	<org.apache.commons.csv.CSVPrinter: void printRecords(java.sql.ResultSet)>
<org.apache.commons.csv.CSVRecord: java.lang.String get(java.lang.String)>/assign/instruction17	17	<org.apache.commons.csv.CSVRecord: java.lang.String get(java.lang.String)>
<org.apache.commons.csv.CSVFormat: org.apache.commons.csv.CSVFormat withHeader(java.sql.ResultSetMetaData)>/assign/instruction5	5	<org.apache.commons.csv.CSVFormat: org.apache.commons.csv.CSVFormat withHeader(java.sql.ResultSetMetaData)>
<org.apache.commons.csv.CSVFormat: java.lang.String toString()>/assign/instruction41	41	<org.apache.commons.csv.CSVFormat: java.lang.String toString()>
<org.apache.commons.csv.Lexer: org.apache.commons.csv.Token parseEncapsulatedToken(org.apache.commons.csv.Token)>/assign/instruction66	66	<org.apache.commons.csv.Lexer: org.apache.commons.csv.Token parseEncapsulatedToken(org.apache.commons.csv.Token)>
<org.apache.commons.csv.CSVPrinter: void printAndQuote(java.lang.Object,java.lang.CharSequence,int,int)>/assign/instruction14	14	<org.apache.commons.csv.CSVPrinter: void printAndQuote(java.lang.Object,java.lang.CharSequence,int,int)>
<org.apache.commons.csv.CSVRecord: java.lang.String toString()>/assign/instruction10	10	<org.apache.commons.csv.CSVRecord: java.lang.String toString()>
<org.apache.commons.csv.CSVPrinter: void print(java.lang.Object)>/assign/instruction39	39	<org.apache.commons.csv.CSVPrinter: void print(java.lang.Object)>
<org.apache.commons.csv.CSVRecord: java.lang.String get(java.lang.Enum)>/assign/instruction3	3	<org.apache.commons.csv.CSVRecord: java.lang.String get(java.lang.Enum)>
<org.apache.commons.csv.CSVPrinter: void printAndQuote(java.lang.Object,java.lang.CharSequence,int,int)>/assign/instruction43	43	<org.apache.commons.csv.CSVPrinter: void printAndQuote(java.lang.Object,java.lang.CharSequence,int,int)>
<org.apache.commons.csv.Assertions: void notNull(java.lang.Object,java.lang.String)>/assign/instruction9	9	<org.apache.commons.csv.Assertions: void notNull(java.lang.Object,java.lang.String)>
<org.apache.commons.csv.CSVParser: org.apache.commons.csv.CSVRecord nextRecord()>/assign/instruction64	64	<org.apache.commons.csv.CSVParser: org.apache.commons.csv.CSVRecord nextRecord()>
<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction85	85	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.CSVFormat$Predefined: org.apache.commons.csv.CSVFormat$Predefined[] values()>/assign/instruction2	2	<org.apache.commons.csv.CSVFormat$Predefined: org.apache.commons.csv.CSVFormat$Predefined[] values()>
<org.apache.commons.csv.CSVPrinter: void printRecord(java.lang.Iterable)>/assign/instruction3	3	<org.apache.commons.csv.CSVPrinter: void printRecord(java.lang.Iterable)>
<org.apache.commons.csv.CSVParser: void addRecordValue(boolean)>/assign/instruction16	16	<org.apache.commons.csv.CSVParser: void addRecordValue(boolean)>
<org.apache.commons.csv.CSVPrinter: void printAndQuote(java.lang.Object,java.lang.CharSequence,int,int)>/assign/instruction77	77	<org.apache.commons.csv.CSVPrinter: void printAndQuote(java.lang.Object,java.lang.CharSequence,int,int)>
<org.apache.commons.csv.CSVFormat$Predefined: org.apache.commons.csv.CSVFormat$Predefined valueOf(java.lang.String)>/assign/instruction2	2	<org.apache.commons.csv.CSVFormat$Predefined: org.apache.commons.csv.CSVFormat$Predefined valueOf(java.lang.String)>
<org.apache.commons.csv.ExtendedBufferedReader: java.lang.String readLine()>/assign/instruction2	2	<org.apache.commons.csv.ExtendedBufferedReader: java.lang.String readLine()>
<org.apache.commons.csv.CSVFormat: java.lang.String toString()>/assign/instruction23	23	<org.apache.commons.csv.CSVFormat: java.lang.String toString()>
<org.apache.commons.csv.Token: java.lang.String toString()>/assign/instruction10	10	<org.apache.commons.csv.Token: java.lang.String toString()>
<org.apache.commons.csv.CSVPrinter$1: void <clinit>()>/assign/instruction27	27	<org.apache.commons.csv.CSVPrinter$1: void <clinit>()>
<org.apache.commons.csv.CSVParser$2: void <clinit>()>/assign/instruction37	37	<org.apache.commons.csv.CSVParser$2: void <clinit>()>
<org.apache.commons.csv.CSVParser: java.util.Map initializeHeader()>/assign/instruction70	70	<org.apache.commons.csv.CSVParser: java.util.Map initializeHeader()>
<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction82	82	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction115	115	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.CSVPrinter: void printComment(java.lang.String)>/assign/instruction40	40	<org.apache.commons.csv.CSVPrinter: void printComment(java.lang.String)>
<org.apache.commons.csv.Token: java.lang.String toString()>/assign/instruction9	9	<org.apache.commons.csv.Token: java.lang.String toString()>
<org.apache.commons.csv.Lexer: org.apache.commons.csv.Token parseEncapsulatedToken(org.apache.commons.csv.Token)>/assign/instruction64	64	<org.apache.commons.csv.Lexer: org.apache.commons.csv.Token parseEncapsulatedToken(org.apache.commons.csv.Token)>
<org.apache.commons.csv.CSVRecord: java.lang.String toString()>/assign/instruction9	9	<org.apache.commons.csv.CSVRecord: java.lang.String toString()>
<org.apache.commons.csv.CSVParser: java.util.Map initializeHeader()>/assign/instruction69	69	<org.apache.commons.csv.CSVParser: java.util.Map initializeHeader()>
<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction38	38	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.CSVPrinter: void printComment(java.lang.String)>/assign/instruction29	29	<org.apache.commons.csv.CSVPrinter: void printComment(java.lang.String)>
<org.apache.commons.csv.Token: java.lang.String toString()>/assign/instruction11	11	<org.apache.commons.csv.Token: java.lang.String toString()>
<org.apache.commons.csv.CSVRecord: java.util.Map putIn(java.util.Map)>/assign/instruction8	8	<org.apache.commons.csv.CSVRecord: java.util.Map putIn(java.util.Map)>
<org.apache.commons.csv.CSVFormat: boolean equals(java.lang.Object)>/assign/instruction69	69	<org.apache.commons.csv.CSVFormat: boolean equals(java.lang.Object)>
<org.apache.commons.csv.CSVFormat: boolean isLineBreak(java.lang.Character)>/assign/instruction3	3	<org.apache.commons.csv.CSVFormat: boolean isLineBreak(java.lang.Character)>
<org.apache.commons.csv.QuoteMode: org.apache.commons.csv.QuoteMode[] values()>/assign/instruction2	2	<org.apache.commons.csv.QuoteMode: org.apache.commons.csv.QuoteMode[] values()>
<org.apache.commons.csv.Lexer: void trimTrailingSpaces(java.lang.StringBuilder)>/assign/instruction3	3	<org.apache.commons.csv.Lexer: void trimTrailingSpaces(java.lang.StringBuilder)>
<org.apache.commons.csv.CSVParser: org.apache.commons.csv.CSVRecord nextRecord()>/assign/instruction98	98	<org.apache.commons.csv.CSVParser: org.apache.commons.csv.CSVRecord nextRecord()>
<org.apache.commons.csv.CSVPrinter: void print(java.lang.Object)>/assign/instruction18	18	<org.apache.commons.csv.CSVPrinter: void print(java.lang.Object)>
<org.apache.commons.csv.CSVFormat: int hashCode()>/assign/instruction23	23	<org.apache.commons.csv.CSVFormat: int hashCode()>
<org.apache.commons.csv.CSVFormat: org.apache.commons.csv.CSVFormat withHeader(java.lang.Class)>/assign/instruction5	5	<org.apache.commons.csv.CSVFormat: org.apache.commons.csv.CSVFormat withHeader(java.lang.Class)>
<org.apache.commons.csv.CSVPrinter: void printRecords(java.lang.Iterable)>/assign/instruction3	3	<org.apache.commons.csv.CSVPrinter: void printRecords(java.lang.Iterable)>
<org.apache.commons.csv.Lexer: org.apache.commons.csv.Token parseSimpleToken(org.apache.commons.csv.Token,int)>/assign/instruction30	30	<org.apache.commons.csv.Lexer: org.apache.commons.csv.Token parseSimpleToken(org.apache.commons.csv.Token,int)>
<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction120	120	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.CSVParser: org.apache.commons.csv.CSVRecord nextRecord()>/assign/instruction41	41	<org.apache.commons.csv.CSVParser: org.apache.commons.csv.CSVRecord nextRecord()>
<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction45	45	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.Token$Type: org.apache.commons.csv.Token$Type[] values()>/assign/instruction2	2	<org.apache.commons.csv.Token$Type: org.apache.commons.csv.Token$Type[] values()>
<org.apache.commons.csv.Constants: void <clinit>()>/assign/instruction1	1	<org.apache.commons.csv.Constants: void <clinit>()>
<org.apache.commons.csv.CSVRecord: java.util.Map putIn(java.util.Map)>/assign/instruction19	19	<org.apache.commons.csv.CSVRecord: java.util.Map putIn(java.util.Map)>
<org.apache.commons.csv.Lexer: org.apache.commons.csv.Token parseEncapsulatedToken(org.apache.commons.csv.Token)>/assign/instruction68	68	<org.apache.commons.csv.Lexer: org.apache.commons.csv.Token parseEncapsulatedToken(org.apache.commons.csv.Token)>
<org.apache.commons.csv.CSVFormat: java.lang.String toString()>/assign/instruction67	67	<org.apache.commons.csv.CSVFormat: java.lang.String toString()>
<org.apache.commons.csv.CSVRecord: java.lang.String toString()>/assign/instruction18	18	<org.apache.commons.csv.CSVRecord: java.lang.String toString()>
<org.apache.commons.csv.CSVFormat: java.lang.String toString()>/assign/instruction43	43	<org.apache.commons.csv.CSVFormat: java.lang.String toString()>
<org.apache.commons.csv.CSVFormat: org.apache.commons.csv.CSVFormat withHeader(java.sql.ResultSet)>/assign/instruction4	4	<org.apache.commons.csv.CSVFormat: org.apache.commons.csv.CSVFormat withHeader(java.sql.ResultSet)>
<org.apache.commons.csv.CSVFormat: int hashCode()>/assign/instruction33	33	<org.apache.commons.csv.CSVFormat: int hashCode()>
<org.apache.commons.csv.CSVFormat: org.apache.commons.csv.CSVFormat withHeader(java.lang.Class)>/assign/instruction15	15	<org.apache.commons.csv.CSVFormat: org.apache.commons.csv.CSVFormat withHeader(java.lang.Class)>
<org.apache.commons.csv.CSVPrinter: void printAndQuote(java.lang.Object,java.lang.CharSequence,int,int)>/assign/instruction22	22	<org.apache.commons.csv.CSVPrinter: void printAndQuote(java.lang.Object,java.lang.CharSequence,int,int)>
<org.apache.commons.csv.CSVFormat: java.lang.String toString()>/assign/instruction52	52	<org.apache.commons.csv.CSVFormat: java.lang.String toString()>
<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction52	52	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.CSVFormat: java.lang.String format(java.lang.Object[])>/assign/instruction10	10	<org.apache.commons.csv.CSVFormat: java.lang.String format(java.lang.Object[])>
<org.apache.commons.csv.CSVParser: java.util.Map initializeHeader()>/assign/instruction68	68	<org.apache.commons.csv.CSVParser: java.util.Map initializeHeader()>
<org.apache.commons.csv.CSVRecord: java.lang.String toString()>/assign/instruction4	4	<org.apache.commons.csv.CSVRecord: java.lang.String toString()>
<org.apache.commons.csv.CSVPrinter: java.lang.CharSequence trim(java.lang.CharSequence)>/assign/instruction14	14	<org.apache.commons.csv.CSVPrinter: java.lang.CharSequence trim(java.lang.CharSequence)>
<org.apache.commons.csv.CSVFormat: void <init>(char,java.lang.Character,org.apache.commons.csv.QuoteMode,java.lang.Character,java.lang.Character,boolean,boolean,java.lang.String,java.lang.String,java.lang.Object[],java.lang.String[],boolean,boolean,boolean,boolean,boolean)>/assign/instruction34	34	<org.apache.commons.csv.CSVFormat: void <init>(char,java.lang.Character,org.apache.commons.csv.QuoteMode,java.lang.Character,java.lang.Character,boolean,boolean,java.lang.String,java.lang.String,java.lang.Object[],java.lang.String[],boolean,boolean,boolean,boolean,boolean)>
<org.apache.commons.csv.Lexer: org.apache.commons.csv.Token parseEncapsulatedToken(org.apache.commons.csv.Token)>/assign/instruction76	76	<org.apache.commons.csv.Lexer: org.apache.commons.csv.Token parseEncapsulatedToken(org.apache.commons.csv.Token)>
<org.apache.commons.csv.CSVPrinter: void printComment(java.lang.String)>/assign/instruction26	26	<org.apache.commons.csv.CSVPrinter: void printComment(java.lang.String)>
<org.apache.commons.csv.CSVParser$2: void <clinit>()>/assign/instruction17	17	<org.apache.commons.csv.CSVParser$2: void <clinit>()>
<org.apache.commons.csv.CSVParser: org.apache.commons.csv.CSVRecord nextRecord()>/assign/instruction67	67	<org.apache.commons.csv.CSVParser: org.apache.commons.csv.CSVRecord nextRecord()>
<org.apache.commons.csv.ExtendedBufferedReader: int read()>/assign/instruction2	2	<org.apache.commons.csv.ExtendedBufferedReader: int read()>
<org.apache.commons.csv.CSVRecord: boolean isMapped(java.lang.String)>/assign/instruction6	6	<org.apache.commons.csv.CSVRecord: boolean isMapped(java.lang.String)>
<org.apache.commons.csv.CSVRecord: java.lang.String get(java.lang.String)>/assign/instruction10	10	<org.apache.commons.csv.CSVRecord: java.lang.String get(java.lang.String)>
<org.apache.commons.csv.CSVFormat: boolean equals(java.lang.Object)>/assign/instruction45	45	<org.apache.commons.csv.CSVFormat: boolean equals(java.lang.Object)>
<org.apache.commons.csv.CSVPrinter: void printAndQuote(java.lang.Object,java.lang.CharSequence,int,int)>/assign/instruction62	62	<org.apache.commons.csv.CSVPrinter: void printAndQuote(java.lang.Object,java.lang.CharSequence,int,int)>
<org.apache.commons.csv.CSVPrinter: void printAndQuote(java.lang.Object,java.lang.CharSequence,int,int)>/assign/instruction110	110	<org.apache.commons.csv.CSVPrinter: void printAndQuote(java.lang.Object,java.lang.CharSequence,int,int)>
<org.apache.commons.csv.CSVRecord: java.lang.String toString()>/assign/instruction7	7	<org.apache.commons.csv.CSVRecord: java.lang.String toString()>
<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction37	37	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.CSVFormat: java.lang.String toString()>/assign/instruction16	16	<org.apache.commons.csv.CSVFormat: java.lang.String toString()>
<org.apache.commons.csv.CSVFormat: boolean equals(java.lang.Object)>/assign/instruction75	75	<org.apache.commons.csv.CSVFormat: boolean equals(java.lang.Object)>
<org.apache.commons.csv.CSVPrinter: java.lang.CharSequence trim(java.lang.CharSequence)>/assign/instruction8	8	<org.apache.commons.csv.CSVPrinter: java.lang.CharSequence trim(java.lang.CharSequence)>
<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction29	29	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.Token: java.lang.String toString()>/assign/instruction7	7	<org.apache.commons.csv.Token: java.lang.String toString()>
<org.apache.commons.csv.CSVPrinter: void printAndQuote(java.lang.Object,java.lang.CharSequence,int,int)>/assign/instruction109	109	<org.apache.commons.csv.CSVPrinter: void printAndQuote(java.lang.Object,java.lang.CharSequence,int,int)>
<org.apache.commons.csv.CSVRecord: java.lang.String get(java.lang.String)>/assign/instruction19	19	<org.apache.commons.csv.CSVRecord: java.lang.String get(java.lang.String)>
<org.apache.commons.csv.Token: java.lang.String toString()>/assign/instruction12	12	<org.apache.commons.csv.Token: java.lang.String toString()>
<org.apache.commons.csv.CSVFormat: int hashCode()>/assign/instruction99	99	<org.apache.commons.csv.CSVFormat: int hashCode()>
<org.apache.commons.csv.CSVFormat: java.lang.String toString()>/assign/instruction32	32	<org.apache.commons.csv.CSVFormat: java.lang.String toString()>
<org.apache.commons.csv.CSVPrinter: void printComment(java.lang.String)>/assign/instruction13	13	<org.apache.commons.csv.CSVPrinter: void printComment(java.lang.String)>
<org.apache.commons.csv.CSVRecord: boolean isConsistent()>/assign/instruction5	5	<org.apache.commons.csv.CSVRecord: boolean isConsistent()>
<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction117	117	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction13	13	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction84	84	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.CSVFormat: int hashCode()>/assign/instruction53	53	<org.apache.commons.csv.CSVFormat: int hashCode()>
<org.apache.commons.csv.CSVParser: org.apache.commons.csv.CSVRecord nextRecord()>/assign/instruction42	42	<org.apache.commons.csv.CSVParser: org.apache.commons.csv.CSVRecord nextRecord()>
<org.apache.commons.csv.CSVRecord: java.util.Map putIn(java.util.Map)>/assign/instruction7	7	<org.apache.commons.csv.CSVRecord: java.util.Map putIn(java.util.Map)>
<org.apache.commons.csv.CSVFormat: java.lang.String toString()>/assign/instruction86	86	<org.apache.commons.csv.CSVFormat: java.lang.String toString()>
<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction18	18	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.CSVRecord: java.lang.String get(java.lang.String)>/assign/instruction23	23	<org.apache.commons.csv.CSVRecord: java.lang.String get(java.lang.String)>
<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction54	54	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.CSVRecord: java.lang.String get(java.lang.String)>/assign/instruction34	34	<org.apache.commons.csv.CSVRecord: java.lang.String get(java.lang.String)>
<org.apache.commons.csv.Lexer: org.apache.commons.csv.Token nextToken(org.apache.commons.csv.Token)>/assign/instruction56	56	<org.apache.commons.csv.Lexer: org.apache.commons.csv.Token nextToken(org.apache.commons.csv.Token)>
<org.apache.commons.csv.CSVFormat: boolean equals(java.lang.Object)>/assign/instruction102	102	<org.apache.commons.csv.CSVFormat: boolean equals(java.lang.Object)>
<org.apache.commons.csv.CSVParser: void addRecordValue(boolean)>/assign/instruction9	9	<org.apache.commons.csv.CSVParser: void addRecordValue(boolean)>
<org.apache.commons.csv.CSVRecord: java.lang.String toString()>/assign/instruction6	6	<org.apache.commons.csv.CSVRecord: java.lang.String toString()>
<org.apache.commons.csv.CSVFormat: java.lang.String[] toStringArray(java.lang.Object[])>/assign/instruction20	20	<org.apache.commons.csv.CSVFormat: java.lang.String[] toStringArray(java.lang.Object[])>
<org.apache.commons.csv.QuoteMode: org.apache.commons.csv.QuoteMode valueOf(java.lang.String)>/assign/instruction2	2	<org.apache.commons.csv.QuoteMode: org.apache.commons.csv.QuoteMode valueOf(java.lang.String)>
<org.apache.commons.csv.CSVFormat: int hashCode()>/assign/instruction105	105	<org.apache.commons.csv.CSVFormat: int hashCode()>
<org.apache.commons.csv.CSVPrinter: java.lang.CharSequence trim(java.lang.CharSequence)>/assign/instruction6	6	<org.apache.commons.csv.CSVPrinter: java.lang.CharSequence trim(java.lang.CharSequence)>
<org.apache.commons.csv.CSVParser: org.apache.commons.csv.CSVParser parse(java.net.URL,java.nio.charset.Charset,org.apache.commons.csv.CSVFormat)>/assign/instruction12	12	<org.apache.commons.csv.CSVParser: org.apache.commons.csv.CSVParser parse(java.net.URL,java.nio.charset.Charset,org.apache.commons.csv.CSVFormat)>
<org.apache.commons.csv.CSVRecord: boolean isSet(java.lang.String)>/assign/instruction8	8	<org.apache.commons.csv.CSVRecord: boolean isSet(java.lang.String)>
<org.apache.commons.csv.Lexer: void trimTrailingSpaces(java.lang.StringBuilder)>/assign/instruction9	9	<org.apache.commons.csv.Lexer: void trimTrailingSpaces(java.lang.StringBuilder)>
<org.apache.commons.csv.CSVPrinter$1: void <clinit>()>/assign/instruction37	37	<org.apache.commons.csv.CSVPrinter$1: void <clinit>()>
<org.apache.commons.csv.Lexer: org.apache.commons.csv.Token parseEncapsulatedToken(org.apache.commons.csv.Token)>/assign/instruction79	79	<org.apache.commons.csv.Lexer: org.apache.commons.csv.Token parseEncapsulatedToken(org.apache.commons.csv.Token)>
<org.apache.commons.csv.CSVPrinter: java.lang.CharSequence trim(java.lang.CharSequence)>/assign/instruction23	23	<org.apache.commons.csv.CSVPrinter: java.lang.CharSequence trim(java.lang.CharSequence)>
<org.apache.commons.csv.CSVRecord: java.lang.String toString()>/assign/instruction16	16	<org.apache.commons.csv.CSVRecord: java.lang.String toString()>
<org.apache.commons.csv.CSVParser: java.util.Map initializeHeader()>/assign/instruction48	48	<org.apache.commons.csv.CSVParser: java.util.Map initializeHeader()>
<org.apache.commons.csv.CSVParser: java.util.Map initializeHeader()>/assign/instruction73	73	<org.apache.commons.csv.CSVParser: java.util.Map initializeHeader()>
<org.apache.commons.csv.Lexer: org.apache.commons.csv.Token parseEncapsulatedToken(org.apache.commons.csv.Token)>/assign/instruction16	16	<org.apache.commons.csv.Lexer: org.apache.commons.csv.Token parseEncapsulatedToken(org.apache.commons.csv.Token)>
<org.apache.commons.csv.CSVParser: org.apache.commons.csv.CSVRecord nextRecord()>/assign/instruction68	68	<org.apache.commons.csv.CSVParser: org.apache.commons.csv.CSVRecord nextRecord()>
<org.apache.commons.csv.CSVPrinter: java.lang.CharSequence trim(java.lang.CharSequence)>/assign/instruction29	29	<org.apache.commons.csv.CSVPrinter: java.lang.CharSequence trim(java.lang.CharSequence)>
<org.apache.commons.csv.CSVRecord: java.lang.String get(java.lang.String)>/assign/instruction36	36	<org.apache.commons.csv.CSVRecord: java.lang.String get(java.lang.String)>
<org.apache.commons.csv.CSVFormat: java.lang.String toString()>/assign/instruction82	82	<org.apache.commons.csv.CSVFormat: java.lang.String toString()>
<org.apache.commons.csv.Lexer: void trimTrailingSpaces(java.lang.StringBuilder)>/assign/instruction8	8	<org.apache.commons.csv.Lexer: void trimTrailingSpaces(java.lang.StringBuilder)>
<org.apache.commons.csv.CSVFormat: java.lang.String toString()>/assign/instruction74	74	<org.apache.commons.csv.CSVFormat: java.lang.String toString()>
<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction110	110	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.Assertions: void notNull(java.lang.Object,java.lang.String)>/assign/instruction10	10	<org.apache.commons.csv.Assertions: void notNull(java.lang.Object,java.lang.String)>
<org.apache.commons.csv.Lexer: org.apache.commons.csv.Token parseEncapsulatedToken(org.apache.commons.csv.Token)>/assign/instruction78	78	<org.apache.commons.csv.Lexer: org.apache.commons.csv.Token parseEncapsulatedToken(org.apache.commons.csv.Token)>
<org.apache.commons.csv.CSVRecord: java.util.Map putIn(java.util.Map)>/assign/instruction11	11	<org.apache.commons.csv.CSVRecord: java.util.Map putIn(java.util.Map)>
<org.apache.commons.csv.CSVParser: void addRecordValue(boolean)>/assign/instruction5	5	<org.apache.commons.csv.CSVParser: void addRecordValue(boolean)>
<org.apache.commons.csv.CSVParser: java.util.Map initializeHeader()>/assign/instruction49	49	<org.apache.commons.csv.CSVParser: java.util.Map initializeHeader()>
<org.apache.commons.csv.CSVPrinter: void printComment(java.lang.String)>/assign/instruction21	21	<org.apache.commons.csv.CSVPrinter: void printComment(java.lang.String)>
<org.apache.commons.csv.CSVFormat: java.lang.String format(java.lang.Object[])>/assign/instruction9	9	<org.apache.commons.csv.CSVFormat: java.lang.String format(java.lang.Object[])>
<org.apache.commons.csv.Assertions: void notNull(java.lang.Object,java.lang.String)>/assign/instruction7	7	<org.apache.commons.csv.Assertions: void notNull(java.lang.Object,java.lang.String)>
<org.apache.commons.csv.CSVRecord: java.lang.String toString()>/assign/instruction17	17	<org.apache.commons.csv.CSVRecord: java.lang.String toString()>
<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction21	21	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.CSVFormat: org.apache.commons.csv.CSVFormat withQuote(char)>/assign/instruction3	3	<org.apache.commons.csv.CSVFormat: org.apache.commons.csv.CSVFormat withQuote(char)>
<org.apache.commons.csv.ExtendedBufferedReader: int read(char[],int,int)>/assign/instruction8	8	<org.apache.commons.csv.ExtendedBufferedReader: int read(char[],int,int)>
<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction22	22	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.Token: java.lang.String toString()>/assign/instruction5	5	<org.apache.commons.csv.Token: java.lang.String toString()>
<org.apache.commons.csv.CSVRecord: java.lang.String toString()>/assign/instruction15	15	<org.apache.commons.csv.CSVRecord: java.lang.String toString()>
<org.apache.commons.csv.CSVParser: java.util.Map initializeHeader()>/assign/instruction67	67	<org.apache.commons.csv.CSVParser: java.util.Map initializeHeader()>
<org.apache.commons.csv.CSVPrinter: void printAndQuote(java.lang.Object,java.lang.CharSequence,int,int)>/assign/instruction138	138	<org.apache.commons.csv.CSVPrinter: void printAndQuote(java.lang.Object,java.lang.CharSequence,int,int)>
<org.apache.commons.csv.CSVFormat: boolean equals(java.lang.Object)>/assign/instruction10	10	<org.apache.commons.csv.CSVFormat: boolean equals(java.lang.Object)>
<org.apache.commons.csv.CSVPrinter: void printRecord(java.lang.Iterable)>/assign/instruction4	4	<org.apache.commons.csv.CSVPrinter: void printRecord(java.lang.Iterable)>
<org.apache.commons.csv.CSVFormat: java.lang.String toString()>/assign/instruction5	5	<org.apache.commons.csv.CSVFormat: java.lang.String toString()>
<org.apache.commons.csv.CSVFormat: java.lang.String[] getHeaderComments()>/assign/instruction5	5	<org.apache.commons.csv.CSVFormat: java.lang.String[] getHeaderComments()>
<org.apache.commons.csv.CSVParser$2: void <clinit>()>/assign/instruction7	7	<org.apache.commons.csv.CSVParser$2: void <clinit>()>
<org.apache.commons.csv.CSVPrinter: void printRecords(java.lang.Iterable)>/assign/instruction4	4	<org.apache.commons.csv.CSVPrinter: void printRecords(java.lang.Iterable)>
<org.apache.commons.csv.CSVRecord: boolean isSet(java.lang.String)>/assign/instruction6	6	<org.apache.commons.csv.CSVRecord: boolean isSet(java.lang.String)>
<org.apache.commons.csv.CSVRecord: java.lang.String toString()>/assign/instruction13	13	<org.apache.commons.csv.CSVRecord: java.lang.String toString()>
<org.apache.commons.csv.CSVFormat: java.lang.String[] getHeader()>/assign/instruction5	5	<org.apache.commons.csv.CSVFormat: java.lang.String[] getHeader()>
<org.apache.commons.csv.CSVPrinter: void printRecord(java.lang.Iterable)>/assign/instruction6	6	<org.apache.commons.csv.CSVPrinter: void printRecord(java.lang.Iterable)>
<org.apache.commons.csv.CSVParser: java.util.Map initializeHeader()>/assign/instruction65	65	<org.apache.commons.csv.CSVParser: java.util.Map initializeHeader()>
<org.apache.commons.csv.CSVPrinter: void printAndQuote(java.lang.Object,java.lang.CharSequence,int,int)>/assign/instruction108	108	<org.apache.commons.csv.CSVPrinter: void printAndQuote(java.lang.Object,java.lang.CharSequence,int,int)>
<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction119	119	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.CSVParser$2: void <clinit>()>/assign/instruction47	47	<org.apache.commons.csv.CSVParser$2: void <clinit>()>
<org.apache.commons.csv.CSVFormat: boolean equals(java.lang.Object)>/assign/instruction9	9	<org.apache.commons.csv.CSVFormat: boolean equals(java.lang.Object)>
<org.apache.commons.csv.CSVPrinter: void printComment(java.lang.String)>/assign/instruction23	23	<org.apache.commons.csv.CSVPrinter: void printComment(java.lang.String)>
<org.apache.commons.csv.CSVFormat: java.lang.String toString()>/assign/instruction76	76	<org.apache.commons.csv.CSVFormat: java.lang.String toString()>
<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction116	116	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.Token: java.lang.String toString()>/assign/instruction6	6	<org.apache.commons.csv.Token: java.lang.String toString()>
<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction34	34	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.CSVRecord: java.util.Map putIn(java.util.Map)>/assign/instruction9	9	<org.apache.commons.csv.CSVRecord: java.util.Map putIn(java.util.Map)>
<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction61	61	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction70	70	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.CSVFormat: java.lang.String toString()>/assign/instruction25	25	<org.apache.commons.csv.CSVFormat: java.lang.String toString()>
<org.apache.commons.csv.CSVParser: org.apache.commons.csv.CSVRecord nextRecord()>/assign/instruction96	96	<org.apache.commons.csv.CSVParser: org.apache.commons.csv.CSVRecord nextRecord()>
<org.apache.commons.csv.CSVPrinter: void printRecords(java.sql.ResultSet)>/assign/instruction7	7	<org.apache.commons.csv.CSVPrinter: void printRecords(java.sql.ResultSet)>
<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction121	121	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.CSVFormat: boolean equals(java.lang.Object)>/assign/instruction57	57	<org.apache.commons.csv.CSVFormat: boolean equals(java.lang.Object)>
<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction53	53	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.CSVParser: org.apache.commons.csv.CSVRecord nextRecord()>/assign/instruction20	20	<org.apache.commons.csv.CSVParser: org.apache.commons.csv.CSVRecord nextRecord()>
<org.apache.commons.csv.CSVFormat: org.apache.commons.csv.CSVFormat withEscape(char)>/assign/instruction3	3	<org.apache.commons.csv.CSVFormat: org.apache.commons.csv.CSVFormat withEscape(char)>
<org.apache.commons.csv.Lexer: boolean isWhitespace(int)>/assign/instruction6	6	<org.apache.commons.csv.Lexer: boolean isWhitespace(int)>
<org.apache.commons.csv.CSVFormat: int hashCode()>/assign/instruction13	13	<org.apache.commons.csv.CSVFormat: int hashCode()>
<org.apache.commons.csv.CSVFormat: java.lang.String toString()>/assign/instruction34	34	<org.apache.commons.csv.CSVFormat: java.lang.String toString()>
<org.apache.commons.csv.Assertions: void notNull(java.lang.Object,java.lang.String)>/assign/instruction8	8	<org.apache.commons.csv.Assertions: void notNull(java.lang.Object,java.lang.String)>
<org.apache.commons.csv.Lexer: void trimTrailingSpaces(java.lang.StringBuilder)>/assign/instruction13	13	<org.apache.commons.csv.Lexer: void trimTrailingSpaces(java.lang.StringBuilder)>
<org.apache.commons.csv.Lexer: org.apache.commons.csv.Token parseEncapsulatedToken(org.apache.commons.csv.Token)>/assign/instruction67	67	<org.apache.commons.csv.Lexer: org.apache.commons.csv.Token parseEncapsulatedToken(org.apache.commons.csv.Token)>
<org.apache.commons.csv.Lexer: org.apache.commons.csv.Token parseEncapsulatedToken(org.apache.commons.csv.Token)>/assign/instruction77	77	<org.apache.commons.csv.Lexer: org.apache.commons.csv.Token parseEncapsulatedToken(org.apache.commons.csv.Token)>
<org.apache.commons.csv.CSVParser: org.apache.commons.csv.CSVRecord nextRecord()>/assign/instruction38	38	<org.apache.commons.csv.CSVParser: org.apache.commons.csv.CSVRecord nextRecord()>
<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction50	50	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.CSVPrinter: void printRecords(java.lang.Iterable)>/assign/instruction6	6	<org.apache.commons.csv.CSVPrinter: void printRecords(java.lang.Iterable)>
<org.apache.commons.csv.CSVPrinter: void printRecords(java.sql.ResultSet)>/assign/instruction13	13	<org.apache.commons.csv.CSVPrinter: void printRecords(java.sql.ResultSet)>
<org.apache.commons.csv.CSVPrinter$1: void <clinit>()>/assign/instruction17	17	<org.apache.commons.csv.CSVPrinter$1: void <clinit>()>
<org.apache.commons.csv.CSVFormat: int hashCode()>/assign/instruction43	43	<org.apache.commons.csv.CSVFormat: int hashCode()>
<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction20	20	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.CSVPrinter: void printAndEscape(java.lang.CharSequence,int,int)>/assign/instruction12	12	<org.apache.commons.csv.CSVPrinter: void printAndEscape(java.lang.CharSequence,int,int)>
<org.apache.commons.csv.CSVParser: org.apache.commons.csv.CSVRecord nextRecord()>/assign/instruction81	81	<org.apache.commons.csv.CSVParser: org.apache.commons.csv.CSVRecord nextRecord()>
<org.apache.commons.csv.CSVRecord: java.lang.String toString()>/assign/instruction12	12	<org.apache.commons.csv.CSVRecord: java.lang.String toString()>
<org.apache.commons.csv.CSVFormat: boolean equals(java.lang.Object)>/assign/instruction33	33	<org.apache.commons.csv.CSVFormat: boolean equals(java.lang.Object)>
<org.apache.commons.csv.CSVPrinter$1: void <clinit>()>/assign/instruction7	7	<org.apache.commons.csv.CSVPrinter$1: void <clinit>()>
<org.apache.commons.csv.CSVParser: void addRecordValue(boolean)>/assign/instruction25	25	<org.apache.commons.csv.CSVParser: void addRecordValue(boolean)>
<org.apache.commons.csv.CSVFormat: java.lang.String toString()>/assign/instruction84	84	<org.apache.commons.csv.CSVFormat: java.lang.String toString()>
<org.apache.commons.csv.CSVRecord: java.util.Map putIn(java.util.Map)>/assign/instruction15	15	<org.apache.commons.csv.CSVRecord: java.util.Map putIn(java.util.Map)>
<org.apache.commons.csv.CSVFormat: org.apache.commons.csv.CSVFormat withRecordSeparator(char)>/assign/instruction3	3	<org.apache.commons.csv.CSVFormat: org.apache.commons.csv.CSVFormat withRecordSeparator(char)>
<org.apache.commons.csv.Lexer: char mapNullToDisabled(java.lang.Character)>/assign/instruction6	6	<org.apache.commons.csv.Lexer: char mapNullToDisabled(java.lang.Character)>
<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction66	66	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.Token$Type: org.apache.commons.csv.Token$Type valueOf(java.lang.String)>/assign/instruction2	2	<org.apache.commons.csv.Token$Type: org.apache.commons.csv.Token$Type valueOf(java.lang.String)>
<org.apache.commons.csv.CSVFormat: org.apache.commons.csv.CSVFormat withCommentMarker(char)>/assign/instruction3	3	<org.apache.commons.csv.CSVFormat: org.apache.commons.csv.CSVFormat withCommentMarker(char)>
<org.apache.commons.csv.ExtendedBufferedReader: int lookAhead()>/assign/instruction4	4	<org.apache.commons.csv.ExtendedBufferedReader: int lookAhead()>
<org.apache.commons.csv.CSVParser: java.util.Map initializeHeader()>/assign/instruction46	46	<org.apache.commons.csv.CSVParser: java.util.Map initializeHeader()>
<org.apache.commons.csv.CSVRecord: java.util.List toList()>/assign/instruction3	3	<org.apache.commons.csv.CSVRecord: java.util.List toList()>
<org.apache.commons.csv.CSVParser: org.apache.commons.csv.CSVRecord nextRecord()>/assign/instruction40	40	<org.apache.commons.csv.CSVParser: org.apache.commons.csv.CSVRecord nextRecord()>
<org.apache.commons.csv.CSVParser: org.apache.commons.csv.CSVRecord nextRecord()>/assign/instruction89	89	<org.apache.commons.csv.CSVParser: org.apache.commons.csv.CSVRecord nextRecord()>
<org.apache.commons.csv.CSVFormat: void validate()>/assign/instruction36	36	<org.apache.commons.csv.CSVFormat: void validate()>
<org.apache.commons.csv.CSVPrinter: void printAndEscape(java.lang.CharSequence,int,int)>/assign/instruction20	20	<org.apache.commons.csv.CSVPrinter: void printAndEscape(java.lang.CharSequence,int,int)>
<org.apache.commons.csv.CSVFormat: java.lang.String toString()>/assign/instruction14	14	<org.apache.commons.csv.CSVFormat: java.lang.String toString()>
<org.apache.commons.csv.CSVRecord: java.util.Iterator iterator()>/assign/instruction3	3	<org.apache.commons.csv.CSVRecord: java.util.Iterator iterator()>
<org.apache.commons.csv.CSVParser: java.util.Map initializeHeader()>/assign/instruction66	66	<org.apache.commons.csv.CSVParser: java.util.Map initializeHeader()>
<org.apache.commons.csv.CSVFormat: org.apache.commons.csv.CSVFormat withHeader(java.sql.ResultSetMetaData)>/assign/instruction12	12	<org.apache.commons.csv.CSVFormat: org.apache.commons.csv.CSVFormat withHeader(java.sql.ResultSetMetaData)>
